{"version":3,"sources":["webpack://ol/webpack/universalModuleDefinition","webpack://ol/webpack/bootstrap","webpack://ol/./node_modules/rbush/index.js","webpack://ol/./node_modules/pbf/index.js","webpack://ol/./node_modules/pixelworks/lib/index.js","webpack://ol/./node_modules/quickselect/quickselect.js","webpack://ol/./node_modules/ieee754/index.js","webpack://ol/./node_modules/pixelworks/lib/processor.js","webpack://ol/./node_modules/pixelworks/lib/util.js","webpack://ol/./build/ol/array.js","webpack://ol/./build/ol/util.js","webpack://ol/./build/ol/AssertionError.js","webpack://ol/./build/ol/CollectionEventType.js","webpack://ol/./build/ol/ObjectEventType.js","webpack://ol/./build/ol/obj.js","webpack://ol/./build/ol/events.js","webpack://ol/./build/ol/Disposable.js","webpack://ol/./build/ol/functions.js","webpack://ol/./build/ol/events/Event.js","webpack://ol/./build/ol/events/Target.js","webpack://ol/./build/ol/events/EventType.js","webpack://ol/./build/ol/Observable.js","webpack://ol/./build/ol/Object.js","webpack://ol/./build/ol/Collection.js","webpack://ol/./build/ol/asserts.js","webpack://ol/./build/ol/math.js","webpack://ol/./build/ol/color.js","webpack://ol/./build/ol/colorlike.js","webpack://ol/./build/ol/MapEventType.js","webpack://ol/./build/ol/dom.js","webpack://ol/./build/ol/control/Control.js","webpack://ol/./build/ol/css.js","webpack://ol/./build/ol/layer/Property.js","webpack://ol/./build/ol/layer/Base.js","webpack://ol/./build/ol/render/EventType.js","webpack://ol/./build/ol/source/State.js","webpack://ol/./build/ol/layer/Layer.js","webpack://ol/./build/ol/control/Attribution.js","webpack://ol/./build/ol/control/FullScreen.js","webpack://ol/./build/ol/geom/GeometryType.js","webpack://ol/./build/ol/sphere.js","webpack://ol/./build/ol/extent/Corner.js","webpack://ol/./build/ol/extent/Relationship.js","webpack://ol/./build/ol/extent.js","webpack://ol/./build/ol/proj/Units.js","webpack://ol/./build/ol/proj/Projection.js","webpack://ol/./build/ol/proj/epsg3857.js","webpack://ol/./build/ol/proj/epsg4326.js","webpack://ol/./build/ol/proj/projections.js","webpack://ol/./build/ol/proj/transforms.js","webpack://ol/./build/ol/proj.js","webpack://ol/./build/ol/control/MousePosition.js","webpack://ol/./build/ol/MapEvent.js","webpack://ol/./build/ol/MapBrowserEvent.js","webpack://ol/./build/ol/has.js","webpack://ol/./build/ol/MapBrowserEventType.js","webpack://ol/./build/ol/MapBrowserPointerEvent.js","webpack://ol/./build/ol/pointer/EventType.js","webpack://ol/./build/ol/pointer/EventSource.js","webpack://ol/./build/ol/pointer/MouseSource.js","webpack://ol/./build/ol/pointer/MsSource.js","webpack://ol/./build/ol/pointer/NativeSource.js","webpack://ol/./build/ol/pointer/PointerEvent.js","webpack://ol/./build/ol/pointer/TouchSource.js","webpack://ol/./build/ol/pointer/PointerEventHandler.js","webpack://ol/./build/ol/MapBrowserEventHandler.js","webpack://ol/./build/ol/MapProperty.js","webpack://ol/./build/ol/TileState.js","webpack://ol/./build/ol/structs/PriorityQueue.js","webpack://ol/./build/ol/TileQueue.js","webpack://ol/./build/ol/tilegrid/common.js","webpack://ol/./build/ol/centerconstraint.js","webpack://ol/./build/ol/rotationconstraint.js","webpack://ol/./build/ol/ViewHint.js","webpack://ol/./build/ol/ViewProperty.js","webpack://ol/./build/ol/string.js","webpack://ol/./build/ol/coordinate.js","webpack://ol/./build/ol/easing.js","webpack://ol/./build/ol/geom/GeometryLayout.js","webpack://ol/./build/ol/geom/flat/transform.js","webpack://ol/./build/ol/transform.js","webpack://ol/./build/ol/geom/Geometry.js","webpack://ol/./build/ol/geom/SimpleGeometry.js","webpack://ol/./build/ol/geom/flat/area.js","webpack://ol/./build/ol/geom/flat/closest.js","webpack://ol/./build/ol/geom/flat/deflate.js","webpack://ol/./build/ol/geom/flat/inflate.js","webpack://ol/./build/ol/geom/flat/simplify.js","webpack://ol/./build/ol/geom/LinearRing.js","webpack://ol/./build/ol/geom/Point.js","webpack://ol/./build/ol/geom/flat/contains.js","webpack://ol/./build/ol/geom/flat/interiorpoint.js","webpack://ol/./build/ol/geom/flat/segments.js","webpack://ol/./build/ol/geom/flat/intersectsextent.js","webpack://ol/./build/ol/geom/flat/reverse.js","webpack://ol/./build/ol/geom/flat/orient.js","webpack://ol/./build/ol/geom/Polygon.js","webpack://ol/./build/ol/View.js","webpack://ol/./build/ol/resolutionconstraint.js","webpack://ol/./build/ol/layer/Group.js","webpack://ol/./build/ol/size.js","webpack://ol/./build/ol/PluggableMap.js","webpack://ol/./build/ol/control/Rotate.js","webpack://ol/./build/ol/control/Zoom.js","webpack://ol/./build/ol/control/util.js","webpack://ol/./build/ol/Kinetic.js","webpack://ol/./build/ol/interaction/Property.js","webpack://ol/./build/ol/interaction/Interaction.js","webpack://ol/./build/ol/interaction/DoubleClickZoom.js","webpack://ol/./build/ol/events/condition.js","webpack://ol/./build/ol/interaction/Pointer.js","webpack://ol/./build/ol/interaction/DragPan.js","webpack://ol/./build/ol/interaction/DragRotate.js","webpack://ol/./build/ol/render/Box.js","webpack://ol/./build/ol/interaction/DragBox.js","webpack://ol/./build/ol/interaction/DragZoom.js","webpack://ol/./build/ol/events/KeyCode.js","webpack://ol/./build/ol/interaction/KeyboardPan.js","webpack://ol/./build/ol/interaction/KeyboardZoom.js","webpack://ol/./build/ol/interaction/MouseWheelZoom.js","webpack://ol/./build/ol/interaction/PinchRotate.js","webpack://ol/./build/ol/interaction/PinchZoom.js","webpack://ol/./build/ol/interaction.js","webpack://ol/./build/ol/reproj/common.js","webpack://ol/./build/ol/ImageBase.js","webpack://ol/./build/ol/ImageState.js","webpack://ol/./build/ol/ImageCanvas.js","webpack://ol/./build/ol/LayerType.js","webpack://ol/./build/ol/layer/VectorRenderType.js","webpack://ol/./build/ol/render/Event.js","webpack://ol/./build/ol/structs/LRUCache.js","webpack://ol/./build/ol/render/canvas.js","webpack://ol/./build/ol/render/VectorContext.js","webpack://ol/./build/ol/render/canvas/Immediate.js","webpack://ol/./build/ol/style/IconImageCache.js","webpack://ol/./build/ol/renderer/Map.js","webpack://ol/./build/ol/renderer/canvas/Map.js","webpack://ol/./build/ol/renderer/Layer.js","webpack://ol/./build/ol/renderer/canvas/Layer.js","webpack://ol/./build/ol/renderer/canvas/IntermediateCanvas.js","webpack://ol/./build/ol/renderer/canvas/ImageLayer.js","webpack://ol/./build/ol/TileRange.js","webpack://ol/./build/ol/renderer/canvas/TileLayer.js","webpack://ol/./build/ol/render/ReplayGroup.js","webpack://ol/./build/ol/render/ReplayType.js","webpack://ol/./build/ol/geom/flat/length.js","webpack://ol/./build/ol/geom/flat/textpath.js","webpack://ol/./build/ol/render/canvas/Instruction.js","webpack://ol/./build/ol/render/replay.js","webpack://ol/./build/ol/render/canvas/Replay.js","webpack://ol/./build/ol/render/canvas/ImageReplay.js","webpack://ol/./build/ol/render/canvas/LineStringReplay.js","webpack://ol/./build/ol/render/canvas/PolygonReplay.js","webpack://ol/./build/ol/geom/flat/straightchunk.js","webpack://ol/./build/ol/style/TextPlacement.js","webpack://ol/./build/ol/render/canvas/TextReplay.js","webpack://ol/./build/ol/render/canvas/ReplayGroup.js","webpack://ol/./build/ol/renderer/vector.js","webpack://ol/./build/ol/renderer/canvas/VectorLayer.js","webpack://ol/./build/ol/layer/VectorTileRenderType.js","webpack://ol/./build/ol/renderer/canvas/VectorTileLayer.js","webpack://ol/./build/ol/Map.js","webpack://ol/./build/ol/OverlayPositioning.js","webpack://ol/./build/ol/Overlay.js","webpack://ol/./build/ol/control/OverviewMap.js","webpack://ol/./build/ol/control/ScaleLine.js","webpack://ol/./build/ol/control/ZoomSlider.js","webpack://ol/./build/ol/control/ZoomToExtent.js","webpack://ol/./build/ol/Feature.js","webpack://ol/./build/ol/format/FormatType.js","webpack://ol/./build/ol/featureloader.js","webpack://ol/./build/ol/format/Feature.js","webpack://ol/./build/ol/format/JSONFeature.js","webpack://ol/./build/ol/geom/flat/interpolate.js","webpack://ol/./build/ol/geom/LineString.js","webpack://ol/./build/ol/geom/MultiLineString.js","webpack://ol/./build/ol/geom/MultiPoint.js","webpack://ol/./build/ol/geom/flat/center.js","webpack://ol/./build/ol/geom/MultiPolygon.js","webpack://ol/./build/ol/format/EsriJSON.js","webpack://ol/./build/ol/format/filter/Filter.js","webpack://ol/./build/ol/format/filter/Bbox.js","webpack://ol/./build/ol/format/filter/Spatial.js","webpack://ol/./build/ol/format/filter/Contains.js","webpack://ol/./build/ol/format/filter/Comparison.js","webpack://ol/./build/ol/format/filter/During.js","webpack://ol/./build/ol/format/filter/ComparisonBinary.js","webpack://ol/./build/ol/format/filter/EqualTo.js","webpack://ol/./build/ol/format/filter/GreaterThan.js","webpack://ol/./build/ol/format/filter/GreaterThanOrEqualTo.js","webpack://ol/./build/ol/format/filter/Intersects.js","webpack://ol/./build/ol/format/filter/IsBetween.js","webpack://ol/./build/ol/format/filter/IsLike.js","webpack://ol/./build/ol/format/filter/IsNull.js","webpack://ol/./build/ol/format/filter/LessThan.js","webpack://ol/./build/ol/format/filter/LessThanOrEqualTo.js","webpack://ol/./build/ol/format/filter/Not.js","webpack://ol/./build/ol/format/filter/NotEqualTo.js","webpack://ol/./build/ol/format/filter/LogicalNary.js","webpack://ol/./build/ol/format/filter/Or.js","webpack://ol/./build/ol/format/filter/Within.js","webpack://ol/./build/ol/format/filter/And.js","webpack://ol/./build/ol/format/filter.js","webpack://ol/./build/ol/geom/GeometryCollection.js","webpack://ol/./build/ol/format/GeoJSON.js","webpack://ol/./build/ol/xml.js","webpack://ol/./build/ol/format/XMLFeature.js","webpack://ol/./build/ol/format/GMLBase.js","webpack://ol/./build/ol/format/xsd.js","webpack://ol/./build/ol/format/GML3.js","webpack://ol/./build/ol/format/GML.js","webpack://ol/./build/ol/format/GML2.js","webpack://ol/./build/ol/format/GML32.js","webpack://ol/./build/ol/format/GPX.js","webpack://ol/./build/ol/format/TextFeature.js","webpack://ol/./build/ol/format/IGC.js","webpack://ol/./build/ol/style/Fill.js","webpack://ol/./build/ol/style/IconAnchorUnits.js","webpack://ol/./build/ol/style/IconImage.js","webpack://ol/./build/ol/style/IconOrigin.js","webpack://ol/./build/ol/style/Image.js","webpack://ol/./build/ol/style/Icon.js","webpack://ol/./build/ol/style/Stroke.js","webpack://ol/./build/ol/style/RegularShape.js","webpack://ol/./build/ol/style/Circle.js","webpack://ol/./build/ol/style/Style.js","webpack://ol/./build/ol/style/Text.js","webpack://ol/./build/ol/format/KML.js","webpack://ol/./build/ol/render/Feature.js","webpack://ol/./build/ol/format/MVT.js","webpack://ol/./build/ol/format/OSMXML.js","webpack://ol/./build/ol/geom/flat/flip.js","webpack://ol/./build/ol/format/Polyline.js","webpack://ol/./build/ol/format/TopoJSON.js","webpack://ol/./build/ol/format/WFS.js","webpack://ol/./build/ol/format/WKT.js","webpack://ol/./build/ol/format/XLink.js","webpack://ol/./build/ol/format/XML.js","webpack://ol/./build/ol/format/WMSCapabilities.js","webpack://ol/./build/ol/format/WMSGetFeatureInfo.js","webpack://ol/./build/ol/format/OWS.js","webpack://ol/./build/ol/format/WMTSCapabilities.js","webpack://ol/./build/ol/Geolocation.js","webpack://ol/./build/ol/geom/Circle.js","webpack://ol/./build/ol/geom/flat/geodesic.js","webpack://ol/./build/ol/Graticule.js","webpack://ol/./build/ol/interaction/DragAndDrop.js","webpack://ol/./build/ol/interaction/DragRotateAndZoom.js","webpack://ol/./build/ol/layer/Vector.js","webpack://ol/./build/ol/loadingstrategy.js","webpack://ol/./build/ol/source/Source.js","webpack://ol/./build/ol/source/VectorEventType.js","webpack://ol/./build/ol/structs/RBush.js","webpack://ol/./build/ol/source/Vector.js","webpack://ol/./build/ol/interaction/Draw.js","webpack://ol/./build/ol/interaction/Extent.js","webpack://ol/./build/ol/interaction/Modify.js","webpack://ol/./build/ol/interaction/Select.js","webpack://ol/./build/ol/interaction/Snap.js","webpack://ol/./build/ol/interaction/Translate.js","webpack://ol/./build/ol/layer/Heatmap.js","webpack://ol/./build/ol/layer/Image.js","webpack://ol/./build/ol/layer/TileProperty.js","webpack://ol/./build/ol/layer/Tile.js","webpack://ol/./build/ol/layer/VectorTile.js","webpack://ol/./build/ol/webgl.js","webpack://ol/./build/ol/webgl/Shader.js","webpack://ol/./build/ol/webgl/Fragment.js","webpack://ol/./build/ol/webgl/Vertex.js","webpack://ol/./build/ol/render/webgl/circlereplay/defaultshader.js","webpack://ol/./build/ol/render/webgl/circlereplay/defaultshader/Locations.js","webpack://ol/./build/ol/vec/mat4.js","webpack://ol/./build/ol/render/webgl/Replay.js","webpack://ol/./build/ol/render/webgl.js","webpack://ol/./build/ol/webgl/Buffer.js","webpack://ol/./build/ol/render/webgl/CircleReplay.js","webpack://ol/./build/ol/render/webgl/texturereplay/defaultshader.js","webpack://ol/./build/ol/render/webgl/texturereplay/defaultshader/Locations.js","webpack://ol/./build/ol/webgl/ContextEventType.js","webpack://ol/./build/ol/webgl/Context.js","webpack://ol/./build/ol/render/webgl/TextureReplay.js","webpack://ol/./build/ol/render/webgl/ImageReplay.js","webpack://ol/./build/ol/geom/flat/topology.js","webpack://ol/./build/ol/render/webgl/linestringreplay/defaultshader.js","webpack://ol/./build/ol/render/webgl/linestringreplay/defaultshader/Locations.js","webpack://ol/./build/ol/render/webgl/LineStringReplay.js","webpack://ol/./build/ol/render/webgl/polygonreplay/defaultshader.js","webpack://ol/./build/ol/render/webgl/polygonreplay/defaultshader/Locations.js","webpack://ol/./build/ol/structs/LinkedList.js","webpack://ol/./build/ol/render/webgl/PolygonReplay.js","webpack://ol/./build/ol/style/Atlas.js","webpack://ol/./build/ol/style/AtlasManager.js","webpack://ol/./build/ol/render/webgl/ReplayGroup.js","webpack://ol/./build/ol/render/webgl/TextReplay.js","webpack://ol/./build/ol/render/webgl/Immediate.js","webpack://ol/./build/ol/renderer/webgl/defaultmapshader.js","webpack://ol/./build/ol/renderer/webgl/defaultmapshader/Locations.js","webpack://ol/./build/ol/renderer/webgl/Layer.js","webpack://ol/./build/ol/renderer/webgl/ImageLayer.js","webpack://ol/./build/ol/renderer/webgl/Map.js","webpack://ol/./build/ol/Tile.js","webpack://ol/./build/ol/ImageTile.js","webpack://ol/./build/ol/tilecoord.js","webpack://ol/./build/ol/TileCache.js","webpack://ol/./build/ol/tilegrid/TileGrid.js","webpack://ol/./build/ol/tilegrid.js","webpack://ol/./build/ol/source/Tile.js","webpack://ol/./build/ol/renderer/webgl/tilelayershader.js","webpack://ol/./build/ol/renderer/webgl/tilelayershader/Locations.js","webpack://ol/./build/ol/renderer/webgl/TileLayer.js","webpack://ol/./build/ol/renderer/webgl/VectorLayer.js","webpack://ol/./build/ol/tileurlfunction.js","webpack://ol/./build/ol/net.js","webpack://ol/./build/ol/reproj.js","webpack://ol/./build/ol/reproj/Triangulation.js","webpack://ol/./build/ol/reproj/Tile.js","webpack://ol/./build/ol/source/TileEventType.js","webpack://ol/./build/ol/source/UrlTile.js","webpack://ol/./build/ol/source/TileImage.js","webpack://ol/./build/ol/source/BingMaps.js","webpack://ol/./build/ol/source/XYZ.js","webpack://ol/./build/ol/source/CartoDB.js","webpack://ol/./build/ol/source/Cluster.js","webpack://ol/./build/ol/reproj/Image.js","webpack://ol/./build/ol/source/Image.js","webpack://ol/./build/ol/Image.js","webpack://ol/./build/ol/uri.js","webpack://ol/./build/ol/source/ImageArcGISRest.js","webpack://ol/./build/ol/source/ImageCanvas.js","webpack://ol/./build/ol/source/ImageMapGuide.js","webpack://ol/./build/ol/source/ImageStatic.js","webpack://ol/./build/ol/source/common.js","webpack://ol/./build/ol/source/WMSServerType.js","webpack://ol/./build/ol/source/ImageWMS.js","webpack://ol/./build/ol/source/OSM.js","webpack://ol/./build/ol/source/Raster.js","webpack://ol/./build/ol/source/Stamen.js","webpack://ol/./build/ol/source/TileArcGISRest.js","webpack://ol/./build/ol/source/TileDebug.js","webpack://ol/./build/ol/source/TileJSON.js","webpack://ol/./build/ol/source/TileWMS.js","webpack://ol/./build/ol/source/UTFGrid.js","webpack://ol/./build/ol/VectorImageTile.js","webpack://ol/./build/ol/VectorTile.js","webpack://ol/./build/ol/source/VectorTile.js","webpack://ol/./build/ol/source/WMTSRequestEncoding.js","webpack://ol/./build/ol/tilegrid/WMTS.js","webpack://ol/./build/ol/source/WMTS.js","webpack://ol/./build/ol/source/Zoomify.js","webpack://ol/./build/ol/WebGLMap.js","webpack://ol/./build/index.js","webpack://ol/./build/ol/proj/proj4.js","webpack://ol/./build/ol/render.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","rbush","default","quickselect","maxEntries","format","this","_maxEntries","Math","max","_minEntries","ceil","_initFormat","clear","findItem","item","items","equalsFn","indexOf","length","calcBBox","node","toBBox","distBBox","children","k","destNode","createNode","minX","Infinity","minY","maxX","maxY","child","extend","leaf","a","b","min","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","enlargedArea","intersectionArea","contains","intersects","height","multiSelect","arr","left","right","compare","mid","stack","pop","push","all","_all","data","search","bbox","result","len","childBBox","nodesToSearch","collides","load","insert","_build","slice","_splitRoot","tmpNode","_insert","remove","parent","index","goingUp","path","indexes","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","N","M","log","pow","j","right2","right3","N2","N1","sqrt","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","_allDistMargin","sort","leftBBox","rightBBox","margin","siblings","compareArr","Function","join","Pbf","ieee754","buf","ArrayBuffer","isView","Uint8Array","pos","type","Varint","Fixed64","Bytes","Fixed32","readPackedEnd","pbf","readVarint","toNum","low","high","isSigned","makeRoomForExtraLength","startPos","extraLen","LN2","realloc","writePackedVarint","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","val","readInt32","destroy","readFields","readField","end","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","read","readDouble","h","Error","readVarintRemainder","readVarint64","readSVarint","num","readBoolean","Boolean","readString","str","b1","b2","b3","b0","bytesPerSequence","String","fromCharCode","readUtf8","readBytes","buffer","subarray","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","set","finish","floor","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","charCodeAt","writeUtf8","write","writeBytes","writeRawMessage","fn","obj","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","Processor","swap","tmp","defaultCompare","quickselectStep","z","exp","sd","newLeft","newRight","offset","isLE","mLen","nBytes","e","eLen","eMax","eBias","nBits","NaN","rt","abs","isNaN","newImageData","createMinion","operation","workerHasImageData","ImageData","_","newWorkerImageData","width","output","buffers","meta","imageOps","numBuffers","numBytes","byteLength","images","Array","Uint8ClampedArray","arrays","pixels","array","pixel","createWorker","config","onMessage","lines","keys","lib","map","toString","concat","blob","Blob","source","URL","createObjectURL","worker","Worker","addEventListener","threads","_imageOps","workers","_onWorkerMessage","minion","postMessage","setTimeout","createFauxWorker","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","inputs","callback","_enqueue","_dispatch","_destroyed","job","shift","input","segmentLength","slices","jj","event","_resolveJob","hasImageData","context","document","createElement","getContext","imageData","createImageData","numberSafeCompareFunction","includes","linearFindNearest","target","direction","reverseSubArray","begin","extension","isArray","find","func","equals","arr1","arr2","len1","stableSort","compareFnc","findIndex","every","el","idx","util_abstract","uidCounter_","getUid","ol_uid","VERSION","ol_AssertionError","AssertionError","code","message","split","__proto__","constructor","CollectionEventType","ADD","REMOVE","ObjectEventType","obj_assign","assign","var_sources","arguments$1","arguments","undefined","TypeError","ii","obj_clear","getValues","values","obj_isEmpty","findListener","listeners","listener","opt_this","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","listenerMap","getListenerMap","opt_create","ol_lm","removeListeners","removeEventListener","boundListener","removeListenerMap","listen","opt_once","callOnce","evt","unlistenByKey","bindListener","listenOnce","unlisten","unlistenAll","Disposable_Disposable","disposed_","dispose","disposeInternal","ol_Disposable","TRUE","FALSE","VOID","Event_Event","propagationStopped","stopPropagation","preventDefault","events_Event","events_Target","Disposable","Target","pendingRemovals_","dispatching_","listeners_","dispatchEvent","propagate","pendingRemovals","hasListener","opt_type","EventType","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","ol_Observable","EventTarget","Observable","revision_","changed","getRevision","on","once","un","ObjectEvent","Event","oldValue","changeEventTypeCache","getChangeEventType","ol_Object","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","notify","eventType","opt_silent","unset","Property","CollectionEvent","opt_element","element","ol_Collection","Collection","opt_array","opt_options","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","forEach","f","getArray","insertAt","elem","removeAt","prev","setAt","opt_except","assert","assertion","errorCode","clamp","cosh","x","y","squaredSegmentDistance","x1","y1","x2","y2","dx","dy","math_squaredDistance","toDegrees","angleInRadians","PI","toRadians","angleInDegrees","modulo","lerp","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","color_toString","fromString","cache","cacheSize","g","exec","style","body","appendChild","rgb","getComputedStyle","removeChild","fromNamed","hasAlpha","parseInt","substr","normalize","Number","fromStringInternal_","asArray","asColorLike","MapEventType","createCanvasContext2D","opt_width","opt_height","canvas","replaceNode","oldNode","parentNode","replaceChild","removeNode","removeChildren","lastChild","control_Control","Control","target_","map_","listenerKeys","render","setTarget","getMap","setMap","getOverlayContainerStopEvent","getElementById","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","font","family","fontFamily","layer_Property","OPACITY","VISIBLE","EXTENT","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","Base","BaseLayer","properties","opacity","visible","zIndex","maxResolution","minResolution","state_","getType","getLayerState","state","layer","managed","getOpacity","sourceState","getSourceState","getVisible","extent","getExtent","getZIndex","getMaxResolution","getMinResolution","getLayersArray","getLayerStatesArray","opt_states","setExtent","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","render_EventType","POSTCOMPOSE","PRECOMPOSE","RENDER","RENDERCOMPLETE","State","UNDEFINED","LOADING","READY","visibleAtResolution","layerState","resolution","layer_Layer","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","states","getSource","getState","handleSourceChange_","renderEvent","frameState","layerStatesArray","layerStates","Attribution_render","mapEvent","updateElement_","control_Attribution","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","className","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","button","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","viewState","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","display","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","getChangeType","changeType","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","requestFullscreen","isFullScreenSupported","mozFullScreenEnabled","msFullscreenEnabled","fullscreenEnabled","isFullScreen","webkitIsFullScreen","mozFullScreen","msFullscreenElement","fullscreenElement","requestFullScreen","control_FullScreen","FullScreen","cssClassName_","labelNode_","createTextNode","labelActive","labelActiveNode_","button_","setClassName_","keys_","source_","handleFullScreen_","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","getTargetElement","mozRequestFullScreenWithKeys","requestFullScreenWithKeys","handleFullScreenChange_","updateSize","fullscreen","activeClassName","inactiveClassName","nextClassName","add","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","sin","cos","atan2","getLengthInternal","coordinates","getAreaInternal","sphere_offset","distance","bearing","lon1","dByR","lat","asin","Corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","createEmpty","extendCoordinate","extent_buffer","opt_extent","extent_clone","closestSquaredDistanceXY","containsCoordinate","coordinate","extent_containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","stride","extendFlatCoordinates","extent_equals","extent_extend","extendCoordinates","extendXY","forEachCorner","getBottomLeft","getBottomRight","getTopRight","getTopLeft","extent_getArea","extent_isEmpty","getWidth","getHeight","extent_getCenter","getForViewAndSize","center","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x3","y0","y3","getIntersection","intersection","extent_intersects","scaleFromCenter","deltaX","deltaY","extent_applyTransform","transformFn","xs","ys","_boundingExtentXYs","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","proj_Units","Projection_Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","getPointResolutionFunc","proj_Projection","RADIUS","HALF_SIZE","WORLD_EXTENT","epsg3857_EPSG3857Projection","Projection","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","opt_output","opt_dimension","dimension","halfSize","tan","epsg3857_toEPSG4326","atan","epsg4326_EXTENT","epsg4326_METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","projections_cache","transforms","transforms_add","destination","sourceCode","destinationCode","transforms_get","transform","cloneTransform","identityTransform","addProjection","projection","projections_add","proj_get","projectionLike","projections_get","opt_units","pointResolution","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","addCoordinateTransforms","forward","inverse","sourceProj","destProj","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","proj_getTransform","proj_transform","transformExtent","projections1","projections2","forwardTransform","inverseTransform","addEquivalentTransforms","PROJECTION","MousePosition_render","mapProjection_","transform_","control_MousePosition","MousePosition","handleProjectionChanged_","coordinateFormat","setCoordinateFormat","setProjection","undefinedHTML_","undefinedHTML","renderOnMouseOut_","renderedHTML_","lastMouseMovePixel_","getCoordinateFormat","getProjection","handleMouseMove","getEventPixel","updateHTML_","handleMouseOut","viewport","getViewport","html","getCoordinateFromPixel","ol_MapEvent","MapEvent","opt_frameState","ol_MapBrowserEvent","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","dragging","has_ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","CANVAS_LINE_DASH","has","setLineDash","GEOLOCATION","TOUCH","POINTER","MSPOINTER","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","ol_MapBrowserPointerEvent","MapBrowserPointerEvent","pointerEvent","pointer_EventType","EventSource_EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","pointer_EventSource","POINTER_ID","POINTER_TYPE","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","cloneEvent","pd","pointerId","isPrimary","pointerType","pointer_MouseSource","EventSource","MouseSource","lastTouches","lts","clientX","clientY","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","pointer_MsSource","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","pointer_NativeSource","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","HAS_BUTTONS","PointerEvent","_Event","opt_eventDict","eventDict","buttons","which","getButtons","pressure","getPressure","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","tiltX","tiltY","hwTimestamp","ev","MouseEvent","pointer_PointerEvent","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","pointer_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","resetClickCountHandler_","clearTimeout","touchToPointer_","radiusX","radiusY","force","inFunction","touches","pointer","findTouch_","touchList","searchId","out","i$1","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt","found","array_remove","CLONE_PROPS","pointer_PointerEventHandler","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","eventCopy","fireEvent","contains_","container","contained","inType","wrapMouseEvent","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","TileState","IDLE","LOADED","EMPTY","ABORT","PriorityQueue_PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","structs_PriorityQueue","ol_TileQueue","PriorityQueue","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","handleTileChange","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","none","disable","delta","rotationconstraint_none","ViewHint","ViewProperty","padNumber","number","opt_precision","numberString","toFixed","decimal","compareVersions","v1","v2","s1","s2","n1","n2","coordinate_add","closestOnSegment","segment","start","along","degreesToStringHDMS","hemispheres","degrees","opt_fractionDigits","normalizedDegrees","dflPrecision","precision","deg","sec","charAt","coordinate_format","template","replace","coordinate_equals","coordinate1","coordinate2","coordinate_rotate","angle","cosAngle","sinAngle","coordinate_scale","scale","coordinate_squaredDistance","coord1","coord2","coordinate_distance","squaredDistanceToSegment","toStringXY","easeIn","easeOut","inAndOut","linear","GeometryLayout","XY","XYZ","XYM","XYZM","transform2D","opt_dest","dest","transform_translate","tmp_","transform_reset","transform_set","multiply","transform1","transform2","a1","d1","e1","f1","a2","d2","e2","f2","setFromArray","ol_transform_rotate","ol_transform_scale","ol_transform_translate","transform_compose","dx1","dy1","sx","sy","dx2","dy2","invert","det","mat","determinant","tmpTransform","geom_Geometry","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","clone","closestPointXY","closestPoint","minSquaredDistance","containsXY","getClosestPoint","opt_closestPoint","intersectsCoordinate","computeExtent","returnOrUpdate","rotate","anchor","opt_sy","opt_anchor","simplify","tolerance","getSimplifiedGeometry","squaredTolerance","applyTransform","intersectsExtent","translate","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getStrideForLayout","layout","geom_SimpleGeometry","SimpleGeometry","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","anchorX","anchorY","transform_rotate","transform_scale","area_linearRing","twiceArea","area_linearRings","ends","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","round","quantize","quantizeArray","geom_LinearRing","LinearRing","maxDelta_","maxDeltaRevision_","getArea","geom_Point","Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","point1","point2","intersectsLineString","coordinatesExtent","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","reverse_coordinates","linearRingIsClockwise","edge","linearRingIsOriented","opt_right","isClockwise","orientLinearRings","orientLinearRingsArray","Polygon_Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","geom_Polygon","circular","opt_n","opt_sphereRadius","fromExtent","fromCircle","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","polygon","makeRegular","getRadius","startAngle","DEFAULT_MIN_ZOOM","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","ol_View","View","hints_","animations_","updateAnimationKey_","updateAnimations_","projection_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","resolutions","power","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","opt_maxLevel","oldLevel","newLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","createExtent","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","createSnapToZero","theta","createSnapToN","createRotationConstraint","constraints_","zoom","constrainResolution","getResolution","options_","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","animationCount","isDef","setCenter","setZoom","setRotation","Date","now","series","complete","duration","easing","setHint","getAnimating","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","calculateCenterZoom","calculateCenterRotate","filter","requestAnimationFrame","currentCenter","currentResolution","getSizeFromViewport_","selector","querySelector","metrics","constrainCenter","opt_delta","opt_direction","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","getResolutions","getResolutionForExtent","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","pixelRatio","pixelResolution","nearest","getResolutionForZoom","fit","geometryOrExtent","geometry","padding","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","constrainedResolution","centerRotX","centerRotY","setResolution","centerOn","position","centerX","centerY","hint","Group_Property","LAYERS","Group","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","ownLayerState","size_buffer","size_scale","ratio","toSize","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","controls","interactions","overlays","layerGroup","createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","pixelRatio_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","overlayEvents","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","renderer_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","getId","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","top","getTarget","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getRenderer","getSize","getView","getOverlayContainer","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapBrowserEvent","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","hints","viewHints","getLoading","loading","dispatchRenderEvent","postRenderFunctions","targetElement","removeLayerRenderers","handleViewPropertyChanged_","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","time","previousFrameState","hasArea","skippedFeatureUids","usedTiles","renderFrame","setLayerGroup","setSize","setView","skipFeature","computedStyle","offsetWidth","parseFloat","offsetHeight","unskipFeature","Rotate_render","rotation_","autoHide_","msTransform","webkitTransform","control_Rotate","Rotate","callResetNorth_","resetNorth","duration_","autoHide","resetNorth_","control_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","zoomByDelta_","newResolution","defaults","zoomOptions","rotateOptions","attribution","attributionOptions","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","lastIndex","firstIndex","getAngle","ol_Kinetic","interaction_Property","ACTIVE","Interaction_rotate","opt_duration","rotateWithoutConstraints","currentRotation","Interaction_zoom","zoomWithoutConstraints","zoomByDelta","interaction_Interaction","Interaction","setActive","active","DoubleClickZoom_handleEvent","stopEvent","delta_","interaction_DoubleClickZoom","DoubleClickZoom","altKeyOnly","altShiftKeysOnly","condition_focus","activeElement","always","mouseActionButton","never","condition_pointerMove","singleClick","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","Pointer_centroid","pointerEvents","Pointer","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","interaction_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","noKinetic_","centroid","centerpx","interaction_DragRotate","DragRotate","lastAngle_","Box","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","getGeometry","DragBoxEventType","DragBoxEvent","interaction_DragBox","DragBox","box_","minArea_","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","out_","mapExtent","boxPixelExtent","createOrUpdateFromCoordinates","interaction_DragZoom","DragZoom","KeyCode","UP","DOWN","KeyboardPan_handleEvent","keyCode","mapUnitsDelta","pixelDelta_","pan","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_handleEvent","charCode","interaction_KeyboardZoom","KeyboardZoom","Mode","interaction_MouseWheelZoom","MouseWheelZoom","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","decrementInteractingHint_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","rebound","timeLeft","handleWheelZoom_","setMouseAnchor","interaction_PinchRotate","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","interaction_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","interaction_defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","ERROR_THRESHOLD","ol_ImageBase","ImageBase","getImage","getPixelRatio","ImageState","ol_ImageCanvas","ImageCanvas","opt_loader","loader_","canvas_","error_","getError","handleLoad_","err","LayerType","IMAGE","TILE","VECTOR_TILE","VECTOR","VectorRenderType","render_Event","RenderEvent","opt_vectorContext","opt_context","opt_glContext","vectorContext","glContext","structs_LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","prune","defaultFillStyle","defaultLineDash","defaultStrokeStyle","defaultPadding","labelCache","checkedFonts","measureContext","textHeights","checkFont","interval","referenceWidth","retries","checked","referenceFonts","text","isAvailable","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","check","done","clearInterval","fontSpec","fontFamilies","setInterval","measureTextHeight","span","heights","measureTextWidth","rotateAtOffset","offsetX","offsetY","resetTransform","drawImage","image","originX","originY","w","alpha","globalAlpha","setTransform","VectorContext_VectorContext","drawCustom","renderer","drawGeometry","setStyle","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","fillStyle","strokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","render_VectorContext","Immediate","VectorContext","CanvasImmediateRenderer","viewRotation","context_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","simpleGeometry","transformGeom2D","beginPath","arc","fill","stroke","getFill","getStroke","getText","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineCap","lineDash","lineDashOffset","lineJoin","lineWidth","miterLimit","textState","contextTextState","textAlign","textBaseline","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","imageAnchor","getAnchor","imageImage","imageOrigin","getOrigin","imageSize","getRotateWithView","getScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","IconImageCache","cache_","cacheSize_","maxCacheSize_","src","crossOrigin","expire","iconImage","maxCacheSize","shared","expireIconCache","sortByZIndex","state1","state2","renderer_Map","MapRenderer","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","registerLayerRenderers","constructors","calculateMatrices2D","removeLayerRendererByKey_","thisArg","thisArg2","viewResolution","translatedCoordinate","projectionExtent","worldWidth","layerRenderer","getLayerRenderer","getWrapX","layerKey","candidate","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","removeUnusedLayerRenderers_","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","layerRendererConstructors","canvas_Map","CanvasMapRenderer","insertBefore","childNodes","getTransform","composeEvent","clearRect","save","prepareFrame","composeFrame","restore","numLayers","forEachLayerAtCoordinate","ctor","renderer_Layer","LayerRenderer","layer_","createLoadedTileFinder","tiles","tileRange","forEachLoadedTile","tileCoord","getLayer","handleImageChange_","renderIfReadyAndVisible","loadImage","imageState","scheduleExpireCache","tileSource","postRenderFunction","expireCache","updateUsedTiles","zKey","manageTilePyramid","currentZ","preload","opt_tileCallback","getTileRangeForExtentAndZ","getTile","getTileCoordCenter","useTile","canvas_Layer","CanvasLayerRenderer","renderedResolution","clip","topLeft","topRight","bottomRight","bottomLeft","dispatchComposeEvent_","opt_transform","postCompose","preCompose","IntermediateCanvas","IntermediateCanvasRenderer","coordinateToCanvasPixelTransform","hitCanvasContext_","clipped","imageTransform","getImageTransform","dw","dh","getImageData","ImageLayer_CanvasImageLayerRenderer","CanvasImageLayerRenderer","imageLayer","imageTransform_","skippedFeatures_","vectorRenderer_","viewCenter","imageSource","vectorRenderer","renderedExtent","skippedFeatures","imageFrameState","newSkippedFeatures","replayGroupChanged","compose","imageExtent","imageResolution","imagePixelRatio","getRenderMode","mapRenderer","canvas_ImageLayer","TileRange","TileRange_createOrUpdate","containsTileRange","ol_TileRange","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","opt_noContext","oversampling_","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile_","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getPreload","setState","getInterimTile","sourceRevision","getTileGridForProjection","getZForResolution","oversampling","getTileRangeExtent","tilePixelRatio","getTilePixelRatio","tilesToDrawByZ","findLoadedTiles","animatingOrInteracting","tmpTileRange","uid","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","tilePixelSize","getTilePixelSize","currentScale","currentTilePixelSize","tileExtent","tileGutter","tilesToDraw","zs","tileCoordKey","getGutterForProjection","getTileCoordExtent","getTileCoord","drawTileImage","gutter","transition","getTileImage","getOpaque","alphaChanged","endTransition","canvas_TileLayer","ReplayGroup_ReplayGroup","getReplay","replayType","addDeclutter","group","render_ReplayGroup","ReplayType","DEFAULT","TEXT","lineStringLength","drawTextOnPath","measure","startM","maxAngle","previousAngle","reverse","numChars","segmentM","chunk","chunkLength","char","charLength","charM","segmentPos","interpolate","unshift","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","ORDER","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","Replay_tmpExtent","Replay_tmpTransform","Replay","CanvasReplay","maxExtent","overlaps","declutterTree","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","replayTextBackground_","p1","p2","p3","p4","fillInstruction","strokeInstruction","fill_","setStrokeStyle_","replayImage_","declutterGroup","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastCoord","nextCoord","skipped","drawCustomCoordinates_","replayEnds","replayEnd","beginGeometry","replayEndss","replayBegin","myEnds","endGeometry","origin","repeatSize","instruction","renderDeclutter_","groupCount","box","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","rotateWithView","backgroundFill","backgroundStroke","baseline","fillKey","strokeKey","strokeWidth","textKey","pathLength","textLength","textStates","parts","cc","chars","part","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","ImageReplay","CanvasImageReplay","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","scale_","width_","drawCoordinates_","myBegin","hitDetectionImage","getHitDetectionImage","LineStringReplay","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","PolygonReplay_CanvasPolygonReplay","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TextPlacement","BATCH_CONSTRUCTORS","Circle","Default","Image","LineString","Text","CanvasTextReplay","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","geometryType","placement","flatEnd","flatOffset","oo","range","drawChars_","drawTextImage_","align","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","getOverflow","getMaxAngle","getPlacement","getBackgroundFill","getBackgroundStroke","getPadding","ReplayGroup_CanvasReplayGroup","ReplayGroup","CanvasReplayGroup","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","overlaps_","resolution_","renderBuffer_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","declutter","flatClipCoords","getClipCoords","hasReplays","replays","candidates","replayKey","declutterReplays","hitExtent","contextSize","declutteredFeatures","mask","circleArrayCache","arraySize","error","fillCircleArrayRowToMiddle","getCircleArray","zIndexKey","Constructor","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","0","canvas_ReplayGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","replayGroup","getImageState","imageReplay","textReplay","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","unlistenImageChange","listenImageChange","renderGeometry","getGeometries","renderFeatureInternal","VectorLayer_CanvasVectorLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","getDeclutter","rbush_default","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","handleFontsChanged_","vectorSource","clipExtent","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","world","mainContextAlpha","handleStyleImageChange_","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","getOverlaps","loadFeatures","styles","styleFunction","getStyleFunction","dirty","forEachFeatureInExtent","canvas_VectorLayer","VectorTileRenderType","HYBRID","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","vector","VectorTileLayer_CanvasVectorTileLayerRenderer","CanvasVectorTileLayerRenderer","renderedLayerRevision_","tmpTransform_","renderMode","createReplayGroup_","renderTileImage_","layerRevision","this$1","revision","renderOrder","replayState","getReplayState","renderedRenderOrder","sourceTileGrid","getTileGrid","loop","tt","sourceTile","tileKeys","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","getFeatures","setReplayGroup","getReplayGroup","getReplayTransform_","renderResolution","clips","worldOffset","currentClip","zz","replayData","replayDeclutter","renderedTileRevision","wrappedTileCoord","pixelScale","canvas_VectorTileLayer","ol_Map","Map","OverlayPositioning","BOTTOM_CENTER","CENTER_LEFT","CENTER_CENTER","CENTER_RIGHT","TOP_CENTER","Overlay_Property","ELEMENT","MAP","OFFSET","POSITION","POSITIONING","ol_Overlay","Overlay","insertFirst","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","panIntoView","mapRect","getRect","overlayRect","marginLeft","marginRight","dom_outerWidth","marginTop","marginBottom","dom_outerHeight","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","getOptions","OverviewMap_render","validateExtent_","updateBox_","control_OverviewMap","OverviewMap","ovmapDiv_","ovmap_","ovmap","boxSizing","boxOverlay_","scope","overlayBox","mousePosition","endMoving","oldMap","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","newView","handleRotationChanged_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","steps","MAX_RATIO","ovresolution","rotateBottomLeft","calculateCoordinateRotate_","coordinateRotate","getOverviewMap","UNITS_PROP","ScaleLine_Units","IMPERIAL","NAUTICAL","METRIC","US","LEADING_DIGITS","ScaleLine_render","viewState_","control_ScaleLine","ScaleLine","innerElement_","minWidth_","minWidth","renderedWidth_","handleUnitsChanged_","setUnits","pointResolutionUnits","nominalCount","suffix","metersPerDegree","Direction","VERTICAL","HORIZONTAL","ZoomSlider_render","sliderInitialized_","initSlider_","res","currentResolution_","setThumbPosition_","control_ZoomSlider","ZoomSlider","direction_","heightLimit_","widthLimit_","previousX_","previousY_","thumbSize_","thumbElement","containerElement","dragger_","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","containerSize","thumb","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","firstElementChild","drag","getPositionForResolution_","control_ZoomToExtent","ZoomToExtent","handleZoomToExtent","ol_Feature","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometry","setGeometryName","getGeometryName","getStyle","handleGeometryChange_","createStyleFunction","setId","FormatType","ARRAY_BUFFER","JSON","XML","loadFeaturesXhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","getLastExtent","onerror","send","featureloader_xhr","dataProjection","addFeatures","Feature_FeatureFormat","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","format_Feature","transformWithOptions","transformed","decimals","getObject","parse","format_JSONFeature","FeatureFormat","JSONFeature","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","interpolatePoint","pointY","cumulativeLengths","haystack","needle","opt_comparator","cmp","comparator","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","geom_LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","geom_MultiLineString","lineStrings","lineString","appendLineString","opt_interpolate","lineStringsCoordinateAtM","getLineString","getLineStrings","midpoints","intersectsLineStringArray","geom_MultiPoint","appendPoint","getPoint","getPoints","points","center_linearRingss","geom_MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","appendPolygon","newEndss","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingss","getInteriorPoints","linearRingsAreOriented","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","GEOMETRY_READERS","getGeometryLayout","paths","rings","GEOMETRY_WRITERS","EsriJSON_readGeometry","esriJSONPolygon","flatRing","outerRings","holes","clockwise","hole","matched","outerRing","containsHole","convertRings","geometryReader","hasZ","hasM","getHasZM","EsriJSON_writeGeometry","geometryWriter","esriJSON","hasZM","multiPoint","multiLineString","format_EsriJSON","EsriJSON","geometryName","esriJSONFeature","idField","attributes","esriJSONFeatures","objectIdFieldName","wkid","objects","Filter_Filter","tagName_","getTagName","filter_Filter","filter_Bbox","Filter","Bbox","opt_srsName","srsName","filter_Spatial","Spatial","filter_Contains","Contains","filter_Comparison","Comparison","propertyName","filter_During","During","filter_ComparisonBinary","ComparisonBinary","expression","opt_matchCase","matchCase","filter_EqualTo","EqualTo","filter_GreaterThan","GreaterThan","filter_GreaterThanOrEqualTo","GreaterThanOrEqualTo","filter_Intersects","Intersects","filter_IsBetween","IsBetween","lowerBoundary","upperBoundary","filter_IsLike","IsLike","pattern","opt_wildCard","opt_singleChar","opt_escapeChar","wildCard","singleChar","escapeChar","filter_IsNull","IsNull","filter_LessThan","LessThan","filter_LessThanOrEqualTo","LessThanOrEqualTo","filter_Not","Not","filter_NotEqualTo","NotEqualTo","filter_LogicalNary","LogicalNary","conditions","filter_Or","Or","filter_Within","Within","filter_And","And","and","params","filter_bbox","cloneGeometries","clonedGeometries","geom_GeometryCollection","opt_geometries","geometries_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","GeoJSON_readGeometry","GeoJSON_readPointGeometry","GeoJSON_readLineStringGeometry","GeoJSON_readPolygonGeometry","GeoJSON_readMultiPointGeometry","GeoJSON_readMultiLineStringGeometry","GeoJSON_readMultiPolygonGeometry","readGeometryCollectionGeometry","GeoJSON_writeGeometry","geoJSON","GeoJSON_writePointGeometry","GeoJSON_writeLineStringGeometry","rightHanded","GeoJSON_writePolygonGeometry","GeoJSON_writeMultiPointGeometry","GeoJSON_writeMultiLineStringGeometry","GeoJSON_writeMultiPolygonGeometry","writeGeometryCollectionGeometry","format_GeoJSON","GeoJSON","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","crs","DOCUMENT","implementation","createDocument","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","firstChild","nextSibling","isDocument","xml","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","opt_property","localName","makeObjectPropertySetter","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","opt_nodeName","opt_namespaceURI","fixedNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","opt_structureNS","structureNS","parseNode","parsersNS","nextElementSibling","parsers","parser","pushParseAndPop","opt_keys","pushSerializeAndPop","format_XMLFeature","XMLFeature","xmlSerializer_","XMLSerializer","doc","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","GMLNS","ONLY_WHITESPACE_RE","GMLBase_GMLBase","GMLBase","featureType","featureNS","schemaLocation","FEATURE_COLLECTION_PARSERS","namespace","featureMember","readFeaturesInternal","featureMembers","ft","uri","featureTypes","ii$1","readFeatureElement","readGeometryElement","getAttribute","GEOMETRY_PARSERS","readFeatureElementInternal","asFeature","test","_content_","attName","fid","getAttributeNS","readPoint","readFlatCoordinatesFromNode_","readMultiPoint","MULTIPOINT_PARSERS_","readMultiLineString","MULTILINESTRING_PARSERS_","readMultiPolygon","MULTIPOLYGON_PARSERS_","pointMemberParser_","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","readFlatLinearRing_","ring","GEOMETRY_FLAT_COORDINATES_PARSERS","readLinearRing","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","format_GMLBase","readBooleanString","string","readDateTime","dateTime","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","GML3_schemaLocation","MULTIGEOMETRY_TO_MEMBER_NODENAME","MultiCurve","MultiSurface","GML3_GML3","GML3","surface_","surface","curve_","curve","multiCurve_","multiCurve","multiSurface_","multiSurface","readMultiCurve_","MULTICURVE_PARSERS_","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","flatLinearRing","exteriorParser_","readSurface_","SURFACE_PARSERS_","readCurve_","CURVE_PARSERS_","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","containerSrs","readFlatPosList_","contextDimension","dim","writePos_","srsDimension","getCoords_","opt_hasZ","writePosList_","writePoint_","writeEnvelope","ENVELOPE_SERIALIZERS_","writeLinearRing_","posList","RING_NODE_FACTORY_","exteriorWritten","writeSurfaceOrPolygon_","RING_SERIALIZERS_","patches","writeSurfacePatches_","writeCurveOrLineString_","segments","writeCurveSegments_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writeMultiCurveOrLineString_","LINESTRINGORCURVEMEMBER_SERIALIZERS_","writeRing_","writeSurfaceOrPolygonMember_","GEOMETRY_NODE_FACTORY_","writePointMember_","writeLineStringOrCurveMember_","line","writeGeometryElement","GEOMETRY_SERIALIZERS_","writeFeatureElement","writeFeatureMembers_","geom","setAttributeNS","interior","exterior","Surface","Curve","Envelope","curveMember","curveMembers","surfaceMember","surfaceMembers","lowerCorner","upperCorner","PolygonPatch","LineStringSegment","format_GML3","GML","format_GML","GML2_schemaLocation","GML2_MULTIGEOMETRY_TO_MEMBER_NODENAME","GML2_GML2","GML2","readFlatCoordinates_","proj","coordsGroups","readBox_","BOX_PARSERS_","innerBoundaryIsParser_","outerBoundaryIsParser_","createCoordinatesNode_","writeCoordinates_","innerBoundaryIs","outerBoundaryIs","format_GML2","GML32","http://www.opengis.net/gml/3.2","format_GML32","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","GPX_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","TRK_SEQUENCE","TRK_SERIALIZERS","writeWptType","GPX_GPX","GPX","readExtensions_","readExtensions","handleReadExtensions_","extensionsNode","featureReader","gpx","GPX_NODE_FACTORY","RTE_PARSERS","cmt","desc","link","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","GPX_appendCoordinate","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","writeLink","RTEPT_TYPE_SEQUENCE","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","GEOMETRY_TYPE_TO_NODENAME","applyLayoutOptions","href","format_GPX","format_TextFeature","TextFeature","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","IGCZ","BAROMETRIC","GPS","NONE","B_RECORD_RE","H_RECORD_RE","HFDTE_RECORD_RE","NEWLINE_RE","format_IGC","IGC","altitudeMode_","altitudeMode","year","month","day","lastDateTime","hour","minute","second","UTC","Fill","color_","checksum_","setColor","getChecksum","style_Fill","IconAnchorUnits","FRACTION","IconImage_IconImage","IconImage","imageListenerKeys_","imageState_","size_","src_","tainted_","isTainted_","dispatchChangeEvent_","handleImageError_","unlistenImage_","handleImageLoad_","replaceColor_","fillRect","getSrc","ctx","imgData","putImageData","IconOrigin","Image_ImageStyle","getSnapToPixel","getImageSize","getHitDetectionImageSize","setRotateWithView","setScale","setSnapToPixel","style_Image","style_Icon","ImageStyle","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","img","imgSize","iconImage_","IconImage_get","offset_","offsetOrigin_","offsetOrigin","origin_","setAnchor","iconImageSize","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","style_Stroke","style_RegularShape","RegularShape","checksums_","hitDetectionCanvas_","radius_","radius1","radius2_","radius2","stroke_","imageSize_","hitDetectionImageSize_","atlasManager_","atlasManager","getRadius2","renderOptions","draw_","createHitDetectionCanvas_","renderHitDetectionCallback","hasCustomHitDetectionImage","drawHitDetectionCanvas_","info","hitImage","angle0","radiusC","strokeChecksum","fillChecksum","checksum","style_Circle","CircleStyle","setRadius","Style","geometryFunction_","defaultGeometryFunction","zIndex_","setRenderer","setFill","setImage","setStroke","setText","defaultStyles","createDefaultStyle","createEditingStyle","white","blue","style_Style","Text_Text","font_","textAlign_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","padding_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_IMAGE_SCALE_MULTIPLIER","style_Text","GX_NAMESPACE_URIS","KML_NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","insetPixels","PLACEMARK_PARSERS","ExtendedData","extendedDataParser","Region","regionParser","MultiGeometry","readMultiGeometry","KML_readLineString","KML_readLinearRing","KML_readPoint","KML_readPolygon","readStyle","StyleMap","styleMapValue","readStyleMapValue","placemarkObject","address","description","phoneNumber","styleUrl","readURI","visibility","MultiTrack","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","NETWORK_LINK_PARSERS","Link","KML_LINK_PARSERS","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","KML_SEQUENCE","KML_SERIALIZERS","Document","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","Placemark","writePlacemark","DEFAULT_FILL_STYLE","DEFAULT_NO_IMAGE_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","DEFAULT_STROKE_STYLE","DEFAULT_TEXT_STYLE","DEFAULT_STYLE","DEFAULT_STYLE_ARRAY","KML_KML","KML","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","readDocumentOrFolder_","Folder","readPlacemark_","readSharedStyle_","readSharedStyleMap_","sharedStyles","nameStyle","drawName","createNameStyleFunction","foundStyle","findStyle","styleValue","createFeatureStyleFunction","styleUri","baseURI","location","fs","readName","readNameFromDocument","readNameFromNode","n$1","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","kml","xmlnsUri","textOffset","imageScale","foundText","readColor","hexColor","readFlatCoordinates","readScale","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","heading","hotSpot","xunits","yunits","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","GX_TRACK_PARSERS","when","whens","coord","gxTrackObject","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","INNER_BOUNDARY_IS_PARSERS","OUTER_BOUNDARY_IS_PARSERS","STYLE_PARSERS","IconStyle","styleObject","IconObject","drawIcon","LabelStyle","LineStyle","PolyStyle","hasExtrude","hasTessellate","hasAltitudeMode","extrudes","tessellates","altitudeModes","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","featureObject","SchemaData","SCHEMA_DATA_PARSERS","SimpleData","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","writeColorTextNode","rgba","abgr","hex","EXTENDEDDATA_NODE_SERIALIZERS","pair","createCDATASection","writeCDATASection","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","icon","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","KML_GEOMETRY_TYPE_TO_NODENAME","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","names","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","v","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","d$1","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","POLY_STYLE_SERIALIZERS","COLOR_NODE_FACTORY","iconProperties","format_KML","Feature_tmpTransform","RenderFeature","type_","flatCoordinates_","flatMidpoints_","properties_","midpoint","render_Feature","layersPBFReader","layerPBFReader","version","featurePBFReader","readRawFeature","format_MVT","MVT","featureClass_","featureClass","layerName_","layerName","layers_","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","prevEndIndex","pbf_default","pbfLayers","pbfLayer","OSMXML_NAMESPACE_URIS","WAY_PARSERS","nd","ndrefs","readTag","PARSERS","nodes","tags","NODE_PARSERS","way","ways","OSMXML_OSMXML","OSMXML","format_OSMXML","flipXY","opt_destOffset","destOffset","encodeDeltas","numbers","opt_factor","factor","lastNumbers","encodeFloats","decodeDeltas","encoded","decodeFloats","encodeUnsignedInteger","encodeUnsignedIntegers","encodeSignedIntegers","current","decodeUnsignedIntegers","decodeSignedIntegers","format_Polyline","Polyline","factor_","geometryLayout_","geometryLayout","TopoJSON_GEOMETRY_READERS","transformVertex","arcs","concatenateArcs","polyArray","ringCoords","indices","readFeaturesFromGeometryCollection","collection","readFeatureFromGeometry","transformArc","vertex","format_TopoJSON","TopoJSON","topoJSONTopology","transformArcs","topoJSONFeatures","objectName","boundedBy","TRANSACTION_SUMMARY_PARSERS","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","TRANSACTION_RESPONSE_PARSERS","TransactionSummary","InsertResults","INSERT_RESULTS_PARSERS","QUERY_SERIALIZERS","PropertyName","TRANSACTION_SERIALIZERS","Insert","gmlVersion","Update","featurePrefix","typeName","getTypeName","XMLNS","writeOgcFidFilter","Delete","WFSNS","Native","nativeElement","vendorId","safeToIgnore","FEATURE_PREFIX","OGCNS","FESNS","SCHEMA_LOCATIONS","1.1.0","1.0.0","DEFAULT_VERSION","WFS_WFS","WFS","featureType_","featureNS_","gmlFormat_","gmlFormat","schemaLocation_","getFeatureType","setFeatureType","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","writeGetFeature","handle","outputFormat","maxFeatures","resultType","viewParams","propertyNames","GETFEATURE_SERIALIZERS","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","OGC_FID_PARSERS","http://www.opengis.net/ogc","FeatureId","prefix","Query","writeFilterCondition","valueReference","timePeriod","writeTimeInstant","writeLogicalFilter","BBOX","writeOgcPropertyName","PropertyIsEqualTo","writeComparisonFilter","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","writeOgcLiteral","PropertyIsLike","writeOgcExpression","timeInstant","timePosition","format_WFS","GeometryConstructor","LINESTRING","MULTIPOINT","MULTILINESTRING","MULTIPOLYGON","Z","TokenType","WKTGeometryType","WKT_type","toUpperCase","Lexer","wkt","index_","isAlpha_","isNumeric_","opt_decimal","isWhiteSpace_","nextChar_","nextToken","readNumber_","readText_","scientificNotation","substring","WKT_Parser","lexer","lexer_","token_","layout_","encodePointGeometry","encodeLineStringGeometry","encodePolygonGeometry","consume_","isTokenType","match","isMatch","parseGeometry_","parseGeometryLayout_","dimToken","dimInfo","parseGeometryCollectionText_","isEmptyGeometry_","formatErrorMessage_","parsePointText_","parsePoint_","parseLineStringText_","parsePointList_","parsePolygonText_","parseLineStringTextList_","parseMultiPointText_","parsePointTextList_","parseMultiLineStringText_","parseMultiPolygonText_","parsePolygonTextList_","dimensions","token","geomType","GeometryEncoder","components","geoms","encode","enc","geometryEncoder","encodeGeometryLayout","format_WKT","WKT","splitCollection_","splitCollection","parse_","NAMESPACE_URI","readHref","XML_XML","readFromDocument","readFromNode","format_XML","WMSCapabilities_NAMESPACE_URIS","WMSCapabilities_PARSERS","Service","SERVICE_PARSERS","Capability","CAPABILITY_PARSERS","Request","REQUEST_PARSERS","Exception","EXCEPTION_PARSERS","LAYER_PARSERS","WMSCapabilities_WMSCapabilities","WMSCapabilities","wmsCapabilityObject","Name","Title","Abstract","KeywordList","readKeywordList","OnlineResource","ContactInformation","CONTACT_INFORMATION_PARSERS","Fees","AccessConstraints","LayerLimit","MaxWidth","MaxHeight","ContactPersonPrimary","CONTACT_PERSON_PARSERS","ContactPosition","ContactAddress","CONTACT_ADDRESS_PARSERS","ContactVoiceTelephone","ContactFacsimileTelephone","ContactElectronicMailAddress","ContactPerson","ContactOrganization","AddressType","Address","City","StateOrProvince","PostCode","Country","Format","CRS","EX_GeographicBoundingBox","geographicBoundingBox","EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","BoundingBox","Dimension","unitSymbol","multipleValues","nearestValue","ATTRIBUTION_PARSERS","AuthorityURL","authorityObject","readFormatOnlineresource","Identifier","MetadataURL","metadataObject","DataURL","FeatureListURL","WMSCapabilities_STYLE_PARSERS","MinScaleDenominator","MaxScaleDenominator","parentLayerObject","layerObject","queryable","cascaded","opaque","noSubsets","fixedWidth","fixedHeight","childValue","parentValue","LogoURL","readSizedFormatOnlineresource","GetCapabilities","readOperationType","GetMap","GetFeatureInfo","OPERATIONTYPE_PARSERS","DCPType","DCPTYPE_PARSERS","HTTP","HTTP_PARSERS","Get","Post","LegendURL","StyleSheetURL","StyleURL","FORMAT_ONLINERESOURCE_PARSERS","KEYWORDLIST_PARSERS","Keyword","formatOnlineresource","format_WMSCapabilities","format_WMSGetFeatureInfo","WMSGetFeatureInfo","readFeatures_","layerElement","layerFeatures","gmlFeatures","OWS_NAMESPACE_URIS","OWS_PARSERS","ServiceIdentification","SERVICE_IDENTIFICATION_PARSERS","ServiceProvider","SERVICE_PROVIDER_PARSERS","OperationsMetadata","OPERATIONS_METADATA_PARSERS","OWS_OWS","OWS","owsObject","ADDRESS_PARSERS","DeliveryPoint","AdministrativeArea","PostalCode","ElectronicMailAddress","ALLOWED_VALUES_PARSERS","Value","CONSTRAINT_PARSERS","AllowedValues","CONTACT_INFO_PARSERS","Phone","PHONE_PARSERS","DCP_PARSERS","OWS_HTTP_PARSERS","REQUEST_METHOD_PARSERS","OPERATION_PARSERS","DCP","Operation","Voice","Facsimile","Constraint","SERVICE_CONTACT_PARSERS","IndividualName","PositionName","ContactInfo","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities_NAMESPACE_URIS","WMTSCapabilities_OWS_NAMESPACE_URIS","WMTSCapabilities_PARSERS","Contents","CONTENTS_PARSERS","WMTSCapabilities_WMTSCapabilities","WMTSCapabilities","owsParser_","WMTSCapabilityObject","WMTSCapabilities_LAYER_PARSERS","TileMatrixSet","TMS_PARSERS","WMTSCapabilities_STYLE_PARSERS","isDefault","TileMatrixSetLink","TMS_LINKS_PARSERS","DIMENSION_PARSERS","ResourceURL","resourceType","resource","WGS84BoundingBox","WGS84_BBOX_READERS","legend","TileMatrixSetLimits","TMS_LIMITS_LIST_PARSERS","TileMatrixLimits","TMS_LIMITS_PARSERS","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","LowerCorner","readCoordinates","UpperCorner","WellKnownScaleSet","TM_PARSERS","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","format_WMTSCapabilities","Geolocation_Property","ACCURACY","ACCURACY_GEOMETRY","ALTITUDE","ALTITUDE_ACCURACY","HEADING","SPEED","TRACKING","TRACKING_OPTIONS","Geolocation_GeolocationError","GeolocationError","ol_Geolocation","Geolocation","position_","watchId_","handleTrackingChanged_","trackingOptions","setTrackingOptions","setTracking","tracking","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","accuracy","altitude","altitudeAccuracy","longitude","latitude","projectedPosition","speed","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getSpeed","Circle_Circle","setCenterAndRadius","getRadiusSquared_","geom_Circle","geodesic_line","geoM","fracA","fracB","fracM","geoA","geoB","geoStack","fractionStack","fractions","maxIterations","Graticule_DEFAULT_STROKE_STYLE","INTERVALS","Graticule_Graticule","postcomposeListenerKey_","maxLat_","maxLon_","minLat_","minLon_","maxLatP_","maxLonP_","minLatP_","minLonP_","targetSize_","targetSize","maxLines_","maxLines","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","meridiansLabels_","parallelsLabels_","showLabels","lonLabelFormatter_","lonLabelFormatter","latLabelFormatter_","latLabelFormatter","lonLabelPosition_","lonLabelPosition","latLabelPosition_","latLabelPosition","lonLabelStyle_","lonLabelStyle","latLabelStyle_","latLabelStyle","intervals_","intervals","addMeridian_","lon","minLat","maxLat","getMeridian_","textPoint","getMeridianPoint_","clampedBottom","clampedTop","addParallel_","minLon","maxLon","getParallel_","getParallelPoint_","clampedLeft","clampedRight","createGraticule_","getInterval_","cnt","centerLonLat","centerLon","centerLat","validExtent","frac","meridian","getMeridians","lon2","parallel","getParallels","handlePostCompose_","labelData","updateProjectionInfo_","epsg4326Projection","worldExtentP","ol_Graticule","DragAndDropEventType","DragAndDropEvent","file","opt_features","opt_projection","handleDrop","files","dataTransfer","reader","FileReader","handleResult_","readAsText","handleStop","dropEffect","interaction_DragAndDrop","DragAndDrop","formatConstructors_","formatConstructors","dropListenKeys_","tryReadFeatures_","registerListeners_","dropArea","unregisterListeners_","interaction_DragRotateAndZoom","DragRotateAndZoom","lastMagnitude_","magnitude","angleDelta","Vector_Property","Vector_VectorLayer","VectorLayer","renderBuffer","declutter_","updateWhileAnimating_","updateWhileInteracting_","renderMode_","setDeclutter","setRenderOrder","toFunction","Vector","loadingstrategy_all","adaptAttributions","attributionLike","source_Source","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","refresh","setAttributions","VectorEventType","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","RBush_RBush","opt_maxEntries","rbush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","structs_RBush","VectorSourceEvent","opt_feature","source_Vector","VectorSource","format_","url_","loader","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length$1","feature$1","featureKey$1","i$2","length$2","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removed","setLoader","Draw_Mode","DrawEventType","DrawEvent","interaction_Draw","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","features_","snapTolerance_","snapTolerance","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","opt_geometry","squaredLength","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","getDefaultStyleFunction","freehandCondition_","freehand","freehandCondition","updateState_","getOverlay","pass","addToDrawing_","startDrawing_","circleMode","finishDrawing","atFinish_","abortDrawing_","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","sketchLineGeom","removeLastPoint","sketchFeature","sketchFeatures","overlaySource","ExtentEventType","EXTENTCHANGED","ExtentInteractionEvent","getPointHandler","fixedPoint","getEdgeHandler","fixedP1","fixedP2","Extent","ExtentInteraction","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","getDefaultExtentStyleFunction","vertexOverlay_","pointerStyle","getDefaultPointerStyleFunction","snapToVertex_","pixelCoordinate","getSegments","closestSegment","vertexPixel","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","CIRCLE_CIRCUMFERENCE_INDEX","ModifyEventType","ModifyEvent","mapBrowserPointerEvent","compareIndexes","pointDistanceToSegmentDataSquared","pointCoordinates","segmentData","distanceToCenterSquared","distanceToCircumference","closestOnSegmentData","interaction_Modify","Modify","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","changingFeature_","dragSegments_","Modify_getDefaultStyleFunction","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","handleSourceAdd_","handleSourceRemove_","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","handlePointerAtPixel_","willModifyFeatures_","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","depth","kk","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","removePoint","dragSegment","setGeometryCoordinates_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","insertVertex_","vertexSegments","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","component","newIndex","dragSegments","segmentsByFeature","deleted","SelectEventType","SELECT","SelectEvent","selected","deselected","Select_handleEvent","addCondition_","removeCondition_","toggleCondition_","featureLayerAssociation_","filter_","addFeatureLayerAssociation_","multi_","layerFilter_","hitTolerance_","removeFeatureLayerAssociation_","interaction_Select","Select","addCondition","removeCondition","toggleCondition","multi","featureOverlay","Select_getDefaultStyleFunction","featureOverlay_","getHitTolerance","setHitTolerance","currentMap","selectedFeatures","getFeatureFromEvent","interaction_Snap","Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","sortByDistance_","deltaA","deltaB","opt_listen","register","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","snapTo","snapped","updateFeature_","featuresToUpdate","opt_unlisten","unregister","isCircle","closestOnCircle","TranslateEventType","TranslateEvent","interaction_Translate","Translate","lastCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","newCoordinate","Heatmap_Property","BLUR","GRADIENT","DEFAULT_GRADIENT","layer_Heatmap","Heatmap","gradient","blur","shadow","gradient_","shadow_","circleImage_","styleCache_","handleGradientChanged_","setGradient","setBlur","handleStyleChanged_","weightFunction","handleRender_","createCircle_","getBlur","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","toDataURL","getGradient","colors","createLinearGradient","step","addColorStop","createGradient","view8","Image_ImageLayer","ImageLayer","layer_Image","TileProperty","Tile_TileLayer","TileLayer","setPreload","setUseInterimTilesOnError","layer_Tile","VectorTile_VectorTileLayer","VectorTileLayer","layer_VectorTile","LINEAR","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_2D","CONTEXT_IDS","webgl_getContext","opt_attributes","MAX_TEXTURE_SIZE","EXTENSIONS","webgl_gl","failIfMajorPerformanceCaveat","getParameter","getSupportedExtensions","Shader_WebGLShader","isAnimated","Shader","Fragment","WebGLShader","WebGLFragment","Vertex","WebGLVertex","fragment","defaultshader_vertex","defaultshader_Locations","gl","program","u_projectionMatrix","getUniformLocation","u_offsetScaleMatrix","u_offsetRotateMatrix","u_lineWidth","u_pixelRatio","u_opacity","u_fillColor","u_strokeColor","u_size","a_position","getAttribLocation","a_instruction","a_radius","fromTransform","mat4","webgl_Replay","WebGLReplay","projectionMatrix_","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","indicesBuffer","startIndices","startIndicesFeature","verticesBuffer","getDeleteResourcesFunction","setUpProgram","shutDownProgram","locations","drawReplay","hitDetection","drawHitDetectionReplayOneByOne","drawHitDetectionReplay","oneByOne","drawHitDetectionReplayAll","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","tmpStencil","tmpStencilFunc","tmpStencilMaskVal","tmpStencilRef","tmpStencilMask","tmpStencilOpFail","tmpStencilOpPass","tmpStencilOpZFail","getGL","isEnabled","STENCIL_TEST","STENCIL_FUNC","STENCIL_VALUE_MASK","STENCIL_REF","STENCIL_WRITEMASK","STENCIL_FAIL","STENCIL_PASS_DEPTH_PASS","STENCIL_PASS_DEPTH_FAIL","enable","STENCIL_BUFFER_BIT","stencilMask","stencilFunc","ALWAYS","stencilOp","KEEP","REPLACE","NOTEQUAL","bindBuffer","projectionMatrix","offsetScaleMatrix","offsetRotateMatrix","uniformMatrix4fv","uniform1f","drawElements","elementType","hasOESElementIndexUint","numItems","offsetInBytes","DEFAULT_FILLSTYLE","DEFAULT_LINEDASH","DEFAULT_STROKESTYLE","EPSILON","triangleIsCounterClockwise","BufferUsage","WebGLBuffer","opt_arr","opt_usage","arr_","usage_","getUsage","Buffer","CircleReplay","WebGLCircleReplay","defaultLocations_","styles_","styleIndices_","fillColor","strokeColor","numVertices","numIndices","lastState","deleteBuffer","getProgram","useProgram","enableVertexAttribArray","vertexAttribPointer","uniform2fv","disableVertexAttribArray","nextStyle","setFillStyle_","drawReplaySkipping_","groupStart","featureIndex","featureStart","uniform4fv","CanvasGradient","CanvasPattern","defaultshader_fragment","texturereplay_defaultshader_vertex","texturereplay_defaultshader_Locations","u_image","a_texCoord","a_offsets","a_opacity","a_rotateWithView","ContextEventType","LOST","RESTORED","createTextureInternal","opt_wrapS","opt_wrapT","texture","createTexture","bindTexture","texParameteri","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","createEmptyTexture","texImage2D","RGBA","UNSIGNED_BYTE","Context","WebGLContext","gl_","bufferCache_","shaderCache_","programCache_","currentProgram_","hitDetectionFramebuffer_","hitDetectionTexture_","hitDetectionRenderbuffer_","getExtension","handleWebGLContextLost","handleWebGLContextRestored","bufferKey","bufferCacheEntry","arrayBuffer","createBuffer","Float32Array","Uint32Array","Uint16Array","bufferData","isContextLost","key$1","deleteProgram","key$2","deleteShader","deleteFramebuffer","deleteRenderbuffer","deleteTexture","getCanvas","getHitDetectionFramebuffer","initHitDetectionFramebuffer_","getShader","shaderObject","shaderKey","shader","createShader","shaderSource","compileShader","fragmentShaderObject","vertexShaderObject","programKey","createProgram","attachShader","linkProgram","framebuffer","createFramebuffer","bindFramebuffer","FRAMEBUFFER","renderbuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferTexture2D","COLOR_ATTACHMENT0","framebufferRenderbuffer","DEPTH_ATTACHMENT","TextureReplay","WebGLTextureReplay","groupIndices","hitDetectionGroupIndices","imageHeight","imageWidth","defaultLocations","textures","getTextures","drawCoordinates","createTextures","texturePerImage","getHitDetectionTextures","drawReplaySkipping","groupEnd","hitDetectionTextures","opt_all","webgl_ImageReplay","WebGLImageReplay","images_","hitDetectionImages_","textures_","hitDetectionTextures_","lineStringIsClosed","linestringreplay_defaultshader_fragment","linestringreplay_defaultshader_vertex","linestringreplay_defaultshader_Locations","u_miterLimit","u_color","a_lastPos","a_nextPos","a_direction","LineStringReplay_Instruction","webgl_LineStringReplay","WebGLLineStringReplay","startCoords","sign","p0","lastSign","addVertices_","product","isValid_","indexCount","drawPolygonCoordinates","holeFlatCoordinates","setPolygonStyle","opt_index","getCurrentIndex","tmpDepthFunc","DEPTH_FUNC","tmpDepthMask","DEPTH_WRITEMASK","DEPTH_TEST","depthMask","depthFunc","polygonreplay_defaultshader_fragment","polygonreplay_defaultshader_vertex","polygonreplay_defaultshader_Locations","LinkedList","opt_circular","first_","last_","head_","circular_","length_","insertItem","next","head","removeItem","firstItem","lastItem","nextItem","getNextItem","prevItem","getPrevItem","getCurrItem","setFirstItem","list","structs_LinkedList","webgl_PolygonReplay","WebGLPolygonReplay","rtree","processFlatCoordinates_","maxCoords","getMaxCoords_","holeLists","holeList","classifyPoints_","currList","currItem","getIntersections_","bridgeHole_","triangulate_","createPoint_","insertItem_","seg","ccw","s0","pointsReclassified","reflex","removeItem_","holeMaxX","listMaxX","bestPoint","p5","minDist","intersectingSegments","currSeg","calculateIntersection_","pointsInTriangle","getPointsInTriangle_","currPoint","currTheta","p0Bridge","p1Bridge","simple","isSimple_","clipEars_","resolveSelfIntersections_","splitPolygon_","isClockwise_","s3","processedEars","variableCriterion","diagonalIsInside_","opt_touch","resolvedIntersections","breakCond","newPolygon","newRtree","opt_rtree","opt_reflex","segmentsInExtent","denom","ua","ub","p1IsLeftOf","p1IsRightOf","p3IsLeftOf","p3IsRightOf","p1InCone","p3InCone","currIndex","currLineIndex","holeFlatCoords","lineDeleter","nullStrokeStyle","Atlas_Atlas","space","space_","emptyBlocks_","renderCallback","block","split_","newBlock1","newBlock2","updateBlocks_","args","style_Atlas","AtlasManager_AtlasManager","currentSize_","initialSize","maxSize_","maxSize","atlases_","currentHitSize_","hitAtlases_","getInfo","getInfo_","hitInfo","mergeInfos_","atlases","opt_renderHitCallback","add_","renderHitCallback","isHitAtlas","atlas","style_AtlasManager","HIT_DETECTION_SIZE","ReplayGroup_BATCH_CONSTRUCTORS","WebGLTextReplay","measureCanvas_","currAtlas_","currX","currY","charArr","charInfo","glyphAtlas","textSize","getTextSize_","self","textHeight","sum","curr","addCharToAtlas_","reduce","mCtx","getAtlas_","hash","calculateHash_","webgl_ReplayGroup","WebGLReplayGroup","functions","replayHitDetection_","readPixels","webgl_Immediate","WebGLImmediateRenderer","center_","imageStyle_","fillStyle_","textStyle_","defaultmapshader_fragment","defaultmapshader_vertex","defaultmapshader_Locations","u_texCoordMatrix","u_texture","webgl_Layer","WebGLLayerRenderer","arrayBuffer_","framebufferDimension","texCoordMatrix","uniform1i","getTexCoordMatrix","getProjectionMatrix","getTexture","drawArrays","ImageLayer_WebGLImageLayerRenderer","WebGLImageLayerRenderer","hitTransformationMatrix_","createTexture_","imageElement","updateProjectionMatrix_","canvasWidth","canvasHeight","canvasExtentWidth","canvasExtentHeight","getHitTransformationMatrix_","pixelOnFrameBuffer","mapCoordTransform","projectionMatrixInv","webgl_ImageLayer","webgl_Map","WebGLMapRenderer","clipTileCanvasWidth_","clipTileCanvasHeight_","clipTileContext_","antialias","preserveDrawingBuffer","stencil","textureCache_","tileTextureQueue_","loadNextTileTexture_","tileSize","bindTileTexture","textureCacheFrameMarkerCount_","initializeGL_","magFilter","minFilter","textureCacheEntry","imageTile","clipTileCanvas","clipTileContext","expireCache_","getTileTextureQueue","renderers","activeTexture","blendFuncSeparate","isTileTextureLoaded","layerStatesToDraw","clearColor","layerState$1","ol_Tile","Tile","interimTile","transition_","transitionStarts_","refreshInterimChain","getBlankImage","ol_ImageTile","ImageTile","tileLoadFunction","tileLoadFunction_","naturalWidth","naturalHeight","tilecoord_createOrUpdate","opt_tileCoord","getKeyZXY","tilecoord_getKey","tilecoord_hash","ol_TileCache","TileCache","pruneExceptNewestZ","fromKey","tmpTileCoord","TileGrid_TileGrid","opt_func","opt_strict","currentVal","isSorted","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileSize","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","fullTileRanges","tilegrid_TileGrid","getForProjection","createForProjection","createForExtent","opt_maxZoom","opt_tileSize","opt_corner","corner","resolutionsFromExtent","getCorner","createXYZ","xyzOptions","gridOptions","extentFromProjection","half","Tile_TileSource","TileSource","opaque_","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","thisProj","getTileCoordForTileUrlFunction","worldsAway","tilegrid_wrapX","withinExtentAndZ","TileSourceEvent","source_Tile","tilelayershader_fragment","tilelayershader_vertex","tilelayershader_Locations","u_tileOffset","TileLayer_WebGLTileLayerRenderer","WebGLTileLayerRenderer","fragmentShader_","vertexShader_","locations_","renderArrayBuffer_","renderedTileRange_","renderedFramebufferExtent_","framebufferExtent","tilePixelResolution","tileRangeSize","roundUpToPowerOfTwo","framebufferExtentDimension","allTilesLoaded","tileTextureQueue","pixelOnMapScaled","pixelOnFrameBufferScaled","webgl_TileLayer","VectorLayer_WebGLVectorLayerRenderer","WebGLVectorLayerRenderer","layerState_","SCISSOR_TEST","scissor","webgl_VectorLayer","tileurlfunction_createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","nullTileUrlFunction","expandUrl","urls","startCharCode","stopCharCode","stop","jsonp","opt_errback","opt_callbackParam","script","async","timer","getElementsByTagName","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","enlargeClipPoint","centroidX","centroidY","dX","dY","reproj_render","targetExtent","triangulation","sources","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","u2","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","Triangulation_Triangulation","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_Triangulation","reproj_Tile","ReprojTile","targetTileGrid","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","leftToLoad","sourceListenKey","TileEventType","source_UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","setTileLoadFunction","defaultTileLoadFunction","source_TileImage","TileImage","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","source_BingMaps","BingMaps","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","handleImageryMetadataResponse","getApiKey","getImagerySet","response","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","zoomMax","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","digits","quadKey","imageryProviders","imageryProvider","intersecting","coverageAreas","coverageArea","source_XYZ","source_CartoDB","CartoDB","account_","account","mapId_","config_","templateCache_","initializeMap_","getConfig","updateConfig","setConfig","paramHash","applyTemplate_","mapUrl","client","handleInitResponse_","handleInitError_","setRequestHeader","tilesUrl","cdn_url","https","layergroupid","source_Cluster","Cluster","cluster","setDistance","mapDistance","clustered","neighbors","neighbor","createCluster","reproj_Image","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetResolution_","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","ImageSourceEventType","ImageSourceEvent","defaultImageLoadFunction","source_Image","ImageSource","reprojectedImage_","reprojectedRevision_","findNearestResolution","getImageInternal","handleImageChange","ol_Image","ImageWrapper","imageLoadFunction","imageLoadFunction_","appendParams","keyParams","encodeURIComponent","qs","source_ImageArcGISRest","ImageArcGISRest","params_","ratio_","getParams","F","FORMAT","TRANSPARENT","halfWidth","halfHeight","getRequestUrl_","getImageLoadFunction","srid","modifiedUrl","setImageLoadFunction","updateParams","source_ImageCanvas","ImageCanvasSource","canvasFunction_","canvasFunction","canvasElement","source_ImageMapGuide","ImageMapGuide","displayDpi_","displayDpi","useOverlay_","useOverlay","baseUrl","dpi","mcsW","mcsH","devW","devH","mpp","baseParams","OPERATION","LOCALE","CLIENTAGENT","CLIP","SETDISPLAYDPI","SETDISPLAYWIDTH","SETDISPLAYHEIGHT","SETVIEWSCALE","SETVIEWCENTERX","SETVIEWCENTERY","ImageStatic","Static","imageExtent_","getImageExtent","targetWidth","DEFAULT_WMS_VERSION","WMSServerType","GETFEATUREINFO_IMAGE_SIZE","source_ImageWMS","ImageWMS","v13_","updateV13_","serverType_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","SERVICE","REQUEST","QUERY_LAYERS","viewExtent","requestExtent","ATTRIBUTION","source_OSM","OSM","RasterEventType","RasterOperationType","PIXEL","RasterSourceEvent","sharedContext","Raster_createRenderer","layerOrSource","createTileRenderer","createImageRenderer","Raster","RasterSource","worker_","operationType_","operationType","threads_","renderers_","createRenderers","Raster_getLayerStatesArray","requestedFrameState_","renderedImageCanvas_","setOperation","opt_lib","updateFrameState_","allSourcesReady_","ready","processSources_","imageDatas","onWorkerComplete_","ATTRIBUTIONS","LayerConfig","terrain","terrain-background","terrain-labels","terrain-lines","toner-background","toner","toner-hybrid","toner-labels","toner-lines","toner-lite","watercolor","ProviderConfig","source_Stamen","Stamen","provider","providerConfig","layerConfig","TileArcGISRest_tileUrlFunction","tmpExtent_","source_TileArcGISRest","TileArcGISRest","getKeyForParams_","TileDebug_LabeledTile","LabeledTile","strokeRect","source_TileDebug","TileDebug","textTileCoord","source_TileJSON","TileJSON","tileJSON_","handleTileJSONResponse","handleTileJSONError","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","attributionExtent","TileWMS_tileUrlFunction","source_TileWMS","TileWMS","transparent","UTFGrid_CustomTile","CustomTile","preemptive","preemptive_","grid_","data_","jsonp_","getData","xRelative","yRelative","row","forDataAtCoordinate","opt_request","loadInternal_","handleError_","json","source_UTFGrid","UTFGrid","tileUrlFunction_","template_","getTemplate","forDataAtCoordinateAndResolution","grids","ol_VectorImageTile","VectorImageTile","sourceTiles","replayState_","sourceRevision_","loadListenerKeys_","sourceTileListenerKeys_","sourceZ","useLoadedOnly","loadCount","sourceTileKey","consumers","finishLoading_","errorSourceTiles","empty","defaultLoadFunction","onLoad","onError","DEFAULT_EXTENT","ol_VectorTile","VectorTile","replayGroups_","setFeatures","source_VectorTile","tileGrids_","WMTSRequestEncoding","KVP","REST","WMTSTileGrid","TileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","tilegrid_WMTS","createFromCapabilitiesMatrixSet","matrixSet","opt_matrixLimits","matrixLimits","switchOriginXY","elt","elt_ml","tileWidth","tileHeight","source_WMTS","WMTS","requestEncoding","version_","dimensions_","matrixSet_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","tilematrixset","Version","localContext","TileCol","TileRow","TierSizeCalculation","TRUNCATED","Zoomify_CustomTile","zoomifyImage_","source_Zoomify","Zoomify","tierSizeCalculation","tierSizeInTiles","tileSizeForTierSizeCalculation","tileCountUpToTier","tileCoordZ","tileIndex","TileGroup","ZoomifyTileClass","ol_WebGLMap","WebGLMap","ol","colorlike","featureloader","loadingstrategy","proj4","webgl","sphere","Graticule","unByKey","createStringXY","toStringHDMS","upAndDown","click","doubleClick","platformModifierKeyOnly","getEnlargedArea","writeFilter","between","during","equalTo","greaterThan","greaterThanOrEqualTo","isNull","lessThan","lessThanOrEqualTo","like","not","notEqualTo","or","within","inherits","childCtor","parentCtor","createBox","boxCoordinates","createRegularPolygon","fromLonLat","projCodes","defs","def","axis","to_meter","code1","proj1","code2","proj2","toLonLat","lonLat","toContext","optionsFromCapabilities","wmtsCap","tileMatrixSets","supportedCRS","matrixSetObj","projConfig","wgs84BoundingBox","wgs84ProjectionExtent","gets","encodings","sphere_getArea","sphere_getLength","AtlasManager","__webpack_exports__"],"mappings":"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","file":"ol.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ol\"] = factory();\n\telse\n\t\troot[\"ol\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos,\n            str = readUtf8(this.buf, this.pos, end);\n        this.pos = end;\n        return str;\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.ceil(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","var Processor = require('./processor');\n\nexports.Processor = Processor;\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var newImageData = require('./util').newImageData;\n\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(Object):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  var workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    } else {\n      return {data: data, width: width, height: height};\n    }\n  }\n\n  return function(data) {\n    // bracket notation for minification support\n    var buffers = data['buffers'];\n    var meta = data['meta'];\n    var imageOps = data['imageOps'];\n    var width = data['width'];\n    var height = data['height'];\n\n    var numBuffers = buffers.length;\n    var numBytes = buffers[0].byteLength;\n    var output, b;\n\n    if (imageOps) {\n      var images = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n            new Uint8ClampedArray(buffers[b]), width, height);\n      }\n      output = operation(images, meta).data;\n    } else {\n      output = new Uint8ClampedArray(numBytes);\n      var arrays = new Array(numBuffers);\n      var pixels = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        arrays[b] = new Uint8ClampedArray(buffers[b]);\n        pixels[b] = [0, 0, 0, 0];\n      }\n      for (var i = 0; i < numBytes; i += 4) {\n        for (var j = 0; j < numBuffers; ++j) {\n          var array = arrays[j];\n          pixels[j][0] = array[i];\n          pixels[j][1] = array[i + 1];\n          pixels[j][2] = array[i + 2];\n          pixels[j][3] = array[i + 3];\n        }\n        var pixel = operation(pixels, meta);\n        output[i] = pixel[0];\n        output[i + 1] = pixel[1];\n        output[i + 2] = pixel[2];\n        output[i + 3] = pixel[3];\n      }\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  var lib = Object.keys(config.lib || {}).map(function(name) {\n    return 'var ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  var lines = lib.concat([\n    'var __minion__ = (' + createMinion.toString() + ')(', config.operation.toString(), ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  var buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});'\n  ]);\n\n  var blob = new Blob(lines, {type: 'text/javascript'});\n  var source = URL.createObjectURL(blob);\n  var worker = new Worker(source);\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * Create a faux worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  var minion = createMinion(config.operation);\n  return {\n    postMessage: function(data) {\n      setTimeout(function() {\n        onMessage({'data': {'buffer': minion(data), 'meta': data['meta']}});\n      }, 0);\n    }\n  };\n}\n\n/**\n * A processor runs pixel or image operations in workers.\n * @param {Object} config Configuration.\n */\nfunction Processor(config) {\n  this._imageOps = !!config.imageOps;\n  var threads;\n  if (config.threads === 0) {\n    threads = 0;\n  } else if (this._imageOps) {\n    threads = 1;\n  } else {\n    threads = config.threads || 1;\n  }\n  var workers = [];\n  if (threads) {\n    for (var i = 0; i < threads; ++i) {\n      workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n    }\n  } else {\n    workers[0] = createFauxWorker(config, this._onWorkerMessage.bind(this, 0));\n  }\n  this._workers = workers;\n  this._queue = [];\n  this._maxQueueLength = config.queue || Infinity;\n  this._running = 0;\n  this._dataLookup = {};\n  this._job = null;\n}\n\n/**\n * Run operation on input data.\n * @param {Array.<Array|ImageData>} inputs Array of pixels or image data\n *     (depending on the operation type).\n * @param {Object} meta A user data object.  This is passed to all operations\n *     and must be serializable.\n * @param {function(Error, ImageData, Object)} callback Called when work\n *     completes.  The first argument is any error.  The second is the ImageData\n *     generated by operations.  The third is the user data object.\n */\nProcessor.prototype.process = function(inputs, meta, callback) {\n  this._enqueue({\n    inputs: inputs,\n    meta: meta,\n    callback: callback\n  });\n  this._dispatch();\n};\n\n/**\n * Stop responding to any completed work and destroy the processor.\n */\nProcessor.prototype.destroy = function() {\n  for (var key in this) {\n    this[key] = null;\n  }\n  this._destroyed = true;\n};\n\n/**\n * Add a job to the queue.\n * @param {Object} job The job.\n */\nProcessor.prototype._enqueue = function(job) {\n  this._queue.push(job);\n  while (this._queue.length > this._maxQueueLength) {\n    this._queue.shift().callback(null, null);\n  }\n};\n\n/**\n * Dispatch a job.\n */\nProcessor.prototype._dispatch = function() {\n  if (this._running === 0 && this._queue.length > 0) {\n    var job = this._job = this._queue.shift();\n    var width = job.inputs[0].width;\n    var height = job.inputs[0].height;\n    var buffers = job.inputs.map(function(input) {\n      return input.data.buffer;\n    });\n    var threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage({\n        'buffers': buffers,\n        'meta': job.meta,\n        'imageOps': this._imageOps,\n        'width': width,\n        'height': height\n      }, buffers);\n    } else {\n      var length = job.inputs[0].data.length;\n      var segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (var i = 0; i < threads; ++i) {\n        var offset = i * segmentLength;\n        var slices = [];\n        for (var j = 0, jj = buffers.length; j < jj; ++j) {\n          slices.push(buffers[i].slice(offset, offset + segmentLength));\n        }\n        this._workers[i].postMessage({\n          'buffers': slices,\n          'meta': job.meta,\n          'imageOps': this._imageOps,\n          'width': width,\n          'height': height\n        }, slices);\n      }\n    }\n  }\n};\n\n/**\n * Handle messages from the worker.\n * @param {number} index The worker index.\n * @param {MessageEvent} event The message event.\n */\nProcessor.prototype._onWorkerMessage = function(index, event) {\n  if (this._destroyed) {\n    return;\n  }\n  this._dataLookup[index] = event.data;\n  --this._running;\n  if (this._running === 0) {\n    this._resolveJob();\n  }\n};\n\n/**\n * Resolve a job.  If there are no more worker threads, the processor callback\n * will be called.\n */\nProcessor.prototype._resolveJob = function() {\n  var job = this._job;\n  var threads = this._workers.length;\n  var data, meta;\n  if (threads === 1) {\n    data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n    meta = this._dataLookup[0]['meta'];\n  } else {\n    var length = job.inputs[0].data.length;\n    data = new Uint8ClampedArray(length);\n    meta = new Array(length);\n    var segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (var i = 0; i < threads; ++i) {\n      var buffer = this._dataLookup[i]['buffer'];\n      var offset = i * segmentLength;\n      data.set(new Uint8ClampedArray(buffer), offset);\n      meta[i] = this._dataLookup[i]['meta'];\n    }\n  }\n  this._job = null;\n  this._dataLookup = {};\n  job.callback(null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height), meta);\n  this._dispatch();\n};\n\nmodule.exports = Processor;\n","var hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\nvar context = document.createElement('canvas').getContext('2d');\n\nfunction newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  } else {\n    var imageData = context.createImageData(width, height);\n    imageData.data.set(data);\n    return imageData;\n  }\n}\n\nexports.newImageData = newImageData;\n","/**\r\n * @module ol/array\r\n */\r\n\r\n\r\n/**\r\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\r\n * https://github.com/darkskyapp/binary-search\r\n *\r\n * @param {Array<*>} haystack Items to search through.\r\n * @param {*} needle The item to look for.\r\n * @param {Function=} opt_comparator Comparator function.\r\n * @return {number} The index of the item if found, -1 if not.\r\n */\r\nexport function binarySearch(haystack, needle, opt_comparator) {\r\n  var mid, cmp;\r\n  var comparator = opt_comparator || numberSafeCompareFunction;\r\n  var low = 0;\r\n  var high = haystack.length;\r\n  var found = false;\r\n\r\n  while (low < high) {\r\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\r\n     * to double (which gives the wrong results). */\r\n    mid = low + (high - low >> 1);\r\n    cmp = +comparator(haystack[mid], needle);\r\n\r\n    if (cmp < 0.0) { /* Too low. */\r\n      low = mid + 1;\r\n\r\n    } else { /* Key found or too high */\r\n      high = mid;\r\n      found = !cmp;\r\n    }\r\n  }\r\n\r\n  /* Key not found. */\r\n  return found ? low : ~low;\r\n}\r\n\r\n\r\n/**\r\n * Compare function for array sort that is safe for numbers.\r\n * @param {*} a The first object to be compared.\r\n * @param {*} b The second object to be compared.\r\n * @return {number} A negative number, zero, or a positive number as the first\r\n *     argument is less than, equal to, or greater than the second.\r\n */\r\nexport function numberSafeCompareFunction(a, b) {\r\n  return a > b ? 1 : a < b ? -1 : 0;\r\n}\r\n\r\n\r\n/**\r\n * Whether the array contains the given object.\r\n * @param {Array<*>} arr The array to test for the presence of the element.\r\n * @param {*} obj The object for which to test.\r\n * @return {boolean} The object is in the array.\r\n */\r\nexport function includes(arr, obj) {\r\n  return arr.indexOf(obj) >= 0;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} arr Array.\r\n * @param {number} target Target.\r\n * @param {number} direction 0 means return the nearest, > 0\r\n *    means return the largest nearest, < 0 means return the\r\n *    smallest nearest.\r\n * @return {number} Index.\r\n */\r\nexport function linearFindNearest(arr, target, direction) {\r\n  var n = arr.length;\r\n  if (arr[0] <= target) {\r\n    return 0;\r\n  } else if (target <= arr[n - 1]) {\r\n    return n - 1;\r\n  } else {\r\n    var i;\r\n    if (direction > 0) {\r\n      for (i = 1; i < n; ++i) {\r\n        if (arr[i] < target) {\r\n          return i - 1;\r\n        }\r\n      }\r\n    } else if (direction < 0) {\r\n      for (i = 1; i < n; ++i) {\r\n        if (arr[i] <= target) {\r\n          return i;\r\n        }\r\n      }\r\n    } else {\r\n      for (i = 1; i < n; ++i) {\r\n        if (arr[i] == target) {\r\n          return i;\r\n        } else if (arr[i] < target) {\r\n          if (arr[i - 1] - target < target - arr[i]) {\r\n            return i - 1;\r\n          } else {\r\n            return i;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return n - 1;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<*>} arr Array.\r\n * @param {number} begin Begin index.\r\n * @param {number} end End index.\r\n */\r\nexport function reverseSubArray(arr, begin, end) {\r\n  while (begin < end) {\r\n    var tmp = arr[begin];\r\n    arr[begin] = arr[end];\r\n    arr[end] = tmp;\r\n    ++begin;\r\n    --end;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<VALUE>} arr The array to modify.\r\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\r\n * @template VALUE\r\n */\r\nexport function extend(arr, data) {\r\n  var extension = Array.isArray(data) ? data : [data];\r\n  var length = extension.length;\r\n  for (var i = 0; i < length; i++) {\r\n    arr[arr.length] = extension[i];\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<VALUE>} arr The array to modify.\r\n * @param {VALUE} obj The element to remove.\r\n * @template VALUE\r\n * @return {boolean} If the element was removed.\r\n */\r\nexport function remove(arr, obj) {\r\n  var i = arr.indexOf(obj);\r\n  var found = i > -1;\r\n  if (found) {\r\n    arr.splice(i, 1);\r\n  }\r\n  return found;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<VALUE>} arr The array to search in.\r\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\r\n * @template VALUE\r\n * @return {VALUE|null} The element found or null.\r\n */\r\nexport function find(arr, func) {\r\n  var length = arr.length >>> 0;\r\n  var value;\r\n\r\n  for (var i = 0; i < length; i++) {\r\n    value = arr[i];\r\n    if (func(value, i, arr)) {\r\n      return value;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\r\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\r\n * @return {boolean} Whether the two arrays are equal.\r\n */\r\nexport function equals(arr1, arr2) {\r\n  var len1 = arr1.length;\r\n  if (len1 !== arr2.length) {\r\n    return false;\r\n  }\r\n  for (var i = 0; i < len1; i++) {\r\n    if (arr1[i] !== arr2[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n\r\n/**\r\n * Sort the passed array such that the relative order of equal elements is preverved.\r\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\r\n * @param {Array<*>} arr The array to sort (modifies original).\r\n * @param {!function(*, *): number} compareFnc Comparison function.\r\n * @api\r\n */\r\nexport function stableSort(arr, compareFnc) {\r\n  var length = arr.length;\r\n  var tmp = Array(arr.length);\r\n  var i;\r\n  for (i = 0; i < length; i++) {\r\n    tmp[i] = {index: i, value: arr[i]};\r\n  }\r\n  tmp.sort(function(a, b) {\r\n    return compareFnc(a.value, b.value) || a.index - b.index;\r\n  });\r\n  for (i = 0; i < arr.length; i++) {\r\n    arr[i] = tmp[i].value;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<*>} arr The array to search in.\r\n * @param {Function} func Comparison function.\r\n * @return {number} Return index.\r\n */\r\nexport function findIndex(arr, func) {\r\n  var index;\r\n  var found = !arr.every(function(el, idx) {\r\n    index = idx;\r\n    return !func(el, idx, arr);\r\n  });\r\n  return found ? index : -1;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<*>} arr The array to test.\r\n * @param {Function=} opt_func Comparison function.\r\n * @param {boolean=} opt_strict Strictly sorted (default false).\r\n * @return {boolean} Return index.\r\n */\r\nexport function isSorted(arr, opt_func, opt_strict) {\r\n  var compare = opt_func || numberSafeCompareFunction;\r\n  return arr.every(function(currentVal, index) {\r\n    if (index === 0) {\r\n      return true;\r\n    }\r\n    var res = compare(arr[index - 1], currentVal);\r\n    return !(res > 0 || opt_strict && res === 0);\r\n  });\r\n}\r\n\r\n//# sourceMappingURL=array.js.map","/**\r\n * @module ol/util\r\n */\r\n\r\n/**\r\n * @return {?} Any return.\r\n */\r\nexport function abstract() {\r\n  return /** @type {?} */ ((function() {\r\n    throw new Error('Unimplemented abstract method.');\r\n  })());\r\n}\r\n\r\n/**\r\n * Inherit the prototype methods from one constructor into another.\r\n *\r\n * Usage:\r\n *\r\n *     function ParentClass(a, b) { }\r\n *     ParentClass.prototype.foo = function(a) { }\r\n *\r\n *     function ChildClass(a, b, c) {\r\n *       // Call parent constructor\r\n *       ParentClass.call(this, a, b);\r\n *     }\r\n *     inherits(ChildClass, ParentClass);\r\n *\r\n *     var child = new ChildClass('a', 'b', 'see');\r\n *     child.foo(); // This works.\r\n *\r\n * @param {!Function} childCtor Child constructor.\r\n * @param {!Function} parentCtor Parent constructor.\r\n * @function module:ol.inherits\r\n * @deprecated\r\n * @api\r\n */\r\nexport function inherits(childCtor, parentCtor) {\r\n  childCtor.prototype = Object.create(parentCtor.prototype);\r\n  childCtor.prototype.constructor = childCtor;\r\n}\r\n\r\n/**\r\n * Counter for getUid.\r\n * @type {number}\r\n * @private\r\n */\r\nvar uidCounter_ = 0;\r\n\r\n/**\r\n * Gets a unique ID for an object. This mutates the object so that further calls\r\n * with the same object as a parameter returns the same value. Unique IDs are generated\r\n * as a strictly increasing sequence. Adapted from goog.getUid.\r\n *\r\n * @param {Object} obj The object to get the unique ID for.\r\n * @return {string} The unique ID for the object.\r\n * @function module:ol.getUid\r\n * @api\r\n */\r\nexport function getUid(obj) {\r\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\r\n}\r\n\r\n/**\r\n * OpenLayers version.\r\n * @type {string}\r\n */\r\nexport var VERSION = '5.3.3';\r\n\r\n//# sourceMappingURL=util.js.map","/**\r\n * @module ol/AssertionError\r\n */\r\nimport {VERSION} from './util.js';\r\n\r\n/**\r\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\r\n * extended with a `code` property.\r\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\r\n */\r\nvar AssertionError = /*@__PURE__*/(function (Error) {\n  function AssertionError(code) {\r\n    var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\r\n    var message = 'Assertion failed. See https://openlayers.org/en/' + path +\r\n    '/doc/errors/#' + code + ' for details.';\r\n\r\n    Error.call(this, message);\r\n\r\n    /**\r\n     * Error code. The meaning of the code can be found on\r\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\r\n     * the version found in the OpenLayers script's header comment if a version\r\n     * other than the latest is used).\r\n     * @type {number}\r\n     * @api\r\n     */\r\n    this.code = code;\r\n\r\n    /**\r\n     * @type {string}\r\n     */\r\n    this.name = 'AssertionError';\r\n\r\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\r\n    this.message = message;\r\n  }\n\n  if ( Error ) AssertionError.__proto__ = Error;\n  AssertionError.prototype = Object.create( Error && Error.prototype );\n  AssertionError.prototype.constructor = AssertionError;\n\n  return AssertionError;\n}(Error));\r\n\r\nexport default AssertionError;\r\n\r\n//# sourceMappingURL=AssertionError.js.map","/**\r\n * @module ol/CollectionEventType\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  /**\r\n   * Triggered when an item is added to the collection.\r\n   * @event module:ol/Collection.CollectionEvent#add\r\n   * @api\r\n   */\r\n  ADD: 'add',\r\n  /**\r\n   * Triggered when an item is removed from the collection.\r\n   * @event module:ol/Collection.CollectionEvent#remove\r\n   * @api\r\n   */\r\n  REMOVE: 'remove'\r\n};\r\n\r\n//# sourceMappingURL=CollectionEventType.js.map","/**\r\n * @module ol/ObjectEventType\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  /**\r\n   * Triggered when a property is changed.\r\n   * @event module:ol/Object.ObjectEvent#propertychange\r\n   * @api\r\n   */\r\n  PROPERTYCHANGE: 'propertychange'\r\n};\r\n\r\n//# sourceMappingURL=ObjectEventType.js.map","/**\r\n * @module ol/obj\r\n */\r\n\r\n\r\n/**\r\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\r\n * one or more source objects to a target object.\r\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\r\n *\r\n * @param {!Object} target The target object.\r\n * @param {...Object} var_sources The source object(s).\r\n * @return {!Object} The modified target object.\r\n */\r\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  var arguments$1 = arguments;\n\r\n  if (target === undefined || target === null) {\r\n    throw new TypeError('Cannot convert undefined or null to object');\r\n  }\r\n\r\n  var output = Object(target);\r\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\r\n    var source = arguments$1[i];\r\n    if (source !== undefined && source !== null) {\r\n      for (var key in source) {\r\n        if (source.hasOwnProperty(key)) {\r\n          output[key] = source[key];\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return output;\r\n};\r\n\r\n\r\n/**\r\n * Removes all properties from an object.\r\n * @param {Object} object The object to clear.\r\n */\r\nexport function clear(object) {\r\n  for (var property in object) {\r\n    delete object[property];\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Get an array of property values from an object.\r\n * @param {Object<K,V>} object The object from which to get the values.\r\n * @return {!Array<V>} The property values.\r\n * @template K,V\r\n */\r\nexport function getValues(object) {\r\n  var values = [];\r\n  for (var property in object) {\r\n    values.push(object[property]);\r\n  }\r\n  return values;\r\n}\r\n\r\n\r\n/**\r\n * Determine if an object has any properties.\r\n * @param {Object} object The object to check.\r\n * @return {boolean} The object is empty.\r\n */\r\nexport function isEmpty(object) {\r\n  var property;\r\n  for (property in object) {\r\n    return false;\r\n  }\r\n  return !property;\r\n}\r\n\r\n//# sourceMappingURL=obj.js.map","/**\r\n * @module ol/events\r\n */\r\nimport {clear} from './obj.js';\r\n\r\n\r\n/**\r\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\r\n * @typedef {Object} EventsKey\r\n * @property {Object} [bindTo]\r\n * @property {ListenerFunction} [boundListener]\r\n * @property {boolean} callOnce\r\n * @property {number} [deleteIndex]\r\n * @property {ListenerFunction} listener\r\n * @property {import(\"./events/Target.js\").EventTargetLike} target\r\n * @property {string} type\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * Listener function. This function is called with an event object as argument.\r\n * When the function returns `false`, event propagation will stop.\r\n *\r\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * @param {EventsKey} listenerObj Listener object.\r\n * @return {ListenerFunction} Bound listener.\r\n */\r\nexport function bindListener(listenerObj) {\r\n  var boundListener = function(evt) {\r\n    var listener = listenerObj.listener;\r\n    var bindTo = listenerObj.bindTo || listenerObj.target;\r\n    if (listenerObj.callOnce) {\r\n      unlistenByKey(listenerObj);\r\n    }\r\n    return listener.call(bindTo, evt);\r\n  };\r\n  listenerObj.boundListener = boundListener;\r\n  return boundListener;\r\n}\r\n\r\n\r\n/**\r\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\r\n * array.\r\n *\r\n * @param {!Array<!EventsKey>} listeners Array of listeners.\r\n * @param {!Function} listener The listener function.\r\n * @param {Object=} opt_this The `this` value inside the listener.\r\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\r\n *     listener, for {@link module:ol/events~unlistenByKey}.\r\n * @return {EventsKey|undefined} The matching listener object.\r\n */\r\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\r\n  var listenerObj;\r\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\r\n    listenerObj = listeners[i];\r\n    if (listenerObj.listener === listener &&\r\n        listenerObj.bindTo === opt_this) {\r\n      if (opt_setDeleteIndex) {\r\n        listenerObj.deleteIndex = i;\r\n      }\r\n      return listenerObj;\r\n    }\r\n  }\r\n  return undefined;\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\r\n * @param {string} type Type.\r\n * @return {Array<EventsKey>|undefined} Listeners.\r\n */\r\nexport function getListeners(target, type) {\r\n  var listenerMap = getListenerMap(target);\r\n  return listenerMap ? listenerMap[type] : undefined;\r\n}\r\n\r\n\r\n/**\r\n * Get the lookup of listeners.\r\n * @param {Object} target Target.\r\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\r\n * @return {!Object<string, Array<EventsKey>>} Map of\r\n *     listeners by event type.\r\n */\r\nfunction getListenerMap(target, opt_create) {\r\n  var listenerMap = target.ol_lm;\r\n  if (!listenerMap && opt_create) {\r\n    listenerMap = target.ol_lm = {};\r\n  }\r\n  return listenerMap;\r\n}\r\n\r\n\r\n/**\r\n * Remove the listener map from a target.\r\n * @param {Object} target Target.\r\n */\r\nfunction removeListenerMap(target) {\r\n  delete target.ol_lm;\r\n}\r\n\r\n\r\n/**\r\n * Clean up all listener objects of the given type.  All properties on the\r\n * listener objects will be removed, and if no listeners remain in the listener\r\n * map, it will be removed from the target.\r\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\r\n * @param {string} type Type.\r\n */\r\nfunction removeListeners(target, type) {\r\n  var listeners = getListeners(target, type);\r\n  if (listeners) {\r\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\r\n      /** @type {import(\"./events/Target.js\").default} */ (target).\r\n        removeEventListener(type, listeners[i].boundListener);\r\n      clear(listeners[i]);\r\n    }\r\n    listeners.length = 0;\r\n    var listenerMap = getListenerMap(target);\r\n    if (listenerMap) {\r\n      delete listenerMap[type];\r\n      if (Object.keys(listenerMap).length === 0) {\r\n        removeListenerMap(target);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Registers an event listener on an event target. Inspired by\r\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\r\n *\r\n * This function efficiently binds a `listener` to a `this` object, and returns\r\n * a key for use with {@link module:ol/events~unlistenByKey}.\r\n *\r\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\r\n * @param {string} type Event type.\r\n * @param {ListenerFunction} listener Listener.\r\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\r\n *     listener. Default is the `target`.\r\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\r\n * @return {EventsKey} Unique key for the listener.\r\n */\r\nexport function listen(target, type, listener, opt_this, opt_once) {\r\n  var listenerMap = getListenerMap(target, true);\r\n  var listeners = listenerMap[type];\r\n  if (!listeners) {\r\n    listeners = listenerMap[type] = [];\r\n  }\r\n  var listenerObj = findListener(listeners, listener, opt_this, false);\r\n  if (listenerObj) {\r\n    if (!opt_once) {\r\n      // Turn one-off listener into a permanent one.\r\n      listenerObj.callOnce = false;\r\n    }\r\n  } else {\r\n    listenerObj = /** @type {EventsKey} */ ({\r\n      bindTo: opt_this,\r\n      callOnce: !!opt_once,\r\n      listener: listener,\r\n      target: target,\r\n      type: type\r\n    });\r\n    /** @type {import(\"./events/Target.js\").default} */ (target).\r\n      addEventListener(type, bindListener(listenerObj));\r\n    listeners.push(listenerObj);\r\n  }\r\n\r\n  return listenerObj;\r\n}\r\n\r\n\r\n/**\r\n * Registers a one-off event listener on an event target. Inspired by\r\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\r\n *\r\n * This function efficiently binds a `listener` as self-unregistering listener\r\n * to a `this` object, and returns a key for use with\r\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\r\n * unregistered before it is called.\r\n *\r\n * When {@link module:ol/events~listen} is called with the same arguments after this\r\n * function, the self-unregistering listener will be turned into a permanent\r\n * listener.\r\n *\r\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\r\n * @param {string} type Event type.\r\n * @param {ListenerFunction} listener Listener.\r\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\r\n *     listener. Default is the `target`.\r\n * @return {EventsKey} Key for unlistenByKey.\r\n */\r\nexport function listenOnce(target, type, listener, opt_this) {\r\n  return listen(target, type, listener, opt_this, true);\r\n}\r\n\r\n\r\n/**\r\n * Unregisters an event listener on an event target. Inspired by\r\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\r\n *\r\n * To return a listener, this function needs to be called with the exact same\r\n * arguments that were used for a previous {@link module:ol/events~listen} call.\r\n *\r\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\r\n * @param {string} type Event type.\r\n * @param {ListenerFunction} listener Listener.\r\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\r\n *     listener. Default is the `target`.\r\n */\r\nexport function unlisten(target, type, listener, opt_this) {\r\n  var listeners = getListeners(target, type);\r\n  if (listeners) {\r\n    var listenerObj = findListener(listeners, listener, opt_this, true);\r\n    if (listenerObj) {\r\n      unlistenByKey(listenerObj);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Unregisters event listeners on an event target. Inspired by\r\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\r\n *\r\n * The argument passed to this function is the key returned from\r\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\r\n *\r\n * @param {EventsKey} key The key.\r\n */\r\nexport function unlistenByKey(key) {\r\n  if (key && key.target) {\r\n    /** @type {import(\"./events/Target.js\").default} */ (key.target).\r\n      removeEventListener(key.type, key.boundListener);\r\n    var listeners = getListeners(key.target, key.type);\r\n    if (listeners) {\r\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\r\n      if (i !== -1) {\r\n        listeners.splice(i, 1);\r\n      }\r\n      if (listeners.length === 0) {\r\n        removeListeners(key.target, key.type);\r\n      }\r\n    }\r\n    clear(key);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Unregisters all event listeners on an event target. Inspired by\r\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\r\n *\r\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\r\n */\r\nexport function unlistenAll(target) {\r\n  var listenerMap = getListenerMap(target);\r\n  if (listenerMap) {\r\n    for (var type in listenerMap) {\r\n      removeListeners(target, type);\r\n    }\r\n  }\r\n}\r\n\r\n//# sourceMappingURL=events.js.map","/**\r\n * @module ol/Disposable\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Objects that need to clean up after themselves.\r\n */\r\nvar Disposable = function Disposable() {\r\n  /**\r\n   * The object has already been disposed.\r\n   * @type {boolean}\r\n   * @private\r\n   */\r\n  this.disposed_ = false;\r\n};\r\n\r\n/**\r\n * Clean up.\r\n */\r\nDisposable.prototype.dispose = function dispose () {\r\n  if (!this.disposed_) {\r\n    this.disposed_ = true;\r\n    this.disposeInternal();\r\n  }\r\n};\r\n\r\n/**\r\n * Extension point for disposable objects.\r\n * @protected\r\n */\r\nDisposable.prototype.disposeInternal = function disposeInternal () {};\r\n\r\nexport default Disposable;\r\n\r\n//# sourceMappingURL=Disposable.js.map","/**\r\n * @module ol/functions\r\n */\r\n\r\n/**\r\n * Always returns true.\r\n * @returns {boolean} true.\r\n */\r\nexport function TRUE() {\r\n  return true;\r\n}\r\n\r\n/**\r\n * Always returns false.\r\n * @returns {boolean} false.\r\n */\r\nexport function FALSE() {\r\n  return false;\r\n}\r\n\r\n/**\r\n * A reusable function, used e.g. as a default for callbacks.\r\n *\r\n * @return {void} Nothing.\r\n */\r\nexport function VOID() {}\r\n\r\n//# sourceMappingURL=functions.js.map","/**\r\n * @module ol/events/Event\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\r\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\r\n *\r\n * This implementation only provides `type` and `target` properties, and\r\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\r\n * for higher level events defined in the library, and works with\r\n * {@link module:ol/events/Target~Target}.\r\n */\r\nvar Event = function Event(type) {\r\n\r\n  /**\r\n   * @type {boolean}\r\n   */\r\n  this.propagationStopped;\r\n\r\n  /**\r\n   * The event type.\r\n   * @type {string}\r\n   * @api\r\n   */\r\n  this.type = type;\r\n\r\n  /**\r\n   * The event target.\r\n   * @type {Object}\r\n   * @api\r\n   */\r\n  this.target = null;\r\n};\r\n\r\n/**\r\n * Stop event propagation.\r\n * @api\r\n */\r\nEvent.prototype.preventDefault = function preventDefault () {\r\n  this.propagationStopped = true;\r\n};\r\n\r\n/**\r\n * Stop event propagation.\r\n * @api\r\n */\r\nEvent.prototype.stopPropagation = function stopPropagation () {\r\n  this.propagationStopped = true;\r\n};\r\n\r\n\r\n/**\r\n * @param {Event|import(\"./Event.js\").default} evt Event\r\n */\r\nexport function stopPropagation(evt) {\r\n  evt.stopPropagation();\r\n}\r\n\r\n\r\n/**\r\n * @param {Event|import(\"./Event.js\").default} evt Event\r\n */\r\nexport function preventDefault(evt) {\r\n  evt.preventDefault();\r\n}\r\n\r\nexport default Event;\r\n\r\n//# sourceMappingURL=Event.js.map","/**\r\n * @module ol/events/Target\r\n */\r\nimport Disposable from '../Disposable.js';\r\nimport {unlistenAll} from '../events.js';\r\nimport {VOID} from '../functions.js';\r\nimport Event from './Event.js';\r\n\r\n\r\n/**\r\n * @typedef {EventTarget|Target} EventTargetLike\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\r\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\r\n *\r\n * There are two important simplifications compared to the specification:\r\n *\r\n * 1. The handling of `useCapture` in `addEventListener` and\r\n *    `removeEventListener`. There is no real capture model.\r\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\r\n *    There is no event target hierarchy. When a listener calls\r\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\r\n *    more listeners after this one will be called. Same as when the listener\r\n *    returns false.\r\n */\r\nvar Target = /*@__PURE__*/(function (Disposable) {\n  function Target() {\r\n\r\n    Disposable.call(this);\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, number>}\r\n     */\r\n    this.pendingRemovals_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, number>}\r\n     */\r\n    this.dispatching_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\r\n     */\r\n    this.listeners_ = {};\r\n\r\n  }\n\n  if ( Disposable ) Target.__proto__ = Disposable;\n  Target.prototype = Object.create( Disposable && Disposable.prototype );\n  Target.prototype.constructor = Target;\r\n\r\n  /**\r\n   * @param {string} type Type.\r\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\r\n   */\r\n  Target.prototype.addEventListener = function addEventListener (type, listener) {\r\n    var listeners = this.listeners_[type];\r\n    if (!listeners) {\r\n      listeners = this.listeners_[type] = [];\r\n    }\r\n    if (listeners.indexOf(listener) === -1) {\r\n      listeners.push(listener);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Dispatches an event and calls all listeners listening for events\r\n   * of this type. The event parameter can either be a string or an\r\n   * Object with a `type` property.\r\n   *\r\n   * @param {{type: string,\r\n   *     target: (EventTargetLike|undefined),\r\n   *     propagationStopped: (boolean|undefined)}|\r\n   *     import(\"./Event.js\").default|string} event Event object.\r\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\r\n   *     event object or if any of the listeners returned false.\r\n   * @api\r\n   */\r\n  Target.prototype.dispatchEvent = function dispatchEvent (event) {\r\n    var evt = typeof event === 'string' ? new Event(event) : event;\r\n    var type = evt.type;\r\n    evt.target = this;\r\n    var listeners = this.listeners_[type];\r\n    var propagate;\r\n    if (listeners) {\r\n      if (!(type in this.dispatching_)) {\r\n        this.dispatching_[type] = 0;\r\n        this.pendingRemovals_[type] = 0;\r\n      }\r\n      ++this.dispatching_[type];\r\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\r\n        if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\r\n          propagate = false;\r\n          break;\r\n        }\r\n      }\r\n      --this.dispatching_[type];\r\n      if (this.dispatching_[type] === 0) {\r\n        var pendingRemovals = this.pendingRemovals_[type];\r\n        delete this.pendingRemovals_[type];\r\n        while (pendingRemovals--) {\r\n          this.removeEventListener(type, VOID);\r\n        }\r\n        delete this.dispatching_[type];\r\n      }\r\n      return propagate;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Target.prototype.disposeInternal = function disposeInternal () {\r\n    unlistenAll(this);\r\n  };\r\n\r\n  /**\r\n   * Get the listeners for a specified event type. Listeners are returned in the\r\n   * order that they will be called in.\r\n   *\r\n   * @param {string} type Type.\r\n   * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\r\n   */\r\n  Target.prototype.getListeners = function getListeners (type) {\r\n    return this.listeners_[type];\r\n  };\r\n\r\n  /**\r\n   * @param {string=} opt_type Type. If not provided,\r\n   *     `true` will be returned if this event target has any listeners.\r\n   * @return {boolean} Has listeners.\r\n   */\r\n  Target.prototype.hasListener = function hasListener (opt_type) {\r\n    return opt_type ?\r\n      opt_type in this.listeners_ :\r\n      Object.keys(this.listeners_).length > 0;\r\n  };\r\n\r\n  /**\r\n   * @param {string} type Type.\r\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\r\n   */\r\n  Target.prototype.removeEventListener = function removeEventListener (type, listener) {\r\n    var listeners = this.listeners_[type];\r\n    if (listeners) {\r\n      var index = listeners.indexOf(listener);\r\n      if (type in this.pendingRemovals_) {\r\n        // make listener a no-op, and remove later in #dispatchEvent()\r\n        listeners[index] = VOID;\r\n        ++this.pendingRemovals_[type];\r\n      } else {\r\n        listeners.splice(index, 1);\r\n        if (listeners.length === 0) {\r\n          delete this.listeners_[type];\r\n        }\r\n      }\r\n    }\r\n  };\n\n  return Target;\n}(Disposable));\r\n\r\n\r\nexport default Target;\r\n\r\n//# sourceMappingURL=Target.js.map","/**\r\n * @module ol/events/EventType\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n * @const\r\n */\r\nexport default {\r\n  /**\r\n   * Generic change event. Triggered when the revision counter is increased.\r\n   * @event module:ol/events/Event~Event#change\r\n   * @api\r\n   */\r\n  CHANGE: 'change',\r\n\r\n  CLEAR: 'clear',\r\n  CONTEXTMENU: 'contextmenu',\r\n  CLICK: 'click',\r\n  DBLCLICK: 'dblclick',\r\n  DRAGENTER: 'dragenter',\r\n  DRAGOVER: 'dragover',\r\n  DROP: 'drop',\r\n  ERROR: 'error',\r\n  KEYDOWN: 'keydown',\r\n  KEYPRESS: 'keypress',\r\n  LOAD: 'load',\r\n  MOUSEDOWN: 'mousedown',\r\n  MOUSEMOVE: 'mousemove',\r\n  MOUSEOUT: 'mouseout',\r\n  MOUSEUP: 'mouseup',\r\n  MOUSEWHEEL: 'mousewheel',\r\n  MSPOINTERDOWN: 'MSPointerDown',\r\n  RESIZE: 'resize',\r\n  TOUCHSTART: 'touchstart',\r\n  TOUCHMOVE: 'touchmove',\r\n  TOUCHEND: 'touchend',\r\n  WHEEL: 'wheel'\r\n};\r\n\r\n//# sourceMappingURL=Eventtype.js.map","/**\r\n * @module ol/Observable\r\n */\r\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\r\nimport EventTarget from './events/Target.js';\r\nimport EventType from './events/EventType.js';\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * An event target providing convenient methods for listener registration\r\n * and unregistration. A generic `change` event is always available through\r\n * {@link module:ol/Observable~Observable#changed}.\r\n *\r\n * @fires import(\"./events/Event.js\").Event\r\n * @api\r\n */\r\nvar Observable = /*@__PURE__*/(function (EventTarget) {\n  function Observable() {\r\n\r\n    EventTarget.call(this);\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.revision_ = 0;\r\n\r\n  }\n\n  if ( EventTarget ) Observable.__proto__ = EventTarget;\n  Observable.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Observable.prototype.constructor = Observable;\r\n\r\n  /**\r\n   * Increases the revision counter and dispatches a 'change' event.\r\n   * @api\r\n   */\r\n  Observable.prototype.changed = function changed () {\r\n    ++this.revision_;\r\n    this.dispatchEvent(EventType.CHANGE);\r\n  };\r\n\r\n  /**\r\n   * Get the version number for this object.  Each time the object is modified,\r\n   * its version number will be incremented.\r\n   * @return {number} Revision.\r\n   * @api\r\n   */\r\n  Observable.prototype.getRevision = function getRevision () {\r\n    return this.revision_;\r\n  };\r\n\r\n  /**\r\n   * Listen for a certain type of event.\r\n   * @param {string|Array<string>} type The event type or array of event types.\r\n   * @param {function(?): ?} listener The listener function.\r\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\r\n   *     called with an array of event types as the first argument, the return\r\n   *     will be an array of keys.\r\n   * @api\r\n   */\r\n  Observable.prototype.on = function on (type, listener) {\r\n    if (Array.isArray(type)) {\r\n      var len = type.length;\r\n      var keys = new Array(len);\r\n      for (var i = 0; i < len; ++i) {\r\n        keys[i] = listen(this, type[i], listener);\r\n      }\r\n      return keys;\r\n    } else {\r\n      return listen(this, /** @type {string} */ (type), listener);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Listen once for a certain type of event.\r\n   * @param {string|Array<string>} type The event type or array of event types.\r\n   * @param {function(?): ?} listener The listener function.\r\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\r\n   *     called with an array of event types as the first argument, the return\r\n   *     will be an array of keys.\r\n   * @api\r\n   */\r\n  Observable.prototype.once = function once (type, listener) {\r\n    if (Array.isArray(type)) {\r\n      var len = type.length;\r\n      var keys = new Array(len);\r\n      for (var i = 0; i < len; ++i) {\r\n        keys[i] = listenOnce(this, type[i], listener);\r\n      }\r\n      return keys;\r\n    } else {\r\n      return listenOnce(this, /** @type {string} */ (type), listener);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Unlisten for a certain type of event.\r\n   * @param {string|Array<string>} type The event type or array of event types.\r\n   * @param {function(?): ?} listener The listener function.\r\n   * @api\r\n   */\r\n  Observable.prototype.un = function un (type, listener) {\r\n    if (Array.isArray(type)) {\r\n      for (var i = 0, ii = type.length; i < ii; ++i) {\r\n        unlisten(this, type[i], listener);\r\n      }\r\n      return;\r\n    } else {\r\n      unlisten(this, /** @type {string} */ (type), listener);\r\n    }\r\n  };\n\n  return Observable;\n}(EventTarget));\r\n\r\n\r\n/**\r\n * Removes an event listener using the key returned by `on()` or `once()`.\r\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\r\n *     or `once()` (or an array of keys).\r\n * @api\r\n */\r\nexport function unByKey(key) {\r\n  if (Array.isArray(key)) {\r\n    for (var i = 0, ii = key.length; i < ii; ++i) {\r\n      unlistenByKey(key[i]);\r\n    }\r\n  } else {\r\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\r\n  }\r\n}\r\n\r\n\r\nexport default Observable;\r\n\r\n//# sourceMappingURL=Observable.js.map","/**\r\n * @module ol/Object\r\n */\r\nimport {getUid} from './util.js';\r\nimport ObjectEventType from './ObjectEventType.js';\r\nimport Observable from './Observable.js';\r\nimport Event from './events/Event.js';\r\nimport {assign} from './obj.js';\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\r\n */\r\nexport var ObjectEvent = /*@__PURE__*/(function (Event) {\n  function ObjectEvent(type, key, oldValue) {\r\n    Event.call(this, type);\r\n\r\n    /**\r\n     * The name of the property whose value is changing.\r\n     * @type {string}\r\n     * @api\r\n     */\r\n    this.key = key;\r\n\r\n    /**\r\n     * The old value. To get the new value use `e.target.get(e.key)` where\r\n     * `e` is the event object.\r\n     * @type {*}\r\n     * @api\r\n     */\r\n    this.oldValue = oldValue;\r\n\r\n  }\n\n  if ( Event ) ObjectEvent.__proto__ = Event;\n  ObjectEvent.prototype = Object.create( Event && Event.prototype );\n  ObjectEvent.prototype.constructor = ObjectEvent;\n\n  return ObjectEvent;\n}(Event));\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Most non-trivial classes inherit from this.\r\n *\r\n * This extends {@link module:ol/Observable} with observable\r\n * properties, where each property is observable as well as the object as a\r\n * whole.\r\n *\r\n * Classes that inherit from this have pre-defined properties, to which you can\r\n * add your owns. The pre-defined properties are listed in this documentation as\r\n * 'Observable Properties', and have their own accessors; for example,\r\n * {@link module:ol/Map~Map} has a `target` property, accessed with\r\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\r\n * settable. There are also general-purpose accessors `get()` and `set()`. For\r\n * example, `get('target')` is equivalent to `getTarget()`.\r\n *\r\n * The `set` accessors trigger a change event, and you can monitor this by\r\n * registering a listener. For example, {@link module:ol/View~View} has a\r\n * `center` property, so `view.on('change:center', function(evt) {...});` would\r\n * call the function whenever the value of the center property changes. Within\r\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\r\n * would return the new center.\r\n *\r\n * You can add your own observable properties with\r\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\r\n * You can listen for changes on that property value with\r\n * `object.on('change:prop', listener)`. You can get a list of all\r\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\r\n *\r\n * Note that the observable properties are separate from standard JS properties.\r\n * You can, for example, give your map object a title with\r\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\r\n * first will be a `hasOwnProperty`; the second will appear in\r\n * `getProperties()`. Only the second is observable.\r\n *\r\n * Properties can be deleted by using the unset method. E.g.\r\n * object.unset('foo').\r\n *\r\n * @fires ObjectEvent\r\n * @api\r\n */\r\nvar BaseObject = /*@__PURE__*/(function (Observable) {\n  function BaseObject(opt_values) {\r\n    Observable.call(this);\r\n\r\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\r\n    // the same as the order in which they were created.  This also helps to\r\n    // ensure that object properties are always added in the same order, which\r\n    // helps many JavaScript engines generate faster code.\r\n    getUid(this);\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, *>}\r\n     */\r\n    this.values_ = {};\r\n\r\n    if (opt_values !== undefined) {\r\n      this.setProperties(opt_values);\r\n    }\r\n  }\n\n  if ( Observable ) BaseObject.__proto__ = Observable;\n  BaseObject.prototype = Object.create( Observable && Observable.prototype );\n  BaseObject.prototype.constructor = BaseObject;\r\n\r\n  /**\r\n   * Gets a value.\r\n   * @param {string} key Key name.\r\n   * @return {*} Value.\r\n   * @api\r\n   */\r\n  BaseObject.prototype.get = function get (key) {\r\n    var value;\r\n    if (this.values_.hasOwnProperty(key)) {\r\n      value = this.values_[key];\r\n    }\r\n    return value;\r\n  };\r\n\r\n  /**\r\n   * Get a list of object property names.\r\n   * @return {Array<string>} List of property names.\r\n   * @api\r\n   */\r\n  BaseObject.prototype.getKeys = function getKeys () {\r\n    return Object.keys(this.values_);\r\n  };\r\n\r\n  /**\r\n   * Get an object of all property names and values.\r\n   * @return {Object<string, *>} Object.\r\n   * @api\r\n   */\r\n  BaseObject.prototype.getProperties = function getProperties () {\r\n    return assign({}, this.values_);\r\n  };\r\n\r\n  /**\r\n   * @param {string} key Key name.\r\n   * @param {*} oldValue Old value.\r\n   */\r\n  BaseObject.prototype.notify = function notify (key, oldValue) {\r\n    var eventType;\r\n    eventType = getChangeEventType(key);\r\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\r\n    eventType = ObjectEventType.PROPERTYCHANGE;\r\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\r\n  };\r\n\r\n  /**\r\n   * Sets a value.\r\n   * @param {string} key Key name.\r\n   * @param {*} value Value.\r\n   * @param {boolean=} opt_silent Update without triggering an event.\r\n   * @api\r\n   */\r\n  BaseObject.prototype.set = function set (key, value, opt_silent) {\r\n    if (opt_silent) {\r\n      this.values_[key] = value;\r\n    } else {\r\n      var oldValue = this.values_[key];\r\n      this.values_[key] = value;\r\n      if (oldValue !== value) {\r\n        this.notify(key, oldValue);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Sets a collection of key-value pairs.  Note that this changes any existing\r\n   * properties and adds new ones (it does not remove any existing properties).\r\n   * @param {Object<string, *>} values Values.\r\n   * @param {boolean=} opt_silent Update without triggering an event.\r\n   * @api\r\n   */\r\n  BaseObject.prototype.setProperties = function setProperties (values, opt_silent) {\r\n    for (var key in values) {\r\n      this.set(key, values[key], opt_silent);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Unsets a property.\r\n   * @param {string} key Key name.\r\n   * @param {boolean=} opt_silent Unset without triggering an event.\r\n   * @api\r\n   */\r\n  BaseObject.prototype.unset = function unset (key, opt_silent) {\r\n    if (key in this.values_) {\r\n      var oldValue = this.values_[key];\r\n      delete this.values_[key];\r\n      if (!opt_silent) {\r\n        this.notify(key, oldValue);\r\n      }\r\n    }\r\n  };\n\n  return BaseObject;\n}(Observable));\r\n\r\n\r\n/**\r\n * @type {Object<string, string>}\r\n */\r\nvar changeEventTypeCache = {};\r\n\r\n\r\n/**\r\n * @param {string} key Key name.\r\n * @return {string} Change name.\r\n */\r\nexport function getChangeEventType(key) {\r\n  return changeEventTypeCache.hasOwnProperty(key) ?\r\n    changeEventTypeCache[key] :\r\n    (changeEventTypeCache[key] = 'change:' + key);\r\n}\r\n\r\n\r\nexport default BaseObject;\r\n\r\n//# sourceMappingURL=Object.js.map","/**\r\n * @module ol/Collection\r\n */\r\nimport AssertionError from './AssertionError.js';\r\nimport CollectionEventType from './CollectionEventType.js';\r\nimport BaseObject from './Object.js';\r\nimport Event from './events/Event.js';\r\n\r\n\r\n/**\r\n * @enum {string}\r\n * @private\r\n */\r\nvar Property = {\r\n  LENGTH: 'length'\r\n};\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\r\n * type.\r\n */\r\nexport var CollectionEvent = /*@__PURE__*/(function (Event) {\n  function CollectionEvent(type, opt_element) {\r\n    Event.call(this, type);\r\n\r\n    /**\r\n     * The element that is added to or removed from the collection.\r\n     * @type {*}\r\n     * @api\r\n     */\r\n    this.element = opt_element;\r\n\r\n  }\n\n  if ( Event ) CollectionEvent.__proto__ = Event;\n  CollectionEvent.prototype = Object.create( Event && Event.prototype );\n  CollectionEvent.prototype.constructor = CollectionEvent;\n\n  return CollectionEvent;\n}(Event));\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {boolean} [unique=false] Disallow the same item from being added to\r\n * the collection twice.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * An expanded version of standard JS Array, adding convenience methods for\r\n * manipulation. Add and remove changes to the Collection trigger a Collection\r\n * event. Note that this does not cover changes to the objects _within_ the\r\n * Collection; they trigger events on the appropriate object, not on the\r\n * Collection as a whole.\r\n *\r\n * @fires CollectionEvent\r\n *\r\n * @template T\r\n * @api\r\n */\r\nvar Collection = /*@__PURE__*/(function (BaseObject) {\n  function Collection(opt_array, opt_options) {\r\n\r\n    BaseObject.call(this);\r\n\r\n    var options = opt_options || {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.unique_ = !!options.unique;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Array<T>}\r\n     */\r\n    this.array_ = opt_array ? opt_array : [];\r\n\r\n    if (this.unique_) {\r\n      for (var i = 0, ii = this.array_.length; i < ii; ++i) {\r\n        this.assertUnique_(this.array_[i], i);\r\n      }\r\n    }\r\n\r\n    this.updateLength_();\r\n\r\n  }\n\n  if ( BaseObject ) Collection.__proto__ = BaseObject;\n  Collection.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Collection.prototype.constructor = Collection;\r\n\r\n  /**\r\n   * Remove all elements from the collection.\r\n   * @api\r\n   */\r\n  Collection.prototype.clear = function clear () {\r\n    while (this.getLength() > 0) {\r\n      this.pop();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Add elements to the collection.  This pushes each item in the provided array\r\n   * to the end of the collection.\r\n   * @param {!Array<T>} arr Array.\r\n   * @return {Collection<T>} This collection.\r\n   * @api\r\n   */\r\n  Collection.prototype.extend = function extend (arr) {\r\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\r\n      this.push(arr[i]);\r\n    }\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Iterate over each element, calling the provided callback.\r\n   * @param {function(T, number, Array<T>): *} f The function to call\r\n   *     for every element. This function takes 3 arguments (the element, the\r\n   *     index and the array). The return value is ignored.\r\n   * @api\r\n   */\r\n  Collection.prototype.forEach = function forEach (f) {\r\n    var array = this.array_;\r\n    for (var i = 0, ii = array.length; i < ii; ++i) {\r\n      f(array[i], i, array);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Get a reference to the underlying Array object. Warning: if the array\r\n   * is mutated, no events will be dispatched by the collection, and the\r\n   * collection's \"length\" property won't be in sync with the actual length\r\n   * of the array.\r\n   * @return {!Array<T>} Array.\r\n   * @api\r\n   */\r\n  Collection.prototype.getArray = function getArray () {\r\n    return this.array_;\r\n  };\r\n\r\n  /**\r\n   * Get the element at the provided index.\r\n   * @param {number} index Index.\r\n   * @return {T} Element.\r\n   * @api\r\n   */\r\n  Collection.prototype.item = function item (index) {\r\n    return this.array_[index];\r\n  };\r\n\r\n  /**\r\n   * Get the length of this collection.\r\n   * @return {number} The length of the array.\r\n   * @observable\r\n   * @api\r\n   */\r\n  Collection.prototype.getLength = function getLength () {\r\n    return this.get(Property.LENGTH);\r\n  };\r\n\r\n  /**\r\n   * Insert an element at the provided index.\r\n   * @param {number} index Index.\r\n   * @param {T} elem Element.\r\n   * @api\r\n   */\r\n  Collection.prototype.insertAt = function insertAt (index, elem) {\r\n    if (this.unique_) {\r\n      this.assertUnique_(elem);\r\n    }\r\n    this.array_.splice(index, 0, elem);\r\n    this.updateLength_();\r\n    this.dispatchEvent(\r\n      new CollectionEvent(CollectionEventType.ADD, elem));\r\n  };\r\n\r\n  /**\r\n   * Remove the last element of the collection and return it.\r\n   * Return `undefined` if the collection is empty.\r\n   * @return {T|undefined} Element.\r\n   * @api\r\n   */\r\n  Collection.prototype.pop = function pop () {\r\n    return this.removeAt(this.getLength() - 1);\r\n  };\r\n\r\n  /**\r\n   * Insert the provided element at the end of the collection.\r\n   * @param {T} elem Element.\r\n   * @return {number} New length of the collection.\r\n   * @api\r\n   */\r\n  Collection.prototype.push = function push (elem) {\r\n    if (this.unique_) {\r\n      this.assertUnique_(elem);\r\n    }\r\n    var n = this.getLength();\r\n    this.insertAt(n, elem);\r\n    return this.getLength();\r\n  };\r\n\r\n  /**\r\n   * Remove the first occurrence of an element from the collection.\r\n   * @param {T} elem Element.\r\n   * @return {T|undefined} The removed element or undefined if none found.\r\n   * @api\r\n   */\r\n  Collection.prototype.remove = function remove (elem) {\r\n    var arr = this.array_;\r\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\r\n      if (arr[i] === elem) {\r\n        return this.removeAt(i);\r\n      }\r\n    }\r\n    return undefined;\r\n  };\r\n\r\n  /**\r\n   * Remove the element at the provided index and return it.\r\n   * Return `undefined` if the collection does not contain this index.\r\n   * @param {number} index Index.\r\n   * @return {T|undefined} Value.\r\n   * @api\r\n   */\r\n  Collection.prototype.removeAt = function removeAt (index) {\r\n    var prev = this.array_[index];\r\n    this.array_.splice(index, 1);\r\n    this.updateLength_();\r\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\r\n    return prev;\r\n  };\r\n\r\n  /**\r\n   * Set the element at the provided index.\r\n   * @param {number} index Index.\r\n   * @param {T} elem Element.\r\n   * @api\r\n   */\r\n  Collection.prototype.setAt = function setAt (index, elem) {\r\n    var n = this.getLength();\r\n    if (index < n) {\r\n      if (this.unique_) {\r\n        this.assertUnique_(elem, index);\r\n      }\r\n      var prev = this.array_[index];\r\n      this.array_[index] = elem;\r\n      this.dispatchEvent(\r\n        new CollectionEvent(CollectionEventType.REMOVE, prev));\r\n      this.dispatchEvent(\r\n        new CollectionEvent(CollectionEventType.ADD, elem));\r\n    } else {\r\n      for (var j = n; j < index; ++j) {\r\n        this.insertAt(j, undefined);\r\n      }\r\n      this.insertAt(index, elem);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  Collection.prototype.updateLength_ = function updateLength_ () {\r\n    this.set(Property.LENGTH, this.array_.length);\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {T} elem Element.\r\n   * @param {number=} opt_except Optional index to ignore.\r\n   */\r\n  Collection.prototype.assertUnique_ = function assertUnique_ (elem, opt_except) {\r\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\r\n      if (this.array_[i] === elem && i !== opt_except) {\r\n        throw new AssertionError(58);\r\n      }\r\n    }\r\n  };\n\n  return Collection;\n}(BaseObject));\r\n\r\n\r\nexport default Collection;\r\n\r\n//# sourceMappingURL=Collection.js.map","/**\r\n * @module ol/asserts\r\n */\r\nimport AssertionError from './AssertionError.js';\r\n\r\n/**\r\n * @param {*} assertion Assertion we expected to be truthy.\r\n * @param {number} errorCode Error code.\r\n */\r\nexport function assert(assertion, errorCode) {\r\n  if (!assertion) {\r\n    throw new AssertionError(errorCode);\r\n  }\r\n}\r\n\r\n//# sourceMappingURL=asserts.js.map","/**\r\n * @module ol/math\r\n */\r\nimport {assert} from './asserts.js';\r\n\r\n/**\r\n * Takes a number and clamps it to within the provided bounds.\r\n * @param {number} value The input number.\r\n * @param {number} min The minimum value to return.\r\n * @param {number} max The maximum value to return.\r\n * @return {number} The input number if it is within bounds, or the nearest\r\n *     number within the bounds.\r\n */\r\nexport function clamp(value, min, max) {\r\n  return Math.min(Math.max(value, min), max);\r\n}\r\n\r\n\r\n/**\r\n * Return the hyperbolic cosine of a given number. The method will use the\r\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\r\n * cosine will be calculated via the reference implementation of the Mozilla\r\n * developer network.\r\n *\r\n * @param {number} x X.\r\n * @return {number} Hyperbolic cosine of x.\r\n */\r\nexport var cosh = (function() {\r\n  // Wrapped in a iife, to save the overhead of checking for the native\r\n  // implementation on every invocation.\r\n  var cosh;\r\n  if ('cosh' in Math) {\r\n    // The environment supports the native Math.cosh function, use it…\r\n    cosh = Math.cosh;\r\n  } else {\r\n    // … else, use the reference implementation of MDN:\r\n    cosh = function(x) {\r\n      var y = /** @type {Math} */ (Math).exp(x);\r\n      return (y + 1 / y) / 2;\r\n    };\r\n  }\r\n  return cosh;\r\n}());\r\n\r\n\r\n/**\r\n * @param {number} x X.\r\n * @return {number} The smallest power of two greater than or equal to x.\r\n */\r\nexport function roundUpToPowerOfTwo(x) {\r\n  assert(0 < x, 29); // `x` must be greater than `0`\r\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\r\n}\r\n\r\n\r\n/**\r\n * Returns the square of the closest distance between the point (x, y) and the\r\n * line segment (x1, y1) to (x2, y2).\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @param {number} x1 X1.\r\n * @param {number} y1 Y1.\r\n * @param {number} x2 X2.\r\n * @param {number} y2 Y2.\r\n * @return {number} Squared distance.\r\n */\r\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\r\n  var dx = x2 - x1;\r\n  var dy = y2 - y1;\r\n  if (dx !== 0 || dy !== 0) {\r\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\r\n    if (t > 1) {\r\n      x1 = x2;\r\n      y1 = y2;\r\n    } else if (t > 0) {\r\n      x1 += dx * t;\r\n      y1 += dy * t;\r\n    }\r\n  }\r\n  return squaredDistance(x, y, x1, y1);\r\n}\r\n\r\n\r\n/**\r\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\r\n * @param {number} x1 X1.\r\n * @param {number} y1 Y1.\r\n * @param {number} x2 X2.\r\n * @param {number} y2 Y2.\r\n * @return {number} Squared distance.\r\n */\r\nexport function squaredDistance(x1, y1, x2, y2) {\r\n  var dx = x2 - x1;\r\n  var dy = y2 - y1;\r\n  return dx * dx + dy * dy;\r\n}\r\n\r\n\r\n/**\r\n * Solves system of linear equations using Gaussian elimination method.\r\n *\r\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\r\n *                                     in row-major order.\r\n * @return {Array<number>} The resulting vector.\r\n */\r\nexport function solveLinearSystem(mat) {\r\n  var n = mat.length;\r\n\r\n  for (var i = 0; i < n; i++) {\r\n    // Find max in the i-th column (ignoring i - 1 first rows)\r\n    var maxRow = i;\r\n    var maxEl = Math.abs(mat[i][i]);\r\n    for (var r = i + 1; r < n; r++) {\r\n      var absValue = Math.abs(mat[r][i]);\r\n      if (absValue > maxEl) {\r\n        maxEl = absValue;\r\n        maxRow = r;\r\n      }\r\n    }\r\n\r\n    if (maxEl === 0) {\r\n      return null; // matrix is singular\r\n    }\r\n\r\n    // Swap max row with i-th (current) row\r\n    var tmp = mat[maxRow];\r\n    mat[maxRow] = mat[i];\r\n    mat[i] = tmp;\r\n\r\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\r\n    for (var j = i + 1; j < n; j++) {\r\n      var coef = -mat[j][i] / mat[i][i];\r\n      for (var k = i; k < n + 1; k++) {\r\n        if (i == k) {\r\n          mat[j][k] = 0;\r\n        } else {\r\n          mat[j][k] += coef * mat[i][k];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Solve Ax=b for upper triangular matrix A (mat)\r\n  var x = new Array(n);\r\n  for (var l = n - 1; l >= 0; l--) {\r\n    x[l] = mat[l][n] / mat[l][l];\r\n    for (var m = l - 1; m >= 0; m--) {\r\n      mat[m][n] -= mat[m][l] * x[l];\r\n    }\r\n  }\r\n  return x;\r\n}\r\n\r\n\r\n/**\r\n * Converts radians to to degrees.\r\n *\r\n * @param {number} angleInRadians Angle in radians.\r\n * @return {number} Angle in degrees.\r\n */\r\nexport function toDegrees(angleInRadians) {\r\n  return angleInRadians * 180 / Math.PI;\r\n}\r\n\r\n\r\n/**\r\n * Converts degrees to radians.\r\n *\r\n * @param {number} angleInDegrees Angle in degrees.\r\n * @return {number} Angle in radians.\r\n */\r\nexport function toRadians(angleInDegrees) {\r\n  return angleInDegrees * Math.PI / 180;\r\n}\r\n\r\n/**\r\n * Returns the modulo of a / b, depending on the sign of b.\r\n *\r\n * @param {number} a Dividend.\r\n * @param {number} b Divisor.\r\n * @return {number} Modulo.\r\n */\r\nexport function modulo(a, b) {\r\n  var r = a % b;\r\n  return r * b < 0 ? r + b : r;\r\n}\r\n\r\n/**\r\n * Calculates the linearly interpolated value of x between a and b.\r\n *\r\n * @param {number} a Number\r\n * @param {number} b Number\r\n * @param {number} x Value to be interpolated.\r\n * @return {number} Interpolated value.\r\n */\r\nexport function lerp(a, b, x) {\r\n  return a + x * (b - a);\r\n}\r\n\r\n//# sourceMappingURL=math.js.map","/**\r\n * @module ol/color\r\n */\r\nimport {assert} from './asserts.js';\r\nimport {clamp} from './math.js';\r\n\r\n\r\n/**\r\n * A color represented as a short array [red, green, blue, alpha].\r\n * red, green, and blue should be integers in the range 0..255 inclusive.\r\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\r\n * given then `1` will be used.\r\n * @typedef {Array<number>} Color\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\r\n * @const\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\r\n\r\n\r\n/**\r\n * Regular expression for matching potential named color style strings.\r\n * @const\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\r\n\r\n\r\n/**\r\n * Return the color as an rgba string.\r\n * @param {Color|string} color Color.\r\n * @return {string} Rgba string.\r\n * @api\r\n */\r\nexport function asString(color) {\r\n  if (typeof color === 'string') {\r\n    return color;\r\n  } else {\r\n    return toString(color);\r\n  }\r\n}\r\n\r\n/**\r\n * Return named color as an rgba string.\r\n * @param {string} color Named color.\r\n * @return {string} Rgb string.\r\n */\r\nfunction fromNamed(color) {\r\n  var el = document.createElement('div');\r\n  el.style.color = color;\r\n  if (el.style.color !== '') {\r\n    document.body.appendChild(el);\r\n    var rgb = getComputedStyle(el).color;\r\n    document.body.removeChild(el);\r\n    return rgb;\r\n  } else {\r\n    return '';\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {string} s String.\r\n * @return {Color} Color.\r\n */\r\nexport var fromString = (\r\n  function() {\r\n\r\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\r\n    // semantics, whenever the cache grows too large we simply delete an\r\n    // arbitrary 25% of the entries.\r\n\r\n    /**\r\n     * @const\r\n     * @type {number}\r\n     */\r\n    var MAX_CACHE_SIZE = 1024;\r\n\r\n    /**\r\n     * @type {Object<string, Color>}\r\n     */\r\n    var cache = {};\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    var cacheSize = 0;\r\n\r\n    return (\r\n      /**\r\n       * @param {string} s String.\r\n       * @return {Color} Color.\r\n       */\r\n      function(s) {\r\n        var color;\r\n        if (cache.hasOwnProperty(s)) {\r\n          color = cache[s];\r\n        } else {\r\n          if (cacheSize >= MAX_CACHE_SIZE) {\r\n            var i = 0;\r\n            for (var key in cache) {\r\n              if ((i++ & 3) === 0) {\r\n                delete cache[key];\r\n                --cacheSize;\r\n              }\r\n            }\r\n          }\r\n          color = fromStringInternal_(s);\r\n          cache[s] = color;\r\n          ++cacheSize;\r\n        }\r\n        return color;\r\n      }\r\n    );\r\n\r\n  })();\r\n\r\n/**\r\n * Return the color as an array. This function maintains a cache of calculated\r\n * arrays which means the result should not be modified.\r\n * @param {Color|string} color Color.\r\n * @return {Color} Color.\r\n * @api\r\n */\r\nexport function asArray(color) {\r\n  if (Array.isArray(color)) {\r\n    return color;\r\n  } else {\r\n    return fromString(color);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {string} s String.\r\n * @private\r\n * @return {Color} Color.\r\n */\r\nfunction fromStringInternal_(s) {\r\n  var r, g, b, a, color;\r\n\r\n  if (NAMED_COLOR_RE_.exec(s)) {\r\n    s = fromNamed(s);\r\n  }\r\n\r\n  if (HEX_COLOR_RE_.exec(s)) { // hex\r\n    var n = s.length - 1; // number of hex digits\r\n    var d; // number of digits per channel\r\n    if (n <= 4) {\r\n      d = 1;\r\n    } else {\r\n      d = 2;\r\n    }\r\n    var hasAlpha = n === 4 || n === 8;\r\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\r\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\r\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\r\n    if (hasAlpha) {\r\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\r\n    } else {\r\n      a = 255;\r\n    }\r\n    if (d == 1) {\r\n      r = (r << 4) + r;\r\n      g = (g << 4) + g;\r\n      b = (b << 4) + b;\r\n      if (hasAlpha) {\r\n        a = (a << 4) + a;\r\n      }\r\n    }\r\n    color = [r, g, b, a / 255];\r\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\r\n    color = s.slice(5, -1).split(',').map(Number);\r\n    normalize(color);\r\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\r\n    color = s.slice(4, -1).split(',').map(Number);\r\n    color.push(1);\r\n    normalize(color);\r\n  } else {\r\n    assert(false, 14); // Invalid color\r\n  }\r\n  return color;\r\n}\r\n\r\n\r\n/**\r\n * TODO this function is only used in the test, we probably shouldn't export it\r\n * @param {Color} color Color.\r\n * @return {Color} Clamped color.\r\n */\r\nexport function normalize(color) {\r\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\r\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\r\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\r\n  color[3] = clamp(color[3], 0, 1);\r\n  return color;\r\n}\r\n\r\n\r\n/**\r\n * @param {Color} color Color.\r\n * @return {string} String.\r\n */\r\nexport function toString(color) {\r\n  var r = color[0];\r\n  if (r != (r | 0)) {\r\n    r = (r + 0.5) | 0;\r\n  }\r\n  var g = color[1];\r\n  if (g != (g | 0)) {\r\n    g = (g + 0.5) | 0;\r\n  }\r\n  var b = color[2];\r\n  if (b != (b | 0)) {\r\n    b = (b + 0.5) | 0;\r\n  }\r\n  var a = color[3] === undefined ? 1 : color[3];\r\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\r\n}\r\n\r\n//# sourceMappingURL=color.js.map","/**\r\n * @module ol/colorlike\r\n */\r\nimport {toString} from './color.js';\r\n\r\n\r\n/**\r\n * A type accepted by CanvasRenderingContext2D.fillStyle\r\n * or CanvasRenderingContext2D.strokeStyle.\r\n * Represents a color, pattern, or gradient. The origin for patterns and\r\n * gradients as fill style is an increment of 512 css pixels from map coordinate\r\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\r\n * must be a factor of two (2, 4, 8, ..., 512).\r\n *\r\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\r\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\r\n * @api\r\n */\r\nexport function asColorLike(color) {\r\n  if (Array.isArray(color)) {\r\n    return toString(color);\r\n  } else {\r\n    return color;\r\n  }\r\n}\r\n\r\n//# sourceMappingURL=colorlike.js.map","/**\r\n * @module ol/MapEventType\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n\r\n  /**\r\n   * Triggered after a map frame is rendered.\r\n   * @event module:ol/MapEvent~MapEvent#postrender\r\n   * @api\r\n   */\r\n  POSTRENDER: 'postrender',\r\n\r\n  /**\r\n   * Triggered when the map starts moving.\r\n   * @event module:ol/MapEvent~MapEvent#movestart\r\n   * @api\r\n   */\r\n  MOVESTART: 'movestart',\r\n\r\n  /**\r\n   * Triggered after the map is moved.\r\n   * @event module:ol/MapEvent~MapEvent#moveend\r\n   * @api\r\n   */\r\n  MOVEEND: 'moveend'\r\n\r\n};\r\n\r\n//# sourceMappingURL=MapEventType.js.map","/**\r\n * @module ol/dom\r\n */\r\n\r\n\r\n/**\r\n * Create an html canvas element and returns its 2d context.\r\n * @param {number=} opt_width Canvas width.\r\n * @param {number=} opt_height Canvas height.\r\n * @return {CanvasRenderingContext2D} The context.\r\n */\r\nexport function createCanvasContext2D(opt_width, opt_height) {\r\n  var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\r\n  if (opt_width) {\r\n    canvas.width = opt_width;\r\n  }\r\n  if (opt_height) {\r\n    canvas.height = opt_height;\r\n  }\r\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\r\n}\r\n\r\n\r\n/**\r\n * Get the current computed width for the given element including margin,\r\n * padding and border.\r\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\r\n * @param {!HTMLElement} element Element.\r\n * @return {number} The width.\r\n */\r\nexport function outerWidth(element) {\r\n  var width = element.offsetWidth;\r\n  var style = getComputedStyle(element);\r\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\r\n\r\n  return width;\r\n}\r\n\r\n\r\n/**\r\n * Get the current computed height for the given element including margin,\r\n * padding and border.\r\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\r\n * @param {!HTMLElement} element Element.\r\n * @return {number} The height.\r\n */\r\nexport function outerHeight(element) {\r\n  var height = element.offsetHeight;\r\n  var style = getComputedStyle(element);\r\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\r\n\r\n  return height;\r\n}\r\n\r\n/**\r\n * @param {Node} newNode Node to replace old node\r\n * @param {Node} oldNode The node to be replaced\r\n */\r\nexport function replaceNode(newNode, oldNode) {\r\n  var parent = oldNode.parentNode;\r\n  if (parent) {\r\n    parent.replaceChild(newNode, oldNode);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {Node} node The node to remove.\r\n * @returns {Node} The node that was removed or null.\r\n */\r\nexport function removeNode(node) {\r\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\r\n}\r\n\r\n/**\r\n * @param {Node} node The node to remove the children from.\r\n */\r\nexport function removeChildren(node) {\r\n  while (node.lastChild) {\r\n    node.removeChild(node.lastChild);\r\n  }\r\n}\r\n\r\n//# sourceMappingURL=dom.js.map","/**\r\n * @module ol/control/Control\r\n */\r\nimport {VOID} from '../functions.js';\r\nimport MapEventType from '../MapEventType.js';\r\nimport BaseObject from '../Object.js';\r\nimport {removeNode} from '../dom.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {HTMLElement} [element] The element is the control's\r\n * container element. This only needs to be specified if you're developing\r\n * a custom control.\r\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\r\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\r\n * callback.\r\n * @property {HTMLElement|string} [target] Specify a target if you want\r\n * the control to be rendered outside of the map's viewport.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * A control is a visible widget with a DOM element in a fixed position on the\r\n * screen. They can involve user input (buttons), or be informational only;\r\n * the position is determined using CSS. By default these are placed in the\r\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\r\n * any outside DOM element.\r\n *\r\n * This is the base class for controls. You can use it for simple custom\r\n * controls by creating the element with listeners, creating an instance:\r\n * ```js\r\n * var myControl = new Control({element: myElement});\r\n * ```\r\n * and then adding this to the map.\r\n *\r\n * The main advantage of having this as a control rather than a simple separate\r\n * DOM element is that preventing propagation is handled for you. Controls\r\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\r\n *\r\n * You can also extend this base for your own control class. See\r\n * examples/custom-controls for an example of how to do this.\r\n *\r\n * @api\r\n */\r\nvar Control = /*@__PURE__*/(function (BaseObject) {\n  function Control(options) {\r\n\r\n    BaseObject.call(this);\r\n\r\n    /**\r\n     * @protected\r\n     * @type {HTMLElement}\r\n     */\r\n    this.element = options.element ? options.element : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement}\r\n     */\r\n    this.target_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../PluggableMap.js\").default}\r\n     */\r\n    this.map_ = null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {!Array<import(\"../events.js\").EventsKey>}\r\n     */\r\n    this.listenerKeys = [];\r\n\r\n    /**\r\n     * @type {function(import(\"../MapEvent.js\").default)}\r\n     */\r\n    this.render = options.render ? options.render : VOID;\r\n\r\n    if (options.target) {\r\n      this.setTarget(options.target);\r\n    }\r\n\r\n  }\n\n  if ( BaseObject ) Control.__proto__ = BaseObject;\n  Control.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Control.prototype.constructor = Control;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Control.prototype.disposeInternal = function disposeInternal () {\r\n    removeNode(this.element);\r\n    BaseObject.prototype.disposeInternal.call(this);\r\n  };\r\n\r\n  /**\r\n   * Get the map associated with this control.\r\n   * @return {import(\"../PluggableMap.js\").default} Map.\r\n   * @api\r\n   */\r\n  Control.prototype.getMap = function getMap () {\r\n    return this.map_;\r\n  };\r\n\r\n  /**\r\n   * Remove the control from its current map and attach it to the new map.\r\n   * Subclasses may set up event handlers to get notified about changes to\r\n   * the map here.\r\n   * @param {import(\"../PluggableMap.js\").default} map Map.\r\n   * @api\r\n   */\r\n  Control.prototype.setMap = function setMap (map) {\r\n    if (this.map_) {\r\n      removeNode(this.element);\r\n    }\r\n    for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\r\n      unlistenByKey(this.listenerKeys[i]);\r\n    }\r\n    this.listenerKeys.length = 0;\r\n    this.map_ = map;\r\n    if (this.map_) {\r\n      var target = this.target_ ?\r\n        this.target_ : map.getOverlayContainerStopEvent();\r\n      target.appendChild(this.element);\r\n      if (this.render !== VOID) {\r\n        this.listenerKeys.push(listen(map,\r\n          MapEventType.POSTRENDER, this.render, this));\r\n      }\r\n      map.render();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This function is used to set a target element for the control. It has no\r\n   * effect if it is called after the control has been added to the map (i.e.\r\n   * after `setMap` is called on the control). If no `target` is set in the\r\n   * options passed to the control constructor and if `setTarget` is not called\r\n   * then the control is added to the map's overlay container.\r\n   * @param {HTMLElement|string} target Target.\r\n   * @api\r\n   */\r\n  Control.prototype.setTarget = function setTarget (target) {\r\n    this.target_ = typeof target === 'string' ?\r\n      document.getElementById(target) :\r\n      target;\r\n  };\n\n  return Control;\n}(BaseObject));\r\n\r\n\r\nexport default Control;\r\n\r\n//# sourceMappingURL=Control.js.map","/**\r\n * @module ol/css\r\n */\r\n\r\n\r\n/**\r\n * The CSS class for hidden feature.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport var CLASS_HIDDEN = 'ol-hidden';\r\n\r\n\r\n/**\r\n * The CSS class that we'll give the DOM elements to have them selectable.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport var CLASS_SELECTABLE = 'ol-selectable';\r\n\r\n\r\n/**\r\n * The CSS class that we'll give the DOM elements to have them unselectable.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\r\n\r\n\r\n/**\r\n * The CSS class for unsupported feature.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\r\n\r\n\r\n/**\r\n * The CSS class for controls.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport var CLASS_CONTROL = 'ol-control';\r\n\r\n\r\n/**\r\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\r\n * to those elements which usually can be expanded.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport var CLASS_COLLAPSED = 'ol-collapsed';\r\n\r\n\r\n/**\r\n * Get the list of font families from a font spec.  Note that this doesn't work\r\n * for font families that have commas in them.\r\n * @param {string} The CSS font property.\r\n * @return {Object<string>} The font families (or null if the input spec is invalid).\r\n */\r\nexport var getFontFamilies = (function() {\r\n  var style;\r\n  var cache = {};\r\n  return function(font) {\r\n    if (!style) {\r\n      style = document.createElement('div').style;\r\n    }\r\n    if (!(font in cache)) {\r\n      style.font = font;\r\n      var family = style.fontFamily;\r\n      style.font = '';\r\n      if (!family) {\r\n        return null;\r\n      }\r\n      cache[font] = family.split(/,\\s?/);\r\n    }\r\n    return cache[font];\r\n  };\r\n})();\r\n\r\n//# sourceMappingURL=css.js.map","/**\r\n * @module ol/layer/Property\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  OPACITY: 'opacity',\r\n  VISIBLE: 'visible',\r\n  EXTENT: 'extent',\r\n  Z_INDEX: 'zIndex',\r\n  MAX_RESOLUTION: 'maxResolution',\r\n  MIN_RESOLUTION: 'minResolution',\r\n  SOURCE: 'source'\r\n};\r\n\r\n//# sourceMappingURL=Property.js.map","/**\r\n * @module ol/layer/Base\r\n */\r\nimport {abstract} from '../util.js';\r\nimport BaseObject from '../Object.js';\r\nimport LayerProperty from './Property.js';\r\nimport {clamp} from '../math.js';\r\nimport {assign} from '../obj.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\r\n * the options is set as a {@link module:ol/Object} property on the layer object, so\r\n * is observable, and has get/set accessors.\r\n *\r\n * @api\r\n */\r\nvar BaseLayer = /*@__PURE__*/(function (BaseObject) {\n  function BaseLayer(options) {\r\n\r\n    BaseObject.call(this);\r\n\r\n    /**\r\n     * @type {Object<string, *>}\r\n     */\r\n    var properties = assign({}, options);\r\n    properties[LayerProperty.OPACITY] =\r\n       options.opacity !== undefined ? options.opacity : 1;\r\n    properties[LayerProperty.VISIBLE] =\r\n       options.visible !== undefined ? options.visible : true;\r\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\r\n    properties[LayerProperty.MAX_RESOLUTION] =\r\n       options.maxResolution !== undefined ? options.maxResolution : Infinity;\r\n    properties[LayerProperty.MIN_RESOLUTION] =\r\n       options.minResolution !== undefined ? options.minResolution : 0;\r\n\r\n    this.setProperties(properties);\r\n\r\n    /**\r\n     * @type {import(\"./Layer.js\").State}\r\n     * @private\r\n     */\r\n    this.state_ = null;\r\n\r\n    /**\r\n     * The layer type.\r\n     * @type {import(\"../LayerType.js\").default}\r\n     * @protected;\r\n     */\r\n    this.type;\r\n\r\n  }\n\n  if ( BaseObject ) BaseLayer.__proto__ = BaseObject;\n  BaseLayer.prototype = Object.create( BaseObject && BaseObject.prototype );\n  BaseLayer.prototype.constructor = BaseLayer;\r\n\r\n  /**\r\n   * Get the layer type (used when creating a layer renderer).\r\n   * @return {import(\"../LayerType.js\").default} The layer type.\r\n   */\r\n  BaseLayer.prototype.getType = function getType () {\r\n    return this.type;\r\n  };\r\n\r\n  /**\r\n   * @return {import(\"./Layer.js\").State} Layer state.\r\n   */\r\n  BaseLayer.prototype.getLayerState = function getLayerState () {\r\n    /** @type {import(\"./Layer.js\").State} */\r\n    var state = this.state_ || /** @type {?} */ ({\r\n      layer: this,\r\n      managed: true\r\n    });\r\n    state.opacity = clamp(this.getOpacity(), 0, 1);\r\n    state.sourceState = this.getSourceState();\r\n    state.visible = this.getVisible();\r\n    state.extent = this.getExtent();\r\n    state.zIndex = this.getZIndex() || 0;\r\n    state.maxResolution = this.getMaxResolution();\r\n    state.minResolution = Math.max(this.getMinResolution(), 0);\r\n    this.state_ = state;\r\n\r\n    return state;\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\r\n   *     modified in place).\r\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\r\n   */\r\n  BaseLayer.prototype.getLayersArray = function getLayersArray (opt_array) {\r\n    return abstract();\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\r\n   *     states (to be modified in place).\r\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\r\n   */\r\n  BaseLayer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\r\n    return abstract();\r\n  };\r\n\r\n  /**\r\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\r\n   * will be visible regardless of extent.\r\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\r\n   * @observable\r\n   * @api\r\n   */\r\n  BaseLayer.prototype.getExtent = function getExtent () {\r\n    return (\r\n      /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT))\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return the maximum resolution of the layer.\r\n   * @return {number} The maximum resolution of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  BaseLayer.prototype.getMaxResolution = function getMaxResolution () {\r\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\r\n  };\r\n\r\n  /**\r\n   * Return the minimum resolution of the layer.\r\n   * @return {number} The minimum resolution of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  BaseLayer.prototype.getMinResolution = function getMinResolution () {\r\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\r\n  };\r\n\r\n  /**\r\n   * Return the opacity of the layer (between 0 and 1).\r\n   * @return {number} The opacity of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  BaseLayer.prototype.getOpacity = function getOpacity () {\r\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {import(\"../source/State.js\").default} Source state.\r\n   */\r\n  BaseLayer.prototype.getSourceState = function getSourceState () {\r\n    return abstract();\r\n  };\r\n\r\n  /**\r\n   * Return the visibility of the layer (`true` or `false`).\r\n   * @return {boolean} The visibility of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  BaseLayer.prototype.getVisible = function getVisible () {\r\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\r\n  };\r\n\r\n  /**\r\n   * Return the Z-index of the layer, which is used to order layers before\r\n   * rendering. The default Z-index is 0.\r\n   * @return {number} The Z-index of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  BaseLayer.prototype.getZIndex = function getZIndex () {\r\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\r\n  };\r\n\r\n  /**\r\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\r\n   * will be visible at all extents.\r\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  BaseLayer.prototype.setExtent = function setExtent (extent) {\r\n    this.set(LayerProperty.EXTENT, extent);\r\n  };\r\n\r\n  /**\r\n   * Set the maximum resolution at which the layer is visible.\r\n   * @param {number} maxResolution The maximum resolution of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  BaseLayer.prototype.setMaxResolution = function setMaxResolution (maxResolution) {\r\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\r\n  };\r\n\r\n  /**\r\n   * Set the minimum resolution at which the layer is visible.\r\n   * @param {number} minResolution The minimum resolution of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  BaseLayer.prototype.setMinResolution = function setMinResolution (minResolution) {\r\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\r\n  };\r\n\r\n  /**\r\n   * Set the opacity of the layer, allowed values range from 0 to 1.\r\n   * @param {number} opacity The opacity of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  BaseLayer.prototype.setOpacity = function setOpacity (opacity) {\r\n    this.set(LayerProperty.OPACITY, opacity);\r\n  };\r\n\r\n  /**\r\n   * Set the visibility of the layer (`true` or `false`).\r\n   * @param {boolean} visible The visibility of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  BaseLayer.prototype.setVisible = function setVisible (visible) {\r\n    this.set(LayerProperty.VISIBLE, visible);\r\n  };\r\n\r\n  /**\r\n   * Set Z-index of the layer, which is used to order layers before rendering.\r\n   * The default Z-index is 0.\r\n   * @param {number} zindex The z-index of the layer.\r\n   * @observable\r\n   * @api\r\n   */\r\n  BaseLayer.prototype.setZIndex = function setZIndex (zindex) {\r\n    this.set(LayerProperty.Z_INDEX, zindex);\r\n  };\n\n  return BaseLayer;\n}(BaseObject));\r\n\r\n\r\nexport default BaseLayer;\r\n\r\n//# sourceMappingURL=Base.js.map","/**\r\n * @module ol/render/EventType\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  /**\r\n   * @event module:ol/render/Event~RenderEvent#postcompose\r\n   * @api\r\n   */\r\n  POSTCOMPOSE: 'postcompose',\r\n  /**\r\n   * @event module:ol/render/Event~RenderEvent#precompose\r\n   * @api\r\n   */\r\n  PRECOMPOSE: 'precompose',\r\n  /**\r\n   * @event module:ol/render/Event~RenderEvent#render\r\n   * @api\r\n   */\r\n  RENDER: 'render',\r\n  /**\r\n   * Triggered when rendering is complete, i.e. all sources and tiles have\r\n   * finished loading for the current viewport, and all tiles are faded in.\r\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\r\n   * @api\r\n   */\r\n  RENDERCOMPLETE: 'rendercomplete'\r\n};\r\n\r\n//# sourceMappingURL=EventType.js.map","/**\r\n * @module ol/source/State\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\r\n */\r\nexport default {\r\n  UNDEFINED: 'undefined',\r\n  LOADING: 'loading',\r\n  READY: 'ready',\r\n  ERROR: 'error'\r\n};\r\n\r\n//# sourceMappingURL=State.js.map","/**\r\n * @module ol/layer/Layer\r\n */\r\nimport {listen, unlistenByKey} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {getUid} from '../util.js';\r\nimport {getChangeEventType} from '../Object.js';\r\nimport BaseLayer from './Base.js';\r\nimport LayerProperty from './Property.js';\r\nimport {assign} from '../obj.js';\r\nimport RenderEventType from '../render/EventType.js';\r\nimport SourceState from '../source/State.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\r\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\r\n * construction.\r\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} State\r\n * @property {import(\"./Base.js\").default} layer\r\n * @property {number} opacity\r\n * @property {SourceState} sourceState\r\n * @property {boolean} visible\r\n * @property {boolean} managed\r\n * @property {import(\"../extent.js\").Extent} [extent]\r\n * @property {number} zIndex\r\n * @property {number} maxResolution\r\n * @property {number} minResolution\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * A visual representation of raster or vector map data.\r\n * Layers group together those properties that pertain to how the data is to be\r\n * displayed, irrespective of the source of that data.\r\n *\r\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\r\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\r\n * internally. These unmanaged layers are associated with the map using\r\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\r\n *\r\n * A generic `change` event is fired when the state of the source changes.\r\n *\r\n * @fires import(\"../render/Event.js\").RenderEvent\r\n */\r\nvar Layer = /*@__PURE__*/(function (BaseLayer) {\n  function Layer(options) {\r\n\r\n    var baseOptions = assign({}, options);\r\n    delete baseOptions.source;\r\n\r\n    BaseLayer.call(this, baseOptions);\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../events.js\").EventsKey}\r\n     */\r\n    this.mapPrecomposeKey_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../events.js\").EventsKey}\r\n     */\r\n    this.mapRenderKey_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../events.js\").EventsKey}\r\n     */\r\n    this.sourceChangeKey_ = null;\r\n\r\n    if (options.map) {\r\n      this.setMap(options.map);\r\n    }\r\n\r\n    listen(this,\r\n      getChangeEventType(LayerProperty.SOURCE),\r\n      this.handleSourcePropertyChange_, this);\r\n\r\n    var source = options.source ? options.source : null;\r\n    this.setSource(source);\r\n  }\n\n  if ( BaseLayer ) Layer.__proto__ = BaseLayer;\n  Layer.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  Layer.prototype.constructor = Layer;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Layer.prototype.getLayersArray = function getLayersArray (opt_array) {\r\n    var array = opt_array ? opt_array : [];\r\n    array.push(this);\r\n    return array;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Layer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\r\n    var states = opt_states ? opt_states : [];\r\n    states.push(this.getLayerState());\r\n    return states;\r\n  };\r\n\r\n  /**\r\n   * Get the layer source.\r\n   * @return {import(\"../source/Source.js\").default} The layer source (or `null` if not yet set).\r\n   * @observable\r\n   * @api\r\n   */\r\n  Layer.prototype.getSource = function getSource () {\r\n    var source = this.get(LayerProperty.SOURCE);\r\n    return (\r\n      /** @type {import(\"../source/Source.js\").default} */ (source) || null\r\n    );\r\n  };\r\n\r\n  /**\r\n    * @inheritDoc\r\n    */\r\n  Layer.prototype.getSourceState = function getSourceState () {\r\n    var source = this.getSource();\r\n    return !source ? SourceState.UNDEFINED : source.getState();\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  Layer.prototype.handleSourceChange_ = function handleSourceChange_ () {\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  Layer.prototype.handleSourcePropertyChange_ = function handleSourcePropertyChange_ () {\r\n    if (this.sourceChangeKey_) {\r\n      unlistenByKey(this.sourceChangeKey_);\r\n      this.sourceChangeKey_ = null;\r\n    }\r\n    var source = this.getSource();\r\n    if (source) {\r\n      this.sourceChangeKey_ = listen(source,\r\n        EventType.CHANGE, this.handleSourceChange_, this);\r\n    }\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * Sets the layer to be rendered on top of other layers on a map. The map will\r\n   * not manage this layer in its layers collection, and the callback in\r\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\r\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\r\n   * use `#setMap(null)`.\r\n   *\r\n   * To add the layer to a map and have it managed by the map, use\r\n   * {@link module:ol/Map#addLayer} instead.\r\n   * @param {import(\"../PluggableMap.js\").default} map Map.\r\n   * @api\r\n   */\r\n  Layer.prototype.setMap = function setMap (map) {\r\n    if (this.mapPrecomposeKey_) {\r\n      unlistenByKey(this.mapPrecomposeKey_);\r\n      this.mapPrecomposeKey_ = null;\r\n    }\r\n    if (!map) {\r\n      this.changed();\r\n    }\r\n    if (this.mapRenderKey_) {\r\n      unlistenByKey(this.mapRenderKey_);\r\n      this.mapRenderKey_ = null;\r\n    }\r\n    if (map) {\r\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\r\n        var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\r\n        var layerState = this.getLayerState();\r\n        layerState.managed = false;\r\n        if (this.getZIndex() === undefined) {\r\n          layerState.zIndex = Infinity;\r\n        }\r\n        renderEvent.frameState.layerStatesArray.push(layerState);\r\n        renderEvent.frameState.layerStates[getUid(this)] = layerState;\r\n      }, this);\r\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\r\n      this.changed();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Set the layer source.\r\n   * @param {import(\"../source/Source.js\").default} source The layer source.\r\n   * @observable\r\n   * @api\r\n   */\r\n  Layer.prototype.setSource = function setSource (source) {\r\n    this.set(LayerProperty.SOURCE, source);\r\n  };\n\n  return Layer;\n}(BaseLayer));\r\n\r\n\r\n/**\r\n * Return `true` if the layer is visible, and if the passed resolution is\r\n * between the layer's minResolution and maxResolution. The comparison is\r\n * inclusive for `minResolution` and exclusive for `maxResolution`.\r\n * @param {State} layerState Layer state.\r\n * @param {number} resolution Resolution.\r\n * @return {boolean} The layer is visible at the given resolution.\r\n */\r\nexport function visibleAtResolution(layerState, resolution) {\r\n  return layerState.visible && resolution >= layerState.minResolution &&\r\n      resolution < layerState.maxResolution;\r\n}\r\n\r\n\r\nexport default Layer;\r\n\r\n//# sourceMappingURL=Layer.js.map","/**\r\n * @module ol/control/Attribution\r\n */\r\nimport {equals} from '../array.js';\r\nimport Control from './Control.js';\r\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\r\nimport {removeChildren, replaceNode} from '../dom.js';\r\nimport {listen} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {visibleAtResolution} from '../layer/Layer.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-attribution'] CSS class name.\r\n * @property {HTMLElement|string} [target] Specify a target if you\r\n * want the control to be rendered outside of the map's\r\n * viewport.\r\n * @property {boolean} [collapsible] Specify if attributions can\r\n * be collapsed. If not specified, sources control this behavior with their\r\n * `attributionsCollapsible` setting.\r\n * @property {boolean} [collapsed=true] Specify if attributions should\r\n * be collapsed at startup.\r\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\r\n * @property {string} [label='i'] Text label to use for the\r\n * collapsed attributions button.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\r\n * for the expanded attributions button.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\r\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\r\n * callback.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Control to show all the attributions associated with the layer sources\r\n * in the map. This control is one of the default controls included in maps.\r\n * By default it will show in the bottom right portion of the map, but this can\r\n * be changed by using a css selector for `.ol-attribution`.\r\n *\r\n * @api\r\n */\r\nvar Attribution = /*@__PURE__*/(function (Control) {\n  function Attribution(opt_options) {\r\n\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    Control.call(this, {\r\n      element: document.createElement('div'),\r\n      render: options.render || render,\r\n      target: options.target\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement}\r\n     */\r\n    this.ulElement_ = document.createElement('ul');\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.overrideCollapsible_ = options.collapsible !== undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.collapsible_ = options.collapsible !== undefined ?\r\n      options.collapsible : true;\r\n\r\n    if (!this.collapsible_) {\r\n      this.collapsed_ = false;\r\n    }\r\n\r\n    var className = options.className !== undefined ? options.className : 'ol-attribution';\r\n\r\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\r\n\r\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\r\n\r\n    if (typeof collapseLabel === 'string') {\r\n      /**\r\n       * @private\r\n       * @type {HTMLElement}\r\n       */\r\n      this.collapseLabel_ = document.createElement('span');\r\n      this.collapseLabel_.textContent = collapseLabel;\r\n    } else {\r\n      this.collapseLabel_ = collapseLabel;\r\n    }\r\n\r\n    var label = options.label !== undefined ? options.label : 'i';\r\n\r\n    if (typeof label === 'string') {\r\n      /**\r\n       * @private\r\n       * @type {HTMLElement}\r\n       */\r\n      this.label_ = document.createElement('span');\r\n      this.label_.textContent = label;\r\n    } else {\r\n      this.label_ = label;\r\n    }\r\n\r\n\r\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\r\n      this.collapseLabel_ : this.label_;\r\n    var button = document.createElement('button');\r\n    button.setAttribute('type', 'button');\r\n    button.title = tipLabel;\r\n    button.appendChild(activeLabel);\r\n\r\n    listen(button, EventType.CLICK, this.handleClick_, this);\r\n\r\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\r\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\r\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\r\n    var element = this.element;\r\n    element.className = cssClasses;\r\n    element.appendChild(this.ulElement_);\r\n    element.appendChild(button);\r\n\r\n    /**\r\n     * A list of currently rendered resolutions.\r\n     * @type {Array<string>}\r\n     * @private\r\n     */\r\n    this.renderedAttributions_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.renderedVisible_ = true;\r\n\r\n  }\n\n  if ( Control ) Attribution.__proto__ = Control;\n  Attribution.prototype = Object.create( Control && Control.prototype );\n  Attribution.prototype.constructor = Attribution;\r\n\r\n  /**\r\n   * Collect a list of visible attributions and set the collapsible state.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @return {Array<string>} Attributions.\r\n   * @private\r\n   */\r\n  Attribution.prototype.collectSourceAttributions_ = function collectSourceAttributions_ (frameState) {\r\n    /**\r\n     * Used to determine if an attribution already exists.\r\n     * @type {!Object<string, boolean>}\r\n     */\r\n    var lookup = {};\r\n\r\n    /**\r\n     * A list of visible attributions.\r\n     * @type {Array<string>}\r\n     */\r\n    var visibleAttributions = [];\r\n\r\n    var layerStatesArray = frameState.layerStatesArray;\r\n    var resolution = frameState.viewState.resolution;\r\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\r\n      var layerState = layerStatesArray[i];\r\n      if (!visibleAtResolution(layerState, resolution)) {\r\n        continue;\r\n      }\r\n\r\n      var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\r\n      if (!source) {\r\n        continue;\r\n      }\r\n\r\n      var attributionGetter = source.getAttributions();\r\n      if (!attributionGetter) {\r\n        continue;\r\n      }\r\n\r\n      var attributions = attributionGetter(frameState);\r\n      if (!attributions) {\r\n        continue;\r\n      }\r\n\r\n      if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\r\n        this.setCollapsible(false);\r\n      }\r\n\r\n      if (Array.isArray(attributions)) {\r\n        for (var j = 0, jj = attributions.length; j < jj; ++j) {\r\n          if (!(attributions[j] in lookup)) {\r\n            visibleAttributions.push(attributions[j]);\r\n            lookup[attributions[j]] = true;\r\n          }\r\n        }\r\n      } else {\r\n        if (!(attributions in lookup)) {\r\n          visibleAttributions.push(attributions);\r\n          lookup[attributions] = true;\r\n        }\r\n      }\r\n    }\r\n    return visibleAttributions;\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   */\r\n  Attribution.prototype.updateElement_ = function updateElement_ (frameState) {\r\n    if (!frameState) {\r\n      if (this.renderedVisible_) {\r\n        this.element.style.display = 'none';\r\n        this.renderedVisible_ = false;\r\n      }\r\n      return;\r\n    }\r\n\r\n    var attributions = this.collectSourceAttributions_(frameState);\r\n\r\n    var visible = attributions.length > 0;\r\n    if (this.renderedVisible_ != visible) {\r\n      this.element.style.display = visible ? '' : 'none';\r\n      this.renderedVisible_ = visible;\r\n    }\r\n\r\n    if (equals(attributions, this.renderedAttributions_)) {\r\n      return;\r\n    }\r\n\r\n    removeChildren(this.ulElement_);\r\n\r\n    // append the attributions\r\n    for (var i = 0, ii = attributions.length; i < ii; ++i) {\r\n      var element = document.createElement('li');\r\n      element.innerHTML = attributions[i];\r\n      this.ulElement_.appendChild(element);\r\n    }\r\n\r\n    this.renderedAttributions_ = attributions;\r\n  };\r\n\r\n  /**\r\n   * @param {MouseEvent} event The event to handle\r\n   * @private\r\n   */\r\n  Attribution.prototype.handleClick_ = function handleClick_ (event) {\r\n    event.preventDefault();\r\n    this.handleToggle_();\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  Attribution.prototype.handleToggle_ = function handleToggle_ () {\r\n    this.element.classList.toggle(CLASS_COLLAPSED);\r\n    if (this.collapsed_) {\r\n      replaceNode(this.collapseLabel_, this.label_);\r\n    } else {\r\n      replaceNode(this.label_, this.collapseLabel_);\r\n    }\r\n    this.collapsed_ = !this.collapsed_;\r\n  };\r\n\r\n  /**\r\n   * Return `true` if the attribution is collapsible, `false` otherwise.\r\n   * @return {boolean} True if the widget is collapsible.\r\n   * @api\r\n   */\r\n  Attribution.prototype.getCollapsible = function getCollapsible () {\r\n    return this.collapsible_;\r\n  };\r\n\r\n  /**\r\n   * Set whether the attribution should be collapsible.\r\n   * @param {boolean} collapsible True if the widget is collapsible.\r\n   * @api\r\n   */\r\n  Attribution.prototype.setCollapsible = function setCollapsible (collapsible) {\r\n    if (this.collapsible_ === collapsible) {\r\n      return;\r\n    }\r\n    this.collapsible_ = collapsible;\r\n    this.element.classList.toggle('ol-uncollapsible');\r\n    if (!collapsible && this.collapsed_) {\r\n      this.handleToggle_();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Collapse or expand the attribution according to the passed parameter. Will\r\n   * not do anything if the attribution isn't collapsible or if the current\r\n   * collapsed state is already the one requested.\r\n   * @param {boolean} collapsed True if the widget is collapsed.\r\n   * @api\r\n   */\r\n  Attribution.prototype.setCollapsed = function setCollapsed (collapsed) {\r\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\r\n      return;\r\n    }\r\n    this.handleToggle_();\r\n  };\r\n\r\n  /**\r\n   * Return `true` when the attribution is currently collapsed or `false`\r\n   * otherwise.\r\n   * @return {boolean} True if the widget is collapsed.\r\n   * @api\r\n   */\r\n  Attribution.prototype.getCollapsed = function getCollapsed () {\r\n    return this.collapsed_;\r\n  };\n\n  return Attribution;\n}(Control));\r\n\r\n\r\n/**\r\n * Update the attribution element.\r\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\r\n * @this {Attribution}\r\n * @api\r\n */\r\nexport function render(mapEvent) {\r\n  this.updateElement_(mapEvent.frameState);\r\n}\r\n\r\n\r\nexport default Attribution;\r\n\r\n//# sourceMappingURL=Attribution.js.map","/**\r\n * @module ol/control/FullScreen\r\n */\r\nimport Control from './Control.js';\r\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\r\nimport {replaceNode} from '../dom.js';\r\nimport {listen} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\n\r\n\r\n/**\r\n * @return {string} Change type.\r\n */\r\nvar getChangeType = (function() {\r\n  var changeType;\r\n  return function() {\r\n    if (!changeType) {\r\n      var body = document.body;\r\n      if (body.webkitRequestFullscreen) {\r\n        changeType = 'webkitfullscreenchange';\r\n      } else if (body.mozRequestFullScreen) {\r\n        changeType = 'mozfullscreenchange';\r\n      } else if (body.msRequestFullscreen) {\r\n        changeType = 'MSFullscreenChange';\r\n      } else if (body.requestFullscreen) {\r\n        changeType = 'fullscreenchange';\r\n      }\r\n    }\r\n    return changeType;\r\n  };\r\n})();\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-full-screen'] CSS class name.\r\n * @property {string|Text} [label='\\u2922'] Text label to use for the button.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string|Text} [labelActive='\\u00d7'] Text label to use for the\r\n * button when full-screen is active.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\r\n * @property {boolean} [keys=false] Full keyboard access.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the\r\n * control to be rendered outside of the map's viewport.\r\n * @property {HTMLElement|string} [source] The element to be displayed\r\n * fullscreen. When not provided, the element containing the map viewport will\r\n * be displayed fullscreen.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Provides a button that when clicked fills up the full screen with the map.\r\n * The full screen source element is by default the element containing the map viewport unless\r\n * overridden by providing the `source` option. In which case, the dom\r\n * element introduced using this parameter will be displayed in full screen.\r\n *\r\n * When in full screen mode, a close button is shown to exit full screen mode.\r\n * The [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\r\n * toggle the map in full screen mode.\r\n *\r\n * @api\r\n */\r\nvar FullScreen = /*@__PURE__*/(function (Control) {\n  function FullScreen(opt_options) {\r\n\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    Control.call(this, {\r\n      element: document.createElement('div'),\r\n      target: options.target\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.cssClassName_ = options.className !== undefined ? options.className :\r\n      'ol-full-screen';\r\n\r\n    var label = options.label !== undefined ? options.label : '\\u2922';\r\n\r\n    /**\r\n     * @private\r\n     * @type {Text}\r\n     */\r\n    this.labelNode_ = typeof label === 'string' ?\r\n      document.createTextNode(label) : label;\r\n\r\n    var labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\r\n\r\n    /**\r\n     * @private\r\n     * @type {Text}\r\n     */\r\n    this.labelActiveNode_ = typeof labelActive === 'string' ?\r\n      document.createTextNode(labelActive) : labelActive;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement}\r\n     */\r\n    this.button_ = document.createElement('button');\r\n\r\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\r\n    this.setClassName_(this.button_, isFullScreen());\r\n    this.button_.setAttribute('type', 'button');\r\n    this.button_.title = tipLabel;\r\n    this.button_.appendChild(this.labelNode_);\r\n\r\n    listen(this.button_, EventType.CLICK,\r\n      this.handleClick_, this);\r\n\r\n    var cssClasses = this.cssClassName_ + ' ' + CLASS_UNSELECTABLE +\r\n        ' ' + CLASS_CONTROL + ' ' +\r\n        (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\r\n    var element = this.element;\r\n    element.className = cssClasses;\r\n    element.appendChild(this.button_);\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.keys_ = options.keys !== undefined ? options.keys : false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement|string|undefined}\r\n     */\r\n    this.source_ = options.source;\r\n\r\n  }\n\n  if ( Control ) FullScreen.__proto__ = Control;\n  FullScreen.prototype = Object.create( Control && Control.prototype );\n  FullScreen.prototype.constructor = FullScreen;\r\n\r\n  /**\r\n   * @param {MouseEvent} event The event to handle\r\n   * @private\r\n   */\r\n  FullScreen.prototype.handleClick_ = function handleClick_ (event) {\r\n    event.preventDefault();\r\n    this.handleFullScreen_();\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  FullScreen.prototype.handleFullScreen_ = function handleFullScreen_ () {\r\n    if (!isFullScreenSupported()) {\r\n      return;\r\n    }\r\n    var map = this.getMap();\r\n    if (!map) {\r\n      return;\r\n    }\r\n    if (isFullScreen()) {\r\n      exitFullScreen();\r\n    } else {\r\n      var element;\r\n      if (this.source_) {\r\n        element = typeof this.source_ === 'string' ?\r\n          document.getElementById(this.source_) :\r\n          this.source_;\r\n      } else {\r\n        element = map.getTargetElement();\r\n      }\r\n      if (this.keys_) {\r\n        requestFullScreenWithKeys(element);\r\n\r\n      } else {\r\n        requestFullScreen(element);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  FullScreen.prototype.handleFullScreenChange_ = function handleFullScreenChange_ () {\r\n    var map = this.getMap();\r\n    if (isFullScreen()) {\r\n      this.setClassName_(this.button_, true);\r\n      replaceNode(this.labelActiveNode_, this.labelNode_);\r\n    } else {\r\n      this.setClassName_(this.button_, false);\r\n      replaceNode(this.labelNode_, this.labelActiveNode_);\r\n    }\r\n    if (map) {\r\n      map.updateSize();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {HTMLElement} element Target element\r\n   * @param {boolean} fullscreen True if fullscreen class name should be active\r\n   * @private\r\n   */\r\n  FullScreen.prototype.setClassName_ = function setClassName_ (element, fullscreen) {\r\n    var activeClassName = this.cssClassName_ + '-true';\r\n    var inactiveClassName = this.cssClassName_ + '-false';\r\n    var nextClassName = fullscreen ? activeClassName : inactiveClassName;\r\n    element.classList.remove(activeClassName);\r\n    element.classList.remove(inactiveClassName);\r\n    element.classList.add(nextClassName);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  FullScreen.prototype.setMap = function setMap (map) {\r\n    Control.prototype.setMap.call(this, map);\r\n    if (map) {\r\n      this.listenerKeys.push(listen(document,\r\n        getChangeType(),\r\n        this.handleFullScreenChange_, this)\r\n      );\r\n    }\r\n  };\n\n  return FullScreen;\n}(Control));\r\n\r\n\r\n/**\r\n * @return {boolean} Fullscreen is supported by the current platform.\r\n */\r\nfunction isFullScreenSupported() {\r\n  var body = document.body;\r\n  return !!(\r\n    body.webkitRequestFullscreen ||\r\n    (body.mozRequestFullScreen && document.mozFullScreenEnabled) ||\r\n    (body.msRequestFullscreen && document.msFullscreenEnabled) ||\r\n    (body.requestFullscreen && document.fullscreenEnabled)\r\n  );\r\n}\r\n\r\n/**\r\n * @return {boolean} Element is currently in fullscreen.\r\n */\r\nfunction isFullScreen() {\r\n  return !!(\r\n    document.webkitIsFullScreen || document.mozFullScreen ||\r\n    document.msFullscreenElement || document.fullscreenElement\r\n  );\r\n}\r\n\r\n/**\r\n * Request to fullscreen an element.\r\n * @param {HTMLElement} element Element to request fullscreen\r\n */\r\nfunction requestFullScreen(element) {\r\n  if (element.requestFullscreen) {\r\n    element.requestFullscreen();\r\n  } else if (element.msRequestFullscreen) {\r\n    element.msRequestFullscreen();\r\n  } else if (element.mozRequestFullScreen) {\r\n    element.mozRequestFullScreen();\r\n  } else if (element.webkitRequestFullscreen) {\r\n    element.webkitRequestFullscreen();\r\n  }\r\n}\r\n\r\n/**\r\n * Request to fullscreen an element with keyboard input.\r\n * @param {HTMLElement} element Element to request fullscreen\r\n */\r\nfunction requestFullScreenWithKeys(element) {\r\n  if (element.mozRequestFullScreenWithKeys) {\r\n    element.mozRequestFullScreenWithKeys();\r\n  } else if (element.webkitRequestFullscreen) {\r\n    element.webkitRequestFullscreen();\r\n  } else {\r\n    requestFullScreen(element);\r\n  }\r\n}\r\n\r\n/**\r\n * Exit fullscreen.\r\n */\r\nfunction exitFullScreen() {\r\n  if (document.exitFullscreen) {\r\n    document.exitFullscreen();\r\n  } else if (document.msExitFullscreen) {\r\n    document.msExitFullscreen();\r\n  } else if (document.mozCancelFullScreen) {\r\n    document.mozCancelFullScreen();\r\n  } else if (document.webkitExitFullscreen) {\r\n    document.webkitExitFullscreen();\r\n  }\r\n}\r\n\r\nexport default FullScreen;\r\n\r\n//# sourceMappingURL=FullScreen.js.map","/**\r\n * @module ol/geom/GeometryType\r\n */\r\n\r\n/**\r\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\r\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\r\n * `'GeometryCollection'`, `'Circle'`.\r\n * @enum {string}\r\n */\r\nexport default {\r\n  POINT: 'Point',\r\n  LINE_STRING: 'LineString',\r\n  LINEAR_RING: 'LinearRing',\r\n  POLYGON: 'Polygon',\r\n  MULTI_POINT: 'MultiPoint',\r\n  MULTI_LINE_STRING: 'MultiLineString',\r\n  MULTI_POLYGON: 'MultiPolygon',\r\n  GEOMETRY_COLLECTION: 'GeometryCollection',\r\n  CIRCLE: 'Circle'\r\n};\r\n\r\n//# sourceMappingURL=GeometryType.js.map","/**\r\n * @license\r\n * Latitude/longitude spherical geodesy formulae taken from\r\n * http://www.movable-type.co.uk/scripts/latlong.html\r\n * Licensed under CC-BY-3.0.\r\n */\r\n\r\n/**\r\n * @module ol/sphere\r\n */\r\nimport {toRadians, toDegrees} from './math.js';\r\nimport GeometryType from './geom/GeometryType.js';\r\n\r\n\r\n/**\r\n * Object literal with options for the {@link getLength} or {@link getArea}\r\n * functions.\r\n * @typedef {Object} SphereMetricOptions\r\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\r\n * Projection of the  geometry.  By default, the geometry is assumed to be in\r\n * Web Mercator.\r\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\r\n * earth is used (Clarke 1866 Authalic Sphere).\r\n */\r\n\r\n\r\n/**\r\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\r\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\r\n * @type {number}\r\n */\r\nexport var DEFAULT_RADIUS = 6371008.8;\r\n\r\n\r\n/**\r\n * Get the great circle distance (in meters) between two geographic coordinates.\r\n * @param {Array} c1 Starting coordinate.\r\n * @param {Array} c2 Ending coordinate.\r\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\r\n *     mean radius using the WGS84 ellipsoid.\r\n * @return {number} The great circle distance between the points (in meters).\r\n * @api\r\n */\r\nexport function getDistance(c1, c2, opt_radius) {\r\n  var radius = opt_radius || DEFAULT_RADIUS;\r\n  var lat1 = toRadians(c1[1]);\r\n  var lat2 = toRadians(c2[1]);\r\n  var deltaLatBy2 = (lat2 - lat1) / 2;\r\n  var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\r\n  var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\r\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\r\n      Math.cos(lat1) * Math.cos(lat2);\r\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n}\r\n\r\n\r\n/**\r\n * Get the cumulative great circle length of linestring coordinates (geographic).\r\n * @param {Array} coordinates Linestring coordinates.\r\n * @param {number} radius The sphere radius to use.\r\n * @return {number} The length (in meters).\r\n */\r\nfunction getLengthInternal(coordinates, radius) {\r\n  var length = 0;\r\n  for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\r\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\r\n  }\r\n  return length;\r\n}\r\n\r\n\r\n/**\r\n * Get the spherical length of a geometry.  This length is the sum of the\r\n * great circle distances between coordinates.  For polygons, the length is\r\n * the sum of all rings.  For points, the length is zero.  For multi-part\r\n * geometries, the length is the sum of the length of each part.\r\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\r\n * @param {SphereMetricOptions=} opt_options Options for the\r\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\r\n * You can change this by providing a `projection` option.\r\n * @return {number} The spherical length (in meters).\r\n * @api\r\n */\r\nexport function getLength(geometry, opt_options) {\r\n  var options = opt_options || {};\r\n  var radius = options.radius || DEFAULT_RADIUS;\r\n  var projection = options.projection || 'EPSG:3857';\r\n  var type = geometry.getType();\r\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\r\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\r\n  }\r\n  var length = 0;\r\n  var coordinates, coords, i, ii, j, jj;\r\n  switch (type) {\r\n    case GeometryType.POINT:\r\n    case GeometryType.MULTI_POINT: {\r\n      break;\r\n    }\r\n    case GeometryType.LINE_STRING:\r\n    case GeometryType.LINEAR_RING: {\r\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\r\n      length = getLengthInternal(coordinates, radius);\r\n      break;\r\n    }\r\n    case GeometryType.MULTI_LINE_STRING:\r\n    case GeometryType.POLYGON: {\r\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\r\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\r\n        length += getLengthInternal(coordinates[i], radius);\r\n      }\r\n      break;\r\n    }\r\n    case GeometryType.MULTI_POLYGON: {\r\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\r\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\r\n        coords = coordinates[i];\r\n        for (j = 0, jj = coords.length; j < jj; ++j) {\r\n          length += getLengthInternal(coords[j], radius);\r\n        }\r\n      }\r\n      break;\r\n    }\r\n    case GeometryType.GEOMETRY_COLLECTION: {\r\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\r\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\r\n        length += getLength(geometries[i], opt_options);\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      throw new Error('Unsupported geometry type: ' + type);\r\n    }\r\n  }\r\n  return length;\r\n}\r\n\r\n\r\n/**\r\n * Returns the spherical area for a list of coordinates.\r\n *\r\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\r\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\r\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\r\n * Laboratory, Pasadena, CA, June 2007\r\n *\r\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\r\n * ring. If the ring is oriented clockwise, the area will be positive,\r\n * otherwise it will be negative.\r\n * @param {number} radius The sphere radius.\r\n * @return {number} Area (in square meters).\r\n */\r\nfunction getAreaInternal(coordinates, radius) {\r\n  var area = 0;\r\n  var len = coordinates.length;\r\n  var x1 = coordinates[len - 1][0];\r\n  var y1 = coordinates[len - 1][1];\r\n  for (var i = 0; i < len; i++) {\r\n    var x2 = coordinates[i][0];\r\n    var y2 = coordinates[i][1];\r\n    area += toRadians(x2 - x1) *\r\n        (2 + Math.sin(toRadians(y1)) +\r\n        Math.sin(toRadians(y2)));\r\n    x1 = x2;\r\n    y1 = y2;\r\n  }\r\n  return area * radius * radius / 2.0;\r\n}\r\n\r\n\r\n/**\r\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\r\n * that polygon edges are segments of great circles on a sphere.\r\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\r\n * @param {SphereMetricOptions=} opt_options Options for the area\r\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\r\n *     You can change this by providing a `projection` option.\r\n * @return {number} The spherical area (in square meters).\r\n * @api\r\n */\r\nexport function getArea(geometry, opt_options) {\r\n  var options = opt_options || {};\r\n  var radius = options.radius || DEFAULT_RADIUS;\r\n  var projection = options.projection || 'EPSG:3857';\r\n  var type = geometry.getType();\r\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\r\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\r\n  }\r\n  var area = 0;\r\n  var coordinates, coords, i, ii, j, jj;\r\n  switch (type) {\r\n    case GeometryType.POINT:\r\n    case GeometryType.MULTI_POINT:\r\n    case GeometryType.LINE_STRING:\r\n    case GeometryType.MULTI_LINE_STRING:\r\n    case GeometryType.LINEAR_RING: {\r\n      break;\r\n    }\r\n    case GeometryType.POLYGON: {\r\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\r\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\r\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\r\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\r\n      }\r\n      break;\r\n    }\r\n    case GeometryType.MULTI_POLYGON: {\r\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\r\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\r\n        coords = coordinates[i];\r\n        area += Math.abs(getAreaInternal(coords[0], radius));\r\n        for (j = 1, jj = coords.length; j < jj; ++j) {\r\n          area -= Math.abs(getAreaInternal(coords[j], radius));\r\n        }\r\n      }\r\n      break;\r\n    }\r\n    case GeometryType.GEOMETRY_COLLECTION: {\r\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\r\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\r\n        area += getArea(geometries[i], opt_options);\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      throw new Error('Unsupported geometry type: ' + type);\r\n    }\r\n  }\r\n  return area;\r\n}\r\n\r\n\r\n/**\r\n * Returns the coordinate at the given distance and bearing from `c1`.\r\n *\r\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\r\n * @param {number} distance The great-circle distance between the origin\r\n *     point and the target point.\r\n * @param {number} bearing The bearing (in radians).\r\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\r\n *     mean radius using the WGS84 ellipsoid.\r\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\r\n */\r\nexport function offset(c1, distance, bearing, opt_radius) {\r\n  var radius = opt_radius || DEFAULT_RADIUS;\r\n  var lat1 = toRadians(c1[1]);\r\n  var lon1 = toRadians(c1[0]);\r\n  var dByR = distance / radius;\r\n  var lat = Math.asin(\r\n    Math.sin(lat1) * Math.cos(dByR) +\r\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\r\n  var lon = lon1 + Math.atan2(\r\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\r\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\r\n  return [toDegrees(lon), toDegrees(lat)];\r\n}\r\n\r\n//# sourceMappingURL=sphere.js.map","/**\r\n * @module ol/extent/Corner\r\n */\r\n\r\n/**\r\n * Extent corner.\r\n * @enum {string}\r\n */\r\nexport default {\r\n  BOTTOM_LEFT: 'bottom-left',\r\n  BOTTOM_RIGHT: 'bottom-right',\r\n  TOP_LEFT: 'top-left',\r\n  TOP_RIGHT: 'top-right'\r\n};\r\n\r\n//# sourceMappingURL=Corner.js.map","/**\r\n * @module ol/extent/Relationship\r\n */\r\n\r\n/**\r\n * Relationship to an extent.\r\n * @enum {number}\r\n */\r\nexport default {\r\n  UNKNOWN: 0,\r\n  INTERSECTING: 1,\r\n  ABOVE: 2,\r\n  RIGHT: 4,\r\n  BELOW: 8,\r\n  LEFT: 16\r\n};\r\n\r\n//# sourceMappingURL=Relationship.js.map","/**\r\n * @module ol/extent\r\n */\r\nimport {assert} from './asserts.js';\r\nimport Corner from './extent/Corner.js';\r\nimport Relationship from './extent/Relationship.js';\r\n\r\n\r\n/**\r\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\r\n * @typedef {Array<number>} Extent\r\n * @api\r\n */\r\n\r\n/**\r\n * Build an extent that includes all given coordinates.\r\n *\r\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\r\n * @return {Extent} Bounding extent.\r\n * @api\r\n */\r\nexport function boundingExtent(coordinates) {\r\n  var extent = createEmpty();\r\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\r\n    extendCoordinate(extent, coordinates[i]);\r\n  }\r\n  return extent;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} xs Xs.\r\n * @param {Array<number>} ys Ys.\r\n * @param {Extent=} opt_extent Destination extent.\r\n * @private\r\n * @return {Extent} Extent.\r\n */\r\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\r\n  var minX = Math.min.apply(null, xs);\r\n  var minY = Math.min.apply(null, ys);\r\n  var maxX = Math.max.apply(null, xs);\r\n  var maxY = Math.max.apply(null, ys);\r\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\r\n}\r\n\r\n\r\n/**\r\n * Return extent increased by the provided value.\r\n * @param {Extent} extent Extent.\r\n * @param {number} value The amount by which the extent should be buffered.\r\n * @param {Extent=} opt_extent Extent.\r\n * @return {Extent} Extent.\r\n * @api\r\n */\r\nexport function buffer(extent, value, opt_extent) {\r\n  if (opt_extent) {\r\n    opt_extent[0] = extent[0] - value;\r\n    opt_extent[1] = extent[1] - value;\r\n    opt_extent[2] = extent[2] + value;\r\n    opt_extent[3] = extent[3] + value;\r\n    return opt_extent;\r\n  } else {\r\n    return [\r\n      extent[0] - value,\r\n      extent[1] - value,\r\n      extent[2] + value,\r\n      extent[3] + value\r\n    ];\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Creates a clone of an extent.\r\n *\r\n * @param {Extent} extent Extent to clone.\r\n * @param {Extent=} opt_extent Extent.\r\n * @return {Extent} The clone.\r\n */\r\nexport function clone(extent, opt_extent) {\r\n  if (opt_extent) {\r\n    opt_extent[0] = extent[0];\r\n    opt_extent[1] = extent[1];\r\n    opt_extent[2] = extent[2];\r\n    opt_extent[3] = extent[3];\r\n    return opt_extent;\r\n  } else {\r\n    return extent.slice();\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @return {number} Closest squared distance.\r\n */\r\nexport function closestSquaredDistanceXY(extent, x, y) {\r\n  var dx, dy;\r\n  if (x < extent[0]) {\r\n    dx = extent[0] - x;\r\n  } else if (extent[2] < x) {\r\n    dx = x - extent[2];\r\n  } else {\r\n    dx = 0;\r\n  }\r\n  if (y < extent[1]) {\r\n    dy = extent[1] - y;\r\n  } else if (extent[3] < y) {\r\n    dy = y - extent[3];\r\n  } else {\r\n    dy = 0;\r\n  }\r\n  return dx * dx + dy * dy;\r\n}\r\n\r\n\r\n/**\r\n * Check if the passed coordinate is contained or on the edge of the extent.\r\n *\r\n * @param {Extent} extent Extent.\r\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\r\n * @return {boolean} The coordinate is contained in the extent.\r\n * @api\r\n */\r\nexport function containsCoordinate(extent, coordinate) {\r\n  return containsXY(extent, coordinate[0], coordinate[1]);\r\n}\r\n\r\n\r\n/**\r\n * Check if one extent contains another.\r\n *\r\n * An extent is deemed contained if it lies completely within the other extent,\r\n * including if they share one or more edges.\r\n *\r\n * @param {Extent} extent1 Extent 1.\r\n * @param {Extent} extent2 Extent 2.\r\n * @return {boolean} The second extent is contained by or on the edge of the\r\n *     first.\r\n * @api\r\n */\r\nexport function containsExtent(extent1, extent2) {\r\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\r\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\r\n}\r\n\r\n\r\n/**\r\n * Check if the passed coordinate is contained or on the edge of the extent.\r\n *\r\n * @param {Extent} extent Extent.\r\n * @param {number} x X coordinate.\r\n * @param {number} y Y coordinate.\r\n * @return {boolean} The x, y values are contained in the extent.\r\n * @api\r\n */\r\nexport function containsXY(extent, x, y) {\r\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\r\n}\r\n\r\n\r\n/**\r\n * Get the relationship between a coordinate and extent.\r\n * @param {Extent} extent The extent.\r\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\r\n * @return {Relationship} The relationship (bitwise compare with\r\n *     import(\"./extent/Relationship.js\").Relationship).\r\n */\r\nexport function coordinateRelationship(extent, coordinate) {\r\n  var minX = extent[0];\r\n  var minY = extent[1];\r\n  var maxX = extent[2];\r\n  var maxY = extent[3];\r\n  var x = coordinate[0];\r\n  var y = coordinate[1];\r\n  var relationship = Relationship.UNKNOWN;\r\n  if (x < minX) {\r\n    relationship = relationship | Relationship.LEFT;\r\n  } else if (x > maxX) {\r\n    relationship = relationship | Relationship.RIGHT;\r\n  }\r\n  if (y < minY) {\r\n    relationship = relationship | Relationship.BELOW;\r\n  } else if (y > maxY) {\r\n    relationship = relationship | Relationship.ABOVE;\r\n  }\r\n  if (relationship === Relationship.UNKNOWN) {\r\n    relationship = Relationship.INTERSECTING;\r\n  }\r\n  return relationship;\r\n}\r\n\r\n\r\n/**\r\n * Create an empty extent.\r\n * @return {Extent} Empty extent.\r\n * @api\r\n */\r\nexport function createEmpty() {\r\n  return [Infinity, Infinity, -Infinity, -Infinity];\r\n}\r\n\r\n\r\n/**\r\n * Create a new extent or update the provided extent.\r\n * @param {number} minX Minimum X.\r\n * @param {number} minY Minimum Y.\r\n * @param {number} maxX Maximum X.\r\n * @param {number} maxY Maximum Y.\r\n * @param {Extent=} opt_extent Destination extent.\r\n * @return {Extent} Extent.\r\n */\r\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\r\n  if (opt_extent) {\r\n    opt_extent[0] = minX;\r\n    opt_extent[1] = minY;\r\n    opt_extent[2] = maxX;\r\n    opt_extent[3] = maxY;\r\n    return opt_extent;\r\n  } else {\r\n    return [minX, minY, maxX, maxY];\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Create a new empty extent or make the provided one empty.\r\n * @param {Extent=} opt_extent Extent.\r\n * @return {Extent} Extent.\r\n */\r\nexport function createOrUpdateEmpty(opt_extent) {\r\n  return createOrUpdate(\r\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\r\n * @param {Extent=} opt_extent Extent.\r\n * @return {Extent} Extent.\r\n */\r\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\r\n  var x = coordinate[0];\r\n  var y = coordinate[1];\r\n  return createOrUpdate(x, y, x, y, opt_extent);\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\r\n * @param {Extent=} opt_extent Extent.\r\n * @return {Extent} Extent.\r\n */\r\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\r\n  var extent = createOrUpdateEmpty(opt_extent);\r\n  return extendCoordinates(extent, coordinates);\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {Extent=} opt_extent Extent.\r\n * @return {Extent} Extent.\r\n */\r\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\r\n  var extent = createOrUpdateEmpty(opt_extent);\r\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\r\n}\r\n\r\n/**\r\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\r\n * @param {Extent=} opt_extent Extent.\r\n * @return {Extent} Extent.\r\n */\r\nexport function createOrUpdateFromRings(rings, opt_extent) {\r\n  var extent = createOrUpdateEmpty(opt_extent);\r\n  return extendRings(extent, rings);\r\n}\r\n\r\n\r\n/**\r\n * Determine if two extents are equivalent.\r\n * @param {Extent} extent1 Extent 1.\r\n * @param {Extent} extent2 Extent 2.\r\n * @return {boolean} The two extents are equivalent.\r\n * @api\r\n */\r\nexport function equals(extent1, extent2) {\r\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\r\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\r\n}\r\n\r\n\r\n/**\r\n * Modify an extent to include another extent.\r\n * @param {Extent} extent1 The extent to be modified.\r\n * @param {Extent} extent2 The extent that will be included in the first.\r\n * @return {Extent} A reference to the first (extended) extent.\r\n * @api\r\n */\r\nexport function extend(extent1, extent2) {\r\n  if (extent2[0] < extent1[0]) {\r\n    extent1[0] = extent2[0];\r\n  }\r\n  if (extent2[2] > extent1[2]) {\r\n    extent1[2] = extent2[2];\r\n  }\r\n  if (extent2[1] < extent1[1]) {\r\n    extent1[1] = extent2[1];\r\n  }\r\n  if (extent2[3] > extent1[3]) {\r\n    extent1[3] = extent2[3];\r\n  }\r\n  return extent1;\r\n}\r\n\r\n\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\r\n */\r\nexport function extendCoordinate(extent, coordinate) {\r\n  if (coordinate[0] < extent[0]) {\r\n    extent[0] = coordinate[0];\r\n  }\r\n  if (coordinate[0] > extent[2]) {\r\n    extent[2] = coordinate[0];\r\n  }\r\n  if (coordinate[1] < extent[1]) {\r\n    extent[1] = coordinate[1];\r\n  }\r\n  if (coordinate[1] > extent[3]) {\r\n    extent[3] = coordinate[1];\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\r\n * @return {Extent} Extent.\r\n */\r\nexport function extendCoordinates(extent, coordinates) {\r\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\r\n    extendCoordinate(extent, coordinates[i]);\r\n  }\r\n  return extent;\r\n}\r\n\r\n\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @return {Extent} Extent.\r\n */\r\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\r\n  for (; offset < end; offset += stride) {\r\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\r\n  }\r\n  return extent;\r\n}\r\n\r\n\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\r\n * @return {Extent} Extent.\r\n */\r\nexport function extendRings(extent, rings) {\r\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\r\n    extendCoordinates(extent, rings[i]);\r\n  }\r\n  return extent;\r\n}\r\n\r\n\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n */\r\nexport function extendXY(extent, x, y) {\r\n  extent[0] = Math.min(extent[0], x);\r\n  extent[1] = Math.min(extent[1], y);\r\n  extent[2] = Math.max(extent[2], x);\r\n  extent[3] = Math.max(extent[3], y);\r\n}\r\n\r\n\r\n/**\r\n * This function calls `callback` for each corner of the extent. If the\r\n * callback returns a truthy value the function returns that value\r\n * immediately. Otherwise the function returns `false`.\r\n * @param {Extent} extent Extent.\r\n * @param {function(this:T, import(\"./coordinate.js\").Coordinate): S} callback Callback.\r\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\r\n * @return {S|boolean} Value.\r\n * @template S, T\r\n * @api\r\n */\r\nexport function forEachCorner(extent, callback, opt_this) {\r\n  var val;\r\n  val = callback.call(opt_this, getBottomLeft(extent));\r\n  if (val) {\r\n    return val;\r\n  }\r\n  val = callback.call(opt_this, getBottomRight(extent));\r\n  if (val) {\r\n    return val;\r\n  }\r\n  val = callback.call(opt_this, getTopRight(extent));\r\n  if (val) {\r\n    return val;\r\n  }\r\n  val = callback.call(opt_this, getTopLeft(extent));\r\n  if (val) {\r\n    return val;\r\n  }\r\n  return false;\r\n}\r\n\r\n\r\n/**\r\n * Get the size of an extent.\r\n * @param {Extent} extent Extent.\r\n * @return {number} Area.\r\n * @api\r\n */\r\nexport function getArea(extent) {\r\n  var area = 0;\r\n  if (!isEmpty(extent)) {\r\n    area = getWidth(extent) * getHeight(extent);\r\n  }\r\n  return area;\r\n}\r\n\r\n\r\n/**\r\n * Get the bottom left coordinate of an extent.\r\n * @param {Extent} extent Extent.\r\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\r\n * @api\r\n */\r\nexport function getBottomLeft(extent) {\r\n  return [extent[0], extent[1]];\r\n}\r\n\r\n\r\n/**\r\n * Get the bottom right coordinate of an extent.\r\n * @param {Extent} extent Extent.\r\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\r\n * @api\r\n */\r\nexport function getBottomRight(extent) {\r\n  return [extent[2], extent[1]];\r\n}\r\n\r\n\r\n/**\r\n * Get the center coordinate of an extent.\r\n * @param {Extent} extent Extent.\r\n * @return {import(\"./coordinate.js\").Coordinate} Center.\r\n * @api\r\n */\r\nexport function getCenter(extent) {\r\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\r\n}\r\n\r\n\r\n/**\r\n * Get a corner coordinate of an extent.\r\n * @param {Extent} extent Extent.\r\n * @param {Corner} corner Corner.\r\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\r\n */\r\nexport function getCorner(extent, corner) {\r\n  var coordinate;\r\n  if (corner === Corner.BOTTOM_LEFT) {\r\n    coordinate = getBottomLeft(extent);\r\n  } else if (corner === Corner.BOTTOM_RIGHT) {\r\n    coordinate = getBottomRight(extent);\r\n  } else if (corner === Corner.TOP_LEFT) {\r\n    coordinate = getTopLeft(extent);\r\n  } else if (corner === Corner.TOP_RIGHT) {\r\n    coordinate = getTopRight(extent);\r\n  } else {\r\n    assert(false, 13); // Invalid corner\r\n  }\r\n  return coordinate;\r\n}\r\n\r\n\r\n/**\r\n * @param {Extent} extent1 Extent 1.\r\n * @param {Extent} extent2 Extent 2.\r\n * @return {number} Enlarged area.\r\n * @api\r\n */\r\nexport function getEnlargedArea(extent1, extent2) {\r\n  var minX = Math.min(extent1[0], extent2[0]);\r\n  var minY = Math.min(extent1[1], extent2[1]);\r\n  var maxX = Math.max(extent1[2], extent2[2]);\r\n  var maxY = Math.max(extent1[3], extent2[3]);\r\n  return (maxX - minX) * (maxY - minY);\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\r\n * @param {number} resolution Resolution.\r\n * @param {number} rotation Rotation.\r\n * @param {import(\"./size.js\").Size} size Size.\r\n * @param {Extent=} opt_extent Destination extent.\r\n * @return {Extent} Extent.\r\n */\r\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\r\n  var dx = resolution * size[0] / 2;\r\n  var dy = resolution * size[1] / 2;\r\n  var cosRotation = Math.cos(rotation);\r\n  var sinRotation = Math.sin(rotation);\r\n  var xCos = dx * cosRotation;\r\n  var xSin = dx * sinRotation;\r\n  var yCos = dy * cosRotation;\r\n  var ySin = dy * sinRotation;\r\n  var x = center[0];\r\n  var y = center[1];\r\n  var x0 = x - xCos + ySin;\r\n  var x1 = x - xCos - ySin;\r\n  var x2 = x + xCos - ySin;\r\n  var x3 = x + xCos + ySin;\r\n  var y0 = y - xSin - yCos;\r\n  var y1 = y - xSin + yCos;\r\n  var y2 = y + xSin + yCos;\r\n  var y3 = y + xSin - yCos;\r\n  return createOrUpdate(\r\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\r\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\r\n    opt_extent);\r\n}\r\n\r\n\r\n/**\r\n * Get the height of an extent.\r\n * @param {Extent} extent Extent.\r\n * @return {number} Height.\r\n * @api\r\n */\r\nexport function getHeight(extent) {\r\n  return extent[3] - extent[1];\r\n}\r\n\r\n\r\n/**\r\n * @param {Extent} extent1 Extent 1.\r\n * @param {Extent} extent2 Extent 2.\r\n * @return {number} Intersection area.\r\n */\r\nexport function getIntersectionArea(extent1, extent2) {\r\n  var intersection = getIntersection(extent1, extent2);\r\n  return getArea(intersection);\r\n}\r\n\r\n\r\n/**\r\n * Get the intersection of two extents.\r\n * @param {Extent} extent1 Extent 1.\r\n * @param {Extent} extent2 Extent 2.\r\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\r\n * @return {Extent} Intersecting extent.\r\n * @api\r\n */\r\nexport function getIntersection(extent1, extent2, opt_extent) {\r\n  var intersection = opt_extent ? opt_extent : createEmpty();\r\n  if (intersects(extent1, extent2)) {\r\n    if (extent1[0] > extent2[0]) {\r\n      intersection[0] = extent1[0];\r\n    } else {\r\n      intersection[0] = extent2[0];\r\n    }\r\n    if (extent1[1] > extent2[1]) {\r\n      intersection[1] = extent1[1];\r\n    } else {\r\n      intersection[1] = extent2[1];\r\n    }\r\n    if (extent1[2] < extent2[2]) {\r\n      intersection[2] = extent1[2];\r\n    } else {\r\n      intersection[2] = extent2[2];\r\n    }\r\n    if (extent1[3] < extent2[3]) {\r\n      intersection[3] = extent1[3];\r\n    } else {\r\n      intersection[3] = extent2[3];\r\n    }\r\n  } else {\r\n    createOrUpdateEmpty(intersection);\r\n  }\r\n  return intersection;\r\n}\r\n\r\n\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @return {number} Margin.\r\n */\r\nexport function getMargin(extent) {\r\n  return getWidth(extent) + getHeight(extent);\r\n}\r\n\r\n\r\n/**\r\n * Get the size (width, height) of an extent.\r\n * @param {Extent} extent The extent.\r\n * @return {import(\"./size.js\").Size} The extent size.\r\n * @api\r\n */\r\nexport function getSize(extent) {\r\n  return [extent[2] - extent[0], extent[3] - extent[1]];\r\n}\r\n\r\n\r\n/**\r\n * Get the top left coordinate of an extent.\r\n * @param {Extent} extent Extent.\r\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\r\n * @api\r\n */\r\nexport function getTopLeft(extent) {\r\n  return [extent[0], extent[3]];\r\n}\r\n\r\n\r\n/**\r\n * Get the top right coordinate of an extent.\r\n * @param {Extent} extent Extent.\r\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\r\n * @api\r\n */\r\nexport function getTopRight(extent) {\r\n  return [extent[2], extent[3]];\r\n}\r\n\r\n\r\n/**\r\n * Get the width of an extent.\r\n * @param {Extent} extent Extent.\r\n * @return {number} Width.\r\n * @api\r\n */\r\nexport function getWidth(extent) {\r\n  return extent[2] - extent[0];\r\n}\r\n\r\n\r\n/**\r\n * Determine if one extent intersects another.\r\n * @param {Extent} extent1 Extent 1.\r\n * @param {Extent} extent2 Extent.\r\n * @return {boolean} The two extents intersect.\r\n * @api\r\n */\r\nexport function intersects(extent1, extent2) {\r\n  return extent1[0] <= extent2[2] &&\r\n      extent1[2] >= extent2[0] &&\r\n      extent1[1] <= extent2[3] &&\r\n      extent1[3] >= extent2[1];\r\n}\r\n\r\n\r\n/**\r\n * Determine if an extent is empty.\r\n * @param {Extent} extent Extent.\r\n * @return {boolean} Is empty.\r\n * @api\r\n */\r\nexport function isEmpty(extent) {\r\n  return extent[2] < extent[0] || extent[3] < extent[1];\r\n}\r\n\r\n\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @param {Extent=} opt_extent Extent.\r\n * @return {Extent} Extent.\r\n */\r\nexport function returnOrUpdate(extent, opt_extent) {\r\n  if (opt_extent) {\r\n    opt_extent[0] = extent[0];\r\n    opt_extent[1] = extent[1];\r\n    opt_extent[2] = extent[2];\r\n    opt_extent[3] = extent[3];\r\n    return opt_extent;\r\n  } else {\r\n    return extent;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Extent} extent Extent.\r\n * @param {number} value Value.\r\n */\r\nexport function scaleFromCenter(extent, value) {\r\n  var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\r\n  var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\r\n  extent[0] -= deltaX;\r\n  extent[2] += deltaX;\r\n  extent[1] -= deltaY;\r\n  extent[3] += deltaY;\r\n}\r\n\r\n\r\n/**\r\n * Determine if the segment between two coordinates intersects (crosses,\r\n * touches, or is contained by) the provided extent.\r\n * @param {Extent} extent The extent.\r\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\r\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\r\n * @return {boolean} The segment intersects the extent.\r\n */\r\nexport function intersectsSegment(extent, start, end) {\r\n  var intersects = false;\r\n  var startRel = coordinateRelationship(extent, start);\r\n  var endRel = coordinateRelationship(extent, end);\r\n  if (startRel === Relationship.INTERSECTING ||\r\n      endRel === Relationship.INTERSECTING) {\r\n    intersects = true;\r\n  } else {\r\n    var minX = extent[0];\r\n    var minY = extent[1];\r\n    var maxX = extent[2];\r\n    var maxY = extent[3];\r\n    var startX = start[0];\r\n    var startY = start[1];\r\n    var endX = end[0];\r\n    var endY = end[1];\r\n    var slope = (endY - startY) / (endX - startX);\r\n    var x, y;\r\n    if (!!(endRel & Relationship.ABOVE) &&\r\n        !(startRel & Relationship.ABOVE)) {\r\n      // potentially intersects top\r\n      x = endX - ((endY - maxY) / slope);\r\n      intersects = x >= minX && x <= maxX;\r\n    }\r\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\r\n        !(startRel & Relationship.RIGHT)) {\r\n      // potentially intersects right\r\n      y = endY - ((endX - maxX) * slope);\r\n      intersects = y >= minY && y <= maxY;\r\n    }\r\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\r\n        !(startRel & Relationship.BELOW)) {\r\n      // potentially intersects bottom\r\n      x = endX - ((endY - minY) / slope);\r\n      intersects = x >= minX && x <= maxX;\r\n    }\r\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\r\n        !(startRel & Relationship.LEFT)) {\r\n      // potentially intersects left\r\n      y = endY - ((endX - minX) * slope);\r\n      intersects = y >= minY && y <= maxY;\r\n    }\r\n\r\n  }\r\n  return intersects;\r\n}\r\n\r\n\r\n/**\r\n * Apply a transform function to the extent.\r\n * @param {Extent} extent Extent.\r\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\r\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\r\n * @param {Extent=} opt_extent Destination extent.\r\n * @return {Extent} Extent.\r\n * @api\r\n */\r\nexport function applyTransform(extent, transformFn, opt_extent) {\r\n  var coordinates = [\r\n    extent[0], extent[1],\r\n    extent[0], extent[3],\r\n    extent[2], extent[1],\r\n    extent[2], extent[3]\r\n  ];\r\n  transformFn(coordinates, coordinates, 2);\r\n  var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\r\n  var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\r\n  return _boundingExtentXYs(xs, ys, opt_extent);\r\n}\r\n\r\n//# sourceMappingURL=extent.js.map","/**\r\n * @module ol/proj/Units\r\n */\r\n\r\n/**\r\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\r\n * `'us-ft'`.\r\n * @enum {string}\r\n */\r\nvar Units = {\r\n  DEGREES: 'degrees',\r\n  FEET: 'ft',\r\n  METERS: 'm',\r\n  PIXELS: 'pixels',\r\n  TILE_PIXELS: 'tile-pixels',\r\n  USFEET: 'us-ft'\r\n};\r\n\r\n\r\n/**\r\n * Meters per unit lookup table.\r\n * @const\r\n * @type {Object<Units, number>}\r\n * @api\r\n */\r\nexport var METERS_PER_UNIT = {};\r\n// use the radius of the Normal sphere\r\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\r\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\r\nMETERS_PER_UNIT[Units.METERS] = 1;\r\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\r\n\r\nexport default Units;\r\n\r\n//# sourceMappingURL=Units.js.map","/**\r\n * @module ol/proj/Projection\r\n */\r\nimport {METERS_PER_UNIT} from './Units.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\r\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\r\n * proj4 projection is defined for `code`.\r\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\r\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\r\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\r\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\r\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\r\n * lookup table.\r\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\r\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\r\n * Function to determine resolution at a point. The function is called with a\r\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\r\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\r\n * the default {@link module:ol/proj#getPointResolution} function will be used.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Projection definition class. One of these is created for each projection\r\n * supported in the application and stored in the {@link module:ol/proj} namespace.\r\n * You can use these in applications, but this is not required, as API params\r\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\r\n * code will suffice.\r\n *\r\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\r\n * projection.\r\n *\r\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\r\n * with the following aliases:\r\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\r\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\r\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\r\n *     urn:x-ogc:def:crs:EPSG:4326\r\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\r\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\r\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\r\n *\r\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\r\n * be added using `proj4.defs()`. After all required projection definitions are\r\n * added, call the {@link module:ol/proj/proj4~register} function.\r\n *\r\n * @api\r\n */\r\nvar Projection = function Projection(options) {\r\n  /**\r\n   * @private\r\n   * @type {string}\r\n   */\r\n  this.code_ = options.code;\r\n\r\n  /**\r\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\r\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\r\n   * tile.\r\n   * @private\r\n   * @type {import(\"./Units.js\").default}\r\n   */\r\n  this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\r\n\r\n  /**\r\n   * Validity extent of the projection in projected coordinates. For projections\r\n   * with `TILE_PIXELS` units, this is the extent of the tile in\r\n   * tile pixel space.\r\n   * @private\r\n   * @type {import(\"../extent.js\").Extent}\r\n   */\r\n  this.extent_ = options.extent !== undefined ? options.extent : null;\r\n\r\n  /**\r\n   * Extent of the world in EPSG:4326. For projections with\r\n   * `TILE_PIXELS` units, this is the extent of the tile in\r\n   * projected coordinate space.\r\n   * @private\r\n   * @type {import(\"../extent.js\").Extent}\r\n   */\r\n  this.worldExtent_ = options.worldExtent !== undefined ?\r\n    options.worldExtent : null;\r\n\r\n  /**\r\n   * @private\r\n   * @type {string}\r\n   */\r\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\r\n    options.axisOrientation : 'enu';\r\n\r\n  /**\r\n   * @private\r\n   * @type {boolean}\r\n   */\r\n  this.global_ = options.global !== undefined ? options.global : false;\r\n\r\n  /**\r\n   * @private\r\n   * @type {boolean}\r\n   */\r\n  this.canWrapX_ = !!(this.global_ && this.extent_);\r\n\r\n  /**\r\n   * @private\r\n   * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\r\n   */\r\n  this.getPointResolutionFunc_ = options.getPointResolution;\r\n\r\n  /**\r\n   * @private\r\n   * @type {import(\"../tilegrid/TileGrid.js\").default}\r\n   */\r\n  this.defaultTileGrid_ = null;\r\n\r\n  /**\r\n   * @private\r\n   * @type {number|undefined}\r\n   */\r\n  this.metersPerUnit_ = options.metersPerUnit;\r\n};\r\n\r\n/**\r\n * @return {boolean} The projection is suitable for wrapping the x-axis\r\n */\r\nProjection.prototype.canWrapX = function canWrapX () {\r\n  return this.canWrapX_;\r\n};\r\n\r\n/**\r\n * Get the code for this projection, e.g. 'EPSG:4326'.\r\n * @return {string} Code.\r\n * @api\r\n */\r\nProjection.prototype.getCode = function getCode () {\r\n  return this.code_;\r\n};\r\n\r\n/**\r\n * Get the validity extent for this projection.\r\n * @return {import(\"../extent.js\").Extent} Extent.\r\n * @api\r\n */\r\nProjection.prototype.getExtent = function getExtent () {\r\n  return this.extent_;\r\n};\r\n\r\n/**\r\n * Get the units of this projection.\r\n * @return {import(\"./Units.js\").default} Units.\r\n * @api\r\n */\r\nProjection.prototype.getUnits = function getUnits () {\r\n  return this.units_;\r\n};\r\n\r\n/**\r\n * Get the amount of meters per unit of this projection.If the projection is\r\n * not configured with `metersPerUnit` or a units identifier, the return is\r\n * `undefined`.\r\n * @return {number|undefined} Meters.\r\n * @api\r\n */\r\nProjection.prototype.getMetersPerUnit = function getMetersPerUnit () {\r\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\r\n};\r\n\r\n/**\r\n * Get the world extent for this projection.\r\n * @return {import(\"../extent.js\").Extent} Extent.\r\n * @api\r\n */\r\nProjection.prototype.getWorldExtent = function getWorldExtent () {\r\n  return this.worldExtent_;\r\n};\r\n\r\n/**\r\n * Get the axis orientation of this projection.\r\n * Example values are:\r\n * enu - the default easting, northing, elevation.\r\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\r\n *   or south orientated transverse mercator.\r\n * wnu - westing, northing, up - some planetary coordinate systems have\r\n *   \"west positive\" coordinate systems\r\n * @return {string} Axis orientation.\r\n * @api\r\n */\r\nProjection.prototype.getAxisOrientation = function getAxisOrientation () {\r\n  return this.axisOrientation_;\r\n};\r\n\r\n/**\r\n * Is this projection a global projection which spans the whole world?\r\n * @return {boolean} Whether the projection is global.\r\n * @api\r\n */\r\nProjection.prototype.isGlobal = function isGlobal () {\r\n  return this.global_;\r\n};\r\n\r\n/**\r\n * Set if the projection is a global projection which spans the whole world\r\n * @param {boolean} global Whether the projection is global.\r\n * @api\r\n */\r\nProjection.prototype.setGlobal = function setGlobal (global) {\r\n  this.global_ = global;\r\n  this.canWrapX_ = !!(global && this.extent_);\r\n};\r\n\r\n/**\r\n * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\r\n */\r\nProjection.prototype.getDefaultTileGrid = function getDefaultTileGrid () {\r\n  return this.defaultTileGrid_;\r\n};\r\n\r\n/**\r\n * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\r\n */\r\nProjection.prototype.setDefaultTileGrid = function setDefaultTileGrid (tileGrid) {\r\n  this.defaultTileGrid_ = tileGrid;\r\n};\r\n\r\n/**\r\n * Set the validity extent for this projection.\r\n * @param {import(\"../extent.js\").Extent} extent Extent.\r\n * @api\r\n */\r\nProjection.prototype.setExtent = function setExtent (extent) {\r\n  this.extent_ = extent;\r\n  this.canWrapX_ = !!(this.global_ && extent);\r\n};\r\n\r\n/**\r\n * Set the world extent for this projection.\r\n * @param {import(\"../extent.js\").Extent} worldExtent World extent\r\n *   [minlon, minlat, maxlon, maxlat].\r\n * @api\r\n */\r\nProjection.prototype.setWorldExtent = function setWorldExtent (worldExtent) {\r\n  this.worldExtent_ = worldExtent;\r\n};\r\n\r\n/**\r\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\r\n * for this projection.\r\n * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\r\n * @api\r\n */\r\nProjection.prototype.setGetPointResolution = function setGetPointResolution (func) {\r\n  this.getPointResolutionFunc_ = func;\r\n};\r\n\r\n/**\r\n * Get the custom point resolution function for this projection (if set).\r\n * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\r\n * resolution function (if set).\r\n */\r\nProjection.prototype.getPointResolutionFunc = function getPointResolutionFunc () {\r\n  return this.getPointResolutionFunc_;\r\n};\r\n\r\nexport default Projection;\r\n\r\n//# sourceMappingURL=Projection.js.map","/**\r\n * @module ol/proj/epsg3857\r\n */\r\nimport {cosh} from '../math.js';\r\nimport Projection from './Projection.js';\r\nimport Units from './Units.js';\r\n\r\n\r\n/**\r\n * Radius of WGS84 sphere\r\n *\r\n * @const\r\n * @type {number}\r\n */\r\nexport var RADIUS = 6378137;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var HALF_SIZE = Math.PI * RADIUS;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {import(\"../extent.js\").Extent}\r\n */\r\nexport var EXTENT = [\r\n  -HALF_SIZE, -HALF_SIZE,\r\n  HALF_SIZE, HALF_SIZE\r\n];\r\n\r\n\r\n/**\r\n * @const\r\n * @type {import(\"../extent.js\").Extent}\r\n */\r\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Projection object for web/spherical Mercator (EPSG:3857).\r\n */\r\nvar EPSG3857Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG3857Projection(code) {\r\n    Projection.call(this, {\r\n      code: code,\r\n      units: Units.METERS,\r\n      extent: EXTENT,\r\n      global: true,\r\n      worldExtent: WORLD_EXTENT,\r\n      getPointResolution: function(resolution, point) {\r\n        return resolution / cosh(point[1] / RADIUS);\r\n      }\r\n    });\r\n\r\n  }\n\n  if ( Projection ) EPSG3857Projection.__proto__ = Projection;\n  EPSG3857Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG3857Projection.prototype.constructor = EPSG3857Projection;\n\n  return EPSG3857Projection;\n}(Projection));\r\n\r\n\r\n/**\r\n * Projections equal to EPSG:3857.\r\n *\r\n * @const\r\n * @type {Array<import(\"./Projection.js\").default>}\r\n */\r\nexport var PROJECTIONS = [\r\n  new EPSG3857Projection('EPSG:3857'),\r\n  new EPSG3857Projection('EPSG:102100'),\r\n  new EPSG3857Projection('EPSG:102113'),\r\n  new EPSG3857Projection('EPSG:900913'),\r\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\r\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\r\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\r\n];\r\n\r\n\r\n/**\r\n * Transformation from EPSG:4326 to EPSG:3857.\r\n *\r\n * @param {Array<number>} input Input array of coordinate values.\r\n * @param {Array<number>=} opt_output Output array of coordinate values.\r\n * @param {number=} opt_dimension Dimension (default is `2`).\r\n * @return {Array<number>} Output array of coordinate values.\r\n */\r\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\r\n  var length = input.length;\r\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\r\n  var output = opt_output;\r\n  if (output === undefined) {\r\n    if (dimension > 2) {\r\n      // preserve values beyond second dimension\r\n      output = input.slice();\r\n    } else {\r\n      output = new Array(length);\r\n    }\r\n  }\r\n  var halfSize = HALF_SIZE;\r\n  for (var i = 0; i < length; i += dimension) {\r\n    output[i] = halfSize * input[i] / 180;\r\n    var y = RADIUS *\r\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\r\n    if (y > halfSize) {\r\n      y = halfSize;\r\n    } else if (y < -halfSize) {\r\n      y = -halfSize;\r\n    }\r\n    output[i + 1] = y;\r\n  }\r\n  return output;\r\n}\r\n\r\n\r\n/**\r\n * Transformation from EPSG:3857 to EPSG:4326.\r\n *\r\n * @param {Array<number>} input Input array of coordinate values.\r\n * @param {Array<number>=} opt_output Output array of coordinate values.\r\n * @param {number=} opt_dimension Dimension (default is `2`).\r\n * @return {Array<number>} Output array of coordinate values.\r\n */\r\nexport function toEPSG4326(input, opt_output, opt_dimension) {\r\n  var length = input.length;\r\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\r\n  var output = opt_output;\r\n  if (output === undefined) {\r\n    if (dimension > 2) {\r\n      // preserve values beyond second dimension\r\n      output = input.slice();\r\n    } else {\r\n      output = new Array(length);\r\n    }\r\n  }\r\n  for (var i = 0; i < length; i += dimension) {\r\n    output[i] = 180 * input[i] / HALF_SIZE;\r\n    output[i + 1] = 360 * Math.atan(\r\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\r\n  }\r\n  return output;\r\n}\r\n\r\n//# sourceMappingURL=epsg3857.js.map","/**\r\n * @module ol/proj/epsg4326\r\n */\r\nimport Projection from './Projection.js';\r\nimport Units from './Units.js';\r\n\r\n\r\n/**\r\n * Semi-major radius of the WGS84 ellipsoid.\r\n *\r\n * @const\r\n * @type {number}\r\n */\r\nexport var RADIUS = 6378137;\r\n\r\n\r\n/**\r\n * Extent of the EPSG:4326 projection which is the whole world.\r\n *\r\n * @const\r\n * @type {import(\"../extent.js\").Extent}\r\n */\r\nexport var EXTENT = [-180, -90, 180, 90];\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\r\n *\r\n * Note that OpenLayers does not strictly comply with the EPSG definition.\r\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\r\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\r\n */\r\nvar EPSG4326Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG4326Projection(code, opt_axisOrientation) {\r\n    Projection.call(this, {\r\n      code: code,\r\n      units: Units.DEGREES,\r\n      extent: EXTENT,\r\n      axisOrientation: opt_axisOrientation,\r\n      global: true,\r\n      metersPerUnit: METERS_PER_UNIT,\r\n      worldExtent: EXTENT\r\n    });\r\n\r\n  }\n\n  if ( Projection ) EPSG4326Projection.__proto__ = Projection;\n  EPSG4326Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG4326Projection.prototype.constructor = EPSG4326Projection;\n\n  return EPSG4326Projection;\n}(Projection));\r\n\r\n\r\n/**\r\n * Projections equal to EPSG:4326.\r\n *\r\n * @const\r\n * @type {Array<import(\"./Projection.js\").default>}\r\n */\r\nexport var PROJECTIONS = [\r\n  new EPSG4326Projection('CRS:84'),\r\n  new EPSG4326Projection('EPSG:4326', 'neu'),\r\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\r\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\r\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\r\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\r\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\r\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\r\n];\r\n\r\n//# sourceMappingURL=epsg4326.js.map","/**\r\n * @module ol/proj/projections\r\n */\r\n\r\n\r\n/**\r\n * @type {Object<string, import(\"./Projection.js\").default>}\r\n */\r\nvar cache = {};\r\n\r\n\r\n/**\r\n * Clear the projections cache.\r\n */\r\nexport function clear() {\r\n  cache = {};\r\n}\r\n\r\n\r\n/**\r\n * Get a cached projection by code.\r\n * @param {string} code The code for the projection.\r\n * @return {import(\"./Projection.js\").default} The projection (if cached).\r\n */\r\nexport function get(code) {\r\n  return cache[code] || null;\r\n}\r\n\r\n\r\n/**\r\n * Add a projection to the cache.\r\n * @param {string} code The projection code.\r\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\r\n */\r\nexport function add(code, projection) {\r\n  cache[code] = projection;\r\n}\r\n\r\n//# sourceMappingURL=projections.js.map","/**\r\n * @module ol/proj/transforms\r\n */\r\nimport {isEmpty} from '../obj.js';\r\n\r\n\r\n/**\r\n * @private\r\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\r\n */\r\nvar transforms = {};\r\n\r\n\r\n/**\r\n * Clear the transform cache.\r\n */\r\nexport function clear() {\r\n  transforms = {};\r\n}\r\n\r\n\r\n/**\r\n * Registers a conversion function to convert coordinates from the source\r\n * projection to the destination projection.\r\n *\r\n * @param {import(\"./Projection.js\").default} source Source.\r\n * @param {import(\"./Projection.js\").default} destination Destination.\r\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\r\n */\r\nexport function add(source, destination, transformFn) {\r\n  var sourceCode = source.getCode();\r\n  var destinationCode = destination.getCode();\r\n  if (!(sourceCode in transforms)) {\r\n    transforms[sourceCode] = {};\r\n  }\r\n  transforms[sourceCode][destinationCode] = transformFn;\r\n}\r\n\r\n\r\n/**\r\n * Unregisters the conversion function to convert coordinates from the source\r\n * projection to the destination projection.  This method is used to clean up\r\n * cached transforms during testing.\r\n *\r\n * @param {import(\"./Projection.js\").default} source Source projection.\r\n * @param {import(\"./Projection.js\").default} destination Destination projection.\r\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\r\n */\r\nexport function remove(source, destination) {\r\n  var sourceCode = source.getCode();\r\n  var destinationCode = destination.getCode();\r\n  var transform = transforms[sourceCode][destinationCode];\r\n  delete transforms[sourceCode][destinationCode];\r\n  if (isEmpty(transforms[sourceCode])) {\r\n    delete transforms[sourceCode];\r\n  }\r\n  return transform;\r\n}\r\n\r\n\r\n/**\r\n * Get a transform given a source code and a destination code.\r\n * @param {string} sourceCode The code for the source projection.\r\n * @param {string} destinationCode The code for the destination projection.\r\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\r\n */\r\nexport function get(sourceCode, destinationCode) {\r\n  var transform;\r\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\r\n    transform = transforms[sourceCode][destinationCode];\r\n  }\r\n  return transform;\r\n}\r\n\r\n//# sourceMappingURL=transforms.js.map","/**\r\n * @module ol/proj\r\n */\r\n\r\n/**\r\n * The ol/proj module stores:\r\n * * a list of {@link module:ol/proj/Projection}\r\n * objects, one for each projection supported by the application\r\n * * a list of transform functions needed to convert coordinates in one projection\r\n * into another.\r\n *\r\n * The static functions are the methods used to maintain these.\r\n * Each transform function can handle not only simple coordinate pairs, but also\r\n * large arrays of coordinates such as vector geometries.\r\n *\r\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\r\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\r\n * for example by Bing Maps or OpenStreetMap), together with the relevant\r\n * transform functions.\r\n *\r\n * Additional transforms may be added by using the http://proj4js.org/\r\n * library (version 2.2 or later). You can use the full build supplied by\r\n * Proj4js, or create a custom build to support those projections you need; see\r\n * the Proj4js website for how to do this. You also need the Proj4js definitions\r\n * for the required projections. These definitions can be obtained from\r\n * https://epsg.io/, and are a JS function, so can be loaded in a script\r\n * tag (as in the examples) or pasted into your application.\r\n *\r\n * After all required projection definitions are added to proj4's registry (by\r\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\r\n * package. Existing transforms are not changed by this function. See\r\n * examples/wms-image-custom-proj for an example of this.\r\n *\r\n * Additional projection definitions can be registered with `proj4.defs()` any\r\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\r\n * know in advance what projections are needed, you can initially load minimal\r\n * support and then load whichever are requested.\r\n *\r\n * Note that Proj4js does not support projection extents. If you want to add\r\n * one for creating default tile grids, you can add it after the Projection\r\n * object has been created with `setExtent`, for example,\r\n * `get('EPSG:1234').setExtent(extent)`.\r\n *\r\n * In addition to Proj4js support, any transform functions can be added with\r\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\r\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\r\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\r\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\r\n * examples/wms-custom-proj for an example of this.\r\n *\r\n * Note that if no transforms are needed and you only need to define the\r\n * projection, just add a {@link module:ol/proj/Projection} with\r\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\r\n * this.\r\n */\r\nimport {getDistance} from './sphere.js';\r\nimport {applyTransform} from './extent.js';\r\nimport {modulo} from './math.js';\r\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\r\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\r\nimport Projection from './proj/Projection.js';\r\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\r\nimport * as projections from './proj/projections.js';\r\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\r\n\r\n\r\n/**\r\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\r\n * string or undefined.\r\n * @typedef {Projection|string|undefined} ProjectionLike\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * A transform function accepts an array of input coordinate values, an optional\r\n * output array, and an optional dimension (default should be 2).  The function\r\n * transforms the input coordinate values, populates the output array, and\r\n * returns the output array.\r\n *\r\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\r\n * @api\r\n */\r\n\r\n\r\nexport {METERS_PER_UNIT};\r\n\r\nexport {Projection};\r\n\r\n/**\r\n * @param {Array<number>} input Input coordinate array.\r\n * @param {Array<number>=} opt_output Output array of coordinate values.\r\n * @param {number=} opt_dimension Dimension.\r\n * @return {Array<number>} Output coordinate array (new array, same coordinate\r\n *     values).\r\n */\r\nexport function cloneTransform(input, opt_output, opt_dimension) {\r\n  var output;\r\n  if (opt_output !== undefined) {\r\n    for (var i = 0, ii = input.length; i < ii; ++i) {\r\n      opt_output[i] = input[i];\r\n    }\r\n    output = opt_output;\r\n  } else {\r\n    output = input.slice();\r\n  }\r\n  return output;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} input Input coordinate array.\r\n * @param {Array<number>=} opt_output Output array of coordinate values.\r\n * @param {number=} opt_dimension Dimension.\r\n * @return {Array<number>} Input coordinate array (same array as input).\r\n */\r\nexport function identityTransform(input, opt_output, opt_dimension) {\r\n  if (opt_output !== undefined && input !== opt_output) {\r\n    for (var i = 0, ii = input.length; i < ii; ++i) {\r\n      opt_output[i] = input[i];\r\n    }\r\n    input = opt_output;\r\n  }\r\n  return input;\r\n}\r\n\r\n\r\n/**\r\n * Add a Projection object to the list of supported projections that can be\r\n * looked up by their code.\r\n *\r\n * @param {Projection} projection Projection instance.\r\n * @api\r\n */\r\nexport function addProjection(projection) {\r\n  projections.add(projection.getCode(), projection);\r\n  addTransformFunc(projection, projection, cloneTransform);\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<Projection>} projections Projections.\r\n */\r\nexport function addProjections(projections) {\r\n  projections.forEach(addProjection);\r\n}\r\n\r\n\r\n/**\r\n * Fetches a Projection object for the code specified.\r\n *\r\n * @param {ProjectionLike} projectionLike Either a code string which is\r\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\r\n *     existing projection object, or undefined.\r\n * @return {Projection} Projection object, or null if not in list.\r\n * @api\r\n */\r\nexport function get(projectionLike) {\r\n  return typeof projectionLike === 'string' ?\r\n    projections.get(/** @type {string} */ (projectionLike)) :\r\n    (/** @type {Projection} */ (projectionLike) || null);\r\n}\r\n\r\n\r\n/**\r\n * Get the resolution of the point in degrees or distance units.\r\n * For projections with degrees as the unit this will simply return the\r\n * provided resolution. For other projections the point resolution is\r\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\r\n * measuring its width and height on the normal sphere,\r\n * and taking the average of the width and height.\r\n * A custom function can be provided for a specific projection, either\r\n * by setting the `getPointResolution` option in the\r\n * {@link module:ol/proj/Projection~Projection} constructor or by using\r\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\r\n * projection object.\r\n * @param {ProjectionLike} projection The projection.\r\n * @param {number} resolution Nominal resolution in projection units.\r\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\r\n * @param {Units=} opt_units Units to get the point resolution in.\r\n * Default is the projection's units.\r\n * @return {number} Point resolution.\r\n * @api\r\n */\r\nexport function getPointResolution(projection, resolution, point, opt_units) {\r\n  projection = get(projection);\r\n  var pointResolution;\r\n  var getter = projection.getPointResolutionFunc();\r\n  if (getter) {\r\n    pointResolution = getter(resolution, point);\r\n  } else {\r\n    var units = projection.getUnits();\r\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\r\n      pointResolution = resolution;\r\n    } else {\r\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\r\n      // measuring its width and height on the normal sphere, and taking the\r\n      // average of the width and height.\r\n      var toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\r\n      var vertices = [\r\n        point[0] - resolution / 2, point[1],\r\n        point[0] + resolution / 2, point[1],\r\n        point[0], point[1] - resolution / 2,\r\n        point[0], point[1] + resolution / 2\r\n      ];\r\n      vertices = toEPSG4326(vertices, vertices, 2);\r\n      var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\r\n      var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\r\n      pointResolution = (width + height) / 2;\r\n      var metersPerUnit = opt_units ?\r\n        METERS_PER_UNIT[opt_units] :\r\n        projection.getMetersPerUnit();\r\n      if (metersPerUnit !== undefined) {\r\n        pointResolution /= metersPerUnit;\r\n      }\r\n    }\r\n  }\r\n  return pointResolution;\r\n}\r\n\r\n\r\n/**\r\n * Registers transformation functions that don't alter coordinates. Those allow\r\n * to transform between projections with equal meaning.\r\n *\r\n * @param {Array<Projection>} projections Projections.\r\n * @api\r\n */\r\nexport function addEquivalentProjections(projections) {\r\n  addProjections(projections);\r\n  projections.forEach(function(source) {\r\n    projections.forEach(function(destination) {\r\n      if (source !== destination) {\r\n        addTransformFunc(source, destination, cloneTransform);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n\r\n/**\r\n * Registers transformation functions to convert coordinates in any projection\r\n * in projection1 to any projection in projection2.\r\n *\r\n * @param {Array<Projection>} projections1 Projections with equal\r\n *     meaning.\r\n * @param {Array<Projection>} projections2 Projections with equal\r\n *     meaning.\r\n * @param {TransformFunction} forwardTransform Transformation from any\r\n *   projection in projection1 to any projection in projection2.\r\n * @param {TransformFunction} inverseTransform Transform from any projection\r\n *   in projection2 to any projection in projection1..\r\n */\r\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\r\n  projections1.forEach(function(projection1) {\r\n    projections2.forEach(function(projection2) {\r\n      addTransformFunc(projection1, projection2, forwardTransform);\r\n      addTransformFunc(projection2, projection1, inverseTransform);\r\n    });\r\n  });\r\n}\r\n\r\n\r\n/**\r\n * Clear all cached projections and transforms.\r\n */\r\nexport function clearAllProjections() {\r\n  projections.clear();\r\n  clearTransformFuncs();\r\n}\r\n\r\n\r\n/**\r\n * @param {Projection|string|undefined} projection Projection.\r\n * @param {string} defaultCode Default code.\r\n * @return {Projection} Projection.\r\n */\r\nexport function createProjection(projection, defaultCode) {\r\n  if (!projection) {\r\n    return get(defaultCode);\r\n  } else if (typeof projection === 'string') {\r\n    return get(projection);\r\n  } else {\r\n    return (\r\n      /** @type {Projection} */ (projection)\r\n    );\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\r\n * function.\r\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\r\n *     transform.\r\n * @return {TransformFunction} Transform function.\r\n */\r\nexport function createTransformFromCoordinateTransform(coordTransform) {\r\n  return (\r\n    /**\r\n     * @param {Array<number>} input Input.\r\n     * @param {Array<number>=} opt_output Output.\r\n     * @param {number=} opt_dimension Dimension.\r\n     * @return {Array<number>} Output.\r\n     */\r\n    function(input, opt_output, opt_dimension) {\r\n      var length = input.length;\r\n      var dimension = opt_dimension !== undefined ? opt_dimension : 2;\r\n      var output = opt_output !== undefined ? opt_output : new Array(length);\r\n      for (var i = 0; i < length; i += dimension) {\r\n        var point = coordTransform([input[i], input[i + 1]]);\r\n        output[i] = point[0];\r\n        output[i + 1] = point[1];\r\n        for (var j = dimension - 1; j >= 2; --j) {\r\n          output[i + j] = input[i + j];\r\n        }\r\n      }\r\n      return output;\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * Registers coordinate transform functions to convert coordinates between the\r\n * source projection and the destination projection.\r\n * The forward and inverse functions convert coordinate pairs; this function\r\n * converts these into the functions used internally which also handle\r\n * extents and coordinate arrays.\r\n *\r\n * @param {ProjectionLike} source Source projection.\r\n * @param {ProjectionLike} destination Destination projection.\r\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\r\n *     function (that is, from the source projection to the destination\r\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\r\n *     the transformed {@link module:ol/coordinate~Coordinate}.\r\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\r\n *     function (that is, from the destination projection to the source\r\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\r\n *     the transformed {@link module:ol/coordinate~Coordinate}.\r\n * @api\r\n */\r\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\r\n  var sourceProj = get(source);\r\n  var destProj = get(destination);\r\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\r\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\r\n}\r\n\r\n\r\n/**\r\n * Transforms a coordinate from longitude/latitude to a different projection.\r\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\r\n *     an array with longitude as 1st and latitude as 2nd element.\r\n * @param {ProjectionLike=} opt_projection Target projection. The\r\n *     default is Web Mercator, i.e. 'EPSG:3857'.\r\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\r\n * @api\r\n */\r\nexport function fromLonLat(coordinate, opt_projection) {\r\n  return transform(coordinate, 'EPSG:4326',\r\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\r\n}\r\n\r\n\r\n/**\r\n * Transforms a coordinate to longitude/latitude.\r\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\r\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\r\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\r\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\r\n *     with longitude as 1st and latitude as 2nd element.\r\n * @api\r\n */\r\nexport function toLonLat(coordinate, opt_projection) {\r\n  var lonLat = transform(coordinate,\r\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\r\n  var lon = lonLat[0];\r\n  if (lon < -180 || lon > 180) {\r\n    lonLat[0] = modulo(lon + 180, 360) - 180;\r\n  }\r\n  return lonLat;\r\n}\r\n\r\n\r\n/**\r\n * Checks if two projections are the same, that is every coordinate in one\r\n * projection does represent the same geographic point as the same coordinate in\r\n * the other projection.\r\n *\r\n * @param {Projection} projection1 Projection 1.\r\n * @param {Projection} projection2 Projection 2.\r\n * @return {boolean} Equivalent.\r\n * @api\r\n */\r\nexport function equivalent(projection1, projection2) {\r\n  if (projection1 === projection2) {\r\n    return true;\r\n  }\r\n  var equalUnits = projection1.getUnits() === projection2.getUnits();\r\n  if (projection1.getCode() === projection2.getCode()) {\r\n    return equalUnits;\r\n  } else {\r\n    var transformFunc = getTransformFromProjections(projection1, projection2);\r\n    return transformFunc === cloneTransform && equalUnits;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Searches in the list of transform functions for the function for converting\r\n * coordinates from the source projection to the destination projection.\r\n *\r\n * @param {Projection} sourceProjection Source Projection object.\r\n * @param {Projection} destinationProjection Destination Projection\r\n *     object.\r\n * @return {TransformFunction} Transform function.\r\n */\r\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\r\n  var sourceCode = sourceProjection.getCode();\r\n  var destinationCode = destinationProjection.getCode();\r\n  var transformFunc = getTransformFunc(sourceCode, destinationCode);\r\n  if (!transformFunc) {\r\n    transformFunc = identityTransform;\r\n  }\r\n  return transformFunc;\r\n}\r\n\r\n\r\n/**\r\n * Given the projection-like objects, searches for a transformation\r\n * function to convert a coordinates array from the source projection to the\r\n * destination projection.\r\n *\r\n * @param {ProjectionLike} source Source.\r\n * @param {ProjectionLike} destination Destination.\r\n * @return {TransformFunction} Transform function.\r\n * @api\r\n */\r\nexport function getTransform(source, destination) {\r\n  var sourceProjection = get(source);\r\n  var destinationProjection = get(destination);\r\n  return getTransformFromProjections(sourceProjection, destinationProjection);\r\n}\r\n\r\n\r\n/**\r\n * Transforms a coordinate from source projection to destination projection.\r\n * This returns a new coordinate (and does not modify the original).\r\n *\r\n * See {@link module:ol/proj~transformExtent} for extent transformation.\r\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\r\n * subclasses for geometry transforms.\r\n *\r\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\r\n * @param {ProjectionLike} source Source projection-like.\r\n * @param {ProjectionLike} destination Destination projection-like.\r\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\r\n * @api\r\n */\r\nexport function transform(coordinate, source, destination) {\r\n  var transformFunc = getTransform(source, destination);\r\n  return transformFunc(coordinate, undefined, coordinate.length);\r\n}\r\n\r\n\r\n/**\r\n * Transforms an extent from source projection to destination projection.  This\r\n * returns a new extent (and does not modify the original).\r\n *\r\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\r\n * @param {ProjectionLike} source Source projection-like.\r\n * @param {ProjectionLike} destination Destination projection-like.\r\n * @return {import(\"./extent.js\").Extent} The transformed extent.\r\n * @api\r\n */\r\nexport function transformExtent(extent, source, destination) {\r\n  var transformFunc = getTransform(source, destination);\r\n  return applyTransform(extent, transformFunc);\r\n}\r\n\r\n\r\n/**\r\n * Transforms the given point to the destination projection.\r\n *\r\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\r\n * @param {Projection} sourceProjection Source projection.\r\n * @param {Projection} destinationProjection Destination projection.\r\n * @return {import(\"./coordinate.js\").Coordinate} Point.\r\n */\r\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\r\n  var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\r\n  return transformFunc(point);\r\n}\r\n\r\n/**\r\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\r\n * by when this module is executed and should only need to be called again after\r\n * `clearAllProjections()` is called (e.g. in tests).\r\n */\r\nexport function addCommon() {\r\n  // Add transformations that don't alter coordinates to convert within set of\r\n  // projections with equal meaning.\r\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\r\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\r\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\r\n  // coordinates and back.\r\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\r\n}\r\n\r\naddCommon();\r\n\r\n//# sourceMappingURL=proj.js.map","/**\r\n * @module ol/control/MousePosition\r\n */\r\nimport {listen} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {getChangeEventType} from '../Object.js';\r\nimport Control from './Control.js';\r\nimport {getTransformFromProjections, identityTransform, get as getProjection} from '../proj.js';\r\n\r\n\r\n/**\r\n * @type {string}\r\n */\r\nvar PROJECTION = 'projection';\r\n\r\n/**\r\n * @type {string}\r\n */\r\nvar COORDINATE_FORMAT = 'coordinateFormat';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-mouse-position'] CSS class name.\r\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\r\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the\r\n * control should be re-rendered. This is called in a `requestAnimationFrame`\r\n * callback.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the\r\n * control to be rendered outside of the map's viewport.\r\n * @property {string} [undefinedHTML='&#160;'] Markup to show when coordinates are not\r\n * available (e.g. when the pointer leaves the map viewport).  By default, the last position\r\n * will be replaced with `'&#160;'` (`&nbsp;`) when the pointer leaves the viewport.  To\r\n * retain the last rendered position, set this option to something falsey (like an empty\r\n * string `''`).\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * A control to show the 2D coordinates of the mouse cursor. By default, these\r\n * are in the view projection, but can be in any supported projection.\r\n * By default the control is shown in the top right corner of the map, but this\r\n * can be changed by using the css selector `.ol-mouse-position`.\r\n *\r\n * On touch devices, which usually do not have a mouse cursor, the coordinates\r\n * of the currently touched position are shown.\r\n *\r\n * @api\r\n */\r\nvar MousePosition = /*@__PURE__*/(function (Control) {\n  function MousePosition(opt_options) {\r\n\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    var element = document.createElement('div');\r\n    element.className = options.className !== undefined ? options.className : 'ol-mouse-position';\r\n\r\n    Control.call(this, {\r\n      element: element,\r\n      render: options.render || render,\r\n      target: options.target\r\n    });\r\n\r\n    listen(this,\r\n      getChangeEventType(PROJECTION),\r\n      this.handleProjectionChanged_, this);\r\n\r\n    if (options.coordinateFormat) {\r\n      this.setCoordinateFormat(options.coordinateFormat);\r\n    }\r\n    if (options.projection) {\r\n      this.setProjection(options.projection);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.undefinedHTML_ = options.undefinedHTML !== undefined ? options.undefinedHTML : '&#160;';\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.renderOnMouseOut_ = !!this.undefinedHTML_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.renderedHTML_ = element.innerHTML;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../proj/Projection.js\").default}\r\n     */\r\n    this.mapProjection_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../proj.js\").TransformFunction}\r\n     */\r\n    this.transform_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../pixel.js\").Pixel}\r\n     */\r\n    this.lastMouseMovePixel_ = null;\r\n\r\n  }\n\n  if ( Control ) MousePosition.__proto__ = Control;\n  MousePosition.prototype = Object.create( Control && Control.prototype );\n  MousePosition.prototype.constructor = MousePosition;\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  MousePosition.prototype.handleProjectionChanged_ = function handleProjectionChanged_ () {\r\n    this.transform_ = null;\r\n  };\r\n\r\n  /**\r\n   * Return the coordinate format type used to render the current position or\r\n   * undefined.\r\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\r\n   *     position in.\r\n   * @observable\r\n   * @api\r\n   */\r\n  MousePosition.prototype.getCoordinateFormat = function getCoordinateFormat () {\r\n    return (\r\n      /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (this.get(COORDINATE_FORMAT))\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return the projection that is used to report the mouse position.\r\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\r\n   *     position in.\r\n   * @observable\r\n   * @api\r\n   */\r\n  MousePosition.prototype.getProjection = function getProjection () {\r\n    return (\r\n      /** @type {import(\"../proj/Projection.js\").default|undefined} */ (this.get(PROJECTION))\r\n    );\r\n  };\r\n\r\n  /**\r\n   * @param {Event} event Browser event.\r\n   * @protected\r\n   */\r\n  MousePosition.prototype.handleMouseMove = function handleMouseMove (event) {\r\n    var map = this.getMap();\r\n    this.lastMouseMovePixel_ = map.getEventPixel(event);\r\n    this.updateHTML_(this.lastMouseMovePixel_);\r\n  };\r\n\r\n  /**\r\n   * @param {Event} event Browser event.\r\n   * @protected\r\n   */\r\n  MousePosition.prototype.handleMouseOut = function handleMouseOut (event) {\r\n    this.updateHTML_(null);\r\n    this.lastMouseMovePixel_ = null;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  MousePosition.prototype.setMap = function setMap (map) {\r\n    Control.prototype.setMap.call(this, map);\r\n    if (map) {\r\n      var viewport = map.getViewport();\r\n      this.listenerKeys.push(\r\n        listen(viewport, EventType.MOUSEMOVE, this.handleMouseMove, this),\r\n        listen(viewport, EventType.TOUCHSTART, this.handleMouseMove, this)\r\n      );\r\n      if (this.renderOnMouseOut_) {\r\n        this.listenerKeys.push(\r\n          listen(viewport, EventType.MOUSEOUT, this.handleMouseOut, this),\r\n          listen(viewport, EventType.TOUCHEND, this.handleMouseOut, this)\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Set the coordinate format type used to render the current position.\r\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\r\n   *     position in.\r\n   * @observable\r\n   * @api\r\n   */\r\n  MousePosition.prototype.setCoordinateFormat = function setCoordinateFormat (format) {\r\n    this.set(COORDINATE_FORMAT, format);\r\n  };\r\n\r\n  /**\r\n   * Set the projection that is used to report the mouse position.\r\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\r\n   *     position in.\r\n   * @observable\r\n   * @api\r\n   */\r\n  MousePosition.prototype.setProjection = function setProjection (projection) {\r\n    this.set(PROJECTION, getProjection(projection));\r\n  };\r\n\r\n  /**\r\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\r\n   * @private\r\n   */\r\n  MousePosition.prototype.updateHTML_ = function updateHTML_ (pixel) {\r\n    var html = this.undefinedHTML_;\r\n    if (pixel && this.mapProjection_) {\r\n      if (!this.transform_) {\r\n        var projection = this.getProjection();\r\n        if (projection) {\r\n          this.transform_ = getTransformFromProjections(\r\n            this.mapProjection_, projection);\r\n        } else {\r\n          this.transform_ = identityTransform;\r\n        }\r\n      }\r\n      var map = this.getMap();\r\n      var coordinate = map.getCoordinateFromPixel(pixel);\r\n      if (coordinate) {\r\n        this.transform_(coordinate, coordinate);\r\n        var coordinateFormat = this.getCoordinateFormat();\r\n        if (coordinateFormat) {\r\n          html = coordinateFormat(coordinate);\r\n        } else {\r\n          html = coordinate.toString();\r\n        }\r\n      }\r\n    }\r\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\r\n      this.element.innerHTML = html;\r\n      this.renderedHTML_ = html;\r\n    }\r\n  };\n\n  return MousePosition;\n}(Control));\r\n\r\n\r\n/**\r\n * Update the projection. Rendering of the coordinates is done in\r\n * `handleMouseMove` and `handleMouseUp`.\r\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\r\n * @this {MousePosition}\r\n * @api\r\n */\r\nexport function render(mapEvent) {\r\n  var frameState = mapEvent.frameState;\r\n  if (!frameState) {\r\n    this.mapProjection_ = null;\r\n  } else {\r\n    if (this.mapProjection_ != frameState.viewState.projection) {\r\n      this.mapProjection_ = frameState.viewState.projection;\r\n      this.transform_ = null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default MousePosition;\r\n\r\n//# sourceMappingURL=MousePosition.js.map","/**\r\n * @module ol/MapEvent\r\n */\r\nimport Event from './events/Event.js';\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted as map events are instances of this type.\r\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\r\n */\r\nvar MapEvent = /*@__PURE__*/(function (Event) {\n  function MapEvent(type, map, opt_frameState) {\r\n\r\n    Event.call(this, type);\r\n\r\n    /**\r\n     * The map where the event occurred.\r\n     * @type {import(\"./PluggableMap.js\").default}\r\n     * @api\r\n     */\r\n    this.map = map;\r\n\r\n    /**\r\n     * The frame state at the time of the event.\r\n     * @type {?import(\"./PluggableMap.js\").FrameState}\r\n     * @api\r\n     */\r\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\r\n\r\n  }\n\n  if ( Event ) MapEvent.__proto__ = Event;\n  MapEvent.prototype = Object.create( Event && Event.prototype );\n  MapEvent.prototype.constructor = MapEvent;\n\n  return MapEvent;\n}(Event));\r\n\r\nexport default MapEvent;\r\n\r\n//# sourceMappingURL=MapEvent.js.map","/**\r\n * @module ol/MapBrowserEvent\r\n */\r\nimport MapEvent from './MapEvent.js';\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted as map browser events are instances of this type.\r\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\r\n */\r\nvar MapBrowserEvent = /*@__PURE__*/(function (MapEvent) {\n  function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\r\n\r\n    MapEvent.call(this, type, map, opt_frameState);\r\n\r\n    /**\r\n     * The original browser event.\r\n     * @const\r\n     * @type {Event}\r\n     * @api\r\n     */\r\n    this.originalEvent = browserEvent;\r\n\r\n    /**\r\n     * The map pixel relative to the viewport corresponding to the original browser event.\r\n     * @type {import(\"./pixel.js\").Pixel}\r\n     * @api\r\n     */\r\n    this.pixel = map.getEventPixel(browserEvent);\r\n\r\n    /**\r\n     * The coordinate in view projection corresponding to the original browser event.\r\n     * @type {import(\"./coordinate.js\").Coordinate}\r\n     * @api\r\n     */\r\n    this.coordinate = map.getCoordinateFromPixel(this.pixel);\r\n\r\n    /**\r\n     * Indicates if the map is currently being dragged. Only set for\r\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\r\n     *\r\n     * @type {boolean}\r\n     * @api\r\n     */\r\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\r\n\r\n  }\n\n  if ( MapEvent ) MapBrowserEvent.__proto__ = MapEvent;\n  MapBrowserEvent.prototype = Object.create( MapEvent && MapEvent.prototype );\n  MapBrowserEvent.prototype.constructor = MapBrowserEvent;\r\n\r\n  /**\r\n   * Prevents the default browser action.\r\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\r\n   * @override\r\n   * @api\r\n   */\r\n  MapBrowserEvent.prototype.preventDefault = function preventDefault () {\r\n    MapEvent.prototype.preventDefault.call(this);\r\n    this.originalEvent.preventDefault();\r\n  };\r\n\r\n  /**\r\n   * Prevents further propagation of the current event.\r\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\r\n   * @override\r\n   * @api\r\n   */\r\n  MapBrowserEvent.prototype.stopPropagation = function stopPropagation () {\r\n    MapEvent.prototype.stopPropagation.call(this);\r\n    this.originalEvent.stopPropagation();\r\n  };\n\n  return MapBrowserEvent;\n}(MapEvent));\r\n\r\n\r\nexport default MapBrowserEvent;\r\n\r\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\r\n * @module ol/has\r\n */\r\n\r\nvar ua = typeof navigator !== 'undefined' ?\r\n  navigator.userAgent.toLowerCase() : '';\r\n\r\n/**\r\n * User agent string says we are dealing with Firefox as browser.\r\n * @type {boolean}\r\n */\r\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\r\n\r\n/**\r\n * User agent string says we are dealing with Safari as browser.\r\n * @type {boolean}\r\n */\r\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\r\n\r\n/**\r\n * User agent string says we are dealing with a WebKit engine.\r\n * @type {boolean}\r\n */\r\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\r\n\r\n/**\r\n * User agent string says we are dealing with a Mac as platform.\r\n * @type {boolean}\r\n */\r\nexport var MAC = ua.indexOf('macintosh') !== -1;\r\n\r\n\r\n/**\r\n * The ratio between physical pixels and device-independent pixels\r\n * (dips) on the device (`window.devicePixelRatio`).\r\n * @const\r\n * @type {number}\r\n * @api\r\n */\r\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\r\n\r\n\r\n/**\r\n * True if the browser's Canvas implementation implements {get,set}LineDash.\r\n * @type {boolean}\r\n */\r\nexport var CANVAS_LINE_DASH = function() {\r\n  var has = false;\r\n  try {\r\n    has = !!document.createElement('canvas').getContext('2d').setLineDash;\r\n  } catch (e) {\r\n    // pass\r\n  }\r\n  return has;\r\n}();\r\n\r\n\r\n/**\r\n * Is HTML5 geolocation supported in the current browser?\r\n * @const\r\n * @type {boolean}\r\n * @api\r\n */\r\nexport var GEOLOCATION = 'geolocation' in navigator;\r\n\r\n\r\n/**\r\n * True if browser supports touch events.\r\n * @const\r\n * @type {boolean}\r\n * @api\r\n */\r\nexport var TOUCH = 'ontouchstart' in window;\r\n\r\n\r\n/**\r\n * True if browser supports pointer events.\r\n * @const\r\n * @type {boolean}\r\n */\r\nexport var POINTER = 'PointerEvent' in window;\r\n\r\n\r\n/**\r\n * True if browser supports ms pointer events (IE 10).\r\n * @const\r\n * @type {boolean}\r\n */\r\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\r\n\r\n\r\nexport {HAS as WEBGL} from './webgl.js';\r\n\r\n//# sourceMappingURL=has.js.map","/**\r\n * @module ol/MapBrowserEventType\r\n */\r\nimport EventType from './events/EventType.js';\r\n\r\n/**\r\n * Constants for event names.\r\n * @enum {string}\r\n */\r\nexport default {\r\n\r\n  /**\r\n   * A true single click with no dragging and no double click. Note that this\r\n   * event is delayed by 250 ms to ensure that it is not a double click.\r\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\r\n   * @api\r\n   */\r\n  SINGLECLICK: 'singleclick',\r\n\r\n  /**\r\n   * A click with no dragging. A double click will fire two of this.\r\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\r\n   * @api\r\n   */\r\n  CLICK: EventType.CLICK,\r\n\r\n  /**\r\n   * A true double click, with no dragging.\r\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\r\n   * @api\r\n   */\r\n  DBLCLICK: EventType.DBLCLICK,\r\n\r\n  /**\r\n   * Triggered when a pointer is dragged.\r\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\r\n   * @api\r\n   */\r\n  POINTERDRAG: 'pointerdrag',\r\n\r\n  /**\r\n   * Triggered when a pointer is moved. Note that on touch devices this is\r\n   * triggered when the map is panned, so is not the same as mousemove.\r\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\r\n   * @api\r\n   */\r\n  POINTERMOVE: 'pointermove',\r\n\r\n  POINTERDOWN: 'pointerdown',\r\n  POINTERUP: 'pointerup',\r\n  POINTEROVER: 'pointerover',\r\n  POINTEROUT: 'pointerout',\r\n  POINTERENTER: 'pointerenter',\r\n  POINTERLEAVE: 'pointerleave',\r\n  POINTERCANCEL: 'pointercancel'\r\n};\r\n\r\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\r\n * @module ol/MapBrowserPointerEvent\r\n */\r\nimport MapBrowserEvent from './MapBrowserEvent.js';\r\n\r\nvar MapBrowserPointerEvent = /*@__PURE__*/(function (MapBrowserEvent) {\n  function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\r\n\r\n    MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState);\r\n\r\n    /**\r\n     * @const\r\n     * @type {import(\"./pointer/PointerEvent.js\").default}\r\n     */\r\n    this.pointerEvent = pointerEvent;\r\n\r\n  }\n\n  if ( MapBrowserEvent ) MapBrowserPointerEvent.__proto__ = MapBrowserEvent;\n  MapBrowserPointerEvent.prototype = Object.create( MapBrowserEvent && MapBrowserEvent.prototype );\n  MapBrowserPointerEvent.prototype.constructor = MapBrowserPointerEvent;\n\n  return MapBrowserPointerEvent;\n}(MapBrowserEvent));\r\n\r\nexport default MapBrowserPointerEvent;\r\n\r\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\r\n * @module ol/pointer/EventType\r\n */\r\n\r\n/**\r\n * Constants for event names.\r\n * @enum {string}\r\n */\r\nexport default {\r\n  POINTERMOVE: 'pointermove',\r\n  POINTERDOWN: 'pointerdown',\r\n  POINTERUP: 'pointerup',\r\n  POINTEROVER: 'pointerover',\r\n  POINTEROUT: 'pointerout',\r\n  POINTERENTER: 'pointerenter',\r\n  POINTERLEAVE: 'pointerleave',\r\n  POINTERCANCEL: 'pointercancel'\r\n};\r\n\r\n//# sourceMappingURL=EventType.js.map","/**\r\n * @module ol/pointer/EventSource\r\n */\r\n\r\nvar EventSource = function EventSource(dispatcher, mapping) {\r\n\r\n  /**\r\n   * @type {import(\"./PointerEventHandler.js\").default}\r\n   */\r\n  this.dispatcher = dispatcher;\r\n\r\n  /**\r\n   * @private\r\n   * @const\r\n   * @type {!Object<string, function(Event)>}\r\n   */\r\n  this.mapping_ = mapping;\r\n};\r\n\r\n/**\r\n * List of events supported by this source.\r\n * @return {Array<string>} Event names\r\n */\r\nEventSource.prototype.getEvents = function getEvents () {\r\n  return Object.keys(this.mapping_);\r\n};\r\n\r\n/**\r\n * Returns the handler that should handle a given event type.\r\n * @param {string} eventType The event type.\r\n * @return {function(Event)} Handler\r\n */\r\nEventSource.prototype.getHandlerForEvent = function getHandlerForEvent (eventType) {\r\n  return this.mapping_[eventType];\r\n};\r\n\r\nexport default EventSource;\r\n\r\n//# sourceMappingURL=EventSource.js.map","/**\r\n * @module ol/pointer/MouseSource\r\n */\r\n\r\n// Based on https://github.com/Polymer/PointerEvents\r\n\r\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\r\n//\r\n// Redistribution and use in source and binary forms, with or without\r\n// modification, are permitted provided that the following conditions are\r\n// met:\r\n//\r\n// * Redistributions of source code must retain the above copyright\r\n// notice, this list of conditions and the following disclaimer.\r\n// * Redistributions in binary form must reproduce the above\r\n// copyright notice, this list of conditions and the following disclaimer\r\n// in the documentation and/or other materials provided with the\r\n// distribution.\r\n// * Neither the name of Google Inc. nor the names of its\r\n// contributors may be used to endorse or promote products derived from\r\n// this software without specific prior written permission.\r\n//\r\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\nimport EventSource from './EventSource.js';\r\n\r\n\r\n/**\r\n * @type {number}\r\n */\r\nexport var POINTER_ID = 1;\r\n\r\n\r\n/**\r\n * @type {string}\r\n */\r\nexport var POINTER_TYPE = 'mouse';\r\n\r\n\r\n/**\r\n * Radius around touchend that swallows mouse events.\r\n *\r\n * @type {number}\r\n */\r\nvar DEDUP_DIST = 25;\r\n\r\n/**\r\n * Handler for `mousedown`.\r\n *\r\n * @this {MouseSource}\r\n * @param {MouseEvent} inEvent The in event.\r\n */\r\nfunction mousedown(inEvent) {\r\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\r\n    // TODO(dfreedman) workaround for some elements not sending mouseup\r\n    // http://crbug/149091\r\n    if (POINTER_ID.toString() in this.pointerMap) {\r\n      this.cancel(inEvent);\r\n    }\r\n    var e = prepareEvent(inEvent, this.dispatcher);\r\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\r\n    this.dispatcher.down(e, inEvent);\r\n  }\r\n}\r\n\r\n/**\r\n * Handler for `mousemove`.\r\n *\r\n * @this {MouseSource}\r\n * @param {MouseEvent} inEvent The in event.\r\n */\r\nfunction mousemove(inEvent) {\r\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\r\n    var e = prepareEvent(inEvent, this.dispatcher);\r\n    this.dispatcher.move(e, inEvent);\r\n  }\r\n}\r\n\r\n/**\r\n * Handler for `mouseup`.\r\n *\r\n * @this {MouseSource}\r\n * @param {MouseEvent} inEvent The in event.\r\n */\r\nfunction mouseup(inEvent) {\r\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\r\n    var p = this.pointerMap[POINTER_ID.toString()];\r\n\r\n    if (p && p.button === inEvent.button) {\r\n      var e = prepareEvent(inEvent, this.dispatcher);\r\n      this.dispatcher.up(e, inEvent);\r\n      this.cleanupMouse();\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Handler for `mouseover`.\r\n *\r\n * @this {MouseSource}\r\n * @param {MouseEvent} inEvent The in event.\r\n */\r\nfunction mouseover(inEvent) {\r\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\r\n    var e = prepareEvent(inEvent, this.dispatcher);\r\n    this.dispatcher.enterOver(e, inEvent);\r\n  }\r\n}\r\n\r\n/**\r\n * Handler for `mouseout`.\r\n *\r\n * @this {MouseSource}\r\n * @param {MouseEvent} inEvent The in event.\r\n */\r\nfunction mouseout(inEvent) {\r\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\r\n    var e = prepareEvent(inEvent, this.dispatcher);\r\n    this.dispatcher.leaveOut(e, inEvent);\r\n  }\r\n}\r\n\r\n\r\nvar MouseSource = /*@__PURE__*/(function (EventSource) {\n  function MouseSource(dispatcher) {\r\n    var mapping = {\r\n      'mousedown': mousedown,\r\n      'mousemove': mousemove,\r\n      'mouseup': mouseup,\r\n      'mouseover': mouseover,\r\n      'mouseout': mouseout\r\n    };\r\n    EventSource.call(this, dispatcher, mapping);\r\n\r\n    /**\r\n     * @const\r\n     * @type {!Object<string, Event|Object>}\r\n     */\r\n    this.pointerMap = dispatcher.pointerMap;\r\n\r\n    /**\r\n     * @const\r\n     * @type {Array<import(\"../pixel.js\").Pixel>}\r\n     */\r\n    this.lastTouches = [];\r\n  }\n\n  if ( EventSource ) MouseSource.__proto__ = EventSource;\n  MouseSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MouseSource.prototype.constructor = MouseSource;\r\n\r\n  /**\r\n   * Detect if a mouse event was simulated from a touch by\r\n   * checking if previously there was a touch event at the\r\n   * same position.\r\n   *\r\n   * FIXME - Known problem with the native Android browser on\r\n   * Samsung GT-I9100 (Android 4.1.2):\r\n   * In case the page is scrolled, this function does not work\r\n   * correctly when a canvas is used (WebGL or canvas renderer).\r\n   * Mouse listeners on canvas elements (for this browser), create\r\n   * two mouse events: One 'good' and one 'bad' one (on other browsers or\r\n   * when a div is used, there is only one event). For the 'bad' one,\r\n   * clientX/clientY and also pageX/pageY are wrong when the page\r\n   * is scrolled. Because of that, this function can not detect if\r\n   * the events were simulated from a touch event. As result, a\r\n   * pointer event at a wrong position is dispatched, which confuses\r\n   * the map interactions.\r\n   * It is unclear, how one can get the correct position for the event\r\n   * or detect that the positions are invalid.\r\n   *\r\n   * @private\r\n   * @param {MouseEvent} inEvent The in event.\r\n   * @return {boolean} True, if the event was generated by a touch.\r\n   */\r\n  MouseSource.prototype.isEventSimulatedFromTouch_ = function isEventSimulatedFromTouch_ (inEvent) {\r\n    var lts = this.lastTouches;\r\n    var x = inEvent.clientX;\r\n    var y = inEvent.clientY;\r\n    for (var i = 0, l = lts.length, t = (void 0); i < l && (t = lts[i]); i++) {\r\n      // simulated mouse events will be swallowed near a primary touchend\r\n      var dx = Math.abs(x - t[0]);\r\n      var dy = Math.abs(y - t[1]);\r\n      if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Dispatches a `pointercancel` event.\r\n   *\r\n   * @param {Event} inEvent The in event.\r\n   */\r\n  MouseSource.prototype.cancel = function cancel (inEvent) {\r\n    var e = prepareEvent(inEvent, this.dispatcher);\r\n    this.dispatcher.cancel(e, inEvent);\r\n    this.cleanupMouse();\r\n  };\r\n\r\n  /**\r\n   * Remove the mouse from the list of active pointers.\r\n   */\r\n  MouseSource.prototype.cleanupMouse = function cleanupMouse () {\r\n    delete this.pointerMap[POINTER_ID.toString()];\r\n  };\n\n  return MouseSource;\n}(EventSource));\r\n\r\n\r\n/**\r\n * Creates a copy of the original event that will be used\r\n * for the fake pointer event.\r\n *\r\n * @param {Event} inEvent The in event.\r\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\r\n * @return {Object} The copied event.\r\n */\r\nexport function prepareEvent(inEvent, dispatcher) {\r\n  var e = dispatcher.cloneEvent(inEvent, inEvent);\r\n\r\n  // forward mouse preventDefault\r\n  var pd = e.preventDefault;\r\n  e.preventDefault = function() {\r\n    inEvent.preventDefault();\r\n    pd();\r\n  };\r\n\r\n  e.pointerId = POINTER_ID;\r\n  e.isPrimary = true;\r\n  e.pointerType = POINTER_TYPE;\r\n\r\n  return e;\r\n}\r\n\r\n\r\nexport default MouseSource;\r\n\r\n//# sourceMappingURL=MouseSource.js.map","/**\r\n * @module ol/pointer/MsSource\r\n */\r\n// Based on https://github.com/Polymer/PointerEvents\r\n\r\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\r\n//\r\n// Redistribution and use in source and binary forms, with or without\r\n// modification, are permitted provided that the following conditions are\r\n// met:\r\n//\r\n// * Redistributions of source code must retain the above copyright\r\n// notice, this list of conditions and the following disclaimer.\r\n// * Redistributions in binary form must reproduce the above\r\n// copyright notice, this list of conditions and the following disclaimer\r\n// in the documentation and/or other materials provided with the\r\n// distribution.\r\n// * Neither the name of Google Inc. nor the names of its\r\n// contributors may be used to endorse or promote products derived from\r\n// this software without specific prior written permission.\r\n//\r\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\nimport EventSource from './EventSource.js';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Array<string>}\r\n */\r\nvar POINTER_TYPES = [\r\n  '',\r\n  'unavailable',\r\n  'touch',\r\n  'pen',\r\n  'mouse'\r\n];\r\n\r\n/**\r\n * Handler for `msPointerDown`.\r\n *\r\n * @this {MsSource}\r\n * @param {MSPointerEvent} inEvent The in event.\r\n */\r\nfunction msPointerDown(inEvent) {\r\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\r\n  var e = this.prepareEvent_(inEvent);\r\n  this.dispatcher.down(e, inEvent);\r\n}\r\n\r\n/**\r\n * Handler for `msPointerMove`.\r\n *\r\n * @this {MsSource}\r\n * @param {MSPointerEvent} inEvent The in event.\r\n */\r\nfunction msPointerMove(inEvent) {\r\n  var e = this.prepareEvent_(inEvent);\r\n  this.dispatcher.move(e, inEvent);\r\n}\r\n\r\n/**\r\n * Handler for `msPointerUp`.\r\n *\r\n * @this {MsSource}\r\n * @param {MSPointerEvent} inEvent The in event.\r\n */\r\nfunction msPointerUp(inEvent) {\r\n  var e = this.prepareEvent_(inEvent);\r\n  this.dispatcher.up(e, inEvent);\r\n  this.cleanup(inEvent.pointerId);\r\n}\r\n\r\n/**\r\n * Handler for `msPointerOut`.\r\n *\r\n * @this {MsSource}\r\n * @param {MSPointerEvent} inEvent The in event.\r\n */\r\nfunction msPointerOut(inEvent) {\r\n  var e = this.prepareEvent_(inEvent);\r\n  this.dispatcher.leaveOut(e, inEvent);\r\n}\r\n\r\n/**\r\n * Handler for `msPointerOver`.\r\n *\r\n * @this {MsSource}\r\n * @param {MSPointerEvent} inEvent The in event.\r\n */\r\nfunction msPointerOver(inEvent) {\r\n  var e = this.prepareEvent_(inEvent);\r\n  this.dispatcher.enterOver(e, inEvent);\r\n}\r\n\r\n/**\r\n * Handler for `msPointerCancel`.\r\n *\r\n * @this {MsSource}\r\n * @param {MSPointerEvent} inEvent The in event.\r\n */\r\nfunction msPointerCancel(inEvent) {\r\n  var e = this.prepareEvent_(inEvent);\r\n  this.dispatcher.cancel(e, inEvent);\r\n  this.cleanup(inEvent.pointerId);\r\n}\r\n\r\n/**\r\n * Handler for `msLostPointerCapture`.\r\n *\r\n * @this {MsSource}\r\n * @param {MSPointerEvent} inEvent The in event.\r\n */\r\nfunction msLostPointerCapture(inEvent) {\r\n  var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\r\n  this.dispatcher.dispatchEvent(e);\r\n}\r\n\r\n/**\r\n * Handler for `msGotPointerCapture`.\r\n *\r\n * @this {MsSource}\r\n * @param {MSPointerEvent} inEvent The in event.\r\n */\r\nfunction msGotPointerCapture(inEvent) {\r\n  var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\r\n  this.dispatcher.dispatchEvent(e);\r\n}\r\n\r\nvar MsSource = /*@__PURE__*/(function (EventSource) {\n  function MsSource(dispatcher) {\r\n    var mapping = {\r\n      'MSPointerDown': msPointerDown,\r\n      'MSPointerMove': msPointerMove,\r\n      'MSPointerUp': msPointerUp,\r\n      'MSPointerOut': msPointerOut,\r\n      'MSPointerOver': msPointerOver,\r\n      'MSPointerCancel': msPointerCancel,\r\n      'MSGotPointerCapture': msGotPointerCapture,\r\n      'MSLostPointerCapture': msLostPointerCapture\r\n    };\r\n    EventSource.call(this, dispatcher, mapping);\r\n\r\n    /**\r\n     * @const\r\n     * @type {!Object<string, MSPointerEvent|Object>}\r\n     */\r\n    this.pointerMap = dispatcher.pointerMap;\r\n  }\n\n  if ( EventSource ) MsSource.__proto__ = EventSource;\n  MsSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MsSource.prototype.constructor = MsSource;\r\n\r\n  /**\r\n   * Creates a copy of the original event that will be used\r\n   * for the fake pointer event.\r\n   *\r\n   * @private\r\n   * @param {MSPointerEvent} inEvent The in event.\r\n   * @return {Object} The copied event.\r\n   */\r\n  MsSource.prototype.prepareEvent_ = function prepareEvent_ (inEvent) {\r\n    /** @type {MSPointerEvent|Object} */\r\n    var e = inEvent;\r\n    if (typeof inEvent.pointerType === 'number') {\r\n      e = this.dispatcher.cloneEvent(inEvent, inEvent);\r\n      e.pointerType = POINTER_TYPES[inEvent.pointerType];\r\n    }\r\n\r\n    return e;\r\n  };\r\n\r\n  /**\r\n   * Remove this pointer from the list of active pointers.\r\n   * @param {number} pointerId Pointer identifier.\r\n   */\r\n  MsSource.prototype.cleanup = function cleanup (pointerId) {\r\n    delete this.pointerMap[pointerId.toString()];\r\n  };\n\n  return MsSource;\n}(EventSource));\r\n\r\nexport default MsSource;\r\n\r\n//# sourceMappingURL=MsSource.js.map","/**\r\n * @module ol/pointer/NativeSource\r\n */\r\n\r\n// Based on https://github.com/Polymer/PointerEvents\r\n\r\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\r\n//\r\n// Redistribution and use in source and binary forms, with or without\r\n// modification, are permitted provided that the following conditions are\r\n// met:\r\n//\r\n// * Redistributions of source code must retain the above copyright\r\n// notice, this list of conditions and the following disclaimer.\r\n// * Redistributions in binary form must reproduce the above\r\n// copyright notice, this list of conditions and the following disclaimer\r\n// in the documentation and/or other materials provided with the\r\n// distribution.\r\n// * Neither the name of Google Inc. nor the names of its\r\n// contributors may be used to endorse or promote products derived from\r\n// this software without specific prior written permission.\r\n//\r\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\nimport EventSource from './EventSource.js';\r\n\r\n/**\r\n * Handler for `pointerdown`.\r\n *\r\n * @this {NativeSource}\r\n * @param {Event} inEvent The in event.\r\n */\r\nfunction pointerDown(inEvent) {\r\n  this.dispatcher.fireNativeEvent(inEvent);\r\n}\r\n\r\n/**\r\n * Handler for `pointermove`.\r\n *\r\n * @this {NativeSource}\r\n * @param {Event} inEvent The in event.\r\n */\r\nfunction pointerMove(inEvent) {\r\n  this.dispatcher.fireNativeEvent(inEvent);\r\n}\r\n\r\n/**\r\n * Handler for `pointerup`.\r\n *\r\n * @this {NativeSource}\r\n * @param {Event} inEvent The in event.\r\n */\r\nfunction pointerUp(inEvent) {\r\n  this.dispatcher.fireNativeEvent(inEvent);\r\n}\r\n\r\n/**\r\n * Handler for `pointerout`.\r\n *\r\n * @this {NativeSource}\r\n * @param {Event} inEvent The in event.\r\n */\r\nfunction pointerOut(inEvent) {\r\n  this.dispatcher.fireNativeEvent(inEvent);\r\n}\r\n\r\n/**\r\n * Handler for `pointerover`.\r\n *\r\n * @this {NativeSource}\r\n * @param {Event} inEvent The in event.\r\n */\r\nfunction pointerOver(inEvent) {\r\n  this.dispatcher.fireNativeEvent(inEvent);\r\n}\r\n\r\n/**\r\n * Handler for `pointercancel`.\r\n *\r\n * @this {NativeSource}\r\n * @param {Event} inEvent The in event.\r\n */\r\nfunction pointerCancel(inEvent) {\r\n  this.dispatcher.fireNativeEvent(inEvent);\r\n}\r\n\r\n/**\r\n * Handler for `lostpointercapture`.\r\n *\r\n * @this {NativeSource}\r\n * @param {Event} inEvent The in event.\r\n */\r\nfunction lostPointerCapture(inEvent) {\r\n  this.dispatcher.fireNativeEvent(inEvent);\r\n}\r\n\r\n/**\r\n * Handler for `gotpointercapture`.\r\n *\r\n * @this {NativeSource}\r\n * @param {Event} inEvent The in event.\r\n */\r\nfunction gotPointerCapture(inEvent) {\r\n  this.dispatcher.fireNativeEvent(inEvent);\r\n}\r\n\r\nvar NativeSource = /*@__PURE__*/(function (EventSource) {\n  function NativeSource(dispatcher) {\r\n    var mapping = {\r\n      'pointerdown': pointerDown,\r\n      'pointermove': pointerMove,\r\n      'pointerup': pointerUp,\r\n      'pointerout': pointerOut,\r\n      'pointerover': pointerOver,\r\n      'pointercancel': pointerCancel,\r\n      'gotpointercapture': gotPointerCapture,\r\n      'lostpointercapture': lostPointerCapture\r\n    };\r\n    EventSource.call(this, dispatcher, mapping);\r\n  }\n\n  if ( EventSource ) NativeSource.__proto__ = EventSource;\n  NativeSource.prototype = Object.create( EventSource && EventSource.prototype );\n  NativeSource.prototype.constructor = NativeSource;\n\n  return NativeSource;\n}(EventSource));\r\n\r\nexport default NativeSource;\r\n\r\n//# sourceMappingURL=NativeSource.js.map","/**\r\n * @module ol/pointer/PointerEvent\r\n */\r\n\r\n// Based on https://github.com/Polymer/PointerEvents\r\n\r\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\r\n//\r\n// Redistribution and use in source and binary forms, with or without\r\n// modification, are permitted provided that the following conditions are\r\n// met:\r\n//\r\n// * Redistributions of source code must retain the above copyright\r\n// notice, this list of conditions and the following disclaimer.\r\n// * Redistributions in binary form must reproduce the above\r\n// copyright notice, this list of conditions and the following disclaimer\r\n// in the documentation and/or other materials provided with the\r\n// distribution.\r\n// * Neither the name of Google Inc. nor the names of its\r\n// contributors may be used to endorse or promote products derived from\r\n// this software without specific prior written permission.\r\n//\r\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\nimport _Event from '../events/Event.js';\r\n\r\n\r\n/**\r\n * Is the `buttons` property supported?\r\n * @type {boolean}\r\n */\r\nvar HAS_BUTTONS = false;\r\n\r\n\r\nvar PointerEvent = /*@__PURE__*/(function (_Event) {\n  function PointerEvent(type, originalEvent, opt_eventDict) {\r\n    _Event.call(this, type);\r\n\r\n    /**\r\n     * @const\r\n     * @type {Event}\r\n     */\r\n    this.originalEvent = originalEvent;\r\n\r\n    var eventDict = opt_eventDict ? opt_eventDict : {};\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.buttons = getButtons(eventDict);\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.pressure = getPressure(eventDict, this.buttons);\r\n\r\n    // MouseEvent related properties\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\r\n\r\n    /**\r\n     * @type {Object}\r\n     */\r\n    this.view = 'view' in eventDict ? eventDict['view'] : null;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.button = 'button' in eventDict ? eventDict['button'] : 0;\r\n\r\n    /**\r\n     * @type {Node}\r\n     */\r\n    this.relatedTarget = 'relatedTarget' in eventDict ?\r\n      eventDict['relatedTarget'] : null;\r\n\r\n    // PointerEvent related properties\r\n\r\n    /**\r\n     * @const\r\n     * @type {number}\r\n     */\r\n    this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.width = 'width' in eventDict ? eventDict['width'] : 0;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.height = 'height' in eventDict ? eventDict['height'] : 0;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\r\n\r\n    /**\r\n     * @type {string}\r\n     */\r\n    this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\r\n\r\n    // keep the semantics of preventDefault\r\n    if (originalEvent.preventDefault) {\r\n      this.preventDefault = function() {\r\n        originalEvent.preventDefault();\r\n      };\r\n    }\r\n  }\n\n  if ( _Event ) PointerEvent.__proto__ = _Event;\n  PointerEvent.prototype = Object.create( _Event && _Event.prototype );\n  PointerEvent.prototype.constructor = PointerEvent;\n\n  return PointerEvent;\n}(_Event));\r\n\r\n\r\n/**\r\n * @param {Object<string, ?>} eventDict The event dictionary.\r\n * @return {number} Button indicator.\r\n */\r\nfunction getButtons(eventDict) {\r\n  // According to the w3c spec,\r\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\r\n  // MouseEvent.button == 0 can mean either no mouse button depressed, or the\r\n  // left mouse button depressed.\r\n  //\r\n  // As of now, the only way to distinguish between the two states of\r\n  // MouseEvent.button is by using the deprecated MouseEvent.which property, as\r\n  // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\r\n  // no mouse button is held.\r\n  //\r\n  // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\r\n  // but initMouseEvent does not expose an argument with which to set\r\n  // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\r\n  // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\r\n  // of app developers.\r\n  //\r\n  // The only way to propagate the correct state of MouseEvent.which and\r\n  // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\r\n  // is to call initMouseEvent with a buttonArg value of -1.\r\n  //\r\n  // This is fixed with DOM Level 4's use of buttons\r\n  var buttons;\r\n  if (eventDict.buttons || HAS_BUTTONS) {\r\n    buttons = eventDict.buttons;\r\n  } else {\r\n    switch (eventDict.which) {\r\n      case 1: buttons = 1; break;\r\n      case 2: buttons = 4; break;\r\n      case 3: buttons = 2; break;\r\n      default: buttons = 0;\r\n    }\r\n  }\r\n  return buttons;\r\n}\r\n\r\n\r\n/**\r\n * @param {Object<string, ?>} eventDict The event dictionary.\r\n * @param {number} buttons Button indicator.\r\n * @return {number} The pressure.\r\n */\r\nfunction getPressure(eventDict, buttons) {\r\n  // Spec requires that pointers without pressure specified use 0.5 for down\r\n  // state and 0 for up state.\r\n  var pressure = 0;\r\n  if (eventDict.pressure) {\r\n    pressure = eventDict.pressure;\r\n  } else {\r\n    pressure = buttons ? 0.5 : 0;\r\n  }\r\n  return pressure;\r\n}\r\n\r\n\r\n/**\r\n * Checks if the `buttons` property is supported.\r\n */\r\n(function() {\r\n  try {\r\n    var ev = new MouseEvent('click', {buttons: 1});\r\n    HAS_BUTTONS = ev.buttons === 1;\r\n  } catch (e) {\r\n    // pass\r\n  }\r\n})();\r\n\r\nexport default PointerEvent;\r\n\r\n//# sourceMappingURL=PointerEvent.js.map","/**\r\n * @module ol/pointer/TouchSource\r\n */\r\n\r\n// Based on https://github.com/Polymer/PointerEvents\r\n\r\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\r\n//\r\n// Redistribution and use in source and binary forms, with or without\r\n// modification, are permitted provided that the following conditions are\r\n// met:\r\n//\r\n// * Redistributions of source code must retain the above copyright\r\n// notice, this list of conditions and the following disclaimer.\r\n// * Redistributions in binary form must reproduce the above\r\n// copyright notice, this list of conditions and the following disclaimer\r\n// in the documentation and/or other materials provided with the\r\n// distribution.\r\n// * Neither the name of Google Inc. nor the names of its\r\n// contributors may be used to endorse or promote products derived from\r\n// this software without specific prior written permission.\r\n//\r\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\nimport {remove} from '../array.js';\r\nimport EventSource from './EventSource.js';\r\nimport {POINTER_ID} from './MouseSource.js';\r\n\r\n\r\n/**\r\n * @type {number}\r\n */\r\nvar CLICK_COUNT_TIMEOUT = 200;\r\n\r\n/**\r\n * @type {string}\r\n */\r\nvar POINTER_TYPE = 'touch';\r\n\r\n/**\r\n * Handler for `touchstart`, triggers `pointerover`,\r\n * `pointerenter` and `pointerdown` events.\r\n *\r\n * @this {TouchSource}\r\n * @param {TouchEvent} inEvent The in event.\r\n */\r\nfunction touchstart(inEvent) {\r\n  this.vacuumTouches_(inEvent);\r\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\r\n  this.dedupSynthMouse_(inEvent);\r\n  this.clickCount_++;\r\n  this.processTouches_(inEvent, this.overDown_);\r\n}\r\n\r\n/**\r\n * Handler for `touchmove`.\r\n *\r\n * @this {TouchSource}\r\n * @param {TouchEvent} inEvent The in event.\r\n */\r\nfunction touchmove(inEvent) {\r\n  this.processTouches_(inEvent, this.moveOverOut_);\r\n}\r\n\r\n/**\r\n * Handler for `touchend`, triggers `pointerup`,\r\n * `pointerout` and `pointerleave` events.\r\n *\r\n * @this {TouchSource}\r\n * @param {TouchEvent} inEvent The event.\r\n */\r\nfunction touchend(inEvent) {\r\n  this.dedupSynthMouse_(inEvent);\r\n  this.processTouches_(inEvent, this.upOut_);\r\n}\r\n\r\n/**\r\n * Handler for `touchcancel`, triggers `pointercancel`,\r\n * `pointerout` and `pointerleave` events.\r\n *\r\n * @this {TouchSource}\r\n * @param {TouchEvent} inEvent The in event.\r\n */\r\nfunction touchcancel(inEvent) {\r\n  this.processTouches_(inEvent, this.cancelOut_);\r\n}\r\n\r\n\r\nvar TouchSource = /*@__PURE__*/(function (EventSource) {\n  function TouchSource(dispatcher, mouseSource) {\r\n    var mapping = {\r\n      'touchstart': touchstart,\r\n      'touchmove': touchmove,\r\n      'touchend': touchend,\r\n      'touchcancel': touchcancel\r\n    };\r\n    EventSource.call(this, dispatcher, mapping);\r\n\r\n    /**\r\n     * @const\r\n     * @type {!Object<string, Event|Object>}\r\n     */\r\n    this.pointerMap = dispatcher.pointerMap;\r\n\r\n    /**\r\n     * @const\r\n     * @type {import(\"./MouseSource.js\").default}\r\n     */\r\n    this.mouseSource = mouseSource;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.firstTouchId_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.clickCount_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?}\r\n     */\r\n    this.resetId_;\r\n\r\n    /**\r\n     * Mouse event timeout: This should be long enough to\r\n     * ignore compat mouse events made by touch.\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.dedupTimeout_ = 2500;\r\n  }\n\n  if ( EventSource ) TouchSource.__proto__ = EventSource;\n  TouchSource.prototype = Object.create( EventSource && EventSource.prototype );\n  TouchSource.prototype.constructor = TouchSource;\r\n\r\n  /**\r\n   * @private\r\n   * @param {Touch} inTouch The in touch.\r\n   * @return {boolean} True, if this is the primary touch.\r\n   */\r\n  TouchSource.prototype.isPrimaryTouch_ = function isPrimaryTouch_ (inTouch) {\r\n    return this.firstTouchId_ === inTouch.identifier;\r\n  };\r\n\r\n  /**\r\n   * Set primary touch if there are no pointers, or the only pointer is the mouse.\r\n   * @param {Touch} inTouch The in touch.\r\n   * @private\r\n   */\r\n  TouchSource.prototype.setPrimaryTouch_ = function setPrimaryTouch_ (inTouch) {\r\n    var count = Object.keys(this.pointerMap).length;\r\n    if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\r\n      this.firstTouchId_ = inTouch.identifier;\r\n      this.cancelResetClickCount_();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {PointerEvent} inPointer The in pointer object.\r\n   */\r\n  TouchSource.prototype.removePrimaryPointer_ = function removePrimaryPointer_ (inPointer) {\r\n    if (inPointer.isPrimary) {\r\n      this.firstTouchId_ = undefined;\r\n      this.resetClickCount_();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  TouchSource.prototype.resetClickCount_ = function resetClickCount_ () {\r\n    this.resetId_ = setTimeout(\r\n      this.resetClickCountHandler_.bind(this),\r\n      CLICK_COUNT_TIMEOUT);\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  TouchSource.prototype.resetClickCountHandler_ = function resetClickCountHandler_ () {\r\n    this.clickCount_ = 0;\r\n    this.resetId_ = undefined;\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  TouchSource.prototype.cancelResetClickCount_ = function cancelResetClickCount_ () {\r\n    if (this.resetId_ !== undefined) {\r\n      clearTimeout(this.resetId_);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {TouchEvent} browserEvent Browser event\r\n   * @param {Touch} inTouch Touch event\r\n   * @return {PointerEvent} A pointer object.\r\n   */\r\n  TouchSource.prototype.touchToPointer_ = function touchToPointer_ (browserEvent, inTouch) {\r\n    var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\r\n    // Spec specifies that pointerId 1 is reserved for Mouse.\r\n    // Touch identifiers can start at 0.\r\n    // Add 2 to the touch identifier for compatibility.\r\n    e.pointerId = inTouch.identifier + 2;\r\n    // TODO: check if this is necessary?\r\n    //e.target = findTarget(e);\r\n    e.bubbles = true;\r\n    e.cancelable = true;\r\n    e.detail = this.clickCount_;\r\n    e.button = 0;\r\n    e.buttons = 1;\r\n    e.width = inTouch.radiusX || 0;\r\n    e.height = inTouch.radiusY || 0;\r\n    e.pressure = inTouch.force || 0.5;\r\n    e.isPrimary = this.isPrimaryTouch_(inTouch);\r\n    e.pointerType = POINTER_TYPE;\r\n\r\n    // make sure that the properties that are different for\r\n    // each `Touch` object are not copied from the BrowserEvent object\r\n    e.clientX = inTouch.clientX;\r\n    e.clientY = inTouch.clientY;\r\n    e.screenX = inTouch.screenX;\r\n    e.screenY = inTouch.screenY;\r\n\r\n    return e;\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {TouchEvent} inEvent Touch event\r\n   * @param {function(TouchEvent, PointerEvent)} inFunction In function.\r\n   */\r\n  TouchSource.prototype.processTouches_ = function processTouches_ (inEvent, inFunction) {\r\n    var touches = Array.prototype.slice.call(inEvent.changedTouches);\r\n    var count = touches.length;\r\n    function preventDefault() {\r\n      inEvent.preventDefault();\r\n    }\r\n    for (var i = 0; i < count; ++i) {\r\n      var pointer = this.touchToPointer_(inEvent, touches[i]);\r\n      // forward touch preventDefaults\r\n      pointer.preventDefault = preventDefault;\r\n      inFunction.call(this, inEvent, pointer);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {TouchList} touchList The touch list.\r\n   * @param {number} searchId Search identifier.\r\n   * @return {boolean} True, if the `Touch` with the given id is in the list.\r\n   */\r\n  TouchSource.prototype.findTouch_ = function findTouch_ (touchList, searchId) {\r\n    var l = touchList.length;\r\n    for (var i = 0; i < l; i++) {\r\n      var touch = touchList[i];\r\n      if (touch.identifier === searchId) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * In some instances, a touchstart can happen without a touchend. This\r\n   * leaves the pointermap in a broken state.\r\n   * Therefore, on every touchstart, we remove the touches that did not fire a\r\n   * touchend event.\r\n   * To keep state globally consistent, we fire a pointercancel for\r\n   * this \"abandoned\" touch\r\n   *\r\n   * @private\r\n   * @param {TouchEvent} inEvent The in event.\r\n   */\r\n  TouchSource.prototype.vacuumTouches_ = function vacuumTouches_ (inEvent) {\r\n    var touchList = inEvent.touches;\r\n    // pointerMap.getCount() should be < touchList.length here,\r\n    // as the touchstart has not been processed yet.\r\n    var keys = Object.keys(this.pointerMap);\r\n    var count = keys.length;\r\n    if (count >= touchList.length) {\r\n      var d = [];\r\n      for (var i = 0; i < count; ++i) {\r\n        var key = Number(keys[i]);\r\n        var value = this.pointerMap[key];\r\n        // Never remove pointerId == 1, which is mouse.\r\n        // Touch identifiers are 2 smaller than their pointerId, which is the\r\n        // index in pointermap.\r\n        if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\r\n          d.push(value.out);\r\n        }\r\n      }\r\n      for (var i$1 = 0; i$1 < d.length; ++i$1) {\r\n        this.cancelOut_(inEvent, d[i$1]);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {TouchEvent} browserEvent The event.\r\n   * @param {PointerEvent} inPointer The in pointer object.\r\n   */\r\n  TouchSource.prototype.overDown_ = function overDown_ (browserEvent, inPointer) {\r\n    this.pointerMap[inPointer.pointerId] = {\r\n      target: inPointer.target,\r\n      out: inPointer,\r\n      outTarget: inPointer.target\r\n    };\r\n    this.dispatcher.over(inPointer, browserEvent);\r\n    this.dispatcher.enter(inPointer, browserEvent);\r\n    this.dispatcher.down(inPointer, browserEvent);\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {TouchEvent} browserEvent The event.\r\n   * @param {PointerEvent} inPointer The in pointer.\r\n   */\r\n  TouchSource.prototype.moveOverOut_ = function moveOverOut_ (browserEvent, inPointer) {\r\n    var event = inPointer;\r\n    var pointer = this.pointerMap[event.pointerId];\r\n    // a finger drifted off the screen, ignore it\r\n    if (!pointer) {\r\n      return;\r\n    }\r\n    var outEvent = pointer.out;\r\n    var outTarget = pointer.outTarget;\r\n    this.dispatcher.move(event, browserEvent);\r\n    if (outEvent && outTarget !== event.target) {\r\n      outEvent.relatedTarget = event.target;\r\n      /** @type {Object} */ (event).relatedTarget = outTarget;\r\n      // recover from retargeting by shadow\r\n      outEvent.target = outTarget;\r\n      if (event.target) {\r\n        this.dispatcher.leaveOut(outEvent, browserEvent);\r\n        this.dispatcher.enterOver(event, browserEvent);\r\n      } else {\r\n        // clean up case when finger leaves the screen\r\n        /** @type {Object} */ (event).target = outTarget;\r\n        /** @type {Object} */ (event).relatedTarget = null;\r\n        this.cancelOut_(browserEvent, event);\r\n      }\r\n    }\r\n    pointer.out = event;\r\n    pointer.outTarget = event.target;\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {TouchEvent} browserEvent An event.\r\n   * @param {PointerEvent} inPointer The inPointer object.\r\n   */\r\n  TouchSource.prototype.upOut_ = function upOut_ (browserEvent, inPointer) {\r\n    this.dispatcher.up(inPointer, browserEvent);\r\n    this.dispatcher.out(inPointer, browserEvent);\r\n    this.dispatcher.leave(inPointer, browserEvent);\r\n    this.cleanUpPointer_(inPointer);\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {TouchEvent} browserEvent The event.\r\n   * @param {PointerEvent} inPointer The in pointer.\r\n   */\r\n  TouchSource.prototype.cancelOut_ = function cancelOut_ (browserEvent, inPointer) {\r\n    this.dispatcher.cancel(inPointer, browserEvent);\r\n    this.dispatcher.out(inPointer, browserEvent);\r\n    this.dispatcher.leave(inPointer, browserEvent);\r\n    this.cleanUpPointer_(inPointer);\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {PointerEvent} inPointer The inPointer object.\r\n   */\r\n  TouchSource.prototype.cleanUpPointer_ = function cleanUpPointer_ (inPointer) {\r\n    delete this.pointerMap[inPointer.pointerId];\r\n    this.removePrimaryPointer_(inPointer);\r\n  };\r\n\r\n  /**\r\n   * Prevent synth mouse events from creating pointer events.\r\n   *\r\n   * @private\r\n   * @param {TouchEvent} inEvent The in event.\r\n   */\r\n  TouchSource.prototype.dedupSynthMouse_ = function dedupSynthMouse_ (inEvent) {\r\n    var lts = this.mouseSource.lastTouches;\r\n    var t = inEvent.changedTouches[0];\r\n    // only the primary finger will synth mouse events\r\n    if (this.isPrimaryTouch_(t)) {\r\n      // remember x/y of last touch\r\n      var lt = [t.clientX, t.clientY];\r\n      lts.push(lt);\r\n\r\n      setTimeout(function() {\r\n        // remove touch after timeout\r\n        remove(lts, lt);\r\n      }, this.dedupTimeout_);\r\n    }\r\n  };\n\n  return TouchSource;\n}(EventSource));\r\n\r\nexport default TouchSource;\r\n\r\n//# sourceMappingURL=TouchSource.js.map","/**\r\n * @module ol/pointer/PointerEventHandler\r\n */\r\n\r\n// Based on https://github.com/Polymer/PointerEvents\r\n\r\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\r\n//\r\n// Redistribution and use in source and binary forms, with or without\r\n// modification, are permitted provided that the following conditions are\r\n// met:\r\n//\r\n// * Redistributions of source code must retain the above copyright\r\n// notice, this list of conditions and the following disclaimer.\r\n// * Redistributions in binary form must reproduce the above\r\n// copyright notice, this list of conditions and the following disclaimer\r\n// in the documentation and/or other materials provided with the\r\n// distribution.\r\n// * Neither the name of Google Inc. nor the names of its\r\n// contributors may be used to endorse or promote products derived from\r\n// this software without specific prior written permission.\r\n//\r\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\nimport {listen, unlisten} from '../events.js';\r\nimport EventTarget from '../events/Target.js';\r\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\r\nimport PointerEventType from './EventType.js';\r\nimport MouseSource, {prepareEvent as prepareMouseEvent} from './MouseSource.js';\r\nimport MsSource from './MsSource.js';\r\nimport NativeSource from './NativeSource.js';\r\nimport PointerEvent from './PointerEvent.js';\r\nimport TouchSource from './TouchSource.js';\r\n\r\n\r\n/**\r\n * Properties to copy when cloning an event, with default values.\r\n * @type {Array<Array>}\r\n */\r\nvar CLONE_PROPS = [\r\n  // MouseEvent\r\n  ['bubbles', false],\r\n  ['cancelable', false],\r\n  ['view', null],\r\n  ['detail', null],\r\n  ['screenX', 0],\r\n  ['screenY', 0],\r\n  ['clientX', 0],\r\n  ['clientY', 0],\r\n  ['ctrlKey', false],\r\n  ['altKey', false],\r\n  ['shiftKey', false],\r\n  ['metaKey', false],\r\n  ['button', 0],\r\n  ['relatedTarget', null],\r\n  // DOM Level 3\r\n  ['buttons', 0],\r\n  // PointerEvent\r\n  ['pointerId', 0],\r\n  ['width', 0],\r\n  ['height', 0],\r\n  ['pressure', 0],\r\n  ['tiltX', 0],\r\n  ['tiltY', 0],\r\n  ['pointerType', ''],\r\n  ['hwTimestamp', 0],\r\n  ['isPrimary', false],\r\n  // event instance\r\n  ['type', ''],\r\n  ['target', null],\r\n  ['currentTarget', null],\r\n  ['which', 0]\r\n];\r\n\r\n\r\nvar PointerEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function PointerEventHandler(element) {\r\n    EventTarget.call(this);\r\n\r\n    /**\r\n     * @const\r\n     * @private\r\n     * @type {Element|HTMLDocument}\r\n     */\r\n    this.element_ = element;\r\n\r\n    /**\r\n     * @const\r\n     * @type {!Object<string, Event|Object>}\r\n     */\r\n    this.pointerMap = {};\r\n\r\n    /**\r\n     * @type {Object<string, function(Event)>}\r\n     * @private\r\n     */\r\n    this.eventMap_ = {};\r\n\r\n    /**\r\n     * @type {Array<import(\"./EventSource.js\").default>}\r\n     * @private\r\n     */\r\n    this.eventSourceList_ = [];\r\n\r\n    this.registerSources();\r\n  }\n\n  if ( EventTarget ) PointerEventHandler.__proto__ = EventTarget;\n  PointerEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  PointerEventHandler.prototype.constructor = PointerEventHandler;\r\n\r\n  /**\r\n   * Set up the event sources (mouse, touch and native pointers)\r\n   * that generate pointer events.\r\n   */\r\n  PointerEventHandler.prototype.registerSources = function registerSources () {\r\n    if (POINTER) {\r\n      this.registerSource('native', new NativeSource(this));\r\n    } else if (MSPOINTER) {\r\n      this.registerSource('ms', new MsSource(this));\r\n    } else {\r\n      var mouseSource = new MouseSource(this);\r\n      this.registerSource('mouse', mouseSource);\r\n\r\n      if (TOUCH) {\r\n        this.registerSource('touch', new TouchSource(this, mouseSource));\r\n      }\r\n    }\r\n\r\n    // register events on the viewport element\r\n    this.register_();\r\n  };\r\n\r\n  /**\r\n   * Add a new event source that will generate pointer events.\r\n   *\r\n   * @param {string} name A name for the event source\r\n   * @param {import(\"./EventSource.js\").default} source The source event.\r\n   */\r\n  PointerEventHandler.prototype.registerSource = function registerSource (name, source) {\r\n    var s = source;\r\n    var newEvents = s.getEvents();\r\n\r\n    if (newEvents) {\r\n      newEvents.forEach(function(e) {\r\n        var handler = s.getHandlerForEvent(e);\r\n\r\n        if (handler) {\r\n          this.eventMap_[e] = handler.bind(s);\r\n        }\r\n      }.bind(this));\r\n      this.eventSourceList_.push(s);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Set up the events for all registered event sources.\r\n   * @private\r\n   */\r\n  PointerEventHandler.prototype.register_ = function register_ () {\r\n    var l = this.eventSourceList_.length;\r\n    for (var i = 0; i < l; i++) {\r\n      var eventSource = this.eventSourceList_[i];\r\n      this.addEvents_(eventSource.getEvents());\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Remove all registered events.\r\n   * @private\r\n   */\r\n  PointerEventHandler.prototype.unregister_ = function unregister_ () {\r\n    var l = this.eventSourceList_.length;\r\n    for (var i = 0; i < l; i++) {\r\n      var eventSource = this.eventSourceList_[i];\r\n      this.removeEvents_(eventSource.getEvents());\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Calls the right handler for a new event.\r\n   * @private\r\n   * @param {Event} inEvent Browser event.\r\n   */\r\n  PointerEventHandler.prototype.eventHandler_ = function eventHandler_ (inEvent) {\r\n    var type = inEvent.type;\r\n    var handler = this.eventMap_[type];\r\n    if (handler) {\r\n      handler(inEvent);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Setup listeners for the given events.\r\n   * @private\r\n   * @param {Array<string>} events List of events.\r\n   */\r\n  PointerEventHandler.prototype.addEvents_ = function addEvents_ (events) {\r\n    events.forEach(function(eventName) {\r\n      listen(this.element_, eventName, this.eventHandler_, this);\r\n    }.bind(this));\r\n  };\r\n\r\n  /**\r\n   * Unregister listeners for the given events.\r\n   * @private\r\n   * @param {Array<string>} events List of events.\r\n   */\r\n  PointerEventHandler.prototype.removeEvents_ = function removeEvents_ (events) {\r\n    events.forEach(function(e) {\r\n      unlisten(this.element_, e, this.eventHandler_, this);\r\n    }.bind(this));\r\n  };\r\n\r\n  /**\r\n   * Returns a snapshot of inEvent, with writable properties.\r\n   *\r\n   * @param {Event} event Browser event.\r\n   * @param {Event|Touch} inEvent An event that contains\r\n   *    properties to copy.\r\n   * @return {Object} An object containing shallow copies of\r\n   *    `inEvent`'s properties.\r\n   */\r\n  PointerEventHandler.prototype.cloneEvent = function cloneEvent (event, inEvent) {\r\n    var eventCopy = {};\r\n    for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\r\n      var p = CLONE_PROPS[i][0];\r\n      eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\r\n    }\r\n\r\n    return eventCopy;\r\n  };\r\n\r\n  // EVENTS\r\n\r\n\r\n  /**\r\n   * Triggers a 'pointerdown' event.\r\n   * @param {Object} data Pointer event data.\r\n   * @param {Event} event The event.\r\n   */\r\n  PointerEventHandler.prototype.down = function down (data, event) {\r\n    this.fireEvent(PointerEventType.POINTERDOWN, data, event);\r\n  };\r\n\r\n  /**\r\n   * Triggers a 'pointermove' event.\r\n   * @param {Object} data Pointer event data.\r\n   * @param {Event} event The event.\r\n   */\r\n  PointerEventHandler.prototype.move = function move (data, event) {\r\n    this.fireEvent(PointerEventType.POINTERMOVE, data, event);\r\n  };\r\n\r\n  /**\r\n   * Triggers a 'pointerup' event.\r\n   * @param {Object} data Pointer event data.\r\n   * @param {Event} event The event.\r\n   */\r\n  PointerEventHandler.prototype.up = function up (data, event) {\r\n    this.fireEvent(PointerEventType.POINTERUP, data, event);\r\n  };\r\n\r\n  /**\r\n   * Triggers a 'pointerenter' event.\r\n   * @param {Object} data Pointer event data.\r\n   * @param {Event} event The event.\r\n   */\r\n  PointerEventHandler.prototype.enter = function enter (data, event) {\r\n    data.bubbles = false;\r\n    this.fireEvent(PointerEventType.POINTERENTER, data, event);\r\n  };\r\n\r\n  /**\r\n   * Triggers a 'pointerleave' event.\r\n   * @param {Object} data Pointer event data.\r\n   * @param {Event} event The event.\r\n   */\r\n  PointerEventHandler.prototype.leave = function leave (data, event) {\r\n    data.bubbles = false;\r\n    this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\r\n  };\r\n\r\n  /**\r\n   * Triggers a 'pointerover' event.\r\n   * @param {Object} data Pointer event data.\r\n   * @param {Event} event The event.\r\n   */\r\n  PointerEventHandler.prototype.over = function over (data, event) {\r\n    data.bubbles = true;\r\n    this.fireEvent(PointerEventType.POINTEROVER, data, event);\r\n  };\r\n\r\n  /**\r\n   * Triggers a 'pointerout' event.\r\n   * @param {Object} data Pointer event data.\r\n   * @param {Event} event The event.\r\n   */\r\n  PointerEventHandler.prototype.out = function out (data, event) {\r\n    data.bubbles = true;\r\n    this.fireEvent(PointerEventType.POINTEROUT, data, event);\r\n  };\r\n\r\n  /**\r\n   * Triggers a 'pointercancel' event.\r\n   * @param {Object} data Pointer event data.\r\n   * @param {Event} event The event.\r\n   */\r\n  PointerEventHandler.prototype.cancel = function cancel (data, event) {\r\n    this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\r\n  };\r\n\r\n  /**\r\n   * Triggers a combination of 'pointerout' and 'pointerleave' events.\r\n   * @param {Object} data Pointer event data.\r\n   * @param {Event} event The event.\r\n   */\r\n  PointerEventHandler.prototype.leaveOut = function leaveOut (data, event) {\r\n    this.out(data, event);\r\n    if (!this.contains_(data.target, data.relatedTarget)) {\r\n      this.leave(data, event);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Triggers a combination of 'pointerover' and 'pointerevents' events.\r\n   * @param {Object} data Pointer event data.\r\n   * @param {Event} event The event.\r\n   */\r\n  PointerEventHandler.prototype.enterOver = function enterOver (data, event) {\r\n    this.over(data, event);\r\n    if (!this.contains_(data.target, data.relatedTarget)) {\r\n      this.enter(data, event);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {Element} container The container element.\r\n   * @param {Element} contained The contained element.\r\n   * @return {boolean} Returns true if the container element\r\n   *   contains the other element.\r\n   */\r\n  PointerEventHandler.prototype.contains_ = function contains_ (container, contained) {\r\n    if (!container || !contained) {\r\n      return false;\r\n    }\r\n    return container.contains(contained);\r\n  };\r\n\r\n  // EVENT CREATION AND TRACKING\r\n  /**\r\n   * Creates a new Event of type `inType`, based on the information in\r\n   * `data`.\r\n   *\r\n   * @param {string} inType A string representing the type of event to create.\r\n   * @param {Object} data Pointer event data.\r\n   * @param {Event} event The event.\r\n   * @return {PointerEvent} A PointerEvent of type `inType`.\r\n   */\r\n  PointerEventHandler.prototype.makeEvent = function makeEvent (inType, data, event) {\r\n    return new PointerEvent(inType, event, data);\r\n  };\r\n\r\n  /**\r\n   * Make and dispatch an event in one call.\r\n   * @param {string} inType A string representing the type of event.\r\n   * @param {Object} data Pointer event data.\r\n   * @param {Event} event The event.\r\n   */\r\n  PointerEventHandler.prototype.fireEvent = function fireEvent (inType, data, event) {\r\n    var e = this.makeEvent(inType, data, event);\r\n    this.dispatchEvent(e);\r\n  };\r\n\r\n  /**\r\n   * Creates a pointer event from a native pointer event\r\n   * and dispatches this event.\r\n   * @param {Event} event A platform event with a target.\r\n   */\r\n  PointerEventHandler.prototype.fireNativeEvent = function fireNativeEvent (event) {\r\n    var e = this.makeEvent(event.type, event, event);\r\n    this.dispatchEvent(e);\r\n  };\r\n\r\n  /**\r\n   * Wrap a native mouse event into a pointer event.\r\n   * This proxy method is required for the legacy IE support.\r\n   * @param {string} eventType The pointer event type.\r\n   * @param {Event} event The event.\r\n   * @return {PointerEvent} The wrapped event.\r\n   */\r\n  PointerEventHandler.prototype.wrapMouseEvent = function wrapMouseEvent (eventType, event) {\r\n    var pointerEvent = this.makeEvent(\r\n      eventType, prepareMouseEvent(event, this), event);\r\n    return pointerEvent;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  PointerEventHandler.prototype.disposeInternal = function disposeInternal () {\r\n    this.unregister_();\r\n    EventTarget.prototype.disposeInternal.call(this);\r\n  };\n\n  return PointerEventHandler;\n}(EventTarget));\r\n\r\nexport default PointerEventHandler;\r\n\r\n//# sourceMappingURL=PointerEventHandler.js.map","/**\r\n * @module ol/MapBrowserEventHandler\r\n */\r\nimport {DEVICE_PIXEL_RATIO} from './has.js';\r\nimport MapBrowserEventType from './MapBrowserEventType.js';\r\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\r\nimport {listen, unlistenByKey} from './events.js';\r\nimport EventTarget from './events/Target.js';\r\nimport PointerEventType from './pointer/EventType.js';\r\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\r\n\r\nvar MapBrowserEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function MapBrowserEventHandler(map, moveTolerance) {\r\n\r\n    EventTarget.call(this);\r\n\r\n    /**\r\n     * This is the element that we will listen to the real events on.\r\n     * @type {import(\"./PluggableMap.js\").default}\r\n     * @private\r\n     */\r\n    this.map_ = map;\r\n\r\n    /**\r\n     * @type {any}\r\n     * @private\r\n     */\r\n    this.clickTimeoutId_;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.dragging_ = false;\r\n\r\n    /**\r\n     * @type {!Array<import(\"./events.js\").EventsKey>}\r\n     * @private\r\n     */\r\n    this.dragListenerKeys_ = [];\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.moveTolerance_ = moveTolerance ?\r\n      moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\r\n\r\n    /**\r\n     * The most recent \"down\" type event (or null if none have occurred).\r\n     * Set on pointerdown.\r\n     * @type {import(\"./pointer/PointerEvent.js\").default}\r\n     * @private\r\n     */\r\n    this.down_ = null;\r\n\r\n    var element = this.map_.getViewport();\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.activePointers_ = 0;\r\n\r\n    /**\r\n     * @type {!Object<number, boolean>}\r\n     * @private\r\n     */\r\n    this.trackedTouches_ = {};\r\n\r\n    /**\r\n     * Event handler which generates pointer events for\r\n     * the viewport element.\r\n     *\r\n     * @type {PointerEventHandler}\r\n     * @private\r\n     */\r\n    this.pointerEventHandler_ = new PointerEventHandler(element);\r\n\r\n    /**\r\n     * Event handler which generates pointer events for\r\n     * the document (used when dragging).\r\n     *\r\n     * @type {PointerEventHandler}\r\n     * @private\r\n     */\r\n    this.documentPointerEventHandler_ = null;\r\n\r\n    /**\r\n     * @type {?import(\"./events.js\").EventsKey}\r\n     * @private\r\n     */\r\n    this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\r\n      PointerEventType.POINTERDOWN,\r\n      this.handlePointerDown_, this);\r\n\r\n    /**\r\n     * @type {?import(\"./events.js\").EventsKey}\r\n     * @private\r\n     */\r\n    this.relayedListenerKey_ = listen(this.pointerEventHandler_,\r\n      PointerEventType.POINTERMOVE,\r\n      this.relayEvent_, this);\r\n\r\n  }\n\n  if ( EventTarget ) MapBrowserEventHandler.__proto__ = EventTarget;\n  MapBrowserEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  MapBrowserEventHandler.prototype.constructor = MapBrowserEventHandler;\r\n\r\n  /**\r\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  MapBrowserEventHandler.prototype.emulateClick_ = function emulateClick_ (pointerEvent) {\r\n    var newEvent = new MapBrowserPointerEvent(\r\n      MapBrowserEventType.CLICK, this.map_, pointerEvent);\r\n    this.dispatchEvent(newEvent);\r\n    if (this.clickTimeoutId_ !== undefined) {\r\n      // double-click\r\n      clearTimeout(this.clickTimeoutId_);\r\n      this.clickTimeoutId_ = undefined;\r\n      newEvent = new MapBrowserPointerEvent(\r\n        MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\r\n      this.dispatchEvent(newEvent);\r\n    } else {\r\n      // click\r\n      this.clickTimeoutId_ = setTimeout(function() {\r\n        this.clickTimeoutId_ = undefined;\r\n        var newEvent = new MapBrowserPointerEvent(\r\n          MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\r\n        this.dispatchEvent(newEvent);\r\n      }.bind(this), 250);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Keeps track on how many pointers are currently active.\r\n   *\r\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  MapBrowserEventHandler.prototype.updateActivePointers_ = function updateActivePointers_ (pointerEvent) {\r\n    var event = pointerEvent;\r\n\r\n    if (event.type == MapBrowserEventType.POINTERUP ||\r\n        event.type == MapBrowserEventType.POINTERCANCEL) {\r\n      delete this.trackedTouches_[event.pointerId];\r\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\r\n      this.trackedTouches_[event.pointerId] = true;\r\n    }\r\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  MapBrowserEventHandler.prototype.handlePointerUp_ = function handlePointerUp_ (pointerEvent) {\r\n    this.updateActivePointers_(pointerEvent);\r\n    var newEvent = new MapBrowserPointerEvent(\r\n      MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\r\n    this.dispatchEvent(newEvent);\r\n\r\n    // We emulate click events on left mouse button click, touch contact, and pen\r\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\r\n    // to 0).\r\n    // See http://www.w3.org/TR/pointerevents/#button-states\r\n    // We only fire click, singleclick, and doubleclick if nobody has called\r\n    // event.stopPropagation() or event.preventDefault().\r\n    if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\r\n      this.emulateClick_(this.down_);\r\n    }\r\n\r\n    if (this.activePointers_ === 0) {\r\n      this.dragListenerKeys_.forEach(unlistenByKey);\r\n      this.dragListenerKeys_.length = 0;\r\n      this.dragging_ = false;\r\n      this.down_ = null;\r\n      this.documentPointerEventHandler_.dispose();\r\n      this.documentPointerEventHandler_ = null;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\r\n   * event.\r\n   * @return {boolean} If the left mouse button was pressed.\r\n   * @private\r\n   */\r\n  MapBrowserEventHandler.prototype.isMouseActionButton_ = function isMouseActionButton_ (pointerEvent) {\r\n    return pointerEvent.button === 0;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  MapBrowserEventHandler.prototype.handlePointerDown_ = function handlePointerDown_ (pointerEvent) {\r\n    this.updateActivePointers_(pointerEvent);\r\n    var newEvent = new MapBrowserPointerEvent(\r\n      MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\r\n    this.dispatchEvent(newEvent);\r\n\r\n    this.down_ = pointerEvent;\r\n\r\n    if (this.dragListenerKeys_.length === 0) {\r\n      /* Set up a pointer event handler on the `document`,\r\n       * which is required when the pointer is moved outside\r\n       * the viewport when dragging.\r\n       */\r\n      this.documentPointerEventHandler_ =\r\n          new PointerEventHandler(document);\r\n\r\n      this.dragListenerKeys_.push(\r\n        listen(this.documentPointerEventHandler_,\r\n          MapBrowserEventType.POINTERMOVE,\r\n          this.handlePointerMove_, this),\r\n        listen(this.documentPointerEventHandler_,\r\n          MapBrowserEventType.POINTERUP,\r\n          this.handlePointerUp_, this),\r\n        /* Note that the listener for `pointercancel is set up on\r\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\r\n         * the `pointerup` and `pointermove` listeners.\r\n         *\r\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\r\n         * issues `pointercancel` events, when there was no `touchend` for a\r\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\r\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\r\n         * But `documentPointerEventHandler_` doesn't know about the first\r\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\r\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\r\n         * only registered there.\r\n         */\r\n        listen(this.pointerEventHandler_,\r\n          MapBrowserEventType.POINTERCANCEL,\r\n          this.handlePointerUp_, this)\r\n      );\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  MapBrowserEventHandler.prototype.handlePointerMove_ = function handlePointerMove_ (pointerEvent) {\r\n    // Between pointerdown and pointerup, pointermove events are triggered.\r\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\r\n    // moved a significant distance.\r\n    if (this.isMoving_(pointerEvent)) {\r\n      this.dragging_ = true;\r\n      var newEvent = new MapBrowserPointerEvent(\r\n        MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\r\n        this.dragging_);\r\n      this.dispatchEvent(newEvent);\r\n    }\r\n\r\n    // Some native android browser triggers mousemove events during small period\r\n    // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\r\n    // https://code.google.com/p/android/issues/detail?id=19827\r\n    // ex: Galaxy Tab P3110 + Android 4.1.1\r\n    pointerEvent.preventDefault();\r\n  };\r\n\r\n  /**\r\n   * Wrap and relay a pointer event.  Note that this requires that the type\r\n   * string for the MapBrowserPointerEvent matches the PointerEvent type.\r\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  MapBrowserEventHandler.prototype.relayEvent_ = function relayEvent_ (pointerEvent) {\r\n    var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\r\n    this.dispatchEvent(new MapBrowserPointerEvent(\r\n      pointerEvent.type, this.map_, pointerEvent, dragging));\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\r\n   * event.\r\n   * @return {boolean} Is moving.\r\n   * @private\r\n   */\r\n  MapBrowserEventHandler.prototype.isMoving_ = function isMoving_ (pointerEvent) {\r\n    return this.dragging_ ||\r\n        Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\r\n        Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  MapBrowserEventHandler.prototype.disposeInternal = function disposeInternal () {\r\n    if (this.relayedListenerKey_) {\r\n      unlistenByKey(this.relayedListenerKey_);\r\n      this.relayedListenerKey_ = null;\r\n    }\r\n    if (this.pointerdownListenerKey_) {\r\n      unlistenByKey(this.pointerdownListenerKey_);\r\n      this.pointerdownListenerKey_ = null;\r\n    }\r\n\r\n    this.dragListenerKeys_.forEach(unlistenByKey);\r\n    this.dragListenerKeys_.length = 0;\r\n\r\n    if (this.documentPointerEventHandler_) {\r\n      this.documentPointerEventHandler_.dispose();\r\n      this.documentPointerEventHandler_ = null;\r\n    }\r\n    if (this.pointerEventHandler_) {\r\n      this.pointerEventHandler_.dispose();\r\n      this.pointerEventHandler_ = null;\r\n    }\r\n    EventTarget.prototype.disposeInternal.call(this);\r\n  };\n\n  return MapBrowserEventHandler;\n}(EventTarget));\r\n\r\n\r\nexport default MapBrowserEventHandler;\r\n\r\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\r\n * @module ol/MapProperty\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  LAYERGROUP: 'layergroup',\r\n  SIZE: 'size',\r\n  TARGET: 'target',\r\n  VIEW: 'view'\r\n};\r\n\r\n//# sourceMappingURL=MapProperty.js.map","/**\r\n * @module ol/TileState\r\n */\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport default {\r\n  IDLE: 0,\r\n  LOADING: 1,\r\n  LOADED: 2,\r\n  /**\r\n   * Indicates that tile loading failed\r\n   * @type {number}\r\n   */\r\n  ERROR: 3,\r\n  EMPTY: 4,\r\n  ABORT: 5\r\n};\r\n\r\n//# sourceMappingURL=TileState.js.map","/**\r\n * @module ol/structs/PriorityQueue\r\n */\r\nimport {assert} from '../asserts.js';\r\nimport {clear} from '../obj.js';\r\n\r\n\r\n/**\r\n * @type {number}\r\n */\r\nexport var DROP = Infinity;\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Priority queue.\r\n *\r\n * The implementation is inspired from the Closure Library's Heap class and\r\n * Python's heapq module.\r\n *\r\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\r\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\r\n *\r\n * @template T\r\n */\r\nvar PriorityQueue = function PriorityQueue(priorityFunction, keyFunction) {\r\n\r\n  /**\r\n   * @type {function(T): number}\r\n   * @private\r\n   */\r\n  this.priorityFunction_ = priorityFunction;\r\n\r\n  /**\r\n   * @type {function(T): string}\r\n   * @private\r\n   */\r\n  this.keyFunction_ = keyFunction;\r\n\r\n  /**\r\n   * @type {Array<T>}\r\n   * @private\r\n   */\r\n  this.elements_ = [];\r\n\r\n  /**\r\n   * @type {Array<number>}\r\n   * @private\r\n   */\r\n  this.priorities_ = [];\r\n\r\n  /**\r\n   * @type {!Object<string, boolean>}\r\n   * @private\r\n   */\r\n  this.queuedElements_ = {};\r\n\r\n};\r\n\r\n/**\r\n * FIXME empty description for jsdoc\r\n */\r\nPriorityQueue.prototype.clear = function clear$1 () {\r\n  this.elements_.length = 0;\r\n  this.priorities_.length = 0;\r\n  clear(this.queuedElements_);\r\n};\r\n\r\n\r\n/**\r\n * Remove and return the highest-priority element. O(log N).\r\n * @return {T} Element.\r\n */\r\nPriorityQueue.prototype.dequeue = function dequeue () {\r\n  var elements = this.elements_;\r\n  var priorities = this.priorities_;\r\n  var element = elements[0];\r\n  if (elements.length == 1) {\r\n    elements.length = 0;\r\n    priorities.length = 0;\r\n  } else {\r\n    elements[0] = elements.pop();\r\n    priorities[0] = priorities.pop();\r\n    this.siftUp_(0);\r\n  }\r\n  var elementKey = this.keyFunction_(element);\r\n  delete this.queuedElements_[elementKey];\r\n  return element;\r\n};\r\n\r\n\r\n/**\r\n * Enqueue an element. O(log N).\r\n * @param {T} element Element.\r\n * @return {boolean} The element was added to the queue.\r\n */\r\nPriorityQueue.prototype.enqueue = function enqueue (element) {\r\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\r\n    31); // Tried to enqueue an `element` that was already added to the queue\r\n  var priority = this.priorityFunction_(element);\r\n  if (priority != DROP) {\r\n    this.elements_.push(element);\r\n    this.priorities_.push(priority);\r\n    this.queuedElements_[this.keyFunction_(element)] = true;\r\n    this.siftDown_(0, this.elements_.length - 1);\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\n\r\n/**\r\n * @return {number} Count.\r\n */\r\nPriorityQueue.prototype.getCount = function getCount () {\r\n  return this.elements_.length;\r\n};\r\n\r\n\r\n/**\r\n * Gets the index of the left child of the node at the given index.\r\n * @param {number} index The index of the node to get the left child for.\r\n * @return {number} The index of the left child.\r\n * @private\r\n */\r\nPriorityQueue.prototype.getLeftChildIndex_ = function getLeftChildIndex_ (index) {\r\n  return index * 2 + 1;\r\n};\r\n\r\n\r\n/**\r\n * Gets the index of the right child of the node at the given index.\r\n * @param {number} index The index of the node to get the right child for.\r\n * @return {number} The index of the right child.\r\n * @private\r\n */\r\nPriorityQueue.prototype.getRightChildIndex_ = function getRightChildIndex_ (index) {\r\n  return index * 2 + 2;\r\n};\r\n\r\n\r\n/**\r\n * Gets the index of the parent of the node at the given index.\r\n * @param {number} index The index of the node to get the parent for.\r\n * @return {number} The index of the parent.\r\n * @private\r\n */\r\nPriorityQueue.prototype.getParentIndex_ = function getParentIndex_ (index) {\r\n  return (index - 1) >> 1;\r\n};\r\n\r\n\r\n/**\r\n * Make this a heap. O(N).\r\n * @private\r\n */\r\nPriorityQueue.prototype.heapify_ = function heapify_ () {\r\n  var i;\r\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\r\n    this.siftUp_(i);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @return {boolean} Is empty.\r\n */\r\nPriorityQueue.prototype.isEmpty = function isEmpty () {\r\n  return this.elements_.length === 0;\r\n};\r\n\r\n\r\n/**\r\n * @param {string} key Key.\r\n * @return {boolean} Is key queued.\r\n */\r\nPriorityQueue.prototype.isKeyQueued = function isKeyQueued (key) {\r\n  return key in this.queuedElements_;\r\n};\r\n\r\n\r\n/**\r\n * @param {T} element Element.\r\n * @return {boolean} Is queued.\r\n */\r\nPriorityQueue.prototype.isQueued = function isQueued (element) {\r\n  return this.isKeyQueued(this.keyFunction_(element));\r\n};\r\n\r\n\r\n/**\r\n * @param {number} index The index of the node to move down.\r\n * @private\r\n */\r\nPriorityQueue.prototype.siftUp_ = function siftUp_ (index) {\r\n  var elements = this.elements_;\r\n  var priorities = this.priorities_;\r\n  var count = elements.length;\r\n  var element = elements[index];\r\n  var priority = priorities[index];\r\n  var startIndex = index;\r\n\r\n  while (index < (count >> 1)) {\r\n    var lIndex = this.getLeftChildIndex_(index);\r\n    var rIndex = this.getRightChildIndex_(index);\r\n\r\n    var smallerChildIndex = rIndex < count &&\r\n        priorities[rIndex] < priorities[lIndex] ?\r\n      rIndex : lIndex;\r\n\r\n    elements[index] = elements[smallerChildIndex];\r\n    priorities[index] = priorities[smallerChildIndex];\r\n    index = smallerChildIndex;\r\n  }\r\n\r\n  elements[index] = element;\r\n  priorities[index] = priority;\r\n  this.siftDown_(startIndex, index);\r\n};\r\n\r\n\r\n/**\r\n * @param {number} startIndex The index of the root.\r\n * @param {number} index The index of the node to move up.\r\n * @private\r\n */\r\nPriorityQueue.prototype.siftDown_ = function siftDown_ (startIndex, index) {\r\n  var elements = this.elements_;\r\n  var priorities = this.priorities_;\r\n  var element = elements[index];\r\n  var priority = priorities[index];\r\n\r\n  while (index > startIndex) {\r\n    var parentIndex = this.getParentIndex_(index);\r\n    if (priorities[parentIndex] > priority) {\r\n      elements[index] = elements[parentIndex];\r\n      priorities[index] = priorities[parentIndex];\r\n      index = parentIndex;\r\n    } else {\r\n      break;\r\n    }\r\n  }\r\n  elements[index] = element;\r\n  priorities[index] = priority;\r\n};\r\n\r\n\r\n/**\r\n * FIXME empty description for jsdoc\r\n */\r\nPriorityQueue.prototype.reprioritize = function reprioritize () {\r\n  var priorityFunction = this.priorityFunction_;\r\n  var elements = this.elements_;\r\n  var priorities = this.priorities_;\r\n  var index = 0;\r\n  var n = elements.length;\r\n  var element, i, priority;\r\n  for (i = 0; i < n; ++i) {\r\n    element = elements[i];\r\n    priority = priorityFunction(element);\r\n    if (priority == DROP) {\r\n      delete this.queuedElements_[this.keyFunction_(element)];\r\n    } else {\r\n      priorities[index] = priority;\r\n      elements[index++] = element;\r\n    }\r\n  }\r\n  elements.length = index;\r\n  priorities.length = index;\r\n  this.heapify_();\r\n};\r\n\r\n\r\nexport default PriorityQueue;\r\n\r\n//# sourceMappingURL=PriorityQueue.js.map","/**\r\n * @module ol/TileQueue\r\n */\r\nimport TileState from './TileState.js';\r\nimport {listen, unlisten} from './events.js';\r\nimport EventType from './events/EventType.js';\r\nimport PriorityQueue from './structs/PriorityQueue.js';\r\n\r\n\r\n/**\r\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\r\n */\r\n\r\n\r\nvar TileQueue = /*@__PURE__*/(function (PriorityQueue) {\n  function TileQueue(tilePriorityFunction, tileChangeCallback) {\r\n\r\n    PriorityQueue.call(\r\n      /**\r\n       * @param {Array} element Element.\r\n       * @return {number} Priority.\r\n       */\r\n      this, function(element) {\r\n        return tilePriorityFunction.apply(null, element);\r\n      },\r\n      /**\r\n       * @param {Array} element Element.\r\n       * @return {string} Key.\r\n       */\r\n      function(element) {\r\n        return (/** @type {import(\"./Tile.js\").default} */ (element[0]).getKey());\r\n      });\r\n\r\n    /**\r\n     * @private\r\n     * @type {function(): ?}\r\n     */\r\n    this.tileChangeCallback_ = tileChangeCallback;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.tilesLoading_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string,boolean>}\r\n     */\r\n    this.tilesLoadingKeys_ = {};\r\n\r\n  }\n\n  if ( PriorityQueue ) TileQueue.__proto__ = PriorityQueue;\n  TileQueue.prototype = Object.create( PriorityQueue && PriorityQueue.prototype );\n  TileQueue.prototype.constructor = TileQueue;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  TileQueue.prototype.enqueue = function enqueue (element) {\r\n    var added = PriorityQueue.prototype.enqueue.call(this, element);\r\n    if (added) {\r\n      var tile = element[0];\r\n      listen(tile, EventType.CHANGE, this.handleTileChange, this);\r\n    }\r\n    return added;\r\n  };\r\n\r\n  /**\r\n   * @return {number} Number of tiles loading.\r\n   */\r\n  TileQueue.prototype.getTilesLoading = function getTilesLoading () {\r\n    return this.tilesLoading_;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"./events/Event.js\").default} event Event.\r\n   * @protected\r\n   */\r\n  TileQueue.prototype.handleTileChange = function handleTileChange (event) {\r\n    var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\r\n    var state = tile.getState();\r\n    if (state === TileState.LOADED || state === TileState.ERROR ||\r\n        state === TileState.EMPTY || state === TileState.ABORT) {\r\n      unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\r\n      var tileKey = tile.getKey();\r\n      if (tileKey in this.tilesLoadingKeys_) {\r\n        delete this.tilesLoadingKeys_[tileKey];\r\n        --this.tilesLoading_;\r\n      }\r\n      this.tileChangeCallback_();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\r\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\r\n   */\r\n  TileQueue.prototype.loadMoreTiles = function loadMoreTiles (maxTotalLoading, maxNewLoads) {\r\n    var newLoads = 0;\r\n    var abortedTiles = false;\r\n    var state, tile, tileKey;\r\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\r\n           this.getCount() > 0) {\r\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\r\n      tileKey = tile.getKey();\r\n      state = tile.getState();\r\n      if (state === TileState.ABORT) {\r\n        abortedTiles = true;\r\n      } else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\r\n        this.tilesLoadingKeys_[tileKey] = true;\r\n        ++this.tilesLoading_;\r\n        ++newLoads;\r\n        tile.load();\r\n      }\r\n    }\r\n    if (newLoads === 0 && abortedTiles) {\r\n      // Do not stop the render loop when all wanted tiles were aborted due to\r\n      // a small, saturated tile cache.\r\n      this.tileChangeCallback_();\r\n    }\r\n  };\n\n  return TileQueue;\n}(PriorityQueue));\r\n\r\n\r\nexport default TileQueue;\r\n\r\n//# sourceMappingURL=TileQueue.js.map","/**\r\n * @module ol/tilegrid/common\r\n */\r\n\r\n/**\r\n * Default maximum zoom for default tile grids.\r\n * @type {number}\r\n */\r\nexport var DEFAULT_MAX_ZOOM = 42;\r\n\r\n/**\r\n * Default tile size.\r\n * @type {number}\r\n */\r\nexport var DEFAULT_TILE_SIZE = 256;\r\n\r\n//# sourceMappingURL=common.js.map","/**\r\n * @module ol/centerconstraint\r\n */\r\nimport {clamp} from './math.js';\r\n\r\n\r\n/**\r\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined)): (import(\"./coordinate.js\").Coordinate|undefined)} Type\r\n */\r\n\r\n\r\n/**\r\n * @param {import(\"./extent.js\").Extent} extent Extent.\r\n * @return {Type} The constraint.\r\n */\r\nexport function createExtent(extent) {\r\n  return (\r\n    /**\r\n     * @param {import(\"./coordinate.js\").Coordinate=} center Center.\r\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\r\n     */\r\n    function(center) {\r\n      if (center) {\r\n        return [\r\n          clamp(center[0], extent[0], extent[2]),\r\n          clamp(center[1], extent[1], extent[3])\r\n        ];\r\n      } else {\r\n        return undefined;\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\r\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\r\n */\r\nexport function none(center) {\r\n  return center;\r\n}\r\n\r\n//# sourceMappingURL=centerconstraint.js.map","/**\r\n * @module ol/rotationconstraint\r\n */\r\nimport {toRadians} from './math.js';\r\n\r\n\r\n/**\r\n * @typedef {function((number|undefined), number): (number|undefined)} Type\r\n */\r\n\r\n\r\n/**\r\n * @param {number|undefined} rotation Rotation.\r\n * @param {number} delta Delta.\r\n * @return {number|undefined} Rotation.\r\n */\r\nexport function disable(rotation, delta) {\r\n  if (rotation !== undefined) {\r\n    return 0;\r\n  } else {\r\n    return undefined;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {number|undefined} rotation Rotation.\r\n * @param {number} delta Delta.\r\n * @return {number|undefined} Rotation.\r\n */\r\nexport function none(rotation, delta) {\r\n  if (rotation !== undefined) {\r\n    return rotation + delta;\r\n  } else {\r\n    return undefined;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {number} n N.\r\n * @return {Type} Rotation constraint.\r\n */\r\nexport function createSnapToN(n) {\r\n  var theta = 2 * Math.PI / n;\r\n  return (\r\n    /**\r\n     * @param {number|undefined} rotation Rotation.\r\n     * @param {number} delta Delta.\r\n     * @return {number|undefined} Rotation.\r\n     */\r\n    function(rotation, delta) {\r\n      if (rotation !== undefined) {\r\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\r\n        return rotation;\r\n      } else {\r\n        return undefined;\r\n      }\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * @param {number=} opt_tolerance Tolerance.\r\n * @return {Type} Rotation constraint.\r\n */\r\nexport function createSnapToZero(opt_tolerance) {\r\n  var tolerance = opt_tolerance || toRadians(5);\r\n  return (\r\n    /**\r\n     * @param {number|undefined} rotation Rotation.\r\n     * @param {number} delta Delta.\r\n     * @return {number|undefined} Rotation.\r\n     */\r\n    function(rotation, delta) {\r\n      if (rotation !== undefined) {\r\n        if (Math.abs(rotation + delta) <= tolerance) {\r\n          return 0;\r\n        } else {\r\n          return rotation + delta;\r\n        }\r\n      } else {\r\n        return undefined;\r\n      }\r\n    });\r\n}\r\n\r\n//# sourceMappingURL=rotationconstraint.js.map","/**\r\n * @module ol/ViewHint\r\n */\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport default {\r\n  ANIMATING: 0,\r\n  INTERACTING: 1\r\n};\r\n\r\n//# sourceMappingURL=ViewHint.js.map","/**\r\n * @module ol/ViewProperty\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  CENTER: 'center',\r\n  RESOLUTION: 'resolution',\r\n  ROTATION: 'rotation'\r\n};\r\n\r\n//# sourceMappingURL=ViewProperty.js.map","/**\r\n * @module ol/string\r\n */\r\n\r\n/**\r\n * @param {number} number Number to be formatted\r\n * @param {number} width The desired width\r\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\r\n * @returns {string} Formatted string\r\n */\r\nexport function padNumber(number, width, opt_precision) {\r\n  var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\r\n  var decimal = numberString.indexOf('.');\r\n  decimal = decimal === -1 ? numberString.length : decimal;\r\n  return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\r\n}\r\n\r\n\r\n/**\r\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\r\n * @param {string|number} v1 First version\r\n * @param {string|number} v2 Second version\r\n * @returns {number} Value\r\n */\r\nexport function compareVersions(v1, v2) {\r\n  var s1 = ('' + v1).split('.');\r\n  var s2 = ('' + v2).split('.');\r\n\r\n  for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\r\n    var n1 = parseInt(s1[i] || '0', 10);\r\n    var n2 = parseInt(s2[i] || '0', 10);\r\n\r\n    if (n1 > n2) {\r\n      return 1;\r\n    }\r\n    if (n2 > n1) {\r\n      return -1;\r\n    }\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\n//# sourceMappingURL=string.js.map","/**\r\n * @module ol/coordinate\r\n */\r\nimport {modulo} from './math.js';\r\nimport {padNumber} from './string.js';\r\n\r\n\r\n/**\r\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\r\n * @typedef {Array<number>} Coordinate\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\r\n * transforms it into a `{string}`.\r\n *\r\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\r\n * by the function.\r\n *\r\n * Example:\r\n *\r\n *     import {add} from 'ol/coordinate';\r\n *\r\n *     var coord = [7.85, 47.983333];\r\n *     add(coord, [-2, 4]);\r\n *     // coord is now [5.85, 51.983333]\r\n *\r\n * @param {Coordinate} coordinate Coordinate.\r\n * @param {Coordinate} delta Delta.\r\n * @return {Coordinate} The input coordinate adjusted by\r\n * the given delta.\r\n * @api\r\n */\r\nexport function add(coordinate, delta) {\r\n  coordinate[0] += delta[0];\r\n  coordinate[1] += delta[1];\r\n  return coordinate;\r\n}\r\n\r\n\r\n/**\r\n * Calculates the point closest to the passed coordinate on the passed circle.\r\n *\r\n * @param {Coordinate} coordinate The coordinate.\r\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\r\n * @return {Coordinate} Closest point on the circumference.\r\n */\r\nexport function closestOnCircle(coordinate, circle) {\r\n  var r = circle.getRadius();\r\n  var center = circle.getCenter();\r\n  var x0 = center[0];\r\n  var y0 = center[1];\r\n  var x1 = coordinate[0];\r\n  var y1 = coordinate[1];\r\n\r\n  var dx = x1 - x0;\r\n  var dy = y1 - y0;\r\n  if (dx === 0 && dy === 0) {\r\n    dx = 1;\r\n  }\r\n  var d = Math.sqrt(dx * dx + dy * dy);\r\n\r\n  var x = x0 + r * dx / d;\r\n  var y = y0 + r * dy / d;\r\n\r\n  return [x, y];\r\n}\r\n\r\n\r\n/**\r\n * Calculates the point closest to the passed coordinate on the passed segment.\r\n * This is the foot of the perpendicular of the coordinate to the segment when\r\n * the foot is on the segment, or the closest segment coordinate when the foot\r\n * is outside the segment.\r\n *\r\n * @param {Coordinate} coordinate The coordinate.\r\n * @param {Array<Coordinate>} segment The two coordinates\r\n * of the segment.\r\n * @return {Coordinate} The foot of the perpendicular of\r\n * the coordinate to the segment.\r\n */\r\nexport function closestOnSegment(coordinate, segment) {\r\n  var x0 = coordinate[0];\r\n  var y0 = coordinate[1];\r\n  var start = segment[0];\r\n  var end = segment[1];\r\n  var x1 = start[0];\r\n  var y1 = start[1];\r\n  var x2 = end[0];\r\n  var y2 = end[1];\r\n  var dx = x2 - x1;\r\n  var dy = y2 - y1;\r\n  var along = (dx === 0 && dy === 0) ? 0 :\r\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\r\n  var x, y;\r\n  if (along <= 0) {\r\n    x = x1;\r\n    y = y1;\r\n  } else if (along >= 1) {\r\n    x = x2;\r\n    y = y2;\r\n  } else {\r\n    x = x1 + along * dx;\r\n    y = y1 + along * dy;\r\n  }\r\n  return [x, y];\r\n}\r\n\r\n\r\n/**\r\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\r\n * used to format\r\n * a {Coordinate} to a string.\r\n *\r\n * Example without specifying the fractional digits:\r\n *\r\n *     import {createStringXY} from 'ol/coordinate';\r\n *\r\n *     var coord = [7.85, 47.983333];\r\n *     var stringifyFunc = createStringXY();\r\n *     var out = stringifyFunc(coord);\r\n *     // out is now '8, 48'\r\n *\r\n * Example with explicitly specifying 2 fractional digits:\r\n *\r\n *     import {createStringXY} from 'ol/coordinate';\r\n *\r\n *     var coord = [7.85, 47.983333];\r\n *     var stringifyFunc = createStringXY(2);\r\n *     var out = stringifyFunc(coord);\r\n *     // out is now '7.85, 47.98'\r\n *\r\n * @param {number=} opt_fractionDigits The number of digits to include\r\n *    after the decimal point. Default is `0`.\r\n * @return {CoordinateFormat} Coordinate format.\r\n * @api\r\n */\r\nexport function createStringXY(opt_fractionDigits) {\r\n  return (\r\n    /**\r\n     * @param {Coordinate} coordinate Coordinate.\r\n     * @return {string} String XY.\r\n     */\r\n    function(coordinate) {\r\n      return toStringXY(coordinate, opt_fractionDigits);\r\n    }\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * @param {string} hemispheres Hemispheres.\r\n * @param {number} degrees Degrees.\r\n * @param {number=} opt_fractionDigits The number of digits to include\r\n *    after the decimal point. Default is `0`.\r\n * @return {string} String.\r\n */\r\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\r\n  var normalizedDegrees = modulo(degrees + 180, 360) - 180;\r\n  var x = Math.abs(3600 * normalizedDegrees);\r\n  var dflPrecision = opt_fractionDigits || 0;\r\n  var precision = Math.pow(10, dflPrecision);\r\n\r\n  var deg = Math.floor(x / 3600);\r\n  var min = Math.floor((x - deg * 3600) / 60);\r\n  var sec = x - (deg * 3600) - (min * 60);\r\n  sec = Math.ceil(sec * precision) / precision;\r\n\r\n  if (sec >= 60) {\r\n    sec = 0;\r\n    min += 1;\r\n  }\r\n\r\n  if (min >= 60) {\r\n    min = 0;\r\n    deg += 1;\r\n  }\r\n\r\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\r\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\r\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\r\n}\r\n\r\n\r\n/**\r\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\r\n * using the given string template. The strings `{x}` and `{y}` in the template\r\n * will be replaced with the first and second coordinate values respectively.\r\n *\r\n * Example without specifying the fractional digits:\r\n *\r\n *     import {format} from 'ol/coordinate';\r\n *\r\n *     var coord = [7.85, 47.983333];\r\n *     var template = 'Coordinate is ({x}|{y}).';\r\n *     var out = format(coord, template);\r\n *     // out is now 'Coordinate is (8|48).'\r\n *\r\n * Example explicitly specifying the fractional digits:\r\n *\r\n *     import {format} from 'ol/coordinate';\r\n *\r\n *     var coord = [7.85, 47.983333];\r\n *     var template = 'Coordinate is ({x}|{y}).';\r\n *     var out = format(coord, template, 2);\r\n *     // out is now 'Coordinate is (7.85|47.98).'\r\n *\r\n * @param {Coordinate} coordinate Coordinate.\r\n * @param {string} template A template string with `{x}` and `{y}` placeholders\r\n *     that will be replaced by first and second coordinate values.\r\n * @param {number=} opt_fractionDigits The number of digits to include\r\n *    after the decimal point. Default is `0`.\r\n * @return {string} Formatted coordinate.\r\n * @api\r\n */\r\nexport function format(coordinate, template, opt_fractionDigits) {\r\n  if (coordinate) {\r\n    return template\r\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\r\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\r\n  } else {\r\n    return '';\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Coordinate} coordinate1 First coordinate.\r\n * @param {Coordinate} coordinate2 Second coordinate.\r\n * @return {boolean} The two coordinates are equal.\r\n */\r\nexport function equals(coordinate1, coordinate2) {\r\n  var equals = true;\r\n  for (var i = coordinate1.length - 1; i >= 0; --i) {\r\n    if (coordinate1[i] != coordinate2[i]) {\r\n      equals = false;\r\n      break;\r\n    }\r\n  }\r\n  return equals;\r\n}\r\n\r\n\r\n/**\r\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\r\n * returned by the function.\r\n *\r\n * Example:\r\n *\r\n *     import {rotate} from 'ol/coordinate';\r\n *\r\n *     var coord = [7.85, 47.983333];\r\n *     var rotateRadians = Math.PI / 2; // 90 degrees\r\n *     rotate(coord, rotateRadians);\r\n *     // coord is now [-47.983333, 7.85]\r\n *\r\n * @param {Coordinate} coordinate Coordinate.\r\n * @param {number} angle Angle in radian.\r\n * @return {Coordinate} Coordinate.\r\n * @api\r\n */\r\nexport function rotate(coordinate, angle) {\r\n  var cosAngle = Math.cos(angle);\r\n  var sinAngle = Math.sin(angle);\r\n  var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\r\n  var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\r\n  coordinate[0] = x;\r\n  coordinate[1] = y;\r\n  return coordinate;\r\n}\r\n\r\n\r\n/**\r\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\r\n * by the function.\r\n *\r\n * Example:\r\n *\r\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\r\n *\r\n *     var coord = [7.85, 47.983333];\r\n *     var scale = 1.2;\r\n *     scaleCoordinate(coord, scale);\r\n *     // coord is now [9.42, 57.5799996]\r\n *\r\n * @param {Coordinate} coordinate Coordinate.\r\n * @param {number} scale Scale factor.\r\n * @return {Coordinate} Coordinate.\r\n */\r\nexport function scale(coordinate, scale) {\r\n  coordinate[0] *= scale;\r\n  coordinate[1] *= scale;\r\n  return coordinate;\r\n}\r\n\r\n\r\n/**\r\n * @param {Coordinate} coord1 First coordinate.\r\n * @param {Coordinate} coord2 Second coordinate.\r\n * @return {number} Squared distance between coord1 and coord2.\r\n */\r\nexport function squaredDistance(coord1, coord2) {\r\n  var dx = coord1[0] - coord2[0];\r\n  var dy = coord1[1] - coord2[1];\r\n  return dx * dx + dy * dy;\r\n}\r\n\r\n\r\n/**\r\n * @param {Coordinate} coord1 First coordinate.\r\n * @param {Coordinate} coord2 Second coordinate.\r\n * @return {number} Distance between coord1 and coord2.\r\n */\r\nexport function distance(coord1, coord2) {\r\n  return Math.sqrt(squaredDistance(coord1, coord2));\r\n}\r\n\r\n\r\n/**\r\n * Calculate the squared distance from a coordinate to a line segment.\r\n *\r\n * @param {Coordinate} coordinate Coordinate of the point.\r\n * @param {Array<Coordinate>} segment Line segment (2\r\n * coordinates).\r\n * @return {number} Squared distance from the point to the line segment.\r\n */\r\nexport function squaredDistanceToSegment(coordinate, segment) {\r\n  return squaredDistance(coordinate,\r\n    closestOnSegment(coordinate, segment));\r\n}\r\n\r\n\r\n/**\r\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\r\n * seconds.\r\n *\r\n * Example without specifying fractional digits:\r\n *\r\n *     import {toStringHDMS} from 'ol/coordinate';\r\n *\r\n *     var coord = [7.85, 47.983333];\r\n *     var out = toStringHDMS(coord);\r\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\r\n *\r\n * Example explicitly specifying 1 fractional digit:\r\n *\r\n *     import {toStringHDMS} from 'ol/coordinate';\r\n *\r\n *     var coord = [7.85, 47.983333];\r\n *     var out = toStringHDMS(coord, 1);\r\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\r\n *\r\n * @param {Coordinate} coordinate Coordinate.\r\n * @param {number=} opt_fractionDigits The number of digits to include\r\n *    after the decimal point. Default is `0`.\r\n * @return {string} Hemisphere, degrees, minutes and seconds.\r\n * @api\r\n */\r\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\r\n  if (coordinate) {\r\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\r\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\r\n  } else {\r\n    return '';\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Format a coordinate as a comma delimited string.\r\n *\r\n * Example without specifying fractional digits:\r\n *\r\n *     import {toStringXY} from 'ol/coordinate';\r\n *\r\n *     var coord = [7.85, 47.983333];\r\n *     var out = toStringXY(coord);\r\n *     // out is now '8, 48'\r\n *\r\n * Example explicitly specifying 1 fractional digit:\r\n *\r\n *     import {toStringXY} from 'ol/coordinate';\r\n *\r\n *     var coord = [7.85, 47.983333];\r\n *     var out = toStringXY(coord, 1);\r\n *     // out is now '7.8, 48.0'\r\n *\r\n * @param {Coordinate} coordinate Coordinate.\r\n * @param {number=} opt_fractionDigits The number of digits to include\r\n *    after the decimal point. Default is `0`.\r\n * @return {string} XY.\r\n * @api\r\n */\r\nexport function toStringXY(coordinate, opt_fractionDigits) {\r\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\r\n}\r\n\r\n//# sourceMappingURL=coordinate.js.map","/**\r\n * @module ol/easing\r\n */\r\n\r\n\r\n/**\r\n * Start slow and speed up.\r\n * @param {number} t Input between 0 and 1.\r\n * @return {number} Output between 0 and 1.\r\n * @api\r\n */\r\nexport function easeIn(t) {\r\n  return Math.pow(t, 3);\r\n}\r\n\r\n\r\n/**\r\n * Start fast and slow down.\r\n * @param {number} t Input between 0 and 1.\r\n * @return {number} Output between 0 and 1.\r\n * @api\r\n */\r\nexport function easeOut(t) {\r\n  return 1 - easeIn(1 - t);\r\n}\r\n\r\n\r\n/**\r\n * Start slow, speed up, and then slow down again.\r\n * @param {number} t Input between 0 and 1.\r\n * @return {number} Output between 0 and 1.\r\n * @api\r\n */\r\nexport function inAndOut(t) {\r\n  return 3 * t * t - 2 * t * t * t;\r\n}\r\n\r\n\r\n/**\r\n * Maintain a constant speed over time.\r\n * @param {number} t Input between 0 and 1.\r\n * @return {number} Output between 0 and 1.\r\n * @api\r\n */\r\nexport function linear(t) {\r\n  return t;\r\n}\r\n\r\n\r\n/**\r\n * Start slow, speed up, and at the very end slow down again.  This has the\r\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\r\n * slowdown is delayed.\r\n * @param {number} t Input between 0 and 1.\r\n * @return {number} Output between 0 and 1.\r\n * @api\r\n */\r\nexport function upAndDown(t) {\r\n  if (t < 0.5) {\r\n    return inAndOut(2 * t);\r\n  } else {\r\n    return 1 - inAndOut(2 * (t - 0.5));\r\n  }\r\n}\r\n\r\n//# sourceMappingURL=easing.js.map","/**\r\n * @module ol/geom/GeometryLayout\r\n */\r\n\r\n/**\r\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\r\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\r\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\r\n * @enum {string}\r\n */\r\nexport default {\r\n  XY: 'XY',\r\n  XYZ: 'XYZ',\r\n  XYM: 'XYM',\r\n  XYZM: 'XYZM'\r\n};\r\n\r\n//# sourceMappingURL=GeometryLayout.js.map","/**\r\n * @module ol/geom/flat/transform\r\n */\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n * @param {Array<number>=} opt_dest Destination.\r\n * @return {Array<number>} Transformed coordinates.\r\n */\r\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\r\n  var dest = opt_dest ? opt_dest : [];\r\n  var i = 0;\r\n  for (var j = offset; j < end; j += stride) {\r\n    var x = flatCoordinates[j];\r\n    var y = flatCoordinates[j + 1];\r\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\r\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\r\n  }\r\n  if (opt_dest && dest.length != i) {\r\n    dest.length = i;\r\n  }\r\n  return dest;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} angle Angle.\r\n * @param {Array<number>} anchor Rotation anchor point.\r\n * @param {Array<number>=} opt_dest Destination.\r\n * @return {Array<number>} Transformed coordinates.\r\n */\r\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\r\n  var dest = opt_dest ? opt_dest : [];\r\n  var cos = Math.cos(angle);\r\n  var sin = Math.sin(angle);\r\n  var anchorX = anchor[0];\r\n  var anchorY = anchor[1];\r\n  var i = 0;\r\n  for (var j = offset; j < end; j += stride) {\r\n    var deltaX = flatCoordinates[j] - anchorX;\r\n    var deltaY = flatCoordinates[j + 1] - anchorY;\r\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\r\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\r\n    for (var k = j + 2; k < j + stride; ++k) {\r\n      dest[i++] = flatCoordinates[k];\r\n    }\r\n  }\r\n  if (opt_dest && dest.length != i) {\r\n    dest.length = i;\r\n  }\r\n  return dest;\r\n}\r\n\r\n\r\n/**\r\n * Scale the coordinates.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} sx Scale factor in the x-direction.\r\n * @param {number} sy Scale factor in the y-direction.\r\n * @param {Array<number>} anchor Scale anchor point.\r\n * @param {Array<number>=} opt_dest Destination.\r\n * @return {Array<number>} Transformed coordinates.\r\n */\r\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\r\n  var dest = opt_dest ? opt_dest : [];\r\n  var anchorX = anchor[0];\r\n  var anchorY = anchor[1];\r\n  var i = 0;\r\n  for (var j = offset; j < end; j += stride) {\r\n    var deltaX = flatCoordinates[j] - anchorX;\r\n    var deltaY = flatCoordinates[j + 1] - anchorY;\r\n    dest[i++] = anchorX + sx * deltaX;\r\n    dest[i++] = anchorY + sy * deltaY;\r\n    for (var k = j + 2; k < j + stride; ++k) {\r\n      dest[i++] = flatCoordinates[k];\r\n    }\r\n  }\r\n  if (opt_dest && dest.length != i) {\r\n    dest.length = i;\r\n  }\r\n  return dest;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} deltaX Delta X.\r\n * @param {number} deltaY Delta Y.\r\n * @param {Array<number>=} opt_dest Destination.\r\n * @return {Array<number>} Transformed coordinates.\r\n */\r\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\r\n  var dest = opt_dest ? opt_dest : [];\r\n  var i = 0;\r\n  for (var j = offset; j < end; j += stride) {\r\n    dest[i++] = flatCoordinates[j] + deltaX;\r\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\r\n    for (var k = j + 2; k < j + stride; ++k) {\r\n      dest[i++] = flatCoordinates[k];\r\n    }\r\n  }\r\n  if (opt_dest && dest.length != i) {\r\n    dest.length = i;\r\n  }\r\n  return dest;\r\n}\r\n\r\n//# sourceMappingURL=transform.js.map","/**\r\n * @module ol/transform\r\n */\r\nimport {assert} from './asserts.js';\r\n\r\n\r\n/**\r\n * An array representing an affine 2d transformation for use with\r\n * {@link module:ol/transform} functions. The array has 6 elements.\r\n * @typedef {!Array<number>} Transform\r\n */\r\n\r\n\r\n/**\r\n * Collection of affine 2d transformation functions. The functions work on an\r\n * array of 6 elements. The element order is compatible with the [SVGMatrix\r\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\r\n * a subset (elements a to f) of a 3×3 matrix:\r\n * ```\r\n * [ a c e ]\r\n * [ b d f ]\r\n * [ 0 0 1 ]\r\n * ```\r\n */\r\n\r\n\r\n/**\r\n * @private\r\n * @type {Transform}\r\n */\r\nvar tmp_ = new Array(6);\r\n\r\n\r\n/**\r\n * Create an identity transform.\r\n * @return {!Transform} Identity transform.\r\n */\r\nexport function create() {\r\n  return [1, 0, 0, 1, 0, 0];\r\n}\r\n\r\n\r\n/**\r\n * Resets the given transform to an identity transform.\r\n * @param {!Transform} transform Transform.\r\n * @return {!Transform} Transform.\r\n */\r\nexport function reset(transform) {\r\n  return set(transform, 1, 0, 0, 1, 0, 0);\r\n}\r\n\r\n\r\n/**\r\n * Multiply the underlying matrices of two transforms and return the result in\r\n * the first transform.\r\n * @param {!Transform} transform1 Transform parameters of matrix 1.\r\n * @param {!Transform} transform2 Transform parameters of matrix 2.\r\n * @return {!Transform} transform1 multiplied with transform2.\r\n */\r\nexport function multiply(transform1, transform2) {\r\n  var a1 = transform1[0];\r\n  var b1 = transform1[1];\r\n  var c1 = transform1[2];\r\n  var d1 = transform1[3];\r\n  var e1 = transform1[4];\r\n  var f1 = transform1[5];\r\n  var a2 = transform2[0];\r\n  var b2 = transform2[1];\r\n  var c2 = transform2[2];\r\n  var d2 = transform2[3];\r\n  var e2 = transform2[4];\r\n  var f2 = transform2[5];\r\n\r\n  transform1[0] = a1 * a2 + c1 * b2;\r\n  transform1[1] = b1 * a2 + d1 * b2;\r\n  transform1[2] = a1 * c2 + c1 * d2;\r\n  transform1[3] = b1 * c2 + d1 * d2;\r\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\r\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\r\n\r\n  return transform1;\r\n}\r\n\r\n/**\r\n * Set the transform components a-f on a given transform.\r\n * @param {!Transform} transform Transform.\r\n * @param {number} a The a component of the transform.\r\n * @param {number} b The b component of the transform.\r\n * @param {number} c The c component of the transform.\r\n * @param {number} d The d component of the transform.\r\n * @param {number} e The e component of the transform.\r\n * @param {number} f The f component of the transform.\r\n * @return {!Transform} Matrix with transform applied.\r\n */\r\nexport function set(transform, a, b, c, d, e, f) {\r\n  transform[0] = a;\r\n  transform[1] = b;\r\n  transform[2] = c;\r\n  transform[3] = d;\r\n  transform[4] = e;\r\n  transform[5] = f;\r\n  return transform;\r\n}\r\n\r\n\r\n/**\r\n * Set transform on one matrix from another matrix.\r\n * @param {!Transform} transform1 Matrix to set transform to.\r\n * @param {!Transform} transform2 Matrix to set transform from.\r\n * @return {!Transform} transform1 with transform from transform2 applied.\r\n */\r\nexport function setFromArray(transform1, transform2) {\r\n  transform1[0] = transform2[0];\r\n  transform1[1] = transform2[1];\r\n  transform1[2] = transform2[2];\r\n  transform1[3] = transform2[3];\r\n  transform1[4] = transform2[4];\r\n  transform1[5] = transform2[5];\r\n  return transform1;\r\n}\r\n\r\n\r\n/**\r\n * Transforms the given coordinate with the given transform returning the\r\n * resulting, transformed coordinate. The coordinate will be modified in-place.\r\n *\r\n * @param {Transform} transform The transformation.\r\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\r\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\r\n *     chained together.\r\n */\r\nexport function apply(transform, coordinate) {\r\n  var x = coordinate[0];\r\n  var y = coordinate[1];\r\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\r\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\r\n  return coordinate;\r\n}\r\n\r\n\r\n/**\r\n * Applies rotation to the given transform.\r\n * @param {!Transform} transform Transform.\r\n * @param {number} angle Angle in radians.\r\n * @return {!Transform} The rotated transform.\r\n */\r\nexport function rotate(transform, angle) {\r\n  var cos = Math.cos(angle);\r\n  var sin = Math.sin(angle);\r\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\r\n}\r\n\r\n\r\n/**\r\n * Applies scale to a given transform.\r\n * @param {!Transform} transform Transform.\r\n * @param {number} x Scale factor x.\r\n * @param {number} y Scale factor y.\r\n * @return {!Transform} The scaled transform.\r\n */\r\nexport function scale(transform, x, y) {\r\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\r\n}\r\n\r\n\r\n/**\r\n * Applies translation to the given transform.\r\n * @param {!Transform} transform Transform.\r\n * @param {number} dx Translation x.\r\n * @param {number} dy Translation y.\r\n * @return {!Transform} The translated transform.\r\n */\r\nexport function translate(transform, dx, dy) {\r\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\r\n}\r\n\r\n\r\n/**\r\n * Creates a composite transform given an initial translation, scale, rotation, and\r\n * final translation (in that order only, not commutative).\r\n * @param {!Transform} transform The transform (will be modified in place).\r\n * @param {number} dx1 Initial translation x.\r\n * @param {number} dy1 Initial translation y.\r\n * @param {number} sx Scale factor x.\r\n * @param {number} sy Scale factor y.\r\n * @param {number} angle Rotation (in counter-clockwise radians).\r\n * @param {number} dx2 Final translation x.\r\n * @param {number} dy2 Final translation y.\r\n * @return {!Transform} The composite transform.\r\n */\r\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\r\n  var sin = Math.sin(angle);\r\n  var cos = Math.cos(angle);\r\n  transform[0] = sx * cos;\r\n  transform[1] = sy * sin;\r\n  transform[2] = -sx * sin;\r\n  transform[3] = sy * cos;\r\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\r\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\r\n  return transform;\r\n}\r\n\r\n\r\n/**\r\n * Invert the given transform.\r\n * @param {!Transform} transform Transform.\r\n * @return {!Transform} Inverse of the transform.\r\n */\r\nexport function invert(transform) {\r\n  var det = determinant(transform);\r\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\r\n\r\n  var a = transform[0];\r\n  var b = transform[1];\r\n  var c = transform[2];\r\n  var d = transform[3];\r\n  var e = transform[4];\r\n  var f = transform[5];\r\n\r\n  transform[0] = d / det;\r\n  transform[1] = -b / det;\r\n  transform[2] = -c / det;\r\n  transform[3] = a / det;\r\n  transform[4] = (c * f - d * e) / det;\r\n  transform[5] = -(a * f - b * e) / det;\r\n\r\n  return transform;\r\n}\r\n\r\n\r\n/**\r\n * Returns the determinant of the given matrix.\r\n * @param {!Transform} mat Matrix.\r\n * @return {number} Determinant.\r\n */\r\nexport function determinant(mat) {\r\n  return mat[0] * mat[3] - mat[1] * mat[2];\r\n}\r\n\r\n//# sourceMappingURL=transform.js.map","/**\r\n * @module ol/geom/Geometry\r\n */\r\nimport {abstract} from '../util.js';\r\nimport BaseObject from '../Object.js';\r\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\r\nimport {transform2D} from './flat/transform.js';\r\nimport {get as getProjection, getTransform} from '../proj.js';\r\nimport Units from '../proj/Units.js';\r\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\r\n\r\n\r\n/**\r\n * @type {import(\"../transform.js\").Transform}\r\n */\r\nvar tmpTransform = createTransform();\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Base class for vector geometries.\r\n *\r\n * To get notified of changes to the geometry, register a listener for the\r\n * generic `change` event on your geometry instance.\r\n *\r\n * @abstract\r\n * @api\r\n */\r\nvar Geometry = /*@__PURE__*/(function (BaseObject) {\n  function Geometry() {\r\n\r\n    BaseObject.call(this);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../extent.js\").Extent}\r\n     */\r\n    this.extent_ = createEmpty();\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.extentRevision_ = -1;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Object<string, Geometry>}\r\n     */\r\n    this.simplifiedGeometryCache = {};\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.simplifiedGeometryRevision = 0;\r\n\r\n  }\n\n  if ( BaseObject ) Geometry.__proto__ = BaseObject;\n  Geometry.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geometry.prototype.constructor = Geometry;\r\n\r\n  /**\r\n   * Make a complete copy of the geometry.\r\n   * @abstract\r\n   * @return {!Geometry} Clone.\r\n   */\r\n  Geometry.prototype.clone = function clone () {\r\n    return abstract();\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {number} x X.\r\n   * @param {number} y Y.\r\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\r\n   * @param {number} minSquaredDistance Minimum squared distance.\r\n   * @return {number} Minimum squared distance.\r\n   */\r\n  Geometry.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\r\n    return abstract();\r\n  };\r\n\r\n  /**\r\n   * @param {number} x X.\r\n   * @param {number} y Y.\r\n   * @return {boolean} Contains (x, y).\r\n   */\r\n  Geometry.prototype.containsXY = function containsXY (x, y) {\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Return the closest point of the geometry to the passed point as\r\n   * {@link module:ol/coordinate~Coordinate coordinate}.\r\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\r\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\r\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\r\n   * @api\r\n   */\r\n  Geometry.prototype.getClosestPoint = function getClosestPoint (point, opt_closestPoint) {\r\n    var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\r\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\r\n    return closestPoint;\r\n  };\r\n\r\n  /**\r\n   * Returns true if this geometry includes the specified coordinate. If the\r\n   * coordinate is on the boundary of the geometry, returns false.\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @return {boolean} Contains coordinate.\r\n   * @api\r\n   */\r\n  Geometry.prototype.intersectsCoordinate = function intersectsCoordinate (coordinate) {\r\n    return this.containsXY(coordinate[0], coordinate[1]);\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @protected\r\n   * @return {import(\"../extent.js\").Extent} extent Extent.\r\n   */\r\n  Geometry.prototype.computeExtent = function computeExtent (extent) {\r\n    return abstract();\r\n  };\r\n\r\n  /**\r\n   * Get the extent of the geometry.\r\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\r\n   * @return {import(\"../extent.js\").Extent} extent Extent.\r\n   * @api\r\n   */\r\n  Geometry.prototype.getExtent = function getExtent (opt_extent) {\r\n    if (this.extentRevision_ != this.getRevision()) {\r\n      this.extent_ = this.computeExtent(this.extent_);\r\n      this.extentRevision_ = this.getRevision();\r\n    }\r\n    return returnOrUpdate(this.extent_, opt_extent);\r\n  };\r\n\r\n  /**\r\n   * Rotate the geometry around a given coordinate. This modifies the geometry\r\n   * coordinates in place.\r\n   * @abstract\r\n   * @param {number} angle Rotation angle in radians.\r\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\r\n   * @api\r\n   */\r\n  Geometry.prototype.rotate = function rotate (angle, anchor) {\r\n    abstract();\r\n  };\r\n\r\n  /**\r\n   * Scale the geometry (with an optional origin).  This modifies the geometry\r\n   * coordinates in place.\r\n   * @abstract\r\n   * @param {number} sx The scaling factor in the x-direction.\r\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\r\n   *     sx).\r\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\r\n   *     of the geometry extent).\r\n   * @api\r\n   */\r\n  Geometry.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\r\n    abstract();\r\n  };\r\n\r\n  /**\r\n   * Create a simplified version of this geometry.  For linestrings, this uses\r\n   * the the {@link\r\n   * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\r\n   * Douglas Peucker} algorithm.  For polygons, a quantization-based\r\n   * simplification is used to preserve topology.\r\n   * @param {number} tolerance The tolerance distance for simplification.\r\n   * @return {Geometry} A new, simplified version of the original geometry.\r\n   * @api\r\n   */\r\n  Geometry.prototype.simplify = function simplify (tolerance) {\r\n    return this.getSimplifiedGeometry(tolerance * tolerance);\r\n  };\r\n\r\n  /**\r\n   * Create a simplified version of this geometry using the Douglas Peucker\r\n   * algorithm.\r\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\r\n   * @abstract\r\n   * @param {number} squaredTolerance Squared tolerance.\r\n   * @return {Geometry} Simplified geometry.\r\n   */\r\n  Geometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\r\n    return abstract();\r\n  };\r\n\r\n  /**\r\n   * Get the type of this geometry.\r\n   * @abstract\r\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\r\n   */\r\n  Geometry.prototype.getType = function getType () {\r\n    return abstract();\r\n  };\r\n\r\n  /**\r\n   * Apply a transform function to each coordinate of the geometry.\r\n   * The geometry is modified in place.\r\n   * If you do not want the geometry modified in place, first `clone()` it and\r\n   * then use this function on the clone.\r\n   * @abstract\r\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\r\n   */\r\n  Geometry.prototype.applyTransform = function applyTransform (transformFn) {\r\n    abstract();\r\n  };\r\n\r\n  /**\r\n   * Test if the geometry and the passed extent intersect.\r\n   * @abstract\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @return {boolean} `true` if the geometry and the extent intersect.\r\n   */\r\n  Geometry.prototype.intersectsExtent = function intersectsExtent (extent) {\r\n    return abstract();\r\n  };\r\n\r\n  /**\r\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\r\n   * instead you want a new geometry, first `clone()` this geometry.\r\n   * @abstract\r\n   * @param {number} deltaX Delta X.\r\n   * @param {number} deltaY Delta Y.\r\n   * @api\r\n   */\r\n  Geometry.prototype.translate = function translate (deltaX, deltaY) {\r\n    abstract();\r\n  };\r\n\r\n  /**\r\n   * Transform each coordinate of the geometry from one coordinate reference\r\n   * system to another. The geometry is modified in place.\r\n   * For example, a line will be transformed to a line and a circle to a circle.\r\n   * If you do not want the geometry modified in place, first `clone()` it and\r\n   * then use this function on the clone.\r\n   *\r\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\r\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\r\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\r\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\r\n   * @return {Geometry} This geometry.  Note that original geometry is\r\n   *     modified in place.\r\n   * @api\r\n   */\r\n  Geometry.prototype.transform = function transform (source, destination) {\r\n    /** @type {import(\"../proj/Projection.js\").default} */\r\n    var sourceProj = getProjection(source);\r\n    var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\r\n      function(inCoordinates, outCoordinates, stride) {\r\n        var pixelExtent = sourceProj.getExtent();\r\n        var projectedExtent = sourceProj.getWorldExtent();\r\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\r\n        composeTransform(tmpTransform,\r\n          projectedExtent[0], projectedExtent[3],\r\n          scale, -scale, 0,\r\n          0, 0);\r\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\r\n          tmpTransform, outCoordinates);\r\n        return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\r\n      } :\r\n      getTransform(sourceProj, destination);\r\n    this.applyTransform(transformFn);\r\n    return this;\r\n  };\n\n  return Geometry;\n}(BaseObject));\r\n\r\n\r\nexport default Geometry;\r\n\r\n//# sourceMappingURL=Geometry.js.map","/**\r\n * @module ol/geom/SimpleGeometry\r\n */\r\nimport {abstract} from '../util.js';\r\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\r\nimport Geometry from './Geometry.js';\r\nimport GeometryLayout from './GeometryLayout.js';\r\nimport {rotate, scale, translate, transform2D} from './flat/transform.js';\r\nimport {clear} from '../obj.js';\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; only used for creating subclasses; do not instantiate\r\n * in apps, as cannot be rendered.\r\n *\r\n * @abstract\r\n * @api\r\n */\r\nvar SimpleGeometry = /*@__PURE__*/(function (Geometry) {\n  function SimpleGeometry() {\r\n\r\n    Geometry.call(this);\r\n\r\n    /**\r\n     * @protected\r\n     * @type {GeometryLayout}\r\n     */\r\n    this.layout = GeometryLayout.XY;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.stride = 2;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array<number>}\r\n     */\r\n    this.flatCoordinates = null;\r\n\r\n  }\n\n  if ( Geometry ) SimpleGeometry.__proto__ = Geometry;\n  SimpleGeometry.prototype = Object.create( Geometry && Geometry.prototype );\n  SimpleGeometry.prototype.constructor = SimpleGeometry;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  SimpleGeometry.prototype.computeExtent = function computeExtent (extent) {\r\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\r\n      0, this.flatCoordinates.length, this.stride, extent);\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {Array} Coordinates.\r\n   */\r\n  SimpleGeometry.prototype.getCoordinates = function getCoordinates () {\r\n    return abstract();\r\n  };\r\n\r\n  /**\r\n   * Return the first coordinate of the geometry.\r\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\r\n   * @api\r\n   */\r\n  SimpleGeometry.prototype.getFirstCoordinate = function getFirstCoordinate () {\r\n    return this.flatCoordinates.slice(0, this.stride);\r\n  };\r\n\r\n  /**\r\n   * @return {Array<number>} Flat coordinates.\r\n   */\r\n  SimpleGeometry.prototype.getFlatCoordinates = function getFlatCoordinates () {\r\n    return this.flatCoordinates;\r\n  };\r\n\r\n  /**\r\n   * Return the last coordinate of the geometry.\r\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\r\n   * @api\r\n   */\r\n  SimpleGeometry.prototype.getLastCoordinate = function getLastCoordinate () {\r\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\r\n  };\r\n\r\n  /**\r\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\r\n   * @return {GeometryLayout} Layout.\r\n   * @api\r\n   */\r\n  SimpleGeometry.prototype.getLayout = function getLayout () {\r\n    return this.layout;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  SimpleGeometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\r\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\r\n      clear(this.simplifiedGeometryCache);\r\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\r\n      this.simplifiedGeometryRevision = this.getRevision();\r\n    }\r\n    // If squaredTolerance is negative or if we know that simplification will not\r\n    // have any effect then just return this.\r\n    if (squaredTolerance < 0 ||\r\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\r\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\r\n      return this;\r\n    }\r\n    var key = squaredTolerance.toString();\r\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\r\n      return this.simplifiedGeometryCache[key];\r\n    } else {\r\n      var simplifiedGeometry =\r\n          this.getSimplifiedGeometryInternal(squaredTolerance);\r\n      var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\r\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\r\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\r\n        return simplifiedGeometry;\r\n      } else {\r\n        // Simplification did not actually remove any coordinates.  We now know\r\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\r\n        // than or equal to the current squaredTolerance will also not have any\r\n        // effect.  This allows us to short circuit simplification (saving CPU\r\n        // cycles) and prevents the cache of simplified geometries from filling\r\n        // up with useless identical copies of this geometry (saving memory).\r\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\r\n        return this;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {number} squaredTolerance Squared tolerance.\r\n   * @return {SimpleGeometry} Simplified geometry.\r\n   * @protected\r\n   */\r\n  SimpleGeometry.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * @return {number} Stride.\r\n   */\r\n  SimpleGeometry.prototype.getStride = function getStride () {\r\n    return this.stride;\r\n  };\r\n\r\n  /**\r\n   * @param {GeometryLayout} layout Layout.\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   */\r\n  SimpleGeometry.prototype.setFlatCoordinates = function setFlatCoordinates (layout, flatCoordinates) {\r\n    this.stride = getStrideForLayout(layout);\r\n    this.layout = layout;\r\n    this.flatCoordinates = flatCoordinates;\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {!Array} coordinates Coordinates.\r\n   * @param {GeometryLayout=} opt_layout Layout.\r\n   */\r\n  SimpleGeometry.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\r\n    abstract();\r\n  };\r\n\r\n  /**\r\n   * @param {GeometryLayout|undefined} layout Layout.\r\n   * @param {Array} coordinates Coordinates.\r\n   * @param {number} nesting Nesting.\r\n   * @protected\r\n   */\r\n  SimpleGeometry.prototype.setLayout = function setLayout (layout, coordinates, nesting) {\r\n    /** @type {number} */\r\n    var stride;\r\n    if (layout) {\r\n      stride = getStrideForLayout(layout);\r\n    } else {\r\n      for (var i = 0; i < nesting; ++i) {\r\n        if (coordinates.length === 0) {\r\n          this.layout = GeometryLayout.XY;\r\n          this.stride = 2;\r\n          return;\r\n        } else {\r\n          coordinates = /** @type {Array} */ (coordinates[0]);\r\n        }\r\n      }\r\n      stride = coordinates.length;\r\n      layout = getLayoutForStride(stride);\r\n    }\r\n    this.layout = layout;\r\n    this.stride = stride;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  SimpleGeometry.prototype.applyTransform = function applyTransform (transformFn) {\r\n    if (this.flatCoordinates) {\r\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\r\n      this.changed();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  SimpleGeometry.prototype.rotate = function rotate$1 (angle, anchor) {\r\n    var flatCoordinates = this.getFlatCoordinates();\r\n    if (flatCoordinates) {\r\n      var stride = this.getStride();\r\n      rotate(\r\n        flatCoordinates, 0, flatCoordinates.length,\r\n        stride, angle, anchor, flatCoordinates);\r\n      this.changed();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  SimpleGeometry.prototype.scale = function scale$1 (sx, opt_sy, opt_anchor) {\r\n    var sy = opt_sy;\r\n    if (sy === undefined) {\r\n      sy = sx;\r\n    }\r\n    var anchor = opt_anchor;\r\n    if (!anchor) {\r\n      anchor = getCenter(this.getExtent());\r\n    }\r\n    var flatCoordinates = this.getFlatCoordinates();\r\n    if (flatCoordinates) {\r\n      var stride = this.getStride();\r\n      scale(\r\n        flatCoordinates, 0, flatCoordinates.length,\r\n        stride, sx, sy, anchor, flatCoordinates);\r\n      this.changed();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  SimpleGeometry.prototype.translate = function translate$1 (deltaX, deltaY) {\r\n    var flatCoordinates = this.getFlatCoordinates();\r\n    if (flatCoordinates) {\r\n      var stride = this.getStride();\r\n      translate(\r\n        flatCoordinates, 0, flatCoordinates.length, stride,\r\n        deltaX, deltaY, flatCoordinates);\r\n      this.changed();\r\n    }\r\n  };\n\n  return SimpleGeometry;\n}(Geometry));\r\n\r\n\r\n/**\r\n * @param {number} stride Stride.\r\n * @return {GeometryLayout} layout Layout.\r\n */\r\nfunction getLayoutForStride(stride) {\r\n  var layout;\r\n  if (stride == 2) {\r\n    layout = GeometryLayout.XY;\r\n  } else if (stride == 3) {\r\n    layout = GeometryLayout.XYZ;\r\n  } else if (stride == 4) {\r\n    layout = GeometryLayout.XYZM;\r\n  }\r\n  return (\r\n    /** @type {GeometryLayout} */ (layout)\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * @param {GeometryLayout} layout Layout.\r\n * @return {number} Stride.\r\n */\r\nexport function getStrideForLayout(layout) {\r\n  var stride;\r\n  if (layout == GeometryLayout.XY) {\r\n    stride = 2;\r\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\r\n    stride = 3;\r\n  } else if (layout == GeometryLayout.XYZM) {\r\n    stride = 4;\r\n  }\r\n  return /** @type {number} */ (stride);\r\n}\r\n\r\n\r\n/**\r\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\r\n * @param {import(\"../transform.js\").Transform} transform Transform.\r\n * @param {Array<number>=} opt_dest Destination.\r\n * @return {Array<number>} Transformed flat coordinates.\r\n */\r\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\r\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\r\n  if (!flatCoordinates) {\r\n    return null;\r\n  } else {\r\n    var stride = simpleGeometry.getStride();\r\n    return transform2D(\r\n      flatCoordinates, 0, flatCoordinates.length, stride,\r\n      transform, opt_dest);\r\n  }\r\n}\r\n\r\nexport default SimpleGeometry;\r\n\r\n//# sourceMappingURL=SimpleGeometry.js.map","/**\r\n * @module ol/geom/flat/area\r\n */\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @return {number} Area.\r\n */\r\nexport function linearRing(flatCoordinates, offset, end, stride) {\r\n  var twiceArea = 0;\r\n  var x1 = flatCoordinates[end - stride];\r\n  var y1 = flatCoordinates[end - stride + 1];\r\n  for (; offset < end; offset += stride) {\r\n    var x2 = flatCoordinates[offset];\r\n    var y2 = flatCoordinates[offset + 1];\r\n    twiceArea += y1 * x2 - x1 * y2;\r\n    x1 = x2;\r\n    y1 = y2;\r\n  }\r\n  return twiceArea / 2;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @return {number} Area.\r\n */\r\nexport function linearRings(flatCoordinates, offset, ends, stride) {\r\n  var area = 0;\r\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n    var end = ends[i];\r\n    area += linearRing(flatCoordinates, offset, end, stride);\r\n    offset = end;\r\n  }\r\n  return area;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @return {number} Area.\r\n */\r\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\r\n  var area = 0;\r\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\r\n    var ends = endss[i];\r\n    area += linearRings(flatCoordinates, offset, ends, stride);\r\n    offset = ends[ends.length - 1];\r\n  }\r\n  return area;\r\n}\r\n\r\n//# sourceMappingURL=area.js.map","/**\r\n * @module ol/geom/flat/closest\r\n */\r\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\r\n\r\n\r\n/**\r\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\r\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\r\n * dimensions are linearly interpolated.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset1 Offset 1.\r\n * @param {number} offset2 Offset 2.\r\n * @param {number} stride Stride.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @param {Array<number>} closestPoint Closest point.\r\n */\r\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\r\n  var x1 = flatCoordinates[offset1];\r\n  var y1 = flatCoordinates[offset1 + 1];\r\n  var dx = flatCoordinates[offset2] - x1;\r\n  var dy = flatCoordinates[offset2 + 1] - y1;\r\n  var offset;\r\n  if (dx === 0 && dy === 0) {\r\n    offset = offset1;\r\n  } else {\r\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\r\n    if (t > 1) {\r\n      offset = offset2;\r\n    } else if (t > 0) {\r\n      for (var i = 0; i < stride; ++i) {\r\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\r\n          flatCoordinates[offset2 + i], t);\r\n      }\r\n      closestPoint.length = stride;\r\n      return;\r\n    } else {\r\n      offset = offset1;\r\n    }\r\n  }\r\n  for (var i$1 = 0; i$1 < stride; ++i$1) {\r\n    closestPoint[i$1] = flatCoordinates[offset + i$1];\r\n  }\r\n  closestPoint.length = stride;\r\n}\r\n\r\n\r\n/**\r\n * Return the squared of the largest distance between any pair of consecutive\r\n * coordinates.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} max Max squared delta.\r\n * @return {number} Max squared delta.\r\n */\r\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\r\n  var x1 = flatCoordinates[offset];\r\n  var y1 = flatCoordinates[offset + 1];\r\n  for (offset += stride; offset < end; offset += stride) {\r\n    var x2 = flatCoordinates[offset];\r\n    var y2 = flatCoordinates[offset + 1];\r\n    var squaredDelta = squaredDx(x1, y1, x2, y2);\r\n    if (squaredDelta > max) {\r\n      max = squaredDelta;\r\n    }\r\n    x1 = x2;\r\n    y1 = y2;\r\n  }\r\n  return max;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {number} max Max squared delta.\r\n * @return {number} Max squared delta.\r\n */\r\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\r\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n    var end = ends[i];\r\n    max = maxSquaredDelta(\r\n      flatCoordinates, offset, end, stride, max);\r\n    offset = end;\r\n  }\r\n  return max;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @param {number} max Max squared delta.\r\n * @return {number} Max squared delta.\r\n */\r\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\r\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\r\n    var ends = endss[i];\r\n    max = arrayMaxSquaredDelta(\r\n      flatCoordinates, offset, ends, stride, max);\r\n    offset = ends[ends.length - 1];\r\n  }\r\n  return max;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} maxDelta Max delta.\r\n * @param {boolean} isRing Is ring.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @param {Array<number>} closestPoint Closest point.\r\n * @param {number} minSquaredDistance Minimum squared distance.\r\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\r\n * @return {number} Minimum squared distance.\r\n */\r\nexport function assignClosestPoint(flatCoordinates, offset, end,\r\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\r\n  opt_tmpPoint) {\r\n  if (offset == end) {\r\n    return minSquaredDistance;\r\n  }\r\n  var i, squaredDistance;\r\n  if (maxDelta === 0) {\r\n    // All points are identical, so just test the first point.\r\n    squaredDistance = squaredDx(\r\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\r\n    if (squaredDistance < minSquaredDistance) {\r\n      for (i = 0; i < stride; ++i) {\r\n        closestPoint[i] = flatCoordinates[offset + i];\r\n      }\r\n      closestPoint.length = stride;\r\n      return squaredDistance;\r\n    } else {\r\n      return minSquaredDistance;\r\n    }\r\n  }\r\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\r\n  var index = offset + stride;\r\n  while (index < end) {\r\n    assignClosest(\r\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\r\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\r\n    if (squaredDistance < minSquaredDistance) {\r\n      minSquaredDistance = squaredDistance;\r\n      for (i = 0; i < stride; ++i) {\r\n        closestPoint[i] = tmpPoint[i];\r\n      }\r\n      closestPoint.length = stride;\r\n      index += stride;\r\n    } else {\r\n      // Skip ahead multiple points, because we know that all the skipped\r\n      // points cannot be any closer than the closest point we have found so\r\n      // far.  We know this because we know how close the current point is, how\r\n      // close the closest point we have found so far is, and the maximum\r\n      // distance between consecutive points.  For example, if we're currently\r\n      // at distance 10, the best we've found so far is 3, and that the maximum\r\n      // distance between consecutive points is 2, then we'll need to skip at\r\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\r\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\r\n      // always advance at least one point, to avoid an infinite loop.\r\n      index += stride * Math.max(\r\n        ((Math.sqrt(squaredDistance) -\r\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\r\n    }\r\n  }\r\n  if (isRing) {\r\n    // Check the closing segment.\r\n    assignClosest(\r\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\r\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\r\n    if (squaredDistance < minSquaredDistance) {\r\n      minSquaredDistance = squaredDistance;\r\n      for (i = 0; i < stride; ++i) {\r\n        closestPoint[i] = tmpPoint[i];\r\n      }\r\n      closestPoint.length = stride;\r\n    }\r\n  }\r\n  return minSquaredDistance;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {number} maxDelta Max delta.\r\n * @param {boolean} isRing Is ring.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @param {Array<number>} closestPoint Closest point.\r\n * @param {number} minSquaredDistance Minimum squared distance.\r\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\r\n * @return {number} Minimum squared distance.\r\n */\r\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\r\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\r\n  opt_tmpPoint) {\r\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\r\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n    var end = ends[i];\r\n    minSquaredDistance = assignClosestPoint(\r\n      flatCoordinates, offset, end, stride,\r\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\r\n    offset = end;\r\n  }\r\n  return minSquaredDistance;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @param {number} maxDelta Max delta.\r\n * @param {boolean} isRing Is ring.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @param {Array<number>} closestPoint Closest point.\r\n * @param {number} minSquaredDistance Minimum squared distance.\r\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\r\n * @return {number} Minimum squared distance.\r\n */\r\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\r\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\r\n  opt_tmpPoint) {\r\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\r\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\r\n    var ends = endss[i];\r\n    minSquaredDistance = assignClosestArrayPoint(\r\n      flatCoordinates, offset, ends, stride,\r\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\r\n    offset = ends[ends.length - 1];\r\n  }\r\n  return minSquaredDistance;\r\n}\r\n\r\n//# sourceMappingURL=closest.js.map","/**\r\n * @module ol/geom/flat/deflate\r\n */\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\r\n * @param {number} stride Stride.\r\n * @return {number} offset Offset.\r\n */\r\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\r\n  for (var i = 0, ii = coordinate.length; i < ii; ++i) {\r\n    flatCoordinates[offset++] = coordinate[i];\r\n  }\r\n  return offset;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\r\n * @param {number} stride Stride.\r\n * @return {number} offset Offset.\r\n */\r\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\r\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\r\n    var coordinate = coordinates[i];\r\n    for (var j = 0; j < stride; ++j) {\r\n      flatCoordinates[offset++] = coordinate[j];\r\n    }\r\n  }\r\n  return offset;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\r\n * @param {number} stride Stride.\r\n * @param {Array<number>=} opt_ends Ends.\r\n * @return {Array<number>} Ends.\r\n */\r\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\r\n  var ends = opt_ends ? opt_ends : [];\r\n  var i = 0;\r\n  for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\r\n    var end = deflateCoordinates(\r\n      flatCoordinates, offset, coordinatess[j], stride);\r\n    ends[i++] = end;\r\n    offset = end;\r\n  }\r\n  ends.length = i;\r\n  return ends;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\r\n * @param {number} stride Stride.\r\n * @param {Array<Array<number>>=} opt_endss Endss.\r\n * @return {Array<Array<number>>} Endss.\r\n */\r\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\r\n  var endss = opt_endss ? opt_endss : [];\r\n  var i = 0;\r\n  for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\r\n    var ends = deflateCoordinatesArray(\r\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\r\n    endss[i++] = ends;\r\n    offset = ends[ends.length - 1];\r\n  }\r\n  endss.length = i;\r\n  return endss;\r\n}\r\n\r\n//# sourceMappingURL=deflate.js.map","/**\r\n * @module ol/geom/flat/inflate\r\n */\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\r\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\r\n */\r\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\r\n  var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\r\n  var i = 0;\r\n  for (var j = offset; j < end; j += stride) {\r\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\r\n  }\r\n  coordinates.length = i;\r\n  return coordinates;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\r\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\r\n */\r\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\r\n  var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\r\n  var i = 0;\r\n  for (var j = 0, jj = ends.length; j < jj; ++j) {\r\n    var end = ends[j];\r\n    coordinatess[i++] = inflateCoordinates(\r\n      flatCoordinates, offset, end, stride, coordinatess[i]);\r\n    offset = end;\r\n  }\r\n  coordinatess.length = i;\r\n  return coordinatess;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\r\n *     Coordinatesss.\r\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\r\n */\r\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\r\n  var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\r\n  var i = 0;\r\n  for (var j = 0, jj = endss.length; j < jj; ++j) {\r\n    var ends = endss[j];\r\n    coordinatesss[i++] = inflateCoordinatesArray(\r\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\r\n    offset = ends[ends.length - 1];\r\n  }\r\n  coordinatesss.length = i;\r\n  return coordinatesss;\r\n}\r\n\r\n//# sourceMappingURL=inflate.js.map","/**\r\n * @module ol/geom/flat/simplify\r\n */\r\n// Based on simplify-js https://github.com/mourner/simplify-js\r\n// Copyright (c) 2012, Vladimir Agafonkin\r\n// All rights reserved.\r\n//\r\n// Redistribution and use in source and binary forms, with or without\r\n// modification, are permitted provided that the following conditions are met:\r\n//\r\n//    1. Redistributions of source code must retain the above copyright notice,\r\n//       this list of conditions and the following disclaimer.\r\n//\r\n//    2. Redistributions in binary form must reproduce the above copyright\r\n//       notice, this list of conditions and the following disclaimer in the\r\n//       documentation and/or other materials provided with the distribution.\r\n//\r\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n// POSSIBILITY OF SUCH DAMAGE.\r\n\r\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @param {boolean} highQuality Highest quality.\r\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\r\n *     coordinates.\r\n * @return {Array<number>} Simplified line string.\r\n */\r\nexport function simplifyLineString(flatCoordinates, offset, end,\r\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\r\n  var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\r\n    opt_simplifiedFlatCoordinates : [];\r\n  if (!highQuality) {\r\n    end = radialDistance(flatCoordinates, offset, end,\r\n      stride, squaredTolerance,\r\n      simplifiedFlatCoordinates, 0);\r\n    flatCoordinates = simplifiedFlatCoordinates;\r\n    offset = 0;\r\n    stride = 2;\r\n  }\r\n  simplifiedFlatCoordinates.length = douglasPeucker(\r\n    flatCoordinates, offset, end, stride, squaredTolerance,\r\n    simplifiedFlatCoordinates, 0);\r\n  return simplifiedFlatCoordinates;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\r\n *     coordinates.\r\n * @param {number} simplifiedOffset Simplified offset.\r\n * @return {number} Simplified offset.\r\n */\r\nexport function douglasPeucker(flatCoordinates, offset, end,\r\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\r\n  var n = (end - offset) / stride;\r\n  if (n < 3) {\r\n    for (; offset < end; offset += stride) {\r\n      simplifiedFlatCoordinates[simplifiedOffset++] =\r\n          flatCoordinates[offset];\r\n      simplifiedFlatCoordinates[simplifiedOffset++] =\r\n          flatCoordinates[offset + 1];\r\n    }\r\n    return simplifiedOffset;\r\n  }\r\n  /** @type {Array<number>} */\r\n  var markers = new Array(n);\r\n  markers[0] = 1;\r\n  markers[n - 1] = 1;\r\n  /** @type {Array<number>} */\r\n  var stack = [offset, end - stride];\r\n  var index = 0;\r\n  while (stack.length > 0) {\r\n    var last = stack.pop();\r\n    var first = stack.pop();\r\n    var maxSquaredDistance = 0;\r\n    var x1 = flatCoordinates[first];\r\n    var y1 = flatCoordinates[first + 1];\r\n    var x2 = flatCoordinates[last];\r\n    var y2 = flatCoordinates[last + 1];\r\n    for (var i = first + stride; i < last; i += stride) {\r\n      var x = flatCoordinates[i];\r\n      var y = flatCoordinates[i + 1];\r\n      var squaredDistance = squaredSegmentDistance(\r\n        x, y, x1, y1, x2, y2);\r\n      if (squaredDistance > maxSquaredDistance) {\r\n        index = i;\r\n        maxSquaredDistance = squaredDistance;\r\n      }\r\n    }\r\n    if (maxSquaredDistance > squaredTolerance) {\r\n      markers[(index - offset) / stride] = 1;\r\n      if (first + stride < index) {\r\n        stack.push(first, index);\r\n      }\r\n      if (index + stride < last) {\r\n        stack.push(index, last);\r\n      }\r\n    }\r\n  }\r\n  for (var i$1 = 0; i$1 < n; ++i$1) {\r\n    if (markers[i$1]) {\r\n      simplifiedFlatCoordinates[simplifiedOffset++] =\r\n          flatCoordinates[offset + i$1 * stride];\r\n      simplifiedFlatCoordinates[simplifiedOffset++] =\r\n          flatCoordinates[offset + i$1 * stride + 1];\r\n    }\r\n  }\r\n  return simplifiedOffset;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\r\n *     coordinates.\r\n * @param {number} simplifiedOffset Simplified offset.\r\n * @param {Array<number>} simplifiedEnds Simplified ends.\r\n * @return {number} Simplified offset.\r\n */\r\nexport function douglasPeuckerArray(flatCoordinates, offset,\r\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\r\n  simplifiedOffset, simplifiedEnds) {\r\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n    var end = ends[i];\r\n    simplifiedOffset = douglasPeucker(\r\n      flatCoordinates, offset, end, stride, squaredTolerance,\r\n      simplifiedFlatCoordinates, simplifiedOffset);\r\n    simplifiedEnds.push(simplifiedOffset);\r\n    offset = end;\r\n  }\r\n  return simplifiedOffset;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\r\n *     coordinates.\r\n * @param {number} simplifiedOffset Simplified offset.\r\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\r\n * @return {number} Simplified offset.\r\n */\r\nexport function douglasPeuckerMultiArray(\r\n  flatCoordinates, offset, endss, stride, squaredTolerance,\r\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\r\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\r\n    var ends = endss[i];\r\n    var simplifiedEnds = [];\r\n    simplifiedOffset = douglasPeuckerArray(\r\n      flatCoordinates, offset, ends, stride, squaredTolerance,\r\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\r\n    simplifiedEndss.push(simplifiedEnds);\r\n    offset = ends[ends.length - 1];\r\n  }\r\n  return simplifiedOffset;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\r\n *     coordinates.\r\n * @param {number} simplifiedOffset Simplified offset.\r\n * @return {number} Simplified offset.\r\n */\r\nexport function radialDistance(flatCoordinates, offset, end,\r\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\r\n  if (end <= offset + stride) {\r\n    // zero or one point, no simplification possible, so copy and return\r\n    for (; offset < end; offset += stride) {\r\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\r\n      simplifiedFlatCoordinates[simplifiedOffset++] =\r\n          flatCoordinates[offset + 1];\r\n    }\r\n    return simplifiedOffset;\r\n  }\r\n  var x1 = flatCoordinates[offset];\r\n  var y1 = flatCoordinates[offset + 1];\r\n  // copy first point\r\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\r\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\r\n  var x2 = x1;\r\n  var y2 = y1;\r\n  for (offset += stride; offset < end; offset += stride) {\r\n    x2 = flatCoordinates[offset];\r\n    y2 = flatCoordinates[offset + 1];\r\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\r\n      // copy point at offset\r\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\r\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\r\n      x1 = x2;\r\n      y1 = y2;\r\n    }\r\n  }\r\n  if (x2 != x1 || y2 != y1) {\r\n    // copy last point\r\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\r\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\r\n  }\r\n  return simplifiedOffset;\r\n}\r\n\r\n\r\n/**\r\n * @param {number} value Value.\r\n * @param {number} tolerance Tolerance.\r\n * @return {number} Rounded value.\r\n */\r\nexport function snap(value, tolerance) {\r\n  return tolerance * Math.round(value / tolerance);\r\n}\r\n\r\n\r\n/**\r\n * Simplifies a line string using an algorithm designed by Tim Schaub.\r\n * Coordinates are snapped to the nearest value in a virtual grid and\r\n * consecutive duplicate coordinates are discarded.  This effectively preserves\r\n * topology as the simplification of any subsection of a line string is\r\n * independent of the rest of the line string.  This means that, for examples,\r\n * the common edge between two polygons will be simplified to the same line\r\n * string independently in both polygons.  This implementation uses a single\r\n * pass over the coordinates and eliminates intermediate collinear points.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} tolerance Tolerance.\r\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\r\n *     coordinates.\r\n * @param {number} simplifiedOffset Simplified offset.\r\n * @return {number} Simplified offset.\r\n */\r\nexport function quantize(flatCoordinates, offset, end, stride,\r\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\r\n  // do nothing if the line is empty\r\n  if (offset == end) {\r\n    return simplifiedOffset;\r\n  }\r\n  // snap the first coordinate (P1)\r\n  var x1 = snap(flatCoordinates[offset], tolerance);\r\n  var y1 = snap(flatCoordinates[offset + 1], tolerance);\r\n  offset += stride;\r\n  // add the first coordinate to the output\r\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\r\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\r\n  // find the next coordinate that does not snap to the same value as the first\r\n  // coordinate (P2)\r\n  var x2, y2;\r\n  do {\r\n    x2 = snap(flatCoordinates[offset], tolerance);\r\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\r\n    offset += stride;\r\n    if (offset == end) {\r\n      // all coordinates snap to the same value, the line collapses to a point\r\n      // push the last snapped value anyway to ensure that the output contains\r\n      // at least two points\r\n      // FIXME should we really return at least two points anyway?\r\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\r\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\r\n      return simplifiedOffset;\r\n    }\r\n  } while (x2 == x1 && y2 == y1);\r\n  while (offset < end) {\r\n    // snap the next coordinate (P3)\r\n    var x3 = snap(flatCoordinates[offset], tolerance);\r\n    var y3 = snap(flatCoordinates[offset + 1], tolerance);\r\n    offset += stride;\r\n    // skip P3 if it is equal to P2\r\n    if (x3 == x2 && y3 == y2) {\r\n      continue;\r\n    }\r\n    // calculate the delta between P1 and P2\r\n    var dx1 = x2 - x1;\r\n    var dy1 = y2 - y1;\r\n    // calculate the delta between P3 and P1\r\n    var dx2 = x3 - x1;\r\n    var dy2 = y3 - y1;\r\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\r\n    // P1 in the same direction then P2 is on the straight line between P1 and\r\n    // P3\r\n    if ((dx1 * dy2 == dy1 * dx2) &&\r\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\r\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\r\n      // discard P2 and set P2 = P3\r\n      x2 = x3;\r\n      y2 = y3;\r\n      continue;\r\n    }\r\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\r\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\r\n    // and continue with P1 = P2 and P2 = P3\r\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\r\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\r\n    x1 = x2;\r\n    y1 = y2;\r\n    x2 = x3;\r\n    y2 = y3;\r\n  }\r\n  // add the last point (P2)\r\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\r\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\r\n  return simplifiedOffset;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {number} tolerance Tolerance.\r\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\r\n *     coordinates.\r\n * @param {number} simplifiedOffset Simplified offset.\r\n * @param {Array<number>} simplifiedEnds Simplified ends.\r\n * @return {number} Simplified offset.\r\n */\r\nexport function quantizeArray(\r\n  flatCoordinates, offset, ends, stride,\r\n  tolerance,\r\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\r\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n    var end = ends[i];\r\n    simplifiedOffset = quantize(\r\n      flatCoordinates, offset, end, stride,\r\n      tolerance,\r\n      simplifiedFlatCoordinates, simplifiedOffset);\r\n    simplifiedEnds.push(simplifiedOffset);\r\n    offset = end;\r\n  }\r\n  return simplifiedOffset;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @param {number} tolerance Tolerance.\r\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\r\n *     coordinates.\r\n * @param {number} simplifiedOffset Simplified offset.\r\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\r\n * @return {number} Simplified offset.\r\n */\r\nexport function quantizeMultiArray(\r\n  flatCoordinates, offset, endss, stride,\r\n  tolerance,\r\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\r\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\r\n    var ends = endss[i];\r\n    var simplifiedEnds = [];\r\n    simplifiedOffset = quantizeArray(\r\n      flatCoordinates, offset, ends, stride,\r\n      tolerance,\r\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\r\n    simplifiedEndss.push(simplifiedEnds);\r\n    offset = ends[ends.length - 1];\r\n  }\r\n  return simplifiedOffset;\r\n}\r\n\r\n//# sourceMappingURL=simplify.js.map","/**\r\n * @module ol/geom/LinearRing\r\n */\r\nimport {closestSquaredDistanceXY} from '../extent.js';\r\nimport GeometryLayout from './GeometryLayout.js';\r\nimport GeometryType from './GeometryType.js';\r\nimport SimpleGeometry from './SimpleGeometry.js';\r\nimport {linearRing as linearRingArea} from './flat/area.js';\r\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\r\nimport {deflateCoordinates} from './flat/deflate.js';\r\nimport {inflateCoordinates} from './flat/inflate.js';\r\nimport {douglasPeucker} from './flat/simplify.js';\r\n\r\n/**\r\n * @classdesc\r\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\r\n * on its own.\r\n *\r\n * @api\r\n */\r\nvar LinearRing = /*@__PURE__*/(function (SimpleGeometry) {\n  function LinearRing(coordinates, opt_layout) {\r\n\r\n    SimpleGeometry.call(this);\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDelta_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDeltaRevision_ = -1;\r\n\r\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\r\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\r\n    } else {\r\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\r\n    }\r\n\r\n  }\n\n  if ( SimpleGeometry ) LinearRing.__proto__ = SimpleGeometry;\n  LinearRing.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LinearRing.prototype.constructor = LinearRing;\r\n\r\n  /**\r\n   * Make a complete copy of the geometry.\r\n   * @return {!LinearRing} Clone.\r\n   * @override\r\n   * @api\r\n   */\r\n  LinearRing.prototype.clone = function clone () {\r\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  LinearRing.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\r\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\r\n      return minSquaredDistance;\r\n    }\r\n    if (this.maxDeltaRevision_ != this.getRevision()) {\r\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\r\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\r\n      this.maxDeltaRevision_ = this.getRevision();\r\n    }\r\n    return assignClosestPoint(\r\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\r\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\r\n  };\r\n\r\n  /**\r\n   * Return the area of the linear ring on projected plane.\r\n   * @return {number} Area (on projected plane).\r\n   * @api\r\n   */\r\n  LinearRing.prototype.getArea = function getArea () {\r\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\r\n  };\r\n\r\n  /**\r\n   * Return the coordinates of the linear ring.\r\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\r\n   * @override\r\n   * @api\r\n   */\r\n  LinearRing.prototype.getCoordinates = function getCoordinates () {\r\n    return inflateCoordinates(\r\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  LinearRing.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\r\n    var simplifiedFlatCoordinates = [];\r\n    simplifiedFlatCoordinates.length = douglasPeucker(\r\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\r\n      squaredTolerance, simplifiedFlatCoordinates, 0);\r\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  LinearRing.prototype.getType = function getType () {\r\n    return GeometryType.LINEAR_RING;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  LinearRing.prototype.intersectsExtent = function intersectsExtent (extent) {\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Set the coordinates of the linear ring.\r\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\r\n   * @param {GeometryLayout=} opt_layout Layout.\r\n   * @override\r\n   * @api\r\n   */\r\n  LinearRing.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\r\n    this.setLayout(opt_layout, coordinates, 1);\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = [];\r\n    }\r\n    this.flatCoordinates.length = deflateCoordinates(\r\n      this.flatCoordinates, 0, coordinates, this.stride);\r\n    this.changed();\r\n  };\n\n  return LinearRing;\n}(SimpleGeometry));\r\n\r\n\r\nexport default LinearRing;\r\n\r\n//# sourceMappingURL=LinearRing.js.map","/**\r\n * @module ol/geom/Point\r\n */\r\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\r\nimport GeometryType from './GeometryType.js';\r\nimport SimpleGeometry from './SimpleGeometry.js';\r\nimport {deflateCoordinate} from './flat/deflate.js';\r\nimport {squaredDistance as squaredDx} from '../math.js';\r\n\r\n/**\r\n * @classdesc\r\n * Point geometry.\r\n *\r\n * @api\r\n */\r\nvar Point = /*@__PURE__*/(function (SimpleGeometry) {\n  function Point(coordinates, opt_layout) {\r\n    SimpleGeometry.call(this);\r\n    this.setCoordinates(coordinates, opt_layout);\r\n  }\n\n  if ( SimpleGeometry ) Point.__proto__ = SimpleGeometry;\n  Point.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Point.prototype.constructor = Point;\r\n\r\n  /**\r\n   * Make a complete copy of the geometry.\r\n   * @return {!Point} Clone.\r\n   * @override\r\n   * @api\r\n   */\r\n  Point.prototype.clone = function clone () {\r\n    var point = new Point(this.flatCoordinates.slice(), this.layout);\r\n    return point;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Point.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\r\n    var flatCoordinates = this.flatCoordinates;\r\n    var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\r\n    if (squaredDistance < minSquaredDistance) {\r\n      var stride = this.stride;\r\n      for (var i = 0; i < stride; ++i) {\r\n        closestPoint[i] = flatCoordinates[i];\r\n      }\r\n      closestPoint.length = stride;\r\n      return squaredDistance;\r\n    } else {\r\n      return minSquaredDistance;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Return the coordinate of the point.\r\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\r\n   * @override\r\n   * @api\r\n   */\r\n  Point.prototype.getCoordinates = function getCoordinates () {\r\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Point.prototype.computeExtent = function computeExtent (extent) {\r\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  Point.prototype.getType = function getType () {\r\n    return GeometryType.POINT;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  Point.prototype.intersectsExtent = function intersectsExtent (extent) {\r\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  Point.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\r\n    this.setLayout(opt_layout, coordinates, 0);\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = [];\r\n    }\r\n    this.flatCoordinates.length = deflateCoordinate(\r\n      this.flatCoordinates, 0, coordinates, this.stride);\r\n    this.changed();\r\n  };\n\n  return Point;\n}(SimpleGeometry));\r\n\r\n\r\nexport default Point;\r\n\r\n//# sourceMappingURL=Point.js.map","/**\r\n * @module ol/geom/flat/contains\r\n */\r\nimport {forEachCorner} from '../../extent.js';\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {import(\"../../extent.js\").Extent} extent Extent.\r\n * @return {boolean} Contains extent.\r\n */\r\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\r\n  var outside = forEachCorner(extent,\r\n    /**\r\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\r\n     * @return {boolean} Contains (x, y).\r\n     */\r\n    function(coordinate) {\r\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\r\n    });\r\n  return !outside;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @return {boolean} Contains (x, y).\r\n */\r\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\r\n  // http://geomalgorithms.com/a03-_inclusion.html\r\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\r\n  // This code may be freely used and modified for any purpose\r\n  // providing that this copyright notice is included with it.\r\n  // SoftSurfer makes no warranty for this code, and cannot be held\r\n  // liable for any real or imagined damage resulting from its use.\r\n  // Users of this code must verify correctness for their application.\r\n  var wn = 0;\r\n  var x1 = flatCoordinates[end - stride];\r\n  var y1 = flatCoordinates[end - stride + 1];\r\n  for (; offset < end; offset += stride) {\r\n    var x2 = flatCoordinates[offset];\r\n    var y2 = flatCoordinates[offset + 1];\r\n    if (y1 <= y) {\r\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\r\n        wn++;\r\n      }\r\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\r\n      wn--;\r\n    }\r\n    x1 = x2;\r\n    y1 = y2;\r\n  }\r\n  return wn !== 0;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @return {boolean} Contains (x, y).\r\n */\r\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\r\n  if (ends.length === 0) {\r\n    return false;\r\n  }\r\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\r\n    return false;\r\n  }\r\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\r\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @return {boolean} Contains (x, y).\r\n */\r\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\r\n  if (endss.length === 0) {\r\n    return false;\r\n  }\r\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\r\n    var ends = endss[i];\r\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\r\n      return true;\r\n    }\r\n    offset = ends[ends.length - 1];\r\n  }\r\n  return false;\r\n}\r\n\r\n//# sourceMappingURL=contains.js.map","/**\r\n * @module ol/geom/flat/interiorpoint\r\n */\r\nimport {numberSafeCompareFunction} from '../../array.js';\r\nimport {linearRingsContainsXY} from './contains.js';\r\n\r\n\r\n/**\r\n * Calculates a point that is likely to lie in the interior of the linear rings.\r\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {Array<number>} flatCenters Flat centers.\r\n * @param {number} flatCentersOffset Flat center offset.\r\n * @param {Array<number>=} opt_dest Destination.\r\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\r\n * length of the horizontal intersection that the point belongs to.\r\n */\r\nexport function getInteriorPointOfArray(flatCoordinates, offset,\r\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\r\n  var i, ii, x, x1, x2, y1, y2;\r\n  var y = flatCenters[flatCentersOffset + 1];\r\n  /** @type {Array<number>} */\r\n  var intersections = [];\r\n  // Calculate intersections with the horizontal line\r\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\r\n    var end = ends[r];\r\n    x1 = flatCoordinates[end - stride];\r\n    y1 = flatCoordinates[end - stride + 1];\r\n    for (i = offset; i < end; i += stride) {\r\n      x2 = flatCoordinates[i];\r\n      y2 = flatCoordinates[i + 1];\r\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\r\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\r\n        intersections.push(x);\r\n      }\r\n      x1 = x2;\r\n      y1 = y2;\r\n    }\r\n  }\r\n  // Find the longest segment of the horizontal line that has its center point\r\n  // inside the linear ring.\r\n  var pointX = NaN;\r\n  var maxSegmentLength = -Infinity;\r\n  intersections.sort(numberSafeCompareFunction);\r\n  x1 = intersections[0];\r\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\r\n    x2 = intersections[i];\r\n    var segmentLength = Math.abs(x2 - x1);\r\n    if (segmentLength > maxSegmentLength) {\r\n      x = (x1 + x2) / 2;\r\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\r\n        pointX = x;\r\n        maxSegmentLength = segmentLength;\r\n      }\r\n    }\r\n    x1 = x2;\r\n  }\r\n  if (isNaN(pointX)) {\r\n    // There is no horizontal line that has its center point inside the linear\r\n    // ring.  Use the center of the the linear ring's extent.\r\n    pointX = flatCenters[flatCentersOffset];\r\n  }\r\n  if (opt_dest) {\r\n    opt_dest.push(pointX, y, maxSegmentLength);\r\n    return opt_dest;\r\n  } else {\r\n    return [pointX, y, maxSegmentLength];\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @param {Array<number>} flatCenters Flat centers.\r\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\r\n * length of the horizontal intersection that the point belongs to.\r\n */\r\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\r\n  var interiorPoints = [];\r\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\r\n    var ends = endss[i];\r\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\r\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\r\n    offset = ends[ends.length - 1];\r\n  }\r\n  return interiorPoints;\r\n}\r\n\r\n//# sourceMappingURL=interiorpoint.js.map","/**\r\n * @module ol/geom/flat/segments\r\n */\r\n\r\n\r\n/**\r\n * This function calls `callback` for each segment of the flat coordinates\r\n * array. If the callback returns a truthy value the function returns that\r\n * value immediately. Otherwise the function returns `false`.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {function(this: S, import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\r\n *     called for each segment.\r\n * @param {S=} opt_this The object to be used as the value of 'this'\r\n *     within callback.\r\n * @return {T|boolean} Value.\r\n * @template T,S\r\n */\r\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\r\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\r\n  var point2 = [];\r\n  var ret;\r\n  for (; (offset + stride) < end; offset += stride) {\r\n    point2[0] = flatCoordinates[offset + stride];\r\n    point2[1] = flatCoordinates[offset + stride + 1];\r\n    ret = callback.call(opt_this, point1, point2);\r\n    if (ret) {\r\n      return ret;\r\n    }\r\n    point1[0] = point2[0];\r\n    point1[1] = point2[1];\r\n  }\r\n  return false;\r\n}\r\n\r\n//# sourceMappingURL=segments.js.map","/**\r\n * @module ol/geom/flat/intersectsextent\r\n */\r\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\r\nimport {linearRingContainsXY, linearRingContainsExtent} from './contains.js';\r\nimport {forEach as forEachSegment} from './segments.js';\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {import(\"../../extent.js\").Extent} extent Extent.\r\n * @return {boolean} True if the geometry and the extent intersect.\r\n */\r\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\r\n  var coordinatesExtent = extendFlatCoordinates(\r\n    createEmpty(), flatCoordinates, offset, end, stride);\r\n  if (!intersects(extent, coordinatesExtent)) {\r\n    return false;\r\n  }\r\n  if (containsExtent(extent, coordinatesExtent)) {\r\n    return true;\r\n  }\r\n  if (coordinatesExtent[0] >= extent[0] &&\r\n      coordinatesExtent[2] <= extent[2]) {\r\n    return true;\r\n  }\r\n  if (coordinatesExtent[1] >= extent[1] &&\r\n      coordinatesExtent[3] <= extent[3]) {\r\n    return true;\r\n  }\r\n  return forEachSegment(flatCoordinates, offset, end, stride,\r\n    /**\r\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\r\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\r\n     * @return {boolean} `true` if the segment and the extent intersect,\r\n     *     `false` otherwise.\r\n     */\r\n    function(point1, point2) {\r\n      return intersectsSegment(extent, point1, point2);\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {import(\"../../extent.js\").Extent} extent Extent.\r\n * @return {boolean} True if the geometry and the extent intersect.\r\n */\r\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\r\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n    if (intersectsLineString(\r\n      flatCoordinates, offset, ends[i], stride, extent)) {\r\n      return true;\r\n    }\r\n    offset = ends[i];\r\n  }\r\n  return false;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {import(\"../../extent.js\").Extent} extent Extent.\r\n * @return {boolean} True if the geometry and the extent intersect.\r\n */\r\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\r\n  if (intersectsLineString(\r\n    flatCoordinates, offset, end, stride, extent)) {\r\n    return true;\r\n  }\r\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\r\n    return true;\r\n  }\r\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\r\n    return true;\r\n  }\r\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\r\n    return true;\r\n  }\r\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {import(\"../../extent.js\").Extent} extent Extent.\r\n * @return {boolean} True if the geometry and the extent intersect.\r\n */\r\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\r\n  if (!intersectsLinearRing(\r\n    flatCoordinates, offset, ends[0], stride, extent)) {\r\n    return false;\r\n  }\r\n  if (ends.length === 1) {\r\n    return true;\r\n  }\r\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\r\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\r\n      if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @param {import(\"../../extent.js\").Extent} extent Extent.\r\n * @return {boolean} True if the geometry and the extent intersect.\r\n */\r\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\r\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\r\n    var ends = endss[i];\r\n    if (intersectsLinearRingArray(\r\n      flatCoordinates, offset, ends, stride, extent)) {\r\n      return true;\r\n    }\r\n    offset = ends[ends.length - 1];\r\n  }\r\n  return false;\r\n}\r\n\r\n//# sourceMappingURL=intersectsextent.js.map","/**\r\n * @module ol/geom/flat/reverse\r\n */\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n */\r\nexport function coordinates(flatCoordinates, offset, end, stride) {\r\n  while (offset < end - stride) {\r\n    for (var i = 0; i < stride; ++i) {\r\n      var tmp = flatCoordinates[offset + i];\r\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\r\n      flatCoordinates[end - stride + i] = tmp;\r\n    }\r\n    offset += stride;\r\n    end -= stride;\r\n  }\r\n}\r\n\r\n//# sourceMappingURL=reverse.js.map","/**\r\n * @module ol/geom/flat/orient\r\n */\r\nimport {coordinates as reverseCoordinates} from './reverse.js';\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @return {boolean} Is clockwise.\r\n */\r\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\r\n  // http://tinyurl.com/clockwise-method\r\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\r\n  var edge = 0;\r\n  var x1 = flatCoordinates[end - stride];\r\n  var y1 = flatCoordinates[end - stride + 1];\r\n  for (; offset < end; offset += stride) {\r\n    var x2 = flatCoordinates[offset];\r\n    var y2 = flatCoordinates[offset + 1];\r\n    edge += (x2 - x1) * (y2 + y1);\r\n    x1 = x2;\r\n    y1 = y2;\r\n  }\r\n  return edge > 0;\r\n}\r\n\r\n\r\n/**\r\n * Determines if linear rings are oriented.  By default, left-hand orientation\r\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\r\n * To test for right-hand orientation, use the `opt_right` argument.\r\n *\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Array of end indexes.\r\n * @param {number} stride Stride.\r\n * @param {boolean=} opt_right Test for right-hand orientation\r\n *     (counter-clockwise exterior ring and clockwise interior rings).\r\n * @return {boolean} Rings are correctly oriented.\r\n */\r\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\r\n  var right = opt_right !== undefined ? opt_right : false;\r\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n    var end = ends[i];\r\n    var isClockwise = linearRingIsClockwise(\r\n      flatCoordinates, offset, end, stride);\r\n    if (i === 0) {\r\n      if ((right && isClockwise) || (!right && !isClockwise)) {\r\n        return false;\r\n      }\r\n    } else {\r\n      if ((right && !isClockwise) || (!right && isClockwise)) {\r\n        return false;\r\n      }\r\n    }\r\n    offset = end;\r\n  }\r\n  return true;\r\n}\r\n\r\n\r\n/**\r\n * Determines if linear rings are oriented.  By default, left-hand orientation\r\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\r\n * To test for right-hand orientation, use the `opt_right` argument.\r\n *\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Array of array of end indexes.\r\n * @param {number} stride Stride.\r\n * @param {boolean=} opt_right Test for right-hand orientation\r\n *     (counter-clockwise exterior ring and clockwise interior rings).\r\n * @return {boolean} Rings are correctly oriented.\r\n */\r\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\r\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\r\n    if (!linearRingIsOriented(\r\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n\r\n/**\r\n * Orient coordinates in a flat array of linear rings.  By default, rings\r\n * are oriented following the left-hand rule (clockwise for exterior and\r\n * counter-clockwise for interior rings).  To orient according to the\r\n * right-hand rule, use the `opt_right` argument.\r\n *\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\r\n * @return {number} End.\r\n */\r\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\r\n  var right = opt_right !== undefined ? opt_right : false;\r\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n    var end = ends[i];\r\n    var isClockwise = linearRingIsClockwise(\r\n      flatCoordinates, offset, end, stride);\r\n    var reverse = i === 0 ?\r\n      (right && isClockwise) || (!right && !isClockwise) :\r\n      (right && !isClockwise) || (!right && isClockwise);\r\n    if (reverse) {\r\n      reverseCoordinates(flatCoordinates, offset, end, stride);\r\n    }\r\n    offset = end;\r\n  }\r\n  return offset;\r\n}\r\n\r\n\r\n/**\r\n * Orient coordinates in a flat array of linear rings.  By default, rings\r\n * are oriented following the left-hand rule (clockwise for exterior and\r\n * counter-clockwise for interior rings).  To orient according to the\r\n * right-hand rule, use the `opt_right` argument.\r\n *\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Array of array of end indexes.\r\n * @param {number} stride Stride.\r\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\r\n * @return {number} End.\r\n */\r\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\r\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\r\n    offset = orientLinearRings(\r\n      flatCoordinates, offset, endss[i], stride, opt_right);\r\n  }\r\n  return offset;\r\n}\r\n\r\n//# sourceMappingURL=orient.js.map","/**\r\n * @module ol/geom/Polygon\r\n */\r\nimport {extend} from '../array.js';\r\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\r\nimport GeometryLayout from './GeometryLayout.js';\r\nimport GeometryType from './GeometryType.js';\r\nimport LinearRing from './LinearRing.js';\r\nimport Point from './Point.js';\r\nimport SimpleGeometry from './SimpleGeometry.js';\r\nimport {offset as sphereOffset} from '../sphere.js';\r\nimport {linearRings as linearRingsArea} from './flat/area.js';\r\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\r\nimport {linearRingsContainsXY} from './flat/contains.js';\r\nimport {deflateCoordinatesArray} from './flat/deflate.js';\r\nimport {inflateCoordinatesArray} from './flat/inflate.js';\r\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\r\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\r\nimport {linearRingIsOriented, orientLinearRings} from './flat/orient.js';\r\nimport {quantizeArray} from './flat/simplify.js';\r\nimport {modulo} from '../math.js';\r\n\r\n/**\r\n * @classdesc\r\n * Polygon geometry.\r\n *\r\n * @api\r\n */\r\nvar Polygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function Polygon(coordinates, opt_layout, opt_ends) {\r\n\r\n    SimpleGeometry.call(this);\r\n\r\n    /**\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    this.ends_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.flatInteriorPointRevision_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     */\r\n    this.flatInteriorPoint_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDelta_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDeltaRevision_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.orientedRevision_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.orientedFlatCoordinates_ = null;\r\n\r\n    if (opt_layout !== undefined && opt_ends) {\r\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\r\n      this.ends_ = opt_ends;\r\n    } else {\r\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\r\n    }\r\n\r\n  }\n\n  if ( SimpleGeometry ) Polygon.__proto__ = SimpleGeometry;\n  Polygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Polygon.prototype.constructor = Polygon;\r\n\r\n  /**\r\n   * Append the passed linear ring to this polygon.\r\n   * @param {LinearRing} linearRing Linear ring.\r\n   * @api\r\n   */\r\n  Polygon.prototype.appendLinearRing = function appendLinearRing (linearRing) {\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\r\n    } else {\r\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\r\n    }\r\n    this.ends_.push(this.flatCoordinates.length);\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * Make a complete copy of the geometry.\r\n   * @return {!Polygon} Clone.\r\n   * @override\r\n   * @api\r\n   */\r\n  Polygon.prototype.clone = function clone () {\r\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Polygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\r\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\r\n      return minSquaredDistance;\r\n    }\r\n    if (this.maxDeltaRevision_ != this.getRevision()) {\r\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\r\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\r\n      this.maxDeltaRevision_ = this.getRevision();\r\n    }\r\n    return assignClosestArrayPoint(\r\n      this.flatCoordinates, 0, this.ends_, this.stride,\r\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Polygon.prototype.containsXY = function containsXY (x, y) {\r\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\r\n  };\r\n\r\n  /**\r\n   * Return the area of the polygon on projected plane.\r\n   * @return {number} Area (on projected plane).\r\n   * @api\r\n   */\r\n  Polygon.prototype.getArea = function getArea () {\r\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\r\n  };\r\n\r\n  /**\r\n   * Get the coordinate array for this geometry.  This array has the structure\r\n   * of a GeoJSON coordinate array for polygons.\r\n   *\r\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\r\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\r\n   *     If `false`, coordinates will be oriented according to the left-hand rule\r\n   *     (clockwise for exterior and counter-clockwise for interior rings).\r\n   *     By default, coordinate orientation will depend on how the geometry was\r\n   *     constructed.\r\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\r\n   * @override\r\n   * @api\r\n   */\r\n  Polygon.prototype.getCoordinates = function getCoordinates (opt_right) {\r\n    var flatCoordinates;\r\n    if (opt_right !== undefined) {\r\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\r\n      orientLinearRings(\r\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\r\n    } else {\r\n      flatCoordinates = this.flatCoordinates;\r\n    }\r\n\r\n    return inflateCoordinatesArray(\r\n      flatCoordinates, 0, this.ends_, this.stride);\r\n  };\r\n\r\n  /**\r\n   * @return {Array<number>} Ends.\r\n   */\r\n  Polygon.prototype.getEnds = function getEnds () {\r\n    return this.ends_;\r\n  };\r\n\r\n  /**\r\n   * @return {Array<number>} Interior point.\r\n   */\r\n  Polygon.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\r\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\r\n      var flatCenter = getCenter(this.getExtent());\r\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\r\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\r\n        flatCenter, 0);\r\n      this.flatInteriorPointRevision_ = this.getRevision();\r\n    }\r\n    return this.flatInteriorPoint_;\r\n  };\r\n\r\n  /**\r\n   * Return an interior point of the polygon.\r\n   * @return {Point} Interior point as XYM coordinate, where M is the\r\n   * length of the horizontal intersection that the point belongs to.\r\n   * @api\r\n   */\r\n  Polygon.prototype.getInteriorPoint = function getInteriorPoint () {\r\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\r\n  };\r\n\r\n  /**\r\n   * Return the number of rings of the polygon,  this includes the exterior\r\n   * ring and any interior rings.\r\n   *\r\n   * @return {number} Number of rings.\r\n   * @api\r\n   */\r\n  Polygon.prototype.getLinearRingCount = function getLinearRingCount () {\r\n    return this.ends_.length;\r\n  };\r\n\r\n  /**\r\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\r\n   * given index is out of range.\r\n   * The exterior linear ring is available at index `0` and the interior rings\r\n   * at index `1` and beyond.\r\n   *\r\n   * @param {number} index Index.\r\n   * @return {LinearRing} Linear ring.\r\n   * @api\r\n   */\r\n  Polygon.prototype.getLinearRing = function getLinearRing (index) {\r\n    if (index < 0 || this.ends_.length <= index) {\r\n      return null;\r\n    }\r\n    return new LinearRing(this.flatCoordinates.slice(\r\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\r\n  };\r\n\r\n  /**\r\n   * Return the linear rings of the polygon.\r\n   * @return {Array<LinearRing>} Linear rings.\r\n   * @api\r\n   */\r\n  Polygon.prototype.getLinearRings = function getLinearRings () {\r\n    var layout = this.layout;\r\n    var flatCoordinates = this.flatCoordinates;\r\n    var ends = this.ends_;\r\n    var linearRings = [];\r\n    var offset = 0;\r\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n      var end = ends[i];\r\n      var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\r\n      linearRings.push(linearRing);\r\n      offset = end;\r\n    }\r\n    return linearRings;\r\n  };\r\n\r\n  /**\r\n   * @return {Array<number>} Oriented flat coordinates.\r\n   */\r\n  Polygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\r\n    if (this.orientedRevision_ != this.getRevision()) {\r\n      var flatCoordinates = this.flatCoordinates;\r\n      if (linearRingIsOriented(\r\n        flatCoordinates, 0, this.ends_, this.stride)) {\r\n        this.orientedFlatCoordinates_ = flatCoordinates;\r\n      } else {\r\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\r\n        this.orientedFlatCoordinates_.length =\r\n            orientLinearRings(\r\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\r\n      }\r\n      this.orientedRevision_ = this.getRevision();\r\n    }\r\n    return this.orientedFlatCoordinates_;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Polygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\r\n    var simplifiedFlatCoordinates = [];\r\n    var simplifiedEnds = [];\r\n    simplifiedFlatCoordinates.length = quantizeArray(\r\n      this.flatCoordinates, 0, this.ends_, this.stride,\r\n      Math.sqrt(squaredTolerance),\r\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\r\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  Polygon.prototype.getType = function getType () {\r\n    return GeometryType.POLYGON;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  Polygon.prototype.intersectsExtent = function intersectsExtent (extent) {\r\n    return intersectsLinearRingArray(\r\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\r\n  };\r\n\r\n  /**\r\n   * Set the coordinates of the polygon.\r\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\r\n   * @param {GeometryLayout=} opt_layout Layout.\r\n   * @override\r\n   * @api\r\n   */\r\n  Polygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\r\n    this.setLayout(opt_layout, coordinates, 2);\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = [];\r\n    }\r\n    var ends = deflateCoordinatesArray(\r\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\r\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\r\n    this.changed();\r\n  };\n\n  return Polygon;\n}(SimpleGeometry));\r\n\r\n\r\nexport default Polygon;\r\n\r\n\r\n/**\r\n * Create an approximation of a circle on the surface of a sphere.\r\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\r\n * @param {number} radius The great-circle distance from the center to\r\n *     the polygon vertices.\r\n * @param {number=} opt_n Optional number of vertices for the resulting\r\n *     polygon. Default is `32`.\r\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\r\n *     the Earth's mean radius using the WGS84 ellipsoid).\r\n * @return {Polygon} The \"circular\" polygon.\r\n * @api\r\n */\r\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\r\n  var n = opt_n ? opt_n : 32;\r\n  /** @type {Array<number>} */\r\n  var flatCoordinates = [];\r\n  for (var i = 0; i < n; ++i) {\r\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\r\n  }\r\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\r\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\r\n}\r\n\r\n\r\n/**\r\n * Create a polygon from an extent. The layout used is `XY`.\r\n * @param {import(\"../extent.js\").Extent} extent The extent.\r\n * @return {Polygon} The polygon.\r\n * @api\r\n */\r\nexport function fromExtent(extent) {\r\n  var minX = extent[0];\r\n  var minY = extent[1];\r\n  var maxX = extent[2];\r\n  var maxY = extent[3];\r\n  var flatCoordinates =\r\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\r\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\r\n}\r\n\r\n\r\n/**\r\n * Create a regular polygon from a circle.\r\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\r\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\r\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\r\n *     radians. Default is 0.\r\n * @return {Polygon} Polygon geometry.\r\n * @api\r\n */\r\nexport function fromCircle(circle, opt_sides, opt_angle) {\r\n  var sides = opt_sides ? opt_sides : 32;\r\n  var stride = circle.getStride();\r\n  var layout = circle.getLayout();\r\n  var center = circle.getCenter();\r\n  var arrayLength = stride * (sides + 1);\r\n  var flatCoordinates = new Array(arrayLength);\r\n  for (var i = 0; i < arrayLength; i += stride) {\r\n    flatCoordinates[i] = 0;\r\n    flatCoordinates[i + 1] = 0;\r\n    for (var j = 2; j < stride; j++) {\r\n      flatCoordinates[i + j] = center[j];\r\n    }\r\n  }\r\n  var ends = [flatCoordinates.length];\r\n  var polygon = new Polygon(flatCoordinates, layout, ends);\r\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\r\n  return polygon;\r\n}\r\n\r\n\r\n/**\r\n * Modify the coordinates of a polygon to make it a regular polygon.\r\n * @param {Polygon} polygon Polygon geometry.\r\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\r\n * @param {number} radius Radius of the regular polygon.\r\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\r\n *     radians. Default is 0.\r\n */\r\nexport function makeRegular(polygon, center, radius, opt_angle) {\r\n  var flatCoordinates = polygon.getFlatCoordinates();\r\n  var stride = polygon.getStride();\r\n  var sides = flatCoordinates.length / stride - 1;\r\n  var startAngle = opt_angle ? opt_angle : 0;\r\n  for (var i = 0; i <= sides; ++i) {\r\n    var offset = i * stride;\r\n    var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\r\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\r\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\r\n  }\r\n  polygon.changed();\r\n}\r\n\r\n//# sourceMappingURL=Polygon.js.map","/**\r\n * @module ol/View\r\n */\r\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\r\nimport {getUid} from './util.js';\r\nimport {VOID} from './functions.js';\r\nimport {createExtent, none as centerNone} from './centerconstraint.js';\r\nimport BaseObject from './Object.js';\r\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\r\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\r\nimport ViewHint from './ViewHint.js';\r\nimport ViewProperty from './ViewProperty.js';\r\nimport {linearFindNearest} from './array.js';\r\nimport {assert} from './asserts.js';\r\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\r\nimport {inAndOut} from './easing.js';\r\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\r\nimport GeometryType from './geom/GeometryType.js';\r\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\r\nimport {clamp, modulo} from './math.js';\r\nimport {assign} from './obj.js';\r\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\r\nimport Units from './proj/Units.js';\r\n\r\n\r\n/**\r\n * An animation configuration\r\n *\r\n * @typedef {Object} Animation\r\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\r\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\r\n * @property {number} [sourceResolution]\r\n * @property {number} [targetResolution]\r\n * @property {number} [sourceRotation]\r\n * @property {number} [targetRotation]\r\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\r\n * @property {number} start\r\n * @property {number} duration\r\n * @property {boolean} complete\r\n * @property {function(number):number} easing\r\n * @property {function(boolean)} callback\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} Constraints\r\n * @property {import(\"./centerconstraint.js\").Type} center\r\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\r\n * @property {import(\"./rotationconstraint.js\").Type} rotation\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} FitOptions\r\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\r\n * the extent into. Default is the current size of the first map in the DOM that\r\n * uses this view, or `[100, 100]` if no such map is found.\r\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\r\n * cleared inside the view. Values in the array are top, right, bottom and left\r\n * padding.\r\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\r\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\r\n * the nearest extent instead of the closest that actually fits the view.\r\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\r\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\r\n * `minResolution` is given, this property is ignored.\r\n * @property {number} [duration] The duration of the animation in milliseconds.\r\n * By default, there is no animation to the target extent.\r\n * @property {function(number):number} [easing] The easing function used during\r\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\r\n * The function will be called for each frame with a number representing a\r\n * fraction of the animation's duration.  The function should return a number\r\n * between 0 and 1 representing the progress toward the destination state.\r\n * @property {function(boolean)} [callback] Function called when the view is in\r\n * its final position. The callback will be called with `true` if the animation\r\n * series completed on its own or `false` if it was cancelled.\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} ViewOptions\r\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\r\n * the view. The coordinate system for the center is specified with the\r\n * `projection` option. Layer sources will not be fetched if this is not set,\r\n * but the center can be set later with {@link #setCenter}.\r\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\r\n * `false` means no constraint. `true` means no constraint, but snap to zero\r\n * near zero. A number constrains the rotation to that number of values. For\r\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\r\n * @property {boolean} [enableRotation=true] Enable rotation.\r\n * If `false`, a rotation constraint that always sets the rotation to zero is\r\n * used. The `constrainRotation` option has no effect if `enableRotation` is\r\n * `false`.\r\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\r\n * center, in other words, center cannot be set outside this extent.\r\n * @property {number} [maxResolution] The maximum resolution used to determine\r\n * the resolution constraint. It is used together with `minResolution` (or\r\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\r\n * that the projection's validity extent fits in a 256x256 px tile. If the\r\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\r\n * to `40075016.68557849 / 256 = 156543.03392804097`.\r\n * @property {number} [minResolution] The minimum resolution used to determine\r\n * the resolution constraint.  It is used together with `maxResolution` (or\r\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\r\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\r\n * (the default) then `minResolution` defaults to\r\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\r\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\r\n * resolution constraint. It is used together with `minZoom` (or\r\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\r\n * provided, it is given precedence over `maxZoom`.\r\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\r\n * resolution constraint. It is used together with `maxZoom` (or\r\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\r\n * provided, it is given precedence over `minZoom`.\r\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\r\n * projection. The default is Spherical Mercator.\r\n * @property {number} [resolution] The initial resolution for the view. The\r\n * units are `projection` units per pixel (e.g. meters per pixel). An\r\n * alternative to setting this is to set `zoom`. Layer sources will not be\r\n * fetched if neither this nor `zoom` are defined, but they can be set later\r\n * with {@link #setZoom} or {@link #setResolution}.\r\n * @property {Array<number>} [resolutions] Resolutions to determine the\r\n * resolution constraint. If set the `maxResolution`, `minResolution`,\r\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\r\n * @property {number} [rotation=0] The initial rotation for the view in radians\r\n * (positive rotation clockwise, 0 means North).\r\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\r\n * level used to calculate the initial resolution for the view. The initial\r\n * resolution is determined using the {@link #constrainResolution} method.\r\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\r\n * resolution constraint.\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} AnimationOptions\r\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\r\n * the animation.\r\n * @property {number} [zoom] The zoom level of the view at the end of the\r\n * animation. This takes precedence over `resolution`.\r\n * @property {number} [resolution] The resolution of the view at the end\r\n * of the animation.  If `zoom` is also provided, this option will be ignored.\r\n * @property {number} [rotation] The rotation of the view at the end of\r\n * the animation.\r\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remained fixed\r\n * during a rotation or resolution animation.\r\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\r\n * @property {function(number):number} [easing] The easing function used\r\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\r\n * The function will be called for each frame with a number representing a\r\n * fraction of the animation's duration.  The function should return a number\r\n * between 0 and 1 representing the progress toward the destination state.\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} State\r\n * @property {import(\"./coordinate.js\").Coordinate} center\r\n * @property {import(\"./proj/Projection.js\").default} projection\r\n * @property {number} resolution\r\n * @property {number} rotation\r\n * @property {number} zoom\r\n */\r\n\r\n\r\n/**\r\n * Default min zoom level for the map view.\r\n * @type {number}\r\n */\r\nvar DEFAULT_MIN_ZOOM = 0;\r\n\r\n\r\n/**\r\n * @classdesc\r\n * A View object represents a simple 2D view of the map.\r\n *\r\n * This is the object to act upon to change the center, resolution,\r\n * and rotation of the map.\r\n *\r\n * ### The view states\r\n *\r\n * An View is determined by three states: `center`, `resolution`,\r\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\r\n * `getCenter` and `setCenter` for the `center` state.\r\n *\r\n * An View has a `projection`. The projection determines the\r\n * coordinate system of the center, and its units determine the units of the\r\n * resolution (projection units per pixel). The default projection is\r\n * Spherical Mercator (EPSG:3857).\r\n *\r\n * ### The constraints\r\n *\r\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\r\n * states of the view. Any value can be passed to the setters. And the value\r\n * that is passed to a setter will effectively be the value set in the view,\r\n * and returned by the corresponding getter.\r\n *\r\n * But a View object also has a *resolution constraint*, a\r\n * *rotation constraint* and a *center constraint*.\r\n *\r\n * As said above, no constraints are applied when the setters are used to set\r\n * new states for the view. Applying constraints is done explicitly through\r\n * the use of the `constrain*` functions (`constrainResolution` and\r\n * `constrainRotation` and `constrainCenter`).\r\n *\r\n * The main users of the constraints are the interactions and the\r\n * controls. For example, double-clicking on the map changes the view to\r\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\r\n * snaps to the closest resolution (with an animation).\r\n *\r\n * The *resolution constraint* snaps to specific resolutions. It is\r\n * determined by the following options: `resolutions`, `maxResolution`,\r\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\r\n * options are ignored. See documentation for each option for more\r\n * information.\r\n *\r\n * The *rotation constraint* snaps to specific angles. It is determined\r\n * by the following options: `enableRotation` and `constrainRotation`.\r\n * By default the rotation value is snapped to zero when approaching the\r\n * horizontal.\r\n *\r\n * The *center constraint* is determined by the `extent` option. By\r\n * default the center is not constrained at all.\r\n *\r\n  * @api\r\n */\r\nvar View = /*@__PURE__*/(function (BaseObject) {\n  function View(opt_options) {\r\n    BaseObject.call(this);\r\n\r\n    var options = assign({}, opt_options);\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.hints_ = [0, 0];\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<Array<Animation>>}\r\n     */\r\n    this.animations_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.updateAnimationKey_;\r\n\r\n    this.updateAnimations_ = this.updateAnimations_.bind(this);\r\n\r\n    /**\r\n     * @private\r\n     * @const\r\n     * @type {import(\"./proj/Projection.js\").default}\r\n     */\r\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\r\n\r\n    this.applyOptions_(options);\r\n  }\n\n  if ( BaseObject ) View.__proto__ = BaseObject;\n  View.prototype = Object.create( BaseObject && BaseObject.prototype );\n  View.prototype.constructor = View;\r\n\r\n  /**\r\n   * Set up the view with the given options.\r\n   * @param {ViewOptions} options View options.\r\n   */\r\n  View.prototype.applyOptions_ = function applyOptions_ (options) {\r\n\r\n    /**\r\n     * @type {Object<string, *>}\r\n     */\r\n    var properties = {};\r\n    properties[ViewProperty.CENTER] = options.center !== undefined ?\r\n      options.center : null;\r\n\r\n    var resolutionConstraintInfo = createResolutionConstraint(options);\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>|undefined}\r\n     */\r\n    this.resolutions_ = options.resolutions;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\r\n\r\n    var centerConstraint = createCenterConstraint(options);\r\n    var resolutionConstraint = resolutionConstraintInfo.constraint;\r\n    var rotationConstraint = createRotationConstraint(options);\r\n\r\n    /**\r\n     * @private\r\n     * @type {Constraints}\r\n     */\r\n    this.constraints_ = {\r\n      center: centerConstraint,\r\n      resolution: resolutionConstraint,\r\n      rotation: rotationConstraint\r\n    };\r\n\r\n    if (options.resolution !== undefined) {\r\n      properties[ViewProperty.RESOLUTION] = options.resolution;\r\n    } else if (options.zoom !== undefined) {\r\n      properties[ViewProperty.RESOLUTION] = this.constrainResolution(\r\n        this.maxResolution_, options.zoom - this.minZoom_);\r\n\r\n      if (this.resolutions_) { // in case map zoom is out of min/max zoom range\r\n        properties[ViewProperty.RESOLUTION] = clamp(\r\n          Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\r\n          this.minResolution_, this.maxResolution_);\r\n      }\r\n    }\r\n    properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\r\n    this.setProperties(properties);\r\n\r\n    /**\r\n     * @private\r\n     * @type {ViewOptions}\r\n     */\r\n    this.options_ = options;\r\n\r\n  };\r\n\r\n  /**\r\n   * Get an updated version of the view options used to construct the view.  The\r\n   * current resolution (or zoom), center, and rotation are applied to any stored\r\n   * options.  The provided options can be used to apply new min/max zoom or\r\n   * resolution limits.\r\n   * @param {ViewOptions} newOptions New options to be applied.\r\n   * @return {ViewOptions} New options updated with the current view state.\r\n   */\r\n  View.prototype.getUpdatedOptions_ = function getUpdatedOptions_ (newOptions) {\r\n    var options = assign({}, this.options_);\r\n\r\n    // preserve resolution (or zoom)\r\n    if (options.resolution !== undefined) {\r\n      options.resolution = this.getResolution();\r\n    } else {\r\n      options.zoom = this.getZoom();\r\n    }\r\n\r\n    // preserve center\r\n    options.center = this.getCenter();\r\n\r\n    // preserve rotation\r\n    options.rotation = this.getRotation();\r\n\r\n    return assign({}, options, newOptions);\r\n  };\r\n\r\n  /**\r\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\r\n   * can be animated for smooth transitions between view states.  For example,\r\n   * to animate the view to a new zoom level:\r\n   *\r\n   *     view.animate({zoom: view.getZoom() + 1});\r\n   *\r\n   * By default, the animation lasts one second and uses in-and-out easing.  You\r\n   * can customize this behavior by including `duration` (in milliseconds) and\r\n   * `easing` options (see {@link module:ol/easing}).\r\n   *\r\n   * To chain together multiple animations, call the method with multiple\r\n   * animation objects.  For example, to first zoom and then pan:\r\n   *\r\n   *     view.animate({zoom: 10}, {center: [0, 0]});\r\n   *\r\n   * If you provide a function as the last argument to the animate method, it\r\n   * will get called at the end of an animation series.  The callback will be\r\n   * called with `true` if the animation series completed on its own or `false`\r\n   * if it was cancelled.\r\n   *\r\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\r\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\r\n   * (or another method that calls one of these).\r\n   *\r\n   * @param {...(AnimationOptions|function(boolean))} var_args Animation\r\n   *     options.  Multiple animations can be run in series by passing multiple\r\n   *     options objects.  To run multiple animations in parallel, call the method\r\n   *     multiple times.  An optional callback can be provided as a final\r\n   *     argument.  The callback will be called with a boolean indicating whether\r\n   *     the animation completed without being cancelled.\r\n   * @api\r\n   */\r\n  View.prototype.animate = function animate (var_args) {\n    var arguments$1 = arguments;\n\r\n    var animationCount = arguments.length;\r\n    var callback;\r\n    if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\r\n      callback = arguments[animationCount - 1];\r\n      --animationCount;\r\n    }\r\n    if (!this.isDef()) {\r\n      // if view properties are not yet set, shortcut to the final state\r\n      var state = arguments[animationCount - 1];\r\n      if (state.center) {\r\n        this.setCenter(state.center);\r\n      }\r\n      if (state.zoom !== undefined) {\r\n        this.setZoom(state.zoom);\r\n      }\r\n      if (state.rotation !== undefined) {\r\n        this.setRotation(state.rotation);\r\n      }\r\n      if (callback) {\r\n        animationCallback(callback, true);\r\n      }\r\n      return;\r\n    }\r\n    var start = Date.now();\r\n    var center = this.getCenter().slice();\r\n    var resolution = this.getResolution();\r\n    var rotation = this.getRotation();\r\n    var series = [];\r\n    for (var i = 0; i < animationCount; ++i) {\r\n      var options = /** @type {AnimationOptions} */ (arguments$1[i]);\r\n\r\n      var animation = /** @type {Animation} */ ({\r\n        start: start,\r\n        complete: false,\r\n        anchor: options.anchor,\r\n        duration: options.duration !== undefined ? options.duration : 1000,\r\n        easing: options.easing || inAndOut\r\n      });\r\n\r\n      if (options.center) {\r\n        animation.sourceCenter = center;\r\n        animation.targetCenter = options.center;\r\n        center = animation.targetCenter;\r\n      }\r\n\r\n      if (options.zoom !== undefined) {\r\n        animation.sourceResolution = resolution;\r\n        animation.targetResolution = this.constrainResolution(\r\n          this.maxResolution_, options.zoom - this.minZoom_, 0);\r\n        resolution = animation.targetResolution;\r\n      } else if (options.resolution) {\r\n        animation.sourceResolution = resolution;\r\n        animation.targetResolution = options.resolution;\r\n        resolution = animation.targetResolution;\r\n      }\r\n\r\n      if (options.rotation !== undefined) {\r\n        animation.sourceRotation = rotation;\r\n        var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\r\n        animation.targetRotation = rotation + delta;\r\n        rotation = animation.targetRotation;\r\n      }\r\n\r\n      animation.callback = callback;\r\n\r\n      // check if animation is a no-op\r\n      if (isNoopAnimation(animation)) {\r\n        animation.complete = true;\r\n        // we still push it onto the series for callback handling\r\n      } else {\r\n        start += animation.duration;\r\n      }\r\n      series.push(animation);\r\n    }\r\n    this.animations_.push(series);\r\n    this.setHint(ViewHint.ANIMATING, 1);\r\n    this.updateAnimations_();\r\n  };\r\n\r\n  /**\r\n   * Determine if the view is being animated.\r\n   * @return {boolean} The view is being animated.\r\n   * @api\r\n   */\r\n  View.prototype.getAnimating = function getAnimating () {\r\n    return this.hints_[ViewHint.ANIMATING] > 0;\r\n  };\r\n\r\n  /**\r\n   * Determine if the user is interacting with the view, such as panning or zooming.\r\n   * @return {boolean} The view is being interacted with.\r\n   * @api\r\n   */\r\n  View.prototype.getInteracting = function getInteracting () {\r\n    return this.hints_[ViewHint.INTERACTING] > 0;\r\n  };\r\n\r\n  /**\r\n   * Cancel any ongoing animations.\r\n   * @api\r\n   */\r\n  View.prototype.cancelAnimations = function cancelAnimations () {\r\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\r\n    for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\r\n      var series = this.animations_[i];\r\n      if (series[0].callback) {\r\n        animationCallback(series[0].callback, false);\r\n      }\r\n    }\r\n    this.animations_.length = 0;\r\n  };\r\n\r\n  /**\r\n   * Update all animations.\r\n   */\r\n  View.prototype.updateAnimations_ = function updateAnimations_ () {\r\n    if (this.updateAnimationKey_ !== undefined) {\r\n      cancelAnimationFrame(this.updateAnimationKey_);\r\n      this.updateAnimationKey_ = undefined;\r\n    }\r\n    if (!this.getAnimating()) {\r\n      return;\r\n    }\r\n    var now = Date.now();\r\n    var more = false;\r\n    for (var i = this.animations_.length - 1; i >= 0; --i) {\r\n      var series = this.animations_[i];\r\n      var seriesComplete = true;\r\n      for (var j = 0, jj = series.length; j < jj; ++j) {\r\n        var animation = series[j];\r\n        if (animation.complete) {\r\n          continue;\r\n        }\r\n        var elapsed = now - animation.start;\r\n        var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\r\n        if (fraction >= 1) {\r\n          animation.complete = true;\r\n          fraction = 1;\r\n        } else {\r\n          seriesComplete = false;\r\n        }\r\n        var progress = animation.easing(fraction);\r\n        if (animation.sourceCenter) {\r\n          var x0 = animation.sourceCenter[0];\r\n          var y0 = animation.sourceCenter[1];\r\n          var x1 = animation.targetCenter[0];\r\n          var y1 = animation.targetCenter[1];\r\n          var x = x0 + progress * (x1 - x0);\r\n          var y = y0 + progress * (y1 - y0);\r\n          this.set(ViewProperty.CENTER, [x, y]);\r\n        }\r\n        if (animation.sourceResolution && animation.targetResolution) {\r\n          var resolution = progress === 1 ?\r\n            animation.targetResolution :\r\n            animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\r\n          if (animation.anchor) {\r\n            this.set(ViewProperty.CENTER,\r\n              this.calculateCenterZoom(resolution, animation.anchor));\r\n          }\r\n          this.set(ViewProperty.RESOLUTION, resolution);\r\n        }\r\n        if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\r\n          var rotation = progress === 1 ?\r\n            modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\r\n            animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\r\n          if (animation.anchor) {\r\n            this.set(ViewProperty.CENTER,\r\n              this.calculateCenterRotate(rotation, animation.anchor));\r\n          }\r\n          this.set(ViewProperty.ROTATION, rotation);\r\n        }\r\n        more = true;\r\n        if (!animation.complete) {\r\n          break;\r\n        }\r\n      }\r\n      if (seriesComplete) {\r\n        this.animations_[i] = null;\r\n        this.setHint(ViewHint.ANIMATING, -1);\r\n        var callback = series[0].callback;\r\n        if (callback) {\r\n          animationCallback(callback, true);\r\n        }\r\n      }\r\n    }\r\n    // prune completed series\r\n    this.animations_ = this.animations_.filter(Boolean);\r\n    if (more && this.updateAnimationKey_ === undefined) {\r\n      this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {number} rotation Target rotation.\r\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\r\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\r\n   */\r\n  View.prototype.calculateCenterRotate = function calculateCenterRotate (rotation, anchor) {\r\n    var center;\r\n    var currentCenter = this.getCenter();\r\n    if (currentCenter !== undefined) {\r\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\r\n      rotateCoordinate(center, rotation - this.getRotation());\r\n      addCoordinate(center, anchor);\r\n    }\r\n    return center;\r\n  };\r\n\r\n  /**\r\n   * @param {number} resolution Target resolution.\r\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\r\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\r\n   */\r\n  View.prototype.calculateCenterZoom = function calculateCenterZoom (resolution, anchor) {\r\n    var center;\r\n    var currentCenter = this.getCenter();\r\n    var currentResolution = this.getResolution();\r\n    if (currentCenter !== undefined && currentResolution !== undefined) {\r\n      var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\r\n      var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\r\n      center = [x, y];\r\n    }\r\n    return center;\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\r\n   */\r\n  View.prototype.getSizeFromViewport_ = function getSizeFromViewport_ () {\r\n    var size = [100, 100];\r\n    var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\r\n    var element = document.querySelector(selector);\r\n    if (element) {\r\n      var metrics = getComputedStyle(element);\r\n      size[0] = parseInt(metrics.width, 10);\r\n      size[1] = parseInt(metrics.height, 10);\r\n    }\r\n    return size;\r\n  };\r\n\r\n  /**\r\n   * Get the constrained center of this view.\r\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\r\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Constrained center.\r\n   * @api\r\n   */\r\n  View.prototype.constrainCenter = function constrainCenter (center) {\r\n    return this.constraints_.center(center);\r\n  };\r\n\r\n  /**\r\n   * Get the constrained resolution of this view.\r\n   * @param {number|undefined} resolution Resolution.\r\n   * @param {number=} opt_delta Delta. Default is `0`.\r\n   * @param {number=} opt_direction Direction. Default is `0`.\r\n   * @return {number|undefined} Constrained resolution.\r\n   * @api\r\n   */\r\n  View.prototype.constrainResolution = function constrainResolution (resolution, opt_delta, opt_direction) {\r\n    var delta = opt_delta || 0;\r\n    var direction = opt_direction || 0;\r\n    return this.constraints_.resolution(resolution, delta, direction);\r\n  };\r\n\r\n  /**\r\n   * Get the constrained rotation of this view.\r\n   * @param {number|undefined} rotation Rotation.\r\n   * @param {number=} opt_delta Delta. Default is `0`.\r\n   * @return {number|undefined} Constrained rotation.\r\n   * @api\r\n   */\r\n  View.prototype.constrainRotation = function constrainRotation (rotation, opt_delta) {\r\n    var delta = opt_delta || 0;\r\n    return this.constraints_.rotation(rotation, delta);\r\n  };\r\n\r\n  /**\r\n   * Get the view center.\r\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\r\n   * @observable\r\n   * @api\r\n   */\r\n  View.prototype.getCenter = function getCenter () {\r\n    return (\r\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\r\n    );\r\n  };\r\n\r\n  /**\r\n   * @return {Constraints} Constraints.\r\n   */\r\n  View.prototype.getConstraints = function getConstraints () {\r\n    return this.constraints_;\r\n  };\r\n\r\n  /**\r\n   * @param {Array<number>=} opt_hints Destination array.\r\n   * @return {Array<number>} Hint.\r\n   */\r\n  View.prototype.getHints = function getHints (opt_hints) {\r\n    if (opt_hints !== undefined) {\r\n      opt_hints[0] = this.hints_[0];\r\n      opt_hints[1] = this.hints_[1];\r\n      return opt_hints;\r\n    } else {\r\n      return this.hints_.slice();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Calculate the extent for the current view state and the passed size.\r\n   * The size is the pixel dimensions of the box into which the calculated extent\r\n   * should fit. In most cases you want to get the extent of the entire map,\r\n   * that is `map.getSize()`.\r\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\r\n   * first map that uses this view will be used.\r\n   * @return {import(\"./extent.js\").Extent} Extent.\r\n   * @api\r\n   */\r\n  View.prototype.calculateExtent = function calculateExtent (opt_size) {\r\n    var size = opt_size || this.getSizeFromViewport_();\r\n    var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\r\n    assert(center, 1); // The view center is not defined\r\n    var resolution = /** @type {!number} */ (this.getResolution());\r\n    assert(resolution !== undefined, 2); // The view resolution is not defined\r\n    var rotation = /** @type {!number} */ (this.getRotation());\r\n    assert(rotation !== undefined, 3); // The view rotation is not defined\r\n\r\n    return getForViewAndSize(center, resolution, rotation, size);\r\n  };\r\n\r\n  /**\r\n   * Get the maximum resolution of the view.\r\n   * @return {number} The maximum resolution of the view.\r\n   * @api\r\n   */\r\n  View.prototype.getMaxResolution = function getMaxResolution () {\r\n    return this.maxResolution_;\r\n  };\r\n\r\n  /**\r\n   * Get the minimum resolution of the view.\r\n   * @return {number} The minimum resolution of the view.\r\n   * @api\r\n   */\r\n  View.prototype.getMinResolution = function getMinResolution () {\r\n    return this.minResolution_;\r\n  };\r\n\r\n  /**\r\n   * Get the maximum zoom level for the view.\r\n   * @return {number} The maximum zoom level.\r\n   * @api\r\n   */\r\n  View.prototype.getMaxZoom = function getMaxZoom () {\r\n    return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\r\n  };\r\n\r\n  /**\r\n   * Set a new maximum zoom level for the view.\r\n   * @param {number} zoom The maximum zoom level.\r\n   * @api\r\n   */\r\n  View.prototype.setMaxZoom = function setMaxZoom (zoom) {\r\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\r\n  };\r\n\r\n  /**\r\n   * Get the minimum zoom level for the view.\r\n   * @return {number} The minimum zoom level.\r\n   * @api\r\n   */\r\n  View.prototype.getMinZoom = function getMinZoom () {\r\n    return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\r\n  };\r\n\r\n  /**\r\n   * Set a new minimum zoom level for the view.\r\n   * @param {number} zoom The minimum zoom level.\r\n   * @api\r\n   */\r\n  View.prototype.setMinZoom = function setMinZoom (zoom) {\r\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\r\n  };\r\n\r\n  /**\r\n   * Get the view projection.\r\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\r\n   * @api\r\n   */\r\n  View.prototype.getProjection = function getProjection () {\r\n    return this.projection_;\r\n  };\r\n\r\n  /**\r\n   * Get the view resolution.\r\n   * @return {number|undefined} The resolution of the view.\r\n   * @observable\r\n   * @api\r\n   */\r\n  View.prototype.getResolution = function getResolution () {\r\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\r\n  };\r\n\r\n  /**\r\n   * Get the resolutions for the view. This returns the array of resolutions\r\n   * passed to the constructor of the View, or undefined if none were given.\r\n   * @return {Array<number>|undefined} The resolutions of the view.\r\n   * @api\r\n   */\r\n  View.prototype.getResolutions = function getResolutions () {\r\n    return this.resolutions_;\r\n  };\r\n\r\n  /**\r\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\r\n   * @param {import(\"./extent.js\").Extent} extent Extent.\r\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\r\n   * @return {number} The resolution at which the provided extent will render at\r\n   *     the given size.\r\n   * @api\r\n   */\r\n  View.prototype.getResolutionForExtent = function getResolutionForExtent (extent, opt_size) {\r\n    var size = opt_size || this.getSizeFromViewport_();\r\n    var xResolution = getWidth(extent) / size[0];\r\n    var yResolution = getHeight(extent) / size[1];\r\n    return Math.max(xResolution, yResolution);\r\n  };\r\n\r\n  /**\r\n   * Return a function that returns a value between 0 and 1 for a\r\n   * resolution. Exponential scaling is assumed.\r\n   * @param {number=} opt_power Power.\r\n   * @return {function(number): number} Resolution for value function.\r\n   */\r\n  View.prototype.getResolutionForValueFunction = function getResolutionForValueFunction (opt_power) {\r\n    var power = opt_power || 2;\r\n    var maxResolution = this.maxResolution_;\r\n    var minResolution = this.minResolution_;\r\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\r\n    return (\r\n      /**\r\n       * @param {number} value Value.\r\n       * @return {number} Resolution.\r\n       */\r\n      function(value) {\r\n        var resolution = maxResolution / Math.pow(power, value * max);\r\n        return resolution;\r\n      });\r\n  };\r\n\r\n  /**\r\n   * Get the view rotation.\r\n   * @return {number} The rotation of the view in radians.\r\n   * @observable\r\n   * @api\r\n   */\r\n  View.prototype.getRotation = function getRotation () {\r\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\r\n  };\r\n\r\n  /**\r\n   * Return a function that returns a resolution for a value between\r\n   * 0 and 1. Exponential scaling is assumed.\r\n   * @param {number=} opt_power Power.\r\n   * @return {function(number): number} Value for resolution function.\r\n   */\r\n  View.prototype.getValueForResolutionFunction = function getValueForResolutionFunction (opt_power) {\r\n    var power = opt_power || 2;\r\n    var maxResolution = this.maxResolution_;\r\n    var minResolution = this.minResolution_;\r\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\r\n    return (\r\n      /**\r\n       * @param {number} resolution Resolution.\r\n       * @return {number} Value.\r\n       */\r\n      function(resolution) {\r\n        var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\r\n        return value;\r\n      });\r\n  };\r\n\r\n  /**\r\n   * @param {number} pixelRatio Pixel ratio for center rounding.\r\n   * @return {State} View state.\r\n   */\r\n  View.prototype.getState = function getState (pixelRatio) {\r\n    var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\r\n    var projection = this.getProjection();\r\n    var resolution = /** @type {number} */ (this.getResolution());\r\n    var pixelResolution = resolution / pixelRatio;\r\n    var rotation = this.getRotation();\r\n    return (\r\n      /** @type {State} */ ({\r\n        center: [\r\n          Math.round(center[0] / pixelResolution) * pixelResolution,\r\n          Math.round(center[1] / pixelResolution) * pixelResolution\r\n        ],\r\n        projection: projection !== undefined ? projection : null,\r\n        resolution: resolution,\r\n        rotation: rotation,\r\n        zoom: this.getZoom()\r\n      })\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Get the current zoom level.  If you configured your view with a resolutions\r\n   * array (this is rare), this method may return non-integer zoom levels (so\r\n   * the zoom level is not safe to use as an index into a resolutions array).\r\n   * @return {number|undefined} Zoom.\r\n   * @api\r\n   */\r\n  View.prototype.getZoom = function getZoom () {\r\n    var zoom;\r\n    var resolution = this.getResolution();\r\n    if (resolution !== undefined) {\r\n      zoom = this.getZoomForResolution(resolution);\r\n    }\r\n    return zoom;\r\n  };\r\n\r\n  /**\r\n   * Get the zoom level for a resolution.\r\n   * @param {number} resolution The resolution.\r\n   * @return {number|undefined} The zoom level for the provided resolution.\r\n   * @api\r\n   */\r\n  View.prototype.getZoomForResolution = function getZoomForResolution (resolution) {\r\n    var offset = this.minZoom_ || 0;\r\n    var max, zoomFactor;\r\n    if (this.resolutions_) {\r\n      var nearest = linearFindNearest(this.resolutions_, resolution, 1);\r\n      offset = nearest;\r\n      max = this.resolutions_[nearest];\r\n      if (nearest == this.resolutions_.length - 1) {\r\n        zoomFactor = 2;\r\n      } else {\r\n        zoomFactor = max / this.resolutions_[nearest + 1];\r\n      }\r\n    } else {\r\n      max = this.maxResolution_;\r\n      zoomFactor = this.zoomFactor_;\r\n    }\r\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\r\n  };\r\n\r\n  /**\r\n   * Get the resolution for a zoom level.\r\n   * @param {number} zoom Zoom level.\r\n   * @return {number} The view resolution for the provided zoom level.\r\n   * @api\r\n   */\r\n  View.prototype.getResolutionForZoom = function getResolutionForZoom (zoom) {\r\n    return /** @type {number} */ (this.constrainResolution(\r\n      this.maxResolution_, zoom - this.minZoom_, 0));\r\n  };\r\n\r\n  /**\r\n   * Fit the given geometry or extent based on the given map size and border.\r\n   * The size is pixel dimensions of the box to fit the extent into.\r\n   * In most cases you will want to use the map size, that is `map.getSize()`.\r\n   * Takes care of the map angle.\r\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\r\n   *     extent to fit the view to.\r\n   * @param {FitOptions=} opt_options Options.\r\n   * @api\r\n   */\r\n  View.prototype.fit = function fit (geometryOrExtent, opt_options) {\r\n    var options = opt_options || {};\r\n    var size = options.size;\r\n    if (!size) {\r\n      size = this.getSizeFromViewport_();\r\n    }\r\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\r\n    var geometry;\r\n    assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function',\r\n      24); // Invalid extent or geometry provided as `geometry`\r\n    if (Array.isArray(geometryOrExtent)) {\r\n      assert(!isEmpty(geometryOrExtent),\r\n        25); // Cannot fit empty extent provided as `geometry`\r\n      geometry = polygonFromExtent(geometryOrExtent);\r\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\r\n      geometryOrExtent = geometryOrExtent.getExtent();\r\n      geometry = polygonFromExtent(geometryOrExtent);\r\n      geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\r\n    } else {\r\n      geometry = geometryOrExtent;\r\n    }\r\n\r\n    var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\r\n    var constrainResolution = options.constrainResolution !== undefined ?\r\n      options.constrainResolution : true;\r\n    var nearest = options.nearest !== undefined ? options.nearest : false;\r\n    var minResolution;\r\n    if (options.minResolution !== undefined) {\r\n      minResolution = options.minResolution;\r\n    } else if (options.maxZoom !== undefined) {\r\n      minResolution = this.constrainResolution(\r\n        this.maxResolution_, options.maxZoom - this.minZoom_, 0);\r\n    } else {\r\n      minResolution = 0;\r\n    }\r\n    var coords = geometry.getFlatCoordinates();\r\n\r\n    // calculate rotated extent\r\n    var rotation = this.getRotation();\r\n    var cosAngle = Math.cos(-rotation);\r\n    var sinAngle = Math.sin(-rotation);\r\n    var minRotX = +Infinity;\r\n    var minRotY = +Infinity;\r\n    var maxRotX = -Infinity;\r\n    var maxRotY = -Infinity;\r\n    var stride = geometry.getStride();\r\n    for (var i = 0, ii = coords.length; i < ii; i += stride) {\r\n      var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\r\n      var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\r\n      minRotX = Math.min(minRotX, rotX);\r\n      minRotY = Math.min(minRotY, rotY);\r\n      maxRotX = Math.max(maxRotX, rotX);\r\n      maxRotY = Math.max(maxRotY, rotY);\r\n    }\r\n\r\n    // calculate resolution\r\n    var resolution = this.getResolutionForExtent(\r\n      [minRotX, minRotY, maxRotX, maxRotY],\r\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\r\n    resolution = isNaN(resolution) ? minResolution :\r\n      Math.max(resolution, minResolution);\r\n    if (constrainResolution) {\r\n      var constrainedResolution = this.constrainResolution(resolution, 0, 0);\r\n      if (!nearest && constrainedResolution < resolution) {\r\n        constrainedResolution = this.constrainResolution(\r\n          constrainedResolution, -1, 0);\r\n      }\r\n      resolution = constrainedResolution;\r\n    }\r\n\r\n    // calculate center\r\n    sinAngle = -sinAngle; // go back to original rotation\r\n    var centerRotX = (minRotX + maxRotX) / 2;\r\n    var centerRotY = (minRotY + maxRotY) / 2;\r\n    centerRotX += (padding[1] - padding[3]) / 2 * resolution;\r\n    centerRotY += (padding[0] - padding[2]) / 2 * resolution;\r\n    var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\r\n    var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\r\n    var center = [centerX, centerY];\r\n    var callback = options.callback ? options.callback : VOID;\r\n\r\n    if (options.duration !== undefined) {\r\n      this.animate({\r\n        resolution: resolution,\r\n        center: center,\r\n        duration: options.duration,\r\n        easing: options.easing\r\n      }, callback);\r\n    } else {\r\n      this.setResolution(resolution);\r\n      this.setCenter(center);\r\n      animationCallback(callback, true);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Center on coordinate and view position.\r\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {import(\"./size.js\").Size} size Box pixel size.\r\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\r\n   * @api\r\n   */\r\n  View.prototype.centerOn = function centerOn (coordinate, size, position) {\r\n    // calculate rotated position\r\n    var rotation = this.getRotation();\r\n    var cosAngle = Math.cos(-rotation);\r\n    var sinAngle = Math.sin(-rotation);\r\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\r\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\r\n    var resolution = this.getResolution();\r\n    rotX += (size[0] / 2 - position[0]) * resolution;\r\n    rotY += (position[1] - size[1] / 2) * resolution;\r\n\r\n    // go back to original angle\r\n    sinAngle = -sinAngle; // go back to original rotation\r\n    var centerX = rotX * cosAngle - rotY * sinAngle;\r\n    var centerY = rotY * cosAngle + rotX * sinAngle;\r\n\r\n    this.setCenter([centerX, centerY]);\r\n  };\r\n\r\n  /**\r\n   * @return {boolean} Is defined.\r\n   */\r\n  View.prototype.isDef = function isDef () {\r\n    return !!this.getCenter() && this.getResolution() !== undefined;\r\n  };\r\n\r\n  /**\r\n   * Rotate the view around a given coordinate.\r\n   * @param {number} rotation New rotation value for the view.\r\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\r\n   * @api\r\n   */\r\n  View.prototype.rotate = function rotate (rotation, opt_anchor) {\r\n    if (opt_anchor !== undefined) {\r\n      var center = this.calculateCenterRotate(rotation, opt_anchor);\r\n      this.setCenter(center);\r\n    }\r\n    this.setRotation(rotation);\r\n  };\r\n\r\n  /**\r\n   * Set the center of the current view.\r\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\r\n   * @observable\r\n   * @api\r\n   */\r\n  View.prototype.setCenter = function setCenter (center) {\r\n    this.set(ViewProperty.CENTER, center);\r\n    if (this.getAnimating()) {\r\n      this.cancelAnimations();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {ViewHint} hint Hint.\r\n   * @param {number} delta Delta.\r\n   * @return {number} New value.\r\n   */\r\n  View.prototype.setHint = function setHint (hint, delta) {\r\n    this.hints_[hint] += delta;\r\n    this.changed();\r\n    return this.hints_[hint];\r\n  };\r\n\r\n  /**\r\n   * Set the resolution for this view.\r\n   * @param {number|undefined} resolution The resolution of the view.\r\n   * @observable\r\n   * @api\r\n   */\r\n  View.prototype.setResolution = function setResolution (resolution) {\r\n    this.set(ViewProperty.RESOLUTION, resolution);\r\n    if (this.getAnimating()) {\r\n      this.cancelAnimations();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Set the rotation for this view.\r\n   * @param {number} rotation The rotation of the view in radians.\r\n   * @observable\r\n   * @api\r\n   */\r\n  View.prototype.setRotation = function setRotation (rotation) {\r\n    this.set(ViewProperty.ROTATION, rotation);\r\n    if (this.getAnimating()) {\r\n      this.cancelAnimations();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Zoom to a specific zoom level.\r\n   * @param {number} zoom Zoom level.\r\n   * @api\r\n   */\r\n  View.prototype.setZoom = function setZoom (zoom) {\r\n    this.setResolution(this.getResolutionForZoom(zoom));\r\n  };\n\n  return View;\n}(BaseObject));\r\n\r\n\r\n/**\r\n * @param {Function} callback Callback.\r\n * @param {*} returnValue Return value.\r\n */\r\nfunction animationCallback(callback, returnValue) {\r\n  setTimeout(function() {\r\n    callback(returnValue);\r\n  }, 0);\r\n}\r\n\r\n\r\n/**\r\n * @param {ViewOptions} options View options.\r\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\r\n */\r\nexport function createCenterConstraint(options) {\r\n  if (options.extent !== undefined) {\r\n    return createExtent(options.extent);\r\n  } else {\r\n    return centerNone;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {ViewOptions} options View options.\r\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\r\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\r\n */\r\nexport function createResolutionConstraint(options) {\r\n  var resolutionConstraint;\r\n  var maxResolution;\r\n  var minResolution;\r\n\r\n  // TODO: move these to be ol constants\r\n  // see https://github.com/openlayers/openlayers/issues/2076\r\n  var defaultMaxZoom = 28;\r\n  var defaultZoomFactor = 2;\r\n\r\n  var minZoom = options.minZoom !== undefined ?\r\n    options.minZoom : DEFAULT_MIN_ZOOM;\r\n\r\n  var maxZoom = options.maxZoom !== undefined ?\r\n    options.maxZoom : defaultMaxZoom;\r\n\r\n  var zoomFactor = options.zoomFactor !== undefined ?\r\n    options.zoomFactor : defaultZoomFactor;\r\n\r\n  if (options.resolutions !== undefined) {\r\n    var resolutions = options.resolutions;\r\n    maxResolution = resolutions[minZoom];\r\n    minResolution = resolutions[maxZoom] !== undefined ?\r\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\r\n    resolutionConstraint = createSnapToResolutions(\r\n      resolutions);\r\n  } else {\r\n    // calculate the default min and max resolution\r\n    var projection = createProjection(options.projection, 'EPSG:3857');\r\n    var extent = projection.getExtent();\r\n    var size = !extent ?\r\n      // use an extent that can fit the whole world if need be\r\n      360 * METERS_PER_UNIT[Units.DEGREES] /\r\n            projection.getMetersPerUnit() :\r\n      Math.max(getWidth(extent), getHeight(extent));\r\n\r\n    var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\r\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\r\n\r\n    var defaultMinResolution = defaultMaxResolution / Math.pow(\r\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\r\n\r\n    // user provided maxResolution takes precedence\r\n    maxResolution = options.maxResolution;\r\n    if (maxResolution !== undefined) {\r\n      minZoom = 0;\r\n    } else {\r\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\r\n    }\r\n\r\n    // user provided minResolution takes precedence\r\n    minResolution = options.minResolution;\r\n    if (minResolution === undefined) {\r\n      if (options.maxZoom !== undefined) {\r\n        if (options.maxResolution !== undefined) {\r\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\r\n        } else {\r\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\r\n        }\r\n      } else {\r\n        minResolution = defaultMinResolution;\r\n      }\r\n    }\r\n\r\n    // given discrete zoom levels, minResolution may be different than provided\r\n    maxZoom = minZoom + Math.floor(\r\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\r\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\r\n\r\n    resolutionConstraint = createSnapToPower(\r\n      zoomFactor, maxResolution, maxZoom - minZoom);\r\n  }\r\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\r\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\r\n}\r\n\r\n\r\n/**\r\n * @param {ViewOptions} options View options.\r\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\r\n */\r\nexport function createRotationConstraint(options) {\r\n  var enableRotation = options.enableRotation !== undefined ?\r\n    options.enableRotation : true;\r\n  if (enableRotation) {\r\n    var constrainRotation = options.constrainRotation;\r\n    if (constrainRotation === undefined || constrainRotation === true) {\r\n      return createSnapToZero();\r\n    } else if (constrainRotation === false) {\r\n      return rotationNone;\r\n    } else if (typeof constrainRotation === 'number') {\r\n      return createSnapToN(constrainRotation);\r\n    } else {\r\n      return rotationNone;\r\n    }\r\n  } else {\r\n    return disable;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Determine if an animation involves no view change.\r\n * @param {Animation} animation The animation.\r\n * @return {boolean} The animation involves no view change.\r\n */\r\nexport function isNoopAnimation(animation) {\r\n  if (animation.sourceCenter && animation.targetCenter) {\r\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\r\n      return false;\r\n    }\r\n  }\r\n  if (animation.sourceResolution !== animation.targetResolution) {\r\n    return false;\r\n  }\r\n  if (animation.sourceRotation !== animation.targetRotation) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport default View;\r\n\r\n//# sourceMappingURL=View.js.map","/**\r\n * @module ol/resolutionconstraint\r\n */\r\nimport {linearFindNearest} from './array.js';\r\nimport {clamp} from './math.js';\r\n\r\n\r\n/**\r\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\r\n */\r\n\r\n\r\n/**\r\n * @param {Array<number>} resolutions Resolutions.\r\n * @return {Type} Zoom function.\r\n */\r\nexport function createSnapToResolutions(resolutions) {\r\n  return (\r\n    /**\r\n     * @param {number|undefined} resolution Resolution.\r\n     * @param {number} delta Delta.\r\n     * @param {number} direction Direction.\r\n     * @return {number|undefined} Resolution.\r\n     */\r\n    function(resolution, delta, direction) {\r\n      if (resolution !== undefined) {\r\n        var z = linearFindNearest(resolutions, resolution, direction);\r\n        z = clamp(z + delta, 0, resolutions.length - 1);\r\n        var index = Math.floor(z);\r\n        if (z != index && index < resolutions.length - 1) {\r\n          var power = resolutions[index] / resolutions[index + 1];\r\n          return resolutions[index] / Math.pow(power, z - index);\r\n        } else {\r\n          return resolutions[index];\r\n        }\r\n      } else {\r\n        return undefined;\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * @param {number} power Power.\r\n * @param {number} maxResolution Maximum resolution.\r\n * @param {number=} opt_maxLevel Maximum level.\r\n * @return {Type} Zoom function.\r\n */\r\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\r\n  return (\r\n    /**\r\n     * @param {number|undefined} resolution Resolution.\r\n     * @param {number} delta Delta.\r\n     * @param {number} direction Direction.\r\n     * @return {number|undefined} Resolution.\r\n     */\r\n    function(resolution, delta, direction) {\r\n      if (resolution !== undefined) {\r\n        var offset = -direction / 2 + 0.5;\r\n        var oldLevel = Math.floor(\r\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\r\n        var newLevel = Math.max(oldLevel + delta, 0);\r\n        if (opt_maxLevel !== undefined) {\r\n          newLevel = Math.min(newLevel, opt_maxLevel);\r\n        }\r\n        return maxResolution / Math.pow(power, newLevel);\r\n      } else {\r\n        return undefined;\r\n      }\r\n    });\r\n}\r\n\r\n//# sourceMappingURL=resolutionconstraint.js.map","/**\r\n * @module ol/layer/Group\r\n */\r\nimport {getUid} from '../util.js';\r\nimport Collection from '../Collection.js';\r\nimport CollectionEventType from '../CollectionEventType.js';\r\nimport {getChangeEventType} from '../Object.js';\r\nimport ObjectEventType from '../ObjectEventType.js';\r\nimport {assert} from '../asserts.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {getIntersection} from '../extent.js';\r\nimport BaseLayer from './Base.js';\r\nimport {assign, clear} from '../obj.js';\r\nimport SourceState from '../source/State.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\r\n */\r\n\r\n\r\n/**\r\n * @enum {string}\r\n * @private\r\n */\r\nvar Property = {\r\n  LAYERS: 'layers'\r\n};\r\n\r\n\r\n/**\r\n * @classdesc\r\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\r\n *\r\n * A generic `change` event is triggered when the group/Collection changes.\r\n *\r\n * @api\r\n */\r\nvar LayerGroup = /*@__PURE__*/(function (BaseLayer) {\n  function LayerGroup(opt_options) {\r\n\r\n    var options = opt_options || {};\r\n    var baseOptions = /** @type {Options} */ (assign({}, options));\r\n    delete baseOptions.layers;\r\n\r\n    var layers = options.layers;\r\n\r\n    BaseLayer.call(this, baseOptions);\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<import(\"../events.js\").EventsKey>}\r\n     */\r\n    this.layersListenerKeys_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\r\n     */\r\n    this.listenerKeys_ = {};\r\n\r\n    listen(this,\r\n      getChangeEventType(Property.LAYERS),\r\n      this.handleLayersChanged_, this);\r\n\r\n    if (layers) {\r\n      if (Array.isArray(layers)) {\r\n        layers = new Collection(layers.slice(), {unique: true});\r\n      } else {\r\n        assert(typeof /** @type {?} */ (layers).getArray === 'function',\r\n          43); // Expected `layers` to be an array or a `Collection`\r\n      }\r\n    } else {\r\n      layers = new Collection(undefined, {unique: true});\r\n    }\r\n\r\n    this.setLayers(layers);\r\n\r\n  }\n\n  if ( BaseLayer ) LayerGroup.__proto__ = BaseLayer;\n  LayerGroup.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  LayerGroup.prototype.constructor = LayerGroup;\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  LayerGroup.prototype.handleLayerChange_ = function handleLayerChange_ () {\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  LayerGroup.prototype.handleLayersChanged_ = function handleLayersChanged_ () {\r\n    this.layersListenerKeys_.forEach(unlistenByKey);\r\n    this.layersListenerKeys_.length = 0;\r\n\r\n    var layers = this.getLayers();\r\n    this.layersListenerKeys_.push(\r\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\r\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\r\n    );\r\n\r\n    for (var id in this.listenerKeys_) {\r\n      this.listenerKeys_[id].forEach(unlistenByKey);\r\n    }\r\n    clear(this.listenerKeys_);\r\n\r\n    var layersArray = layers.getArray();\r\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\r\n      var layer = layersArray[i];\r\n      this.listenerKeys_[getUid(layer)] = [\r\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\r\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\r\n      ];\r\n    }\r\n\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\r\n   * @private\r\n   */\r\n  LayerGroup.prototype.handleLayersAdd_ = function handleLayersAdd_ (collectionEvent) {\r\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\r\n    this.listenerKeys_[getUid(layer)] = [\r\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\r\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\r\n    ];\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\r\n   * @private\r\n   */\r\n  LayerGroup.prototype.handleLayersRemove_ = function handleLayersRemove_ (collectionEvent) {\r\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\r\n    var key = getUid(layer);\r\n    this.listenerKeys_[key].forEach(unlistenByKey);\r\n    delete this.listenerKeys_[key];\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\r\n   * in this group.\r\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\r\n   *   {@link module:ol/layer/Base layers} that are part of this group.\r\n   * @observable\r\n   * @api\r\n   */\r\n  LayerGroup.prototype.getLayers = function getLayers () {\r\n    return (\r\n      /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS))\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\r\n   * in this group.\r\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\r\n   *   {@link module:ol/layer/Base layers} that are part of this group.\r\n   * @observable\r\n   * @api\r\n   */\r\n  LayerGroup.prototype.setLayers = function setLayers (layers) {\r\n    this.set(Property.LAYERS, layers);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  LayerGroup.prototype.getLayersArray = function getLayersArray (opt_array) {\r\n    var array = opt_array !== undefined ? opt_array : [];\r\n    this.getLayers().forEach(function(layer) {\r\n      layer.getLayersArray(array);\r\n    });\r\n    return array;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  LayerGroup.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\r\n    var states = opt_states !== undefined ? opt_states : [];\r\n\r\n    var pos = states.length;\r\n\r\n    this.getLayers().forEach(function(layer) {\r\n      layer.getLayerStatesArray(states);\r\n    });\r\n\r\n    var ownLayerState = this.getLayerState();\r\n    for (var i = pos, ii = states.length; i < ii; i++) {\r\n      var layerState = states[i];\r\n      layerState.opacity *= ownLayerState.opacity;\r\n      layerState.visible = layerState.visible && ownLayerState.visible;\r\n      layerState.maxResolution = Math.min(\r\n        layerState.maxResolution, ownLayerState.maxResolution);\r\n      layerState.minResolution = Math.max(\r\n        layerState.minResolution, ownLayerState.minResolution);\r\n      if (ownLayerState.extent !== undefined) {\r\n        if (layerState.extent !== undefined) {\r\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\r\n        } else {\r\n          layerState.extent = ownLayerState.extent;\r\n        }\r\n      }\r\n    }\r\n\r\n    return states;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  LayerGroup.prototype.getSourceState = function getSourceState () {\r\n    return SourceState.READY;\r\n  };\n\n  return LayerGroup;\n}(BaseLayer));\r\n\r\n\r\nexport default LayerGroup;\r\n\r\n//# sourceMappingURL=Group.js.map","/**\r\n * @module ol/size\r\n */\r\n\r\n\r\n/**\r\n * An array of numbers representing a size: `[width, height]`.\r\n * @typedef {Array<number>} Size\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * Returns a buffered size.\r\n * @param {Size} size Size.\r\n * @param {number} num The amount by which to buffer.\r\n * @param {Size=} opt_size Optional reusable size array.\r\n * @return {Size} The buffered size.\r\n */\r\nexport function buffer(size, num, opt_size) {\r\n  if (opt_size === undefined) {\r\n    opt_size = [0, 0];\r\n  }\r\n  opt_size[0] = size[0] + 2 * num;\r\n  opt_size[1] = size[1] + 2 * num;\r\n  return opt_size;\r\n}\r\n\r\n\r\n/**\r\n * Determines if a size has a positive area.\r\n * @param {Size} size The size to test.\r\n * @return {boolean} The size has a positive area.\r\n */\r\nexport function hasArea(size) {\r\n  return size[0] > 0 && size[1] > 0;\r\n}\r\n\r\n\r\n/**\r\n * Returns a size scaled by a ratio. The result will be an array of integers.\r\n * @param {Size} size Size.\r\n * @param {number} ratio Ratio.\r\n * @param {Size=} opt_size Optional reusable size array.\r\n * @return {Size} The scaled size.\r\n */\r\nexport function scale(size, ratio, opt_size) {\r\n  if (opt_size === undefined) {\r\n    opt_size = [0, 0];\r\n  }\r\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\r\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\r\n  return opt_size;\r\n}\r\n\r\n\r\n/**\r\n * Returns an `Size` array for the passed in number (meaning: square) or\r\n * `Size` array.\r\n * (meaning: non-square),\r\n * @param {number|Size} size Width and height.\r\n * @param {Size=} opt_size Optional reusable size array.\r\n * @return {Size} Size.\r\n * @api\r\n */\r\nexport function toSize(size, opt_size) {\r\n  if (Array.isArray(size)) {\r\n    return size;\r\n  } else {\r\n    if (opt_size === undefined) {\r\n      opt_size = [size, size];\r\n    } else {\r\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\r\n    }\r\n    return opt_size;\r\n  }\r\n}\r\n\r\n//# sourceMappingURL=size.js.map","/**\r\n * @module ol/PluggableMap\r\n */\r\nimport {getUid} from './util.js';\r\nimport Collection from './Collection.js';\r\nimport CollectionEventType from './CollectionEventType.js';\r\nimport MapBrowserEvent from './MapBrowserEvent.js';\r\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\r\nimport MapBrowserEventType from './MapBrowserEventType.js';\r\nimport MapEvent from './MapEvent.js';\r\nimport MapEventType from './MapEventType.js';\r\nimport MapProperty from './MapProperty.js';\r\nimport RenderEventType from './render/EventType.js';\r\nimport BaseObject, {getChangeEventType} from './Object.js';\r\nimport ObjectEventType from './ObjectEventType.js';\r\nimport TileQueue from './TileQueue.js';\r\nimport View from './View.js';\r\nimport ViewHint from './ViewHint.js';\r\nimport {assert} from './asserts.js';\r\nimport {removeNode} from './dom.js';\r\nimport {listen, unlistenByKey, unlisten} from './events.js';\r\nimport {stopPropagation} from './events/Event.js';\r\nimport EventType from './events/EventType.js';\r\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\r\nimport {TRUE} from './functions.js';\r\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\r\nimport LayerGroup from './layer/Group.js';\r\nimport {hasArea} from './size.js';\r\nimport {DROP} from './structs/PriorityQueue.js';\r\nimport {create as createTransform, apply as applyTransform} from './transform.js';\r\n\r\n\r\n/**\r\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\r\n * be used in applications.\r\n * @typedef {Object} FrameState\r\n * @property {number} pixelRatio The pixel ratio of the frame.\r\n * @property {number} time The time when rendering of the frame was requested.\r\n * @property {import(\"./View.js\").State} viewState The state of the current view.\r\n * @property {boolean} animate\r\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\r\n * @property {null|import(\"./extent.js\").Extent} extent\r\n * @property {import(\"./coordinate.js\").Coordinate} focus\r\n * @property {number} index\r\n * @property {Object<string, import(\"./layer/Layer.js\").State>} layerStates\r\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\r\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\r\n * @property {Array<PostRenderFunction>} postRenderFunctions\r\n * @property {import(\"./size.js\").Size} size\r\n * @property {!Object<string, boolean>} skippedFeatureUids\r\n * @property {TileQueue} tileQueue\r\n * @property {Object<string, Object<string, import(\"./TileRange.js\").default>>} usedTiles\r\n * @property {Array<number>} viewHints\r\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\r\n */\r\n\r\n\r\n/**\r\n * @typedef {function(PluggableMap, ?FrameState): boolean} PostRenderFunction\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} AtPixelOptions\r\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} layerFilter Layer filter\r\n * function. The filter function will receive one argument, the\r\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\r\n * Only layers which are visible and for which this function returns `true`\r\n * will be tested for features. By default, all visible layers will be tested.\r\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\r\n * inside the radius around the given position will be checked for features. This only\r\n * works for the canvas renderer and not for WebGL.\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} MapOptionsInternal\r\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\r\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\r\n * @property {HTMLElement|Document} keyboardEventTarget\r\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\r\n * @property {Object<string, *>} values\r\n */\r\n\r\n\r\n/**\r\n * Object literal with config options for the map.\r\n * @typedef {Object} MapOptions\r\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\r\n * Controls initially added to the map. If not specified,\r\n * {@link module:ol/control~defaults} is used.\r\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\r\n * physical pixels and device-independent pixels (dips) on the device.\r\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\r\n * Interactions that are initially added to the map. If not specified,\r\n * {@link module:ol/interaction~defaults} is used.\r\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\r\n * listen to keyboard events on. This determines when the `KeyboardPan` and\r\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\r\n * `document` the keyboard interactions will always trigger. If this option is\r\n * not specified, the element the library listens to keyboard events on is the\r\n * map target (i.e. the user-provided div for the map). If this is not\r\n * `document`, the target element needs to be focused for key events to be\r\n * emitted, requiring that the target element has a `tabindex` attribute.\r\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\r\n * Layers. If this is not defined, a map with no layers will be rendered. Note\r\n * that layers are rendered in the order supplied, so if you want, for example,\r\n * a vector layer to appear on top of a tile layer, it must come after the tile\r\n * layer.\r\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\r\n * simultaneously.\r\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\r\n * will be loaded during animations. This may improve the user experience, but\r\n * can also make animations stutter on devices with slow memory.\r\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\r\n * tiles will be loaded while interacting with the map. This may improve the\r\n * user experience, but can also make map panning and zooming choppy on devices\r\n * with slow memory.\r\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\r\n * cursor must move to be detected as a map move event instead of a click.\r\n * Increasing this value can make it easier to click on the map.\r\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\r\n * Overlays initially added to the map. By default, no overlays are added.\r\n * @property {HTMLElement|string} [target] The container for the map, either the\r\n * element itself or the `id` of the element. If not specified at construction\r\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\r\n * rendered.\r\n * @property {View} [view] The map's view.  No layer sources will be\r\n * fetched unless this is specified at construction time or through\r\n * {@link module:ol/Map~Map#setView}.\r\n */\r\n\r\n\r\n/**\r\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\r\n * @fires import(\"./MapEvent.js\").MapEvent\r\n * @fires module:ol/render/Event~RenderEvent#postcompose\r\n * @fires module:ol/render/Event~RenderEvent#precompose\r\n * @fires module:ol/render/Event~RenderEvent#rendercomplete\r\n * @api\r\n */\r\nvar PluggableMap = /*@__PURE__*/(function (BaseObject) {\n  function PluggableMap(options) {\r\n\r\n    BaseObject.call(this);\r\n\r\n    var optionsInternal = createOptionsInternal(options);\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.loadTilesWhileAnimating_ =\r\n        options.loadTilesWhileAnimating !== undefined ?\r\n          options.loadTilesWhileAnimating : false;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.loadTilesWhileInteracting_ =\r\n        options.loadTilesWhileInteracting !== undefined ?\r\n          options.loadTilesWhileInteracting : false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.pixelRatio_ = options.pixelRatio !== undefined ?\r\n      options.pixelRatio : DEVICE_PIXEL_RATIO;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.animationDelayKey_;\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    this.animationDelay_ = function() {\r\n      this.animationDelayKey_ = undefined;\r\n      this.renderFrame_.call(this, Date.now());\r\n    }.bind(this);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./transform.js\").Transform}\r\n     */\r\n    this.coordinateToPixelTransform_ = createTransform();\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./transform.js\").Transform}\r\n     */\r\n    this.pixelToCoordinateTransform_ = createTransform();\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.frameIndex_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?FrameState}\r\n     */\r\n    this.frameState_ = null;\r\n\r\n    /**\r\n     * The extent at the previous 'moveend' event.\r\n     * @private\r\n     * @type {import(\"./extent.js\").Extent}\r\n     */\r\n    this.previousExtent_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"./events.js\").EventsKey}\r\n     */\r\n    this.viewPropertyListenerKey_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"./events.js\").EventsKey}\r\n     */\r\n    this.viewChangeListenerKey_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<import(\"./events.js\").EventsKey>}\r\n     */\r\n    this.layerGroupPropertyListenerKeys_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!HTMLElement}\r\n     */\r\n    this.viewport_ = document.createElement('div');\r\n    this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\r\n    this.viewport_.style.position = 'relative';\r\n    this.viewport_.style.overflow = 'hidden';\r\n    this.viewport_.style.width = '100%';\r\n    this.viewport_.style.height = '100%';\r\n    // prevent page zoom on IE >= 10 browsers\r\n    this.viewport_.style.msTouchAction = 'none';\r\n    this.viewport_.style.touchAction = 'none';\r\n\r\n    /**\r\n     * @private\r\n     * @type {!HTMLElement}\r\n     */\r\n    this.overlayContainer_ = document.createElement('div');\r\n    this.overlayContainer_.className = 'ol-overlaycontainer';\r\n    this.viewport_.appendChild(this.overlayContainer_);\r\n\r\n    /**\r\n     * @private\r\n     * @type {!HTMLElement}\r\n     */\r\n    this.overlayContainerStopEvent_ = document.createElement('div');\r\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\r\n    var overlayEvents = [\r\n      EventType.CLICK,\r\n      EventType.DBLCLICK,\r\n      EventType.MOUSEDOWN,\r\n      EventType.TOUCHSTART,\r\n      EventType.MSPOINTERDOWN,\r\n      MapBrowserEventType.POINTERDOWN,\r\n      EventType.MOUSEWHEEL,\r\n      EventType.WHEEL\r\n    ];\r\n    for (var i = 0, ii = overlayEvents.length; i < ii; ++i) {\r\n      listen(this.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\r\n    }\r\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\r\n\r\n    /**\r\n     * @private\r\n     * @type {MapBrowserEventHandler}\r\n     */\r\n    this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\r\n    for (var key in MapBrowserEventType) {\r\n      listen(this.mapBrowserEventHandler_, MapBrowserEventType[key],\r\n        this.handleMapBrowserEvent, this);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement|Document}\r\n     */\r\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<import(\"./events.js\").EventsKey>}\r\n     */\r\n    this.keyHandlerKeys_ = null;\r\n\r\n    listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\r\n    listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\r\n    listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\r\n\r\n    /**\r\n     * @type {Collection<import(\"./control/Control.js\").default>}\r\n     * @protected\r\n     */\r\n    this.controls = optionsInternal.controls || new Collection();\r\n\r\n    /**\r\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\r\n     * @protected\r\n     */\r\n    this.interactions = optionsInternal.interactions || new Collection();\r\n\r\n    /**\r\n     * @type {Collection<import(\"./Overlay.js\").default>}\r\n     * @private\r\n     */\r\n    this.overlays_ = optionsInternal.overlays;\r\n\r\n    /**\r\n     * A lookup of overlays by id.\r\n     * @private\r\n     * @type {Object<string, import(\"./Overlay.js\").default>}\r\n     */\r\n    this.overlayIdIndex_ = {};\r\n\r\n    /**\r\n     * @type {import(\"./renderer/Map.js\").default}\r\n     * @private\r\n     */\r\n    this.renderer_ = this.createRenderer();\r\n\r\n    /**\r\n     * @type {function(Event)|undefined}\r\n     * @private\r\n     */\r\n    this.handleResize_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./coordinate.js\").Coordinate}\r\n     */\r\n    this.focus_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Array<PostRenderFunction>}\r\n     */\r\n    this.postRenderFunctions_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {TileQueue}\r\n     */\r\n    this.tileQueue_ = new TileQueue(\r\n      this.getTilePriority.bind(this),\r\n      this.handleTileChange_.bind(this));\r\n\r\n    /**\r\n     * Uids of features to skip at rendering time.\r\n     * @type {Object<string, boolean>}\r\n     * @private\r\n     */\r\n    this.skippedFeatureUids_ = {};\r\n\r\n    listen(\r\n      this, getChangeEventType(MapProperty.LAYERGROUP),\r\n      this.handleLayerGroupChanged_, this);\r\n    listen(this, getChangeEventType(MapProperty.VIEW),\r\n      this.handleViewChanged_, this);\r\n    listen(this, getChangeEventType(MapProperty.SIZE),\r\n      this.handleSizeChanged_, this);\r\n    listen(this, getChangeEventType(MapProperty.TARGET),\r\n      this.handleTargetChanged_, this);\r\n\r\n    // setProperties will trigger the rendering of the map if the map\r\n    // is \"defined\" already.\r\n    this.setProperties(optionsInternal.values);\r\n\r\n    this.controls.forEach(\r\n      /**\r\n       * @param {import(\"./control/Control.js\").default} control Control.\r\n       * @this {PluggableMap}\r\n       */\r\n      (function(control) {\r\n        control.setMap(this);\r\n      }).bind(this));\r\n\r\n    listen(this.controls, CollectionEventType.ADD,\r\n      /**\r\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\r\n       */\r\n      function(event) {\r\n        event.element.setMap(this);\r\n      }, this);\r\n\r\n    listen(this.controls, CollectionEventType.REMOVE,\r\n      /**\r\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\r\n       */\r\n      function(event) {\r\n        event.element.setMap(null);\r\n      }, this);\r\n\r\n    this.interactions.forEach(\r\n      /**\r\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\r\n       * @this {PluggableMap}\r\n       */\r\n      (function(interaction) {\r\n        interaction.setMap(this);\r\n      }).bind(this));\r\n\r\n    listen(this.interactions, CollectionEventType.ADD,\r\n      /**\r\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\r\n       */\r\n      function(event) {\r\n        event.element.setMap(this);\r\n      }, this);\r\n\r\n    listen(this.interactions, CollectionEventType.REMOVE,\r\n      /**\r\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\r\n       */\r\n      function(event) {\r\n        event.element.setMap(null);\r\n      }, this);\r\n\r\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\r\n\r\n    listen(this.overlays_, CollectionEventType.ADD,\r\n      /**\r\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\r\n       */\r\n      function(event) {\r\n        this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\r\n      }, this);\r\n\r\n    listen(this.overlays_, CollectionEventType.REMOVE,\r\n      /**\r\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\r\n       */\r\n      function(event) {\r\n        var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\r\n        var id = overlay.getId();\r\n        if (id !== undefined) {\r\n          delete this.overlayIdIndex_[id.toString()];\r\n        }\r\n        event.element.setMap(null);\r\n      }, this);\r\n\r\n  }\n\n  if ( BaseObject ) PluggableMap.__proto__ = BaseObject;\n  PluggableMap.prototype = Object.create( BaseObject && BaseObject.prototype );\n  PluggableMap.prototype.constructor = PluggableMap;\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\r\n   */\r\n  PluggableMap.prototype.createRenderer = function createRenderer () {\r\n    throw new Error('Use a map type that has a createRenderer method');\r\n  };\r\n\r\n  /**\r\n   * Add the given control to the map.\r\n   * @param {import(\"./control/Control.js\").default} control Control.\r\n   * @api\r\n   */\r\n  PluggableMap.prototype.addControl = function addControl (control) {\r\n    this.getControls().push(control);\r\n  };\r\n\r\n  /**\r\n   * Add the given interaction to the map.\r\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\r\n   * @api\r\n   */\r\n  PluggableMap.prototype.addInteraction = function addInteraction (interaction) {\r\n    this.getInteractions().push(interaction);\r\n  };\r\n\r\n  /**\r\n   * Adds the given layer to the top of this map. If you want to add a layer\r\n   * elsewhere in the stack, use `getLayers()` and the methods available on\r\n   * {@link module:ol/Collection~Collection}.\r\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\r\n   * @api\r\n   */\r\n  PluggableMap.prototype.addLayer = function addLayer (layer) {\r\n    var layers = this.getLayerGroup().getLayers();\r\n    layers.push(layer);\r\n  };\r\n\r\n  /**\r\n   * Add the given overlay to the map.\r\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\r\n   * @api\r\n   */\r\n  PluggableMap.prototype.addOverlay = function addOverlay (overlay) {\r\n    this.getOverlays().push(overlay);\r\n  };\r\n\r\n  /**\r\n   * This deals with map's overlay collection changes.\r\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\r\n   * @private\r\n   */\r\n  PluggableMap.prototype.addOverlayInternal_ = function addOverlayInternal_ (overlay) {\r\n    var id = overlay.getId();\r\n    if (id !== undefined) {\r\n      this.overlayIdIndex_[id.toString()] = overlay;\r\n    }\r\n    overlay.setMap(this);\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @inheritDoc\r\n   */\r\n  PluggableMap.prototype.disposeInternal = function disposeInternal () {\r\n    this.mapBrowserEventHandler_.dispose();\r\n    unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\r\n    unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\r\n    unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\r\n    if (this.handleResize_ !== undefined) {\r\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\r\n      this.handleResize_ = undefined;\r\n    }\r\n    if (this.animationDelayKey_) {\r\n      cancelAnimationFrame(this.animationDelayKey_);\r\n      this.animationDelayKey_ = undefined;\r\n    }\r\n    this.setTarget(null);\r\n    BaseObject.prototype.disposeInternal.call(this);\r\n  };\r\n\r\n  /**\r\n   * Detect features that intersect a pixel on the viewport, and execute a\r\n   * callback with each intersecting feature. Layers included in the detection can\r\n   * be configured through the `layerFilter` option in `opt_options`.\r\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\r\n   * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\r\n   *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\r\n   *     called with two arguments. The first argument is one\r\n   *     {@link module:ol/Feature feature} or\r\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\r\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\r\n   *     unmanaged layers. To stop detection, callback functions can return a\r\n   *     truthy value.\r\n   * @param {AtPixelOptions=} opt_options Optional options.\r\n   * @return {T|undefined} Callback result, i.e. the return value of last\r\n   * callback execution, or the first truthy callback return value.\r\n   * @template S,T\r\n   * @api\r\n   */\r\n  PluggableMap.prototype.forEachFeatureAtPixel = function forEachFeatureAtPixel (pixel, callback, opt_options) {\r\n    if (!this.frameState_) {\r\n      return;\r\n    }\r\n    var coordinate = this.getCoordinateFromPixel(pixel);\r\n    opt_options = opt_options !== undefined ? opt_options :\r\n      /** @type {AtPixelOptions} */ ({});\r\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\r\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\r\n    var layerFilter = opt_options.layerFilter !== undefined ?\r\n      opt_options.layerFilter : TRUE;\r\n    return this.renderer_.forEachFeatureAtCoordinate(\r\n      coordinate, this.frameState_, hitTolerance, callback, null,\r\n      layerFilter, null);\r\n  };\r\n\r\n  /**\r\n   * Get all features that intersect a pixel on the viewport.\r\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\r\n   * @param {AtPixelOptions=} opt_options Optional options.\r\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\r\n   * `null` if none were found.\r\n   * @api\r\n   */\r\n  PluggableMap.prototype.getFeaturesAtPixel = function getFeaturesAtPixel (pixel, opt_options) {\r\n    var features = null;\r\n    this.forEachFeatureAtPixel(pixel, function(feature) {\r\n      if (!features) {\r\n        features = [];\r\n      }\r\n      features.push(feature);\r\n    }, opt_options);\r\n    return features;\r\n  };\r\n\r\n  /**\r\n   * Detect layers that have a color value at a pixel on the viewport, and\r\n   * execute a callback with each matching layer. Layers included in the\r\n   * detection can be configured through `opt_layerFilter`.\r\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\r\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\r\n   *     Layer callback. This callback will receive two arguments: first is the\r\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\r\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\r\n   *     that do not currently support this argument. To stop detection, callback\r\n   *     functions can return a truthy value.\r\n   * @param {AtPixelOptions=} opt_options Configuration options.\r\n   * @return {T|undefined} Callback result, i.e. the return value of last\r\n   * callback execution, or the first truthy callback return value.\r\n   * @template S,T\r\n   * @api\r\n   */\r\n  PluggableMap.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, callback, opt_options) {\r\n    if (!this.frameState_) {\r\n      return;\r\n    }\r\n    var options = opt_options || /** @type {AtPixelOptions} */ ({});\r\n    var hitTolerance = options.hitTolerance !== undefined ?\r\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\r\n    var layerFilter = options.layerFilter || TRUE;\r\n    return this.renderer_.forEachLayerAtPixel(\r\n      pixel, this.frameState_, hitTolerance, callback, null, layerFilter, null);\r\n  };\r\n\r\n  /**\r\n   * Detect if features intersect a pixel on the viewport. Layers included in the\r\n   * detection can be configured through `opt_layerFilter`.\r\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\r\n   * @param {AtPixelOptions=} opt_options Optional options.\r\n   * @return {boolean} Is there a feature at the given pixel?\r\n   * @template U\r\n   * @api\r\n   */\r\n  PluggableMap.prototype.hasFeatureAtPixel = function hasFeatureAtPixel (pixel, opt_options) {\r\n    if (!this.frameState_) {\r\n      return false;\r\n    }\r\n    var coordinate = this.getCoordinateFromPixel(pixel);\r\n    opt_options = opt_options !== undefined ? opt_options :\r\n      /** @type {AtPixelOptions} */ ({});\r\n    var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\r\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\r\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\r\n    return this.renderer_.hasFeatureAtCoordinate(\r\n      coordinate, this.frameState_, hitTolerance, layerFilter, null);\r\n  };\r\n\r\n  /**\r\n   * Returns the coordinate in view projection for a browser event.\r\n   * @param {Event} event Event.\r\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\r\n   * @api\r\n   */\r\n  PluggableMap.prototype.getEventCoordinate = function getEventCoordinate (event) {\r\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\r\n  };\r\n\r\n  /**\r\n   * Returns the map pixel position for a browser event relative to the viewport.\r\n   * @param {Event|TouchEvent} event Event.\r\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\r\n   * @api\r\n   */\r\n  PluggableMap.prototype.getEventPixel = function getEventPixel (event) {\r\n    var viewportPosition = this.viewport_.getBoundingClientRect();\r\n    var eventPosition = 'changedTouches' in event ?\r\n      /** @type {TouchEvent} */ (event).changedTouches[0] :\r\n      /** @type {MouseEvent} */ (event);\r\n\r\n    return [\r\n      eventPosition.clientX - viewportPosition.left,\r\n      eventPosition.clientY - viewportPosition.top\r\n    ];\r\n  };\r\n\r\n  /**\r\n   * Get the target in which this map is rendered.\r\n   * Note that this returns what is entered as an option or in setTarget:\r\n   * if that was an element, it returns an element; if a string, it returns that.\r\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\r\n   *     map is rendered in.\r\n   * @observable\r\n   * @api\r\n   */\r\n  PluggableMap.prototype.getTarget = function getTarget () {\r\n    return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\r\n  };\r\n\r\n  /**\r\n   * Get the DOM element into which this map is rendered. In contrast to\r\n   * `getTarget` this method always return an `Element`, or `null` if the\r\n   * map has no target.\r\n   * @return {HTMLElement} The element that the map is rendered in.\r\n   * @api\r\n   */\r\n  PluggableMap.prototype.getTargetElement = function getTargetElement () {\r\n    var target = this.getTarget();\r\n    if (target !== undefined) {\r\n      return typeof target === 'string' ? document.getElementById(target) : target;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\r\n   * map view projection.\r\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\r\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\r\n   * @api\r\n   */\r\n  PluggableMap.prototype.getCoordinateFromPixel = function getCoordinateFromPixel (pixel) {\r\n    var frameState = this.frameState_;\r\n    if (!frameState) {\r\n      return null;\r\n    } else {\r\n      return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Get the map controls. Modifying this collection changes the controls\r\n   * associated with the map.\r\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\r\n   * @api\r\n   */\r\n  PluggableMap.prototype.getControls = function getControls () {\r\n    return this.controls;\r\n  };\r\n\r\n  /**\r\n   * Get the map overlays. Modifying this collection changes the overlays\r\n   * associated with the map.\r\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\r\n   * @api\r\n   */\r\n  PluggableMap.prototype.getOverlays = function getOverlays () {\r\n    return this.overlays_;\r\n  };\r\n\r\n  /**\r\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\r\n   * Note that the index treats string and numeric identifiers as the same. So\r\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\r\n   * @param {string|number} id Overlay identifier.\r\n   * @return {import(\"./Overlay.js\").default} Overlay.\r\n   * @api\r\n   */\r\n  PluggableMap.prototype.getOverlayById = function getOverlayById (id) {\r\n    var overlay = this.overlayIdIndex_[id.toString()];\r\n    return overlay !== undefined ? overlay : null;\r\n  };\r\n\r\n  /**\r\n   * Get the map interactions. Modifying this collection changes the interactions\r\n   * associated with the map.\r\n   *\r\n   * Interactions are used for e.g. pan, zoom and rotate.\r\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\r\n   * @api\r\n   */\r\n  PluggableMap.prototype.getInteractions = function getInteractions () {\r\n    return this.interactions;\r\n  };\r\n\r\n  /**\r\n   * Get the layergroup associated with this map.\r\n   * @return {LayerGroup} A layer group containing the layers in this map.\r\n   * @observable\r\n   * @api\r\n   */\r\n  PluggableMap.prototype.getLayerGroup = function getLayerGroup () {\r\n    return (\r\n      /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP))\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Get the collection of layers associated with this map.\r\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\r\n   * @api\r\n   */\r\n  PluggableMap.prototype.getLayers = function getLayers () {\r\n    var layers = this.getLayerGroup().getLayers();\r\n    return layers;\r\n  };\r\n\r\n  /**\r\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\r\n   * projection and returns the corresponding pixel.\r\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\r\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\r\n   * @api\r\n   */\r\n  PluggableMap.prototype.getPixelFromCoordinate = function getPixelFromCoordinate (coordinate) {\r\n    var frameState = this.frameState_;\r\n    if (!frameState) {\r\n      return null;\r\n    } else {\r\n      return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Get the map renderer.\r\n   * @return {import(\"./renderer/Map.js\").default} Renderer\r\n   */\r\n  PluggableMap.prototype.getRenderer = function getRenderer () {\r\n    return this.renderer_;\r\n  };\r\n\r\n  /**\r\n   * Get the size of this map.\r\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\r\n   * @observable\r\n   * @api\r\n   */\r\n  PluggableMap.prototype.getSize = function getSize () {\r\n    return (\r\n      /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE))\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Get the view associated with this map. A view manages properties such as\r\n   * center and resolution.\r\n   * @return {View} The view that controls this map.\r\n   * @observable\r\n   * @api\r\n   */\r\n  PluggableMap.prototype.getView = function getView () {\r\n    return (\r\n      /** @type {View} */ (this.get(MapProperty.VIEW))\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Get the element that serves as the map viewport.\r\n   * @return {HTMLElement} Viewport.\r\n   * @api\r\n   */\r\n  PluggableMap.prototype.getViewport = function getViewport () {\r\n    return this.viewport_;\r\n  };\r\n\r\n  /**\r\n   * Get the element that serves as the container for overlays.  Elements added to\r\n   * this container will let mousedown and touchstart events through to the map,\r\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\r\n   * events.\r\n   * @return {!HTMLElement} The map's overlay container.\r\n   */\r\n  PluggableMap.prototype.getOverlayContainer = function getOverlayContainer () {\r\n    return this.overlayContainer_;\r\n  };\r\n\r\n  /**\r\n   * Get the element that serves as a container for overlays that don't allow\r\n   * event propagation. Elements added to this container won't let mousedown and\r\n   * touchstart events through to the map, so clicks and gestures on an overlay\r\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\r\n   * @return {!HTMLElement} The map's overlay container that stops events.\r\n   */\r\n  PluggableMap.prototype.getOverlayContainerStopEvent = function getOverlayContainerStopEvent () {\r\n    return this.overlayContainerStopEvent_;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"./Tile.js\").default} tile Tile.\r\n   * @param {string} tileSourceKey Tile source key.\r\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\r\n   * @param {number} tileResolution Tile resolution.\r\n   * @return {number} Tile priority.\r\n   */\r\n  PluggableMap.prototype.getTilePriority = function getTilePriority (tile, tileSourceKey, tileCenter, tileResolution) {\r\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\r\n    // are outside the visible extent.\r\n    var frameState = this.frameState_;\r\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\r\n      return DROP;\r\n    }\r\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\r\n      return DROP;\r\n    }\r\n    // Prioritize the highest zoom level tiles closest to the focus.\r\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\r\n    // Within a zoom level, tiles are prioritized by the distance in pixels\r\n    // between the center of the tile and the focus.  The factor of 65536 means\r\n    // that the prioritization should behave as desired for tiles up to\r\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\r\n    var deltaX = tileCenter[0] - frameState.focus[0];\r\n    var deltaY = tileCenter[1] - frameState.focus[1];\r\n    return 65536 * Math.log(tileResolution) +\r\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\r\n  };\r\n\r\n  /**\r\n   * @param {Event} browserEvent Browser event.\r\n   * @param {string=} opt_type Type.\r\n   */\r\n  PluggableMap.prototype.handleBrowserEvent = function handleBrowserEvent (browserEvent, opt_type) {\r\n    var type = opt_type || browserEvent.type;\r\n    var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\r\n    this.handleMapBrowserEvent(mapBrowserEvent);\r\n  };\r\n\r\n  /**\r\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\r\n   */\r\n  PluggableMap.prototype.handleMapBrowserEvent = function handleMapBrowserEvent (mapBrowserEvent) {\r\n    if (!this.frameState_) {\r\n      // With no view defined, we cannot translate pixels into geographical\r\n      // coordinates so interactions cannot be used.\r\n      return;\r\n    }\r\n    this.focus_ = mapBrowserEvent.coordinate;\r\n    mapBrowserEvent.frameState = this.frameState_;\r\n    var interactionsArray = this.getInteractions().getArray();\r\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\r\n      for (var i = interactionsArray.length - 1; i >= 0; i--) {\r\n        var interaction = interactionsArray[i];\r\n        if (!interaction.getActive()) {\r\n          continue;\r\n        }\r\n        var cont = interaction.handleEvent(mapBrowserEvent);\r\n        if (!cont) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  PluggableMap.prototype.handlePostRender = function handlePostRender () {\r\n\r\n    var frameState = this.frameState_;\r\n\r\n    // Manage the tile queue\r\n    // Image loads are expensive and a limited resource, so try to use them\r\n    // efficiently:\r\n    // * When the view is static we allow a large number of parallel tile loads\r\n    //   to complete the frame as quickly as possible.\r\n    // * When animating or interacting, image loads can cause janks, so we reduce\r\n    //   the maximum number of loads per frame and limit the number of parallel\r\n    //   tile loads to remain reactive to view changes and to reduce the chance of\r\n    //   loading tiles that will quickly disappear from view.\r\n    var tileQueue = this.tileQueue_;\r\n    if (!tileQueue.isEmpty()) {\r\n      var maxTotalLoading = this.maxTilesLoading_;\r\n      var maxNewLoads = maxTotalLoading;\r\n      if (frameState) {\r\n        var hints = frameState.viewHints;\r\n        if (hints[ViewHint.ANIMATING]) {\r\n          maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\r\n          maxNewLoads = 2;\r\n        }\r\n        if (hints[ViewHint.INTERACTING]) {\r\n          maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\r\n          maxNewLoads = 2;\r\n        }\r\n      }\r\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\r\n        tileQueue.reprioritize(); // FIXME only call if view has changed\r\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\r\n      }\r\n    }\r\n    if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\r\n        !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\r\n      this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\r\n    }\r\n\r\n    var postRenderFunctions = this.postRenderFunctions_;\r\n    for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\r\n      postRenderFunctions[i](this, frameState);\r\n    }\r\n    postRenderFunctions.length = 0;\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  PluggableMap.prototype.handleSizeChanged_ = function handleSizeChanged_ () {\r\n    this.render();\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  PluggableMap.prototype.handleTargetChanged_ = function handleTargetChanged_ () {\r\n    // target may be undefined, null, a string or an Element.\r\n    // If it's a string we convert it to an Element before proceeding.\r\n    // If it's not now an Element we remove the viewport from the DOM.\r\n    // If it's an Element we append the viewport element to it.\r\n\r\n    var targetElement;\r\n    if (this.getTarget()) {\r\n      targetElement = this.getTargetElement();\r\n    }\r\n\r\n    if (this.keyHandlerKeys_) {\r\n      for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\r\n        unlistenByKey(this.keyHandlerKeys_[i]);\r\n      }\r\n      this.keyHandlerKeys_ = null;\r\n    }\r\n\r\n    if (!targetElement) {\r\n      this.renderer_.removeLayerRenderers();\r\n      removeNode(this.viewport_);\r\n      if (this.handleResize_ !== undefined) {\r\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\r\n        this.handleResize_ = undefined;\r\n      }\r\n    } else {\r\n      targetElement.appendChild(this.viewport_);\r\n\r\n      var keyboardEventTarget = !this.keyboardEventTarget_ ?\r\n        targetElement : this.keyboardEventTarget_;\r\n      this.keyHandlerKeys_ = [\r\n        listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\r\n        listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\r\n      ];\r\n\r\n      if (!this.handleResize_) {\r\n        this.handleResize_ = this.updateSize.bind(this);\r\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\r\n      }\r\n    }\r\n\r\n    this.updateSize();\r\n    // updateSize calls setSize, so no need to call this.render\r\n    // ourselves here.\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  PluggableMap.prototype.handleTileChange_ = function handleTileChange_ () {\r\n    this.render();\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  PluggableMap.prototype.handleViewPropertyChanged_ = function handleViewPropertyChanged_ () {\r\n    this.render();\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  PluggableMap.prototype.handleViewChanged_ = function handleViewChanged_ () {\r\n    if (this.viewPropertyListenerKey_) {\r\n      unlistenByKey(this.viewPropertyListenerKey_);\r\n      this.viewPropertyListenerKey_ = null;\r\n    }\r\n    if (this.viewChangeListenerKey_) {\r\n      unlistenByKey(this.viewChangeListenerKey_);\r\n      this.viewChangeListenerKey_ = null;\r\n    }\r\n    var view = this.getView();\r\n    if (view) {\r\n      this.viewport_.setAttribute('data-view', getUid(view));\r\n      this.viewPropertyListenerKey_ = listen(\r\n        view, ObjectEventType.PROPERTYCHANGE,\r\n        this.handleViewPropertyChanged_, this);\r\n      this.viewChangeListenerKey_ = listen(\r\n        view, EventType.CHANGE,\r\n        this.handleViewPropertyChanged_, this);\r\n    }\r\n    this.render();\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  PluggableMap.prototype.handleLayerGroupChanged_ = function handleLayerGroupChanged_ () {\r\n    if (this.layerGroupPropertyListenerKeys_) {\r\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\r\n      this.layerGroupPropertyListenerKeys_ = null;\r\n    }\r\n    var layerGroup = this.getLayerGroup();\r\n    if (layerGroup) {\r\n      this.layerGroupPropertyListenerKeys_ = [\r\n        listen(\r\n          layerGroup, ObjectEventType.PROPERTYCHANGE,\r\n          this.render, this),\r\n        listen(\r\n          layerGroup, EventType.CHANGE,\r\n          this.render, this)\r\n      ];\r\n    }\r\n    this.render();\r\n  };\r\n\r\n  /**\r\n   * @return {boolean} Is rendered.\r\n   */\r\n  PluggableMap.prototype.isRendered = function isRendered () {\r\n    return !!this.frameState_;\r\n  };\r\n\r\n  /**\r\n   * Requests an immediate render in a synchronous manner.\r\n   * @api\r\n   */\r\n  PluggableMap.prototype.renderSync = function renderSync () {\r\n    if (this.animationDelayKey_) {\r\n      cancelAnimationFrame(this.animationDelayKey_);\r\n    }\r\n    this.animationDelay_();\r\n  };\r\n\r\n  /**\r\n   * Request a map rendering (at the next animation frame).\r\n   * @api\r\n   */\r\n  PluggableMap.prototype.render = function render () {\r\n    if (this.animationDelayKey_ === undefined) {\r\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Remove the given control from the map.\r\n   * @param {import(\"./control/Control.js\").default} control Control.\r\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\r\n   *     if the control was not found).\r\n   * @api\r\n   */\r\n  PluggableMap.prototype.removeControl = function removeControl (control) {\r\n    return this.getControls().remove(control);\r\n  };\r\n\r\n  /**\r\n   * Remove the given interaction from the map.\r\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\r\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\r\n   *     undefined if the interaction was not found).\r\n   * @api\r\n   */\r\n  PluggableMap.prototype.removeInteraction = function removeInteraction (interaction) {\r\n    return this.getInteractions().remove(interaction);\r\n  };\r\n\r\n  /**\r\n   * Removes the given layer from the map.\r\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\r\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\r\n   *     layer was not found).\r\n   * @api\r\n   */\r\n  PluggableMap.prototype.removeLayer = function removeLayer (layer) {\r\n    var layers = this.getLayerGroup().getLayers();\r\n    return layers.remove(layer);\r\n  };\r\n\r\n  /**\r\n   * Remove the given overlay from the map.\r\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\r\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\r\n   *     if the overlay was not found).\r\n   * @api\r\n   */\r\n  PluggableMap.prototype.removeOverlay = function removeOverlay (overlay) {\r\n    return this.getOverlays().remove(overlay);\r\n  };\r\n\r\n  /**\r\n   * @param {number} time Time.\r\n   * @private\r\n   */\r\n  PluggableMap.prototype.renderFrame_ = function renderFrame_ (time) {\r\n    var viewState;\r\n\r\n    var size = this.getSize();\r\n    var view = this.getView();\r\n    var extent = createEmpty();\r\n    var previousFrameState = this.frameState_;\r\n    /** @type {?FrameState} */\r\n    var frameState = null;\r\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\r\n      var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\r\n      var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\r\n      var layerStates = {};\r\n      for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\r\n        layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\r\n      }\r\n      viewState = view.getState(this.pixelRatio_);\r\n      frameState = /** @type {FrameState} */ ({\r\n        animate: false,\r\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\r\n        extent: extent,\r\n        focus: this.focus_ ? this.focus_ : viewState.center,\r\n        index: this.frameIndex_++,\r\n        layerStates: layerStates,\r\n        layerStatesArray: layerStatesArray,\r\n        pixelRatio: this.pixelRatio_,\r\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\r\n        postRenderFunctions: [],\r\n        size: size,\r\n        skippedFeatureUids: this.skippedFeatureUids_,\r\n        tileQueue: this.tileQueue_,\r\n        time: time,\r\n        usedTiles: {},\r\n        viewState: viewState,\r\n        viewHints: viewHints,\r\n        wantedTiles: {}\r\n      });\r\n    }\r\n\r\n    if (frameState) {\r\n      frameState.extent = getForViewAndSize(viewState.center,\r\n        viewState.resolution, viewState.rotation, frameState.size, extent);\r\n    }\r\n\r\n    this.frameState_ = frameState;\r\n    this.renderer_.renderFrame(frameState);\r\n\r\n    if (frameState) {\r\n      if (frameState.animate) {\r\n        this.render();\r\n      }\r\n      Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\r\n\r\n      if (previousFrameState) {\r\n        var moveStart = !this.previousExtent_ ||\r\n                    (!isEmpty(this.previousExtent_) &&\r\n                    !equals(frameState.extent, this.previousExtent_));\r\n        if (moveStart) {\r\n          this.dispatchEvent(\r\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\r\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\r\n        }\r\n      }\r\n\r\n      var idle = this.previousExtent_ &&\r\n          !frameState.viewHints[ViewHint.ANIMATING] &&\r\n          !frameState.viewHints[ViewHint.INTERACTING] &&\r\n          !equals(frameState.extent, this.previousExtent_);\r\n\r\n      if (idle) {\r\n        this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\r\n        clone(frameState.extent, this.previousExtent_);\r\n      }\r\n    }\r\n\r\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\r\n\r\n    setTimeout(this.handlePostRender.bind(this), 0);\r\n\r\n  };\r\n\r\n  /**\r\n   * Sets the layergroup of this map.\r\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\r\n   * @observable\r\n   * @api\r\n   */\r\n  PluggableMap.prototype.setLayerGroup = function setLayerGroup (layerGroup) {\r\n    this.set(MapProperty.LAYERGROUP, layerGroup);\r\n  };\r\n\r\n  /**\r\n   * Set the size of this map.\r\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\r\n   * @observable\r\n   * @api\r\n   */\r\n  PluggableMap.prototype.setSize = function setSize (size) {\r\n    this.set(MapProperty.SIZE, size);\r\n  };\r\n\r\n  /**\r\n   * Set the target element to render this map into.\r\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\r\n   *     that the map is rendered in.\r\n   * @observable\r\n   * @api\r\n   */\r\n  PluggableMap.prototype.setTarget = function setTarget (target) {\r\n    this.set(MapProperty.TARGET, target);\r\n  };\r\n\r\n  /**\r\n   * Set the view for this map.\r\n   * @param {View} view The view that controls this map.\r\n   * @observable\r\n   * @api\r\n   */\r\n  PluggableMap.prototype.setView = function setView (view) {\r\n    this.set(MapProperty.VIEW, view);\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"./Feature.js\").default} feature Feature.\r\n   */\r\n  PluggableMap.prototype.skipFeature = function skipFeature (feature) {\r\n    this.skippedFeatureUids_[getUid(feature)] = true;\r\n    this.render();\r\n  };\r\n\r\n  /**\r\n   * Force a recalculation of the map viewport size.  This should be called when\r\n   * third-party code changes the size of the map viewport.\r\n   * @api\r\n   */\r\n  PluggableMap.prototype.updateSize = function updateSize () {\r\n    var targetElement = this.getTargetElement();\r\n\r\n    if (!targetElement) {\r\n      this.setSize(undefined);\r\n    } else {\r\n      var computedStyle = getComputedStyle(targetElement);\r\n      this.setSize([\r\n        targetElement.offsetWidth -\r\n            parseFloat(computedStyle['borderLeftWidth']) -\r\n            parseFloat(computedStyle['paddingLeft']) -\r\n            parseFloat(computedStyle['paddingRight']) -\r\n            parseFloat(computedStyle['borderRightWidth']),\r\n        targetElement.offsetHeight -\r\n            parseFloat(computedStyle['borderTopWidth']) -\r\n            parseFloat(computedStyle['paddingTop']) -\r\n            parseFloat(computedStyle['paddingBottom']) -\r\n            parseFloat(computedStyle['borderBottomWidth'])\r\n      ]);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"./Feature.js\").default} feature Feature.\r\n   */\r\n  PluggableMap.prototype.unskipFeature = function unskipFeature (feature) {\r\n    delete this.skippedFeatureUids_[getUid(feature)];\r\n    this.render();\r\n  };\n\n  return PluggableMap;\n}(BaseObject));\r\n\r\n\r\n/**\r\n * @param {MapOptions} options Map options.\r\n * @return {MapOptionsInternal} Internal map options.\r\n */\r\nfunction createOptionsInternal(options) {\r\n\r\n  /**\r\n   * @type {HTMLElement|Document}\r\n   */\r\n  var keyboardEventTarget = null;\r\n  if (options.keyboardEventTarget !== undefined) {\r\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\r\n      document.getElementById(options.keyboardEventTarget) :\r\n      options.keyboardEventTarget;\r\n  }\r\n\r\n  /**\r\n   * @type {Object<string, *>}\r\n   */\r\n  var values = {};\r\n\r\n  var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\r\n    /** @type {LayerGroup} */ (options.layers) : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\r\n  values[MapProperty.LAYERGROUP] = layerGroup;\r\n\r\n  values[MapProperty.TARGET] = options.target;\r\n\r\n  values[MapProperty.VIEW] = options.view !== undefined ?\r\n    options.view : new View();\r\n\r\n  var controls;\r\n  if (options.controls !== undefined) {\r\n    if (Array.isArray(options.controls)) {\r\n      controls = new Collection(options.controls.slice());\r\n    } else {\r\n      assert(typeof /** @type {?} */ (options.controls).getArray === 'function',\r\n        47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\r\n      controls = /** @type {Collection} */ (options.controls);\r\n    }\r\n  }\r\n\r\n  var interactions;\r\n  if (options.interactions !== undefined) {\r\n    if (Array.isArray(options.interactions)) {\r\n      interactions = new Collection(options.interactions.slice());\r\n    } else {\r\n      assert(typeof /** @type {?} */ (options.interactions).getArray === 'function',\r\n        48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\r\n      interactions = /** @type {Collection} */ (options.interactions);\r\n    }\r\n  }\r\n\r\n  var overlays;\r\n  if (options.overlays !== undefined) {\r\n    if (Array.isArray(options.overlays)) {\r\n      overlays = new Collection(options.overlays.slice());\r\n    } else {\r\n      assert(typeof /** @type {?} */ (options.overlays).getArray === 'function',\r\n        49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\r\n      overlays = options.overlays;\r\n    }\r\n  } else {\r\n    overlays = new Collection();\r\n  }\r\n\r\n  return {\r\n    controls: controls,\r\n    interactions: interactions,\r\n    keyboardEventTarget: keyboardEventTarget,\r\n    overlays: overlays,\r\n    values: values\r\n  };\r\n\r\n}\r\nexport default PluggableMap;\r\n\r\n/**\r\n * @param  {Array<import(\"./layer/Base.js\").default>} layers Layers.\r\n * @return {boolean} Layers have sources that are still loading.\r\n */\r\nfunction getLoading(layers) {\r\n  for (var i = 0, ii = layers.length; i < ii; ++i) {\r\n    var layer = layers[i];\r\n    if (typeof /** @type {?} */ (layer).getLayers === 'function') {\r\n      return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\r\n    } else {\r\n      var source = /** @type {import(\"./layer/Layer.js\").default} */ (\r\n        layer).getSource();\r\n      if (source && source.loading) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n//# sourceMappingURL=PluggableMap.js.map","/**\r\n * @module ol/control/Rotate\r\n */\r\nimport Control from './Control.js';\r\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\r\nimport {easeOut} from '../easing.js';\r\nimport {listen} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-rotate'] CSS class name.\r\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\r\n * @property {number} [duration=250] Animation duration in milliseconds.\r\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\r\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\r\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\r\n * @property {function()} [resetNorth] Function called when the control is clicked.\r\n * This will override the default `resetNorth`.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\r\n * rendered outside of the map's viewport.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * A button control to reset rotation to 0.\r\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\r\n * selector is added to the button when the rotation is 0.\r\n *\r\n * @api\r\n */\r\nvar Rotate = /*@__PURE__*/(function (Control) {\n  function Rotate(opt_options) {\r\n\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    Control.call(this, {\r\n      element: document.createElement('div'),\r\n      render: options.render || render,\r\n      target: options.target\r\n    });\r\n\r\n    var className = options.className !== undefined ? options.className : 'ol-rotate';\r\n\r\n    var label = options.label !== undefined ? options.label : '\\u21E7';\r\n\r\n    /**\r\n     * @type {HTMLElement}\r\n     * @private\r\n     */\r\n    this.label_ = null;\r\n\r\n    if (typeof label === 'string') {\r\n      this.label_ = document.createElement('span');\r\n      this.label_.className = 'ol-compass';\r\n      this.label_.textContent = label;\r\n    } else {\r\n      this.label_ = label;\r\n      this.label_.classList.add('ol-compass');\r\n    }\r\n\r\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\r\n\r\n    var button = document.createElement('button');\r\n    button.className = className + '-reset';\r\n    button.setAttribute('type', 'button');\r\n    button.title = tipLabel;\r\n    button.appendChild(this.label_);\r\n\r\n    listen(button, EventType.CLICK, this.handleClick_, this);\r\n\r\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\r\n    var element = this.element;\r\n    element.className = cssClasses;\r\n    element.appendChild(button);\r\n\r\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.rotation_ = undefined;\r\n\r\n    if (this.autoHide_) {\r\n      this.element.classList.add(CLASS_HIDDEN);\r\n    }\r\n\r\n  }\n\n  if ( Control ) Rotate.__proto__ = Control;\n  Rotate.prototype = Object.create( Control && Control.prototype );\n  Rotate.prototype.constructor = Rotate;\r\n\r\n  /**\r\n   * @param {MouseEvent} event The event to handle\r\n   * @private\r\n   */\r\n  Rotate.prototype.handleClick_ = function handleClick_ (event) {\r\n    event.preventDefault();\r\n    if (this.callResetNorth_ !== undefined) {\r\n      this.callResetNorth_();\r\n    } else {\r\n      this.resetNorth_();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  Rotate.prototype.resetNorth_ = function resetNorth_ () {\r\n    var map = this.getMap();\r\n    var view = map.getView();\r\n    if (!view) {\r\n      // the map does not have a view, so we can't act\r\n      // upon it\r\n      return;\r\n    }\r\n    if (view.getRotation() !== undefined) {\r\n      if (this.duration_ > 0) {\r\n        view.animate({\r\n          rotation: 0,\r\n          duration: this.duration_,\r\n          easing: easeOut\r\n        });\r\n      } else {\r\n        view.setRotation(0);\r\n      }\r\n    }\r\n  };\n\n  return Rotate;\n}(Control));\r\n\r\n\r\n/**\r\n * Update the rotate control element.\r\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\r\n * @this {Rotate}\r\n * @api\r\n */\r\nexport function render(mapEvent) {\r\n  var frameState = mapEvent.frameState;\r\n  if (!frameState) {\r\n    return;\r\n  }\r\n  var rotation = frameState.viewState.rotation;\r\n  if (rotation != this.rotation_) {\r\n    var transform = 'rotate(' + rotation + 'rad)';\r\n    if (this.autoHide_) {\r\n      var contains = this.element.classList.contains(CLASS_HIDDEN);\r\n      if (!contains && rotation === 0) {\r\n        this.element.classList.add(CLASS_HIDDEN);\r\n      } else if (contains && rotation !== 0) {\r\n        this.element.classList.remove(CLASS_HIDDEN);\r\n      }\r\n    }\r\n    this.label_.style.msTransform = transform;\r\n    this.label_.style.webkitTransform = transform;\r\n    this.label_.style.transform = transform;\r\n  }\r\n  this.rotation_ = rotation;\r\n}\r\n\r\nexport default Rotate;\r\n\r\n//# sourceMappingURL=Rotate.js.map","/**\r\n * @module ol/control/Zoom\r\n */\r\nimport {listen} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport Control from './Control.js';\r\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\r\nimport {easeOut} from '../easing.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [duration=250] Animation duration in milliseconds.\r\n * @property {string} [className='ol-zoom'] CSS class name.\r\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\r\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\r\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\r\n * @property {number} [delta=1] The zoom delta applied on each click.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\r\n * rendered outside of the map's viewport.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * A control with 2 buttons, one for zoom in and one for zoom out.\r\n * This control is one of the default controls of a map. To style this control\r\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\r\n *\r\n * @api\r\n */\r\nvar Zoom = /*@__PURE__*/(function (Control) {\n  function Zoom(opt_options) {\r\n\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    Control.call(this, {\r\n      element: document.createElement('div'),\r\n      target: options.target\r\n    });\r\n\r\n    var className = options.className !== undefined ? options.className : 'ol-zoom';\r\n\r\n    var delta = options.delta !== undefined ? options.delta : 1;\r\n\r\n    var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\r\n    var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\r\n\r\n    var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\r\n      options.zoomInTipLabel : 'Zoom in';\r\n    var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\r\n      options.zoomOutTipLabel : 'Zoom out';\r\n\r\n    var inElement = document.createElement('button');\r\n    inElement.className = className + '-in';\r\n    inElement.setAttribute('type', 'button');\r\n    inElement.title = zoomInTipLabel;\r\n    inElement.appendChild(\r\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\r\n    );\r\n\r\n    listen(inElement, EventType.CLICK, this.handleClick_.bind(this, delta));\r\n\r\n    var outElement = document.createElement('button');\r\n    outElement.className = className + '-out';\r\n    outElement.setAttribute('type', 'button');\r\n    outElement.title = zoomOutTipLabel;\r\n    outElement.appendChild(\r\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\r\n    );\r\n\r\n    listen(outElement, EventType.CLICK, this.handleClick_.bind(this, -delta));\r\n\r\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\r\n    var element = this.element;\r\n    element.className = cssClasses;\r\n    element.appendChild(inElement);\r\n    element.appendChild(outElement);\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n\r\n  }\n\n  if ( Control ) Zoom.__proto__ = Control;\n  Zoom.prototype = Object.create( Control && Control.prototype );\n  Zoom.prototype.constructor = Zoom;\r\n\r\n  /**\r\n   * @param {number} delta Zoom delta.\r\n   * @param {MouseEvent} event The event to handle\r\n   * @private\r\n   */\r\n  Zoom.prototype.handleClick_ = function handleClick_ (delta, event) {\r\n    event.preventDefault();\r\n    this.zoomByDelta_(delta);\r\n  };\r\n\r\n  /**\r\n   * @param {number} delta Zoom delta.\r\n   * @private\r\n   */\r\n  Zoom.prototype.zoomByDelta_ = function zoomByDelta_ (delta) {\r\n    var map = this.getMap();\r\n    var view = map.getView();\r\n    if (!view) {\r\n      // the map does not have a view, so we can't act\r\n      // upon it\r\n      return;\r\n    }\r\n    var currentResolution = view.getResolution();\r\n    if (currentResolution) {\r\n      var newResolution = view.constrainResolution(currentResolution, delta);\r\n      if (this.duration_ > 0) {\r\n        if (view.getAnimating()) {\r\n          view.cancelAnimations();\r\n        }\r\n        view.animate({\r\n          resolution: newResolution,\r\n          duration: this.duration_,\r\n          easing: easeOut\r\n        });\r\n      } else {\r\n        view.setResolution(newResolution);\r\n      }\r\n    }\r\n  };\n\n  return Zoom;\n}(Control));\r\n\r\n\r\nexport default Zoom;\r\n\r\n//# sourceMappingURL=Zoom.js.map","/**\r\n * @module ol/control/util\r\n */\r\nimport Collection from '../Collection.js';\r\nimport Attribution from './Attribution.js';\r\nimport Rotate from './Rotate.js';\r\nimport Zoom from './Zoom.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} DefaultsOptions\r\n * @property {boolean} [attribution=true] Include\r\n * {@link module:ol/control/Attribution~Attribution}.\r\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\r\n * Options for {@link module:ol/control/Attribution~Attribution}.\r\n * @property {boolean} [rotate=true] Include\r\n * {@link module:ol/control/Rotate~Rotate}.\r\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\r\n * for {@link module:ol/control/Rotate~Rotate}.\r\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\r\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\r\n * {@link module:ol/control/Zoom~Zoom}.\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * Set of controls included in maps by default. Unless configured otherwise,\r\n * this returns a collection containing an instance of each of the following\r\n * controls:\r\n * * {@link module:ol/control/Zoom~Zoom}\r\n * * {@link module:ol/control/Rotate~Rotate}\r\n * * {@link module:ol/control/Attribution~Attribution}\r\n *\r\n * @param {DefaultsOptions=} opt_options\r\n * Defaults options.\r\n * @return {Collection<import(\"./Control.js\").default>}\r\n * Controls.\r\n * @function module:ol/control.defaults\r\n * @api\r\n */\r\nexport function defaults(opt_options) {\r\n\r\n  var options = opt_options ? opt_options : {};\r\n\r\n  var controls = new Collection();\r\n\r\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\r\n  if (zoomControl) {\r\n    controls.push(new Zoom(options.zoomOptions));\r\n  }\r\n\r\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\r\n  if (rotateControl) {\r\n    controls.push(new Rotate(options.rotateOptions));\r\n  }\r\n\r\n  var attributionControl = options.attribution !== undefined ?\r\n    options.attribution : true;\r\n  if (attributionControl) {\r\n    controls.push(new Attribution(options.attributionOptions));\r\n  }\r\n\r\n  return controls;\r\n}\r\n\r\n//# sourceMappingURL=util.js.map","/**\r\n * @module ol/Kinetic\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Implementation of inertial deceleration for map movement.\r\n *\r\n * @api\r\n */\r\nvar Kinetic = function Kinetic(decay, minVelocity, delay) {\r\n\r\n  /**\r\n   * @private\r\n   * @type {number}\r\n   */\r\n  this.decay_ = decay;\r\n\r\n  /**\r\n   * @private\r\n   * @type {number}\r\n   */\r\n  this.minVelocity_ = minVelocity;\r\n\r\n  /**\r\n   * @private\r\n   * @type {number}\r\n   */\r\n  this.delay_ = delay;\r\n\r\n  /**\r\n   * @private\r\n   * @type {Array<number>}\r\n   */\r\n  this.points_ = [];\r\n\r\n  /**\r\n   * @private\r\n   * @type {number}\r\n   */\r\n  this.angle_ = 0;\r\n\r\n  /**\r\n   * @private\r\n   * @type {number}\r\n   */\r\n  this.initialVelocity_ = 0;\r\n};\r\n\r\n/**\r\n * FIXME empty description for jsdoc\r\n */\r\nKinetic.prototype.begin = function begin () {\r\n  this.points_.length = 0;\r\n  this.angle_ = 0;\r\n  this.initialVelocity_ = 0;\r\n};\r\n\r\n/**\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n */\r\nKinetic.prototype.update = function update (x, y) {\r\n  this.points_.push(x, y, Date.now());\r\n};\r\n\r\n/**\r\n * @return {boolean} Whether we should do kinetic animation.\r\n */\r\nKinetic.prototype.end = function end () {\r\n  if (this.points_.length < 6) {\r\n    // at least 2 points are required (i.e. there must be at least 6 elements\r\n    // in the array)\r\n    return false;\r\n  }\r\n  var delay = Date.now() - this.delay_;\r\n  var lastIndex = this.points_.length - 3;\r\n  if (this.points_[lastIndex + 2] < delay) {\r\n    // the last tracked point is too old, which means that the user stopped\r\n    // panning before releasing the map\r\n    return false;\r\n  }\r\n\r\n  // get the first point which still falls into the delay time\r\n  var firstIndex = lastIndex - 3;\r\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\r\n    firstIndex -= 3;\r\n  }\r\n\r\n  var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\r\n  // we don't want a duration of 0 (divide by zero)\r\n  // we also make sure the user panned for a duration of at least one frame\r\n  // (1/60s) to compute sane displacement values\r\n  if (duration < 1000 / 60) {\r\n    return false;\r\n  }\r\n\r\n  var dx = this.points_[lastIndex] - this.points_[firstIndex];\r\n  var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\r\n  this.angle_ = Math.atan2(dy, dx);\r\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\r\n  return this.initialVelocity_ > this.minVelocity_;\r\n};\r\n\r\n/**\r\n * @return {number} Total distance travelled (pixels).\r\n */\r\nKinetic.prototype.getDistance = function getDistance () {\r\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\r\n};\r\n\r\n/**\r\n * @return {number} Angle of the kinetic panning animation (radians).\r\n */\r\nKinetic.prototype.getAngle = function getAngle () {\r\n  return this.angle_;\r\n};\r\n\r\nexport default Kinetic;\r\n\r\n//# sourceMappingURL=Kinetic.js.map","/**\r\n * @module ol/interaction/Property\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  ACTIVE: 'active'\r\n};\r\n\r\n//# sourceMappingURL=Property.js.map","/**\r\n * @module ol/interaction/Interaction\r\n */\r\nimport BaseObject from '../Object.js';\r\nimport {easeOut, linear} from '../easing.js';\r\nimport InteractionProperty from './Property.js';\r\nimport {clamp} from '../math.js';\r\n\r\n\r\n/**\r\n * Object literal with config options for interactions.\r\n * @typedef {Object} InteractionOptions\r\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\r\n * Method called by the map to notify the interaction that a browser event was\r\n * dispatched to the map. If the function returns a falsy value, propagation of\r\n * the event to other interactions in the map's interactions chain will be\r\n * prevented (this includes functions with no explicit return).\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * User actions that change the state of the map. Some are similar to controls,\r\n * but are not associated with a DOM element.\r\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\r\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\r\n * by a keyboard event not a button element event.\r\n * Although interactions do not have a DOM element, some of them do render\r\n * vectors and so are visible on the screen.\r\n * @api\r\n */\r\nvar Interaction = /*@__PURE__*/(function (BaseObject) {\n  function Interaction(options) {\r\n    BaseObject.call(this);\r\n\r\n    if (options.handleEvent) {\r\n      this.handleEvent = options.handleEvent;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../PluggableMap.js\").default}\r\n     */\r\n    this.map_ = null;\r\n\r\n    this.setActive(true);\r\n  }\n\n  if ( BaseObject ) Interaction.__proto__ = BaseObject;\n  Interaction.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Interaction.prototype.constructor = Interaction;\r\n\r\n  /**\r\n   * Return whether the interaction is currently active.\r\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\r\n   * @observable\r\n   * @api\r\n   */\r\n  Interaction.prototype.getActive = function getActive () {\r\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\r\n  };\r\n\r\n  /**\r\n   * Get the map associated with this interaction.\r\n   * @return {import(\"../PluggableMap.js\").default} Map.\r\n   * @api\r\n   */\r\n  Interaction.prototype.getMap = function getMap () {\r\n    return this.map_;\r\n  };\r\n\r\n  /**\r\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n   * @return {boolean} `false` to stop event propagation.\r\n   * @api\r\n   */\r\n  Interaction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * Activate or deactivate the interaction.\r\n   * @param {boolean} active Active.\r\n   * @observable\r\n   * @api\r\n   */\r\n  Interaction.prototype.setActive = function setActive (active) {\r\n    this.set(InteractionProperty.ACTIVE, active);\r\n  };\r\n\r\n  /**\r\n   * Remove the interaction from its current map and attach it to the new map.\r\n   * Subclasses may set up event handlers to get notified about changes to\r\n   * the map here.\r\n   * @param {import(\"../PluggableMap.js\").default} map Map.\r\n   */\r\n  Interaction.prototype.setMap = function setMap (map) {\r\n    this.map_ = map;\r\n  };\n\n  return Interaction;\n}(BaseObject));\r\n\r\n\r\n/**\r\n * @param {import(\"../View.js\").default} view View.\r\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\r\n * @param {number=} opt_duration Duration.\r\n */\r\nexport function pan(view, delta, opt_duration) {\r\n  var currentCenter = view.getCenter();\r\n  if (currentCenter) {\r\n    var center = view.constrainCenter(\r\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\r\n    if (opt_duration) {\r\n      view.animate({\r\n        duration: opt_duration,\r\n        easing: linear,\r\n        center: center\r\n      });\r\n    } else {\r\n      view.setCenter(center);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../View.js\").default} view View.\r\n * @param {number|undefined} rotation Rotation.\r\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\r\n * @param {number=} opt_duration Duration.\r\n */\r\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\r\n  rotation = view.constrainRotation(rotation, 0);\r\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../View.js\").default} view View.\r\n * @param {number|undefined} rotation Rotation.\r\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\r\n * @param {number=} opt_duration Duration.\r\n */\r\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\r\n  if (rotation !== undefined) {\r\n    var currentRotation = view.getRotation();\r\n    var currentCenter = view.getCenter();\r\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\r\n      view.animate({\r\n        rotation: rotation,\r\n        anchor: opt_anchor,\r\n        duration: opt_duration,\r\n        easing: easeOut\r\n      });\r\n    } else {\r\n      view.rotate(rotation, opt_anchor);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../View.js\").default} view View.\r\n * @param {number|undefined} resolution Resolution to go to.\r\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\r\n * @param {number=} opt_duration Duration.\r\n * @param {number=} opt_direction Zooming direction; > 0 indicates\r\n *     zooming out, in which case the constraints system will select\r\n *     the largest nearest resolution; < 0 indicates zooming in, in\r\n *     which case the constraints system will select the smallest\r\n *     nearest resolution; == 0 indicates that the zooming direction\r\n *     is unknown/not relevant, in which case the constraints system\r\n *     will select the nearest resolution. If not defined 0 is\r\n *     assumed.\r\n */\r\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\r\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\r\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../View.js\").default} view View.\r\n * @param {number} delta Delta from previous zoom level.\r\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\r\n * @param {number=} opt_duration Duration.\r\n */\r\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\r\n  var currentResolution = view.getResolution();\r\n  var resolution = view.constrainResolution(currentResolution, delta, 0);\r\n\r\n  if (resolution !== undefined) {\r\n    var resolutions = view.getResolutions();\r\n    resolution = clamp(\r\n      resolution,\r\n      view.getMinResolution() || resolutions[resolutions.length - 1],\r\n      view.getMaxResolution() || resolutions[0]);\r\n  }\r\n\r\n  // If we have a constraint on center, we need to change the anchor so that the\r\n  // new center is within the extent. We first calculate the new center, apply\r\n  // the constraint to it, and then calculate back the anchor\r\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\r\n    var currentCenter = view.getCenter();\r\n    var center = view.calculateCenterZoom(resolution, opt_anchor);\r\n    center = view.constrainCenter(center);\r\n\r\n    opt_anchor = [\r\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\r\n          (resolution - currentResolution),\r\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\r\n          (resolution - currentResolution)\r\n    ];\r\n  }\r\n\r\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../View.js\").default} view View.\r\n * @param {number|undefined} resolution Resolution to go to.\r\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\r\n * @param {number=} opt_duration Duration.\r\n */\r\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\r\n  if (resolution) {\r\n    var currentResolution = view.getResolution();\r\n    var currentCenter = view.getCenter();\r\n    if (currentResolution !== undefined && currentCenter &&\r\n        resolution !== currentResolution && opt_duration) {\r\n      view.animate({\r\n        resolution: resolution,\r\n        anchor: opt_anchor,\r\n        duration: opt_duration,\r\n        easing: easeOut\r\n      });\r\n    } else {\r\n      if (opt_anchor) {\r\n        var center = view.calculateCenterZoom(resolution, opt_anchor);\r\n        view.setCenter(center);\r\n      }\r\n      view.setResolution(resolution);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Interaction;\r\n\r\n//# sourceMappingURL=Interaction.js.map","/**\r\n * @module ol/interaction/DoubleClickZoom\r\n */\r\nimport MapBrowserEventType from '../MapBrowserEventType.js';\r\nimport Interaction, {zoomByDelta} from './Interaction.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [duration=250] Animation duration in milliseconds.\r\n * @property {number} [delta=1] The zoom delta applied on each double click.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom by double-clicking on the map.\r\n * @api\r\n */\r\nvar DoubleClickZoom = /*@__PURE__*/(function (Interaction) {\n  function DoubleClickZoom(opt_options) {\r\n    Interaction.call(this, {\r\n      handleEvent: handleEvent\r\n    });\r\n\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.delta_ = options.delta ? options.delta : 1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n\r\n  }\n\n  if ( Interaction ) DoubleClickZoom.__proto__ = Interaction;\n  DoubleClickZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  DoubleClickZoom.prototype.constructor = DoubleClickZoom;\n\n  return DoubleClickZoom;\n}(Interaction));\r\n\r\n\r\n/**\r\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\r\n * doubleclick) and eventually zooms the map.\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} `false` to stop event propagation.\r\n * @this {DoubleClickZoom}\r\n */\r\nfunction handleEvent(mapBrowserEvent) {\r\n  var stopEvent = false;\r\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\r\n    var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\r\n    var map = mapBrowserEvent.map;\r\n    var anchor = mapBrowserEvent.coordinate;\r\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\r\n    var view = map.getView();\r\n    zoomByDelta(view, delta, anchor, this.duration_);\r\n    mapBrowserEvent.preventDefault();\r\n    stopEvent = true;\r\n  }\r\n  return !stopEvent;\r\n}\r\n\r\nexport default DoubleClickZoom;\r\n\r\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\r\n * @module ol/events/condition\r\n */\r\nimport MapBrowserEventType from '../MapBrowserEventType.js';\r\nimport {assert} from '../asserts.js';\r\nimport {TRUE, FALSE} from '../functions.js';\r\nimport {WEBKIT, MAC} from '../has.js';\r\n\r\n\r\n/**\r\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\r\n * `{boolean}`. If the condition is met, true should be returned.\r\n *\r\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\r\n */\r\n\r\n\r\n/**\r\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\r\n * additionally the shift-key is pressed).\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if only the alt key is pressed.\r\n * @api\r\n */\r\nexport var altKeyOnly = function(mapBrowserEvent) {\r\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\r\n  return (\r\n    originalEvent.altKey &&\r\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\r\n      !originalEvent.shiftKey);\r\n};\r\n\r\n\r\n/**\r\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\r\n * (e.g. when additionally the platform-modifier-key is pressed).\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if only the alt and shift keys are pressed.\r\n * @api\r\n */\r\nexport var altShiftKeysOnly = function(mapBrowserEvent) {\r\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\r\n  return (\r\n    originalEvent.altKey &&\r\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\r\n      originalEvent.shiftKey);\r\n};\r\n\r\n\r\n/**\r\n * Return `true` if the map has the focus. This condition requires a map target\r\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\r\n * @return {boolean} The map has the focus.\r\n * @api\r\n */\r\nexport var focus = function(event) {\r\n  return event.target.getTargetElement() === document.activeElement;\r\n};\r\n\r\n\r\n/**\r\n * Return always true.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True.\r\n * @api\r\n */\r\nexport var always = TRUE;\r\n\r\n\r\n/**\r\n * Return `true` if the event is a `click` event, `false` otherwise.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the event is a map `click` event.\r\n * @api\r\n */\r\nexport var click = function(mapBrowserEvent) {\r\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\r\n};\r\n\r\n\r\n/**\r\n * Return `true` if the event has an \"action\"-producing mouse button.\r\n *\r\n * By definition, this includes left-click on windows/linux, and left-click\r\n * without the ctrl key on Macs.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} The result.\r\n */\r\nexport var mouseActionButton = function(mapBrowserEvent) {\r\n  var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\r\n  return originalEvent.button == 0 &&\r\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\r\n};\r\n\r\n\r\n/**\r\n * Return always false.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} False.\r\n * @api\r\n */\r\nexport var never = FALSE;\r\n\r\n\r\n/**\r\n * Return `true` if the browser event is a `pointermove` event, `false`\r\n * otherwise.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the browser event is a `pointermove` event.\r\n * @api\r\n */\r\nexport var pointerMove = function(mapBrowserEvent) {\r\n  return mapBrowserEvent.type == 'pointermove';\r\n};\r\n\r\n\r\n/**\r\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the event is a map `singleclick` event.\r\n * @api\r\n */\r\nexport var singleClick = function(mapBrowserEvent) {\r\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\r\n};\r\n\r\n\r\n/**\r\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the event is a map `dblclick` event.\r\n * @api\r\n */\r\nexport var doubleClick = function(mapBrowserEvent) {\r\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\r\n};\r\n\r\n\r\n/**\r\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\r\n * pressed.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True only if there no modifier keys are pressed.\r\n * @api\r\n */\r\nexport var noModifierKeys = function(mapBrowserEvent) {\r\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\r\n  return (\r\n    !originalEvent.altKey &&\r\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\r\n      !originalEvent.shiftKey);\r\n};\r\n\r\n\r\n/**\r\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\r\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\r\n * the shift-key is pressed).\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if only the platform modifier key is pressed.\r\n * @api\r\n */\r\nexport var platformModifierKeyOnly = function(mapBrowserEvent) {\r\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\r\n  return !originalEvent.altKey &&\r\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\r\n    !originalEvent.shiftKey;\r\n};\r\n\r\n\r\n/**\r\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\r\n * additionally the alt-key is pressed).\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if only the shift key is pressed.\r\n * @api\r\n */\r\nexport var shiftKeyOnly = function(mapBrowserEvent) {\r\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\r\n  return (\r\n    !originalEvent.altKey &&\r\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\r\n      originalEvent.shiftKey);\r\n};\r\n\r\n\r\n/**\r\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\r\n * `<select>`- or `<textarea>`-element, `false` otherwise.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True only if the target element is not editable.\r\n * @api\r\n */\r\nexport var targetNotEditable = function(mapBrowserEvent) {\r\n  var target = mapBrowserEvent.originalEvent.target;\r\n  var tagName = /** @type {Element} */ (target).tagName;\r\n  return (\r\n    tagName !== 'INPUT' &&\r\n      tagName !== 'SELECT' &&\r\n      tagName !== 'TEXTAREA');\r\n};\r\n\r\n\r\n/**\r\n * Return `true` if the event originates from a mouse device.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the event originates from a mouse device.\r\n * @api\r\n */\r\nexport var mouseOnly = function(mapBrowserEvent) {\r\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\r\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\r\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\r\n  return pointerEvent.pointerType == 'mouse';\r\n};\r\n\r\n\r\n/**\r\n * Return `true` if the event originates from a primary pointer in\r\n * contact with the surface or if the left mouse button is pressed.\r\n * See http://www.w3.org/TR/pointerevents/#button-states.\r\n *\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} True if the event originates from a primary pointer.\r\n * @api\r\n */\r\nexport var primaryAction = function(mapBrowserEvent) {\r\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\r\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\r\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\r\n};\r\n\r\n//# sourceMappingURL=condition.js.map","/**\r\n * @module ol/interaction/Pointer\r\n */\r\nimport MapBrowserEventType from '../MapBrowserEventType.js';\r\nimport Interaction from './Interaction.js';\r\nimport {getValues} from '../obj.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\r\n * Function handling \"down\" events. If the function returns `true` then a drag\r\n * sequence is started.\r\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\r\n * Function handling \"drag\" events. This function is called on \"move\" events\r\n * during a drag sequence.\r\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\r\n * Method called by the map to notify the interaction that a browser event was\r\n * dispatched to the map. The function may return `false` to prevent the\r\n * propagation of the event to other interactions in the map's interactions\r\n * chain.\r\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\r\n * Function handling \"move\" events. This function is called on \"move\" events,\r\n * also during a drag sequence (so during a drag sequence both the\r\n * `handleDragEvent` function and this function are called).\r\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\r\n *  Function handling \"up\" events. If the function returns `false` then the\r\n * current drag sequence is stopped.\r\n * @property {function(boolean):boolean} [stopDown]\r\n * Should the down event be propagated to other interactions, or should be\r\n * stopped?\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Base class that calls user-defined functions on `down`, `move` and `up`\r\n * events. This class also manages \"drag sequences\".\r\n *\r\n * When the `handleDownEvent` user function returns `true` a drag sequence is\r\n * started. During a drag sequence the `handleDragEvent` user function is\r\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\r\n * user function is called and returns `false`.\r\n * @api\r\n */\r\nvar PointerInteraction = /*@__PURE__*/(function (Interaction) {\n  function PointerInteraction(opt_options) {\r\n\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\r\n\r\n    if (options.handleDownEvent) {\r\n      this.handleDownEvent = options.handleDownEvent;\r\n    }\r\n\r\n    if (options.handleDragEvent) {\r\n      this.handleDragEvent = options.handleDragEvent;\r\n    }\r\n\r\n    if (options.handleMoveEvent) {\r\n      this.handleMoveEvent = options.handleMoveEvent;\r\n    }\r\n\r\n    if (options.handleUpEvent) {\r\n      this.handleUpEvent = options.handleUpEvent;\r\n    }\r\n\r\n    if (options.stopDown) {\r\n      this.stopDown = options.stopDown;\r\n    }\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @protected\r\n     */\r\n    this.handlingDownUpSequence = false;\r\n\r\n    /**\r\n     * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\r\n     * @private\r\n     */\r\n    this.trackedPointers_ = {};\r\n\r\n    /**\r\n     * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\r\n     * @protected\r\n     */\r\n    this.targetPointers = [];\r\n\r\n  }\n\n  if ( Interaction ) PointerInteraction.__proto__ = Interaction;\n  PointerInteraction.prototype = Object.create( Interaction && Interaction.prototype );\n  PointerInteraction.prototype.constructor = PointerInteraction;\r\n\r\n  /**\r\n   * Handle pointer down events.\r\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   * @protected\r\n   */\r\n  PointerInteraction.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Handle pointer drag events.\r\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\r\n   * @protected\r\n   */\r\n  PointerInteraction.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {};\r\n\r\n  /**\r\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\r\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\r\n   * detected.\r\n   * @override\r\n   * @api\r\n   */\r\n  PointerInteraction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\r\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\r\n      return true;\r\n    }\r\n\r\n    var stopEvent = false;\r\n    this.updateTrackedPointers_(mapBrowserEvent);\r\n    if (this.handlingDownUpSequence) {\r\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\r\n        this.handleDragEvent(mapBrowserEvent);\r\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\r\n        var handledUp = this.handleUpEvent(mapBrowserEvent);\r\n        this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\r\n      }\r\n    } else {\r\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\r\n        var handled = this.handleDownEvent(mapBrowserEvent);\r\n        if (handled) {\r\n          mapBrowserEvent.preventDefault();\r\n        }\r\n        this.handlingDownUpSequence = handled;\r\n        stopEvent = this.stopDown(handled);\r\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\r\n        this.handleMoveEvent(mapBrowserEvent);\r\n      }\r\n    }\r\n    return !stopEvent;\r\n  };\r\n\r\n  /**\r\n   * Handle pointer move events.\r\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\r\n   * @protected\r\n   */\r\n  PointerInteraction.prototype.handleMoveEvent = function handleMoveEvent (mapBrowserEvent) {};\r\n\r\n  /**\r\n   * Handle pointer up events.\r\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   * @protected\r\n   */\r\n  PointerInteraction.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * This function is used to determine if \"down\" events should be propagated\r\n   * to other interactions or should be stopped.\r\n   * @param {boolean} handled Was the event handled by the interaction?\r\n   * @return {boolean} Should the `down` event be stopped?\r\n   */\r\n  PointerInteraction.prototype.stopDown = function stopDown (handled) {\r\n    return handled;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\r\n   * @private\r\n   */\r\n  PointerInteraction.prototype.updateTrackedPointers_ = function updateTrackedPointers_ (mapBrowserEvent) {\r\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\r\n      var event = mapBrowserEvent.pointerEvent;\r\n\r\n      var id = event.pointerId.toString();\r\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\r\n        delete this.trackedPointers_[id];\r\n      } else if (mapBrowserEvent.type ==\r\n          MapBrowserEventType.POINTERDOWN) {\r\n        this.trackedPointers_[id] = event;\r\n      } else if (id in this.trackedPointers_) {\r\n        // update only when there was a pointerdown event for this pointer\r\n        this.trackedPointers_[id] = event;\r\n      }\r\n      this.targetPointers = getValues(this.trackedPointers_);\r\n    }\r\n  };\n\n  return PointerInteraction;\n}(Interaction));\r\n\r\n\r\n/**\r\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\r\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\r\n */\r\nexport function centroid(pointerEvents) {\r\n  var length = pointerEvents.length;\r\n  var clientX = 0;\r\n  var clientY = 0;\r\n  for (var i = 0; i < length; i++) {\r\n    clientX += pointerEvents[i].clientX;\r\n    clientY += pointerEvents[i].clientY;\r\n  }\r\n  return [clientX / length, clientY / length];\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\r\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\r\n *     or pointerup event.\r\n */\r\nfunction isPointerDraggingEvent(mapBrowserEvent) {\r\n  var type = mapBrowserEvent.type;\r\n  return type === MapBrowserEventType.POINTERDOWN ||\r\n    type === MapBrowserEventType.POINTERDRAG ||\r\n    type === MapBrowserEventType.POINTERUP;\r\n}\r\n\r\n\r\nexport default PointerInteraction;\r\n\r\n//# sourceMappingURL=Pointer.js.map","/**\r\n * @module ol/interaction/DragPan\r\n */\r\nimport ViewHint from '../ViewHint.js';\r\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\r\nimport {easeOut} from '../easing.js';\r\nimport {noModifierKeys} from '../events/condition.js';\r\nimport {FALSE} from '../functions.js';\r\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\r\n * to indicate whether that event should be handled.\r\n * Default is {@link module:ol/events/condition~noModifierKeys}.\r\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to pan the map by dragging the map.\r\n * @api\r\n */\r\nvar DragPan = /*@__PURE__*/(function (PointerInteraction) {\n  function DragPan(opt_options) {\r\n\r\n    PointerInteraction.call(this, {\r\n      stopDown: FALSE\r\n    });\r\n\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../Kinetic.js\").default|undefined}\r\n     */\r\n    this.kinetic_ = options.kinetic;\r\n\r\n    /**\r\n     * @type {import(\"../pixel.js\").Pixel}\r\n     */\r\n    this.lastCentroid = null;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.lastPointersCount_;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    this.panning_ = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.noKinetic_ = false;\r\n\r\n  }\n\n  if ( PointerInteraction ) DragPan.__proto__ = PointerInteraction;\n  DragPan.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragPan.prototype.constructor = DragPan;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  DragPan.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\r\n    if (!this.panning_) {\r\n      this.panning_ = true;\r\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\r\n    }\r\n    var targetPointers = this.targetPointers;\r\n    var centroid = centroidFromPointers(targetPointers);\r\n    if (targetPointers.length == this.lastPointersCount_) {\r\n      if (this.kinetic_) {\r\n        this.kinetic_.update(centroid[0], centroid[1]);\r\n      }\r\n      if (this.lastCentroid) {\r\n        var deltaX = this.lastCentroid[0] - centroid[0];\r\n        var deltaY = centroid[1] - this.lastCentroid[1];\r\n        var map = mapBrowserEvent.map;\r\n        var view = map.getView();\r\n        var center = [deltaX, deltaY];\r\n        scaleCoordinate(center, view.getResolution());\r\n        rotateCoordinate(center, view.getRotation());\r\n        addCoordinate(center, view.getCenter());\r\n        center = view.constrainCenter(center);\r\n        view.setCenter(center);\r\n      }\r\n    } else if (this.kinetic_) {\r\n      // reset so we don't overestimate the kinetic energy after\r\n      // after one finger down, tiny drag, second finger down\r\n      this.kinetic_.begin();\r\n    }\r\n    this.lastCentroid = centroid;\r\n    this.lastPointersCount_ = targetPointers.length;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  DragPan.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\r\n    var map = mapBrowserEvent.map;\r\n    var view = map.getView();\r\n    if (this.targetPointers.length === 0) {\r\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\r\n        var distance = this.kinetic_.getDistance();\r\n        var angle = this.kinetic_.getAngle();\r\n        var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\r\n        var centerpx = map.getPixelFromCoordinate(center);\r\n        var dest = map.getCoordinateFromPixel([\r\n          centerpx[0] - distance * Math.cos(angle),\r\n          centerpx[1] - distance * Math.sin(angle)\r\n        ]);\r\n        view.animate({\r\n          center: view.constrainCenter(dest),\r\n          duration: 500,\r\n          easing: easeOut\r\n        });\r\n      }\r\n      if (this.panning_) {\r\n        this.panning_ = false;\r\n        view.setHint(ViewHint.INTERACTING, -1);\r\n      }\r\n      return false;\r\n    } else {\r\n      if (this.kinetic_) {\r\n        // reset so we don't overestimate the kinetic energy after\r\n        // after one finger up, tiny drag, second finger up\r\n        this.kinetic_.begin();\r\n      }\r\n      this.lastCentroid = null;\r\n      return true;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  DragPan.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\r\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\r\n      var map = mapBrowserEvent.map;\r\n      var view = map.getView();\r\n      this.lastCentroid = null;\r\n      // stop any current animation\r\n      if (view.getAnimating()) {\r\n        view.setCenter(mapBrowserEvent.frameState.viewState.center);\r\n      }\r\n      if (this.kinetic_) {\r\n        this.kinetic_.begin();\r\n      }\r\n      // No kinetic as soon as more than one pointer on the screen is\r\n      // detected. This is to prevent nasty pans after pinch.\r\n      this.noKinetic_ = this.targetPointers.length > 1;\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\n\n  return DragPan;\n}(PointerInteraction));\r\n\r\nexport default DragPan;\r\n\r\n//# sourceMappingURL=DragPan.js.map","/**\r\n * @module ol/interaction/DragRotate\r\n */\r\nimport {disable} from '../rotationconstraint.js';\r\nimport ViewHint from '../ViewHint.js';\r\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\r\nimport {FALSE} from '../functions.js';\r\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\r\nimport PointerInteraction from './Pointer.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\r\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\r\n * to indicate whether that event should be handled.\r\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\r\n * @property {number} [duration=250] Animation duration in milliseconds.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to rotate the map by clicking and dragging on the map,\r\n * normally combined with an {@link module:ol/events/condition} that limits\r\n * it to when the alt and shift keys are held down.\r\n *\r\n * This interaction is only supported for mouse devices.\r\n * @api\r\n */\r\nvar DragRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function DragRotate(opt_options) {\r\n\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    PointerInteraction.call(this, {\r\n      stopDown: FALSE\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.lastAngle_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n\r\n  }\n\n  if ( PointerInteraction ) DragRotate.__proto__ = PointerInteraction;\n  DragRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotate.prototype.constructor = DragRotate;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  DragRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\r\n    if (!mouseOnly(mapBrowserEvent)) {\r\n      return;\r\n    }\r\n\r\n    var map = mapBrowserEvent.map;\r\n    var view = map.getView();\r\n    if (view.getConstraints().rotation === disable) {\r\n      return;\r\n    }\r\n    var size = map.getSize();\r\n    var offset = mapBrowserEvent.pixel;\r\n    var theta =\r\n        Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\r\n    if (this.lastAngle_ !== undefined) {\r\n      var delta = theta - this.lastAngle_;\r\n      var rotation = view.getRotation();\r\n      rotateWithoutConstraints(view, rotation - delta);\r\n    }\r\n    this.lastAngle_ = theta;\r\n  };\r\n\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  DragRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\r\n    if (!mouseOnly(mapBrowserEvent)) {\r\n      return true;\r\n    }\r\n\r\n    var map = mapBrowserEvent.map;\r\n    var view = map.getView();\r\n    view.setHint(ViewHint.INTERACTING, -1);\r\n    var rotation = view.getRotation();\r\n    rotate(view, rotation, undefined, this.duration_);\r\n    return false;\r\n  };\r\n\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  DragRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\r\n    if (!mouseOnly(mapBrowserEvent)) {\r\n      return false;\r\n    }\r\n\r\n    if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\r\n      var map = mapBrowserEvent.map;\r\n      map.getView().setHint(ViewHint.INTERACTING, 1);\r\n      this.lastAngle_ = undefined;\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\n\n  return DragRotate;\n}(PointerInteraction));\r\n\r\nexport default DragRotate;\r\n\r\n//# sourceMappingURL=DragRotate.js.map","/**\r\n * @module ol/render/Box\r\n */\r\n\r\nimport Disposable from '../Disposable.js';\r\nimport Polygon from '../geom/Polygon.js';\r\n\r\nvar RenderBox = /*@__PURE__*/(function (Disposable) {\n  function RenderBox(className) {\r\n    Disposable.call(this);\r\n\r\n    /**\r\n     * @type {import(\"../geom/Polygon.js\").default}\r\n     * @private\r\n     */\r\n    this.geometry_ = null;\r\n\r\n    /**\r\n     * @type {HTMLDivElement}\r\n     * @private\r\n     */\r\n    this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\r\n    this.element_.style.position = 'absolute';\r\n    this.element_.className = 'ol-box ' + className;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../PluggableMap.js\").default}\r\n     */\r\n    this.map_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../pixel.js\").Pixel}\r\n     */\r\n    this.startPixel_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../pixel.js\").Pixel}\r\n     */\r\n    this.endPixel_ = null;\r\n\r\n  }\n\n  if ( Disposable ) RenderBox.__proto__ = Disposable;\n  RenderBox.prototype = Object.create( Disposable && Disposable.prototype );\n  RenderBox.prototype.constructor = RenderBox;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  RenderBox.prototype.disposeInternal = function disposeInternal () {\r\n    this.setMap(null);\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  RenderBox.prototype.render_ = function render_ () {\r\n    var startPixel = this.startPixel_;\r\n    var endPixel = this.endPixel_;\r\n    var px = 'px';\r\n    var style = this.element_.style;\r\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\r\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\r\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\r\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../PluggableMap.js\").default} map Map.\r\n   */\r\n  RenderBox.prototype.setMap = function setMap (map) {\r\n    if (this.map_) {\r\n      this.map_.getOverlayContainer().removeChild(this.element_);\r\n      var style = this.element_.style;\r\n      style.left = style.top = style.width = style.height = 'inherit';\r\n    }\r\n    this.map_ = map;\r\n    if (this.map_) {\r\n      this.map_.getOverlayContainer().appendChild(this.element_);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\r\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\r\n   */\r\n  RenderBox.prototype.setPixels = function setPixels (startPixel, endPixel) {\r\n    this.startPixel_ = startPixel;\r\n    this.endPixel_ = endPixel;\r\n    this.createOrUpdateGeometry();\r\n    this.render_();\r\n  };\r\n\r\n  /**\r\n   * Creates or updates the cached geometry.\r\n   */\r\n  RenderBox.prototype.createOrUpdateGeometry = function createOrUpdateGeometry () {\r\n    var startPixel = this.startPixel_;\r\n    var endPixel = this.endPixel_;\r\n    var pixels = [\r\n      startPixel,\r\n      [startPixel[0], endPixel[1]],\r\n      endPixel,\r\n      [endPixel[0], startPixel[1]]\r\n    ];\r\n    var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\r\n    // close the polygon\r\n    coordinates[4] = coordinates[0].slice();\r\n    if (!this.geometry_) {\r\n      this.geometry_ = new Polygon([coordinates]);\r\n    } else {\r\n      this.geometry_.setCoordinates([coordinates]);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\r\n   */\r\n  RenderBox.prototype.getGeometry = function getGeometry () {\r\n    return this.geometry_;\r\n  };\n\n  return RenderBox;\n}(Disposable));\r\n\r\n\r\nexport default RenderBox;\r\n\r\n//# sourceMappingURL=Box.js.map","/**\r\n * @module ol/interaction/DragBox\r\n */\r\n// FIXME draw drag box\r\nimport Event from '../events/Event.js';\r\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\r\nimport {VOID} from '../functions.js';\r\nimport PointerInteraction from './Pointer.js';\r\nimport RenderBox from '../render/Box.js';\r\n\r\n\r\n/**\r\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\r\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\r\n * true should be returned.\r\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\r\n * to indicate whether that event should be handled.\r\n * Default is {@link ol/events/condition~always}.\r\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\r\n * `boxEndCondition` function.\r\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\r\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\r\n * Default is `true` if the area of the box is bigger than the `minArea` option.\r\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} onBoxEnd Code to execute just\r\n * before `boxend` is fired.\r\n */\r\n\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nvar DragBoxEventType = {\r\n  /**\r\n   * Triggered upon drag box start.\r\n   * @event DragBoxEvent#boxstart\r\n   * @api\r\n   */\r\n  BOXSTART: 'boxstart',\r\n\r\n  /**\r\n   * Triggered on drag when box is active.\r\n   * @event DragBoxEvent#boxdrag\r\n   * @api\r\n   */\r\n  BOXDRAG: 'boxdrag',\r\n\r\n  /**\r\n   * Triggered upon drag box end.\r\n   * @event DragBoxEvent#boxend\r\n   * @api\r\n   */\r\n  BOXEND: 'boxend'\r\n};\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\r\n * this type.\r\n */\r\nvar DragBoxEvent = /*@__PURE__*/(function (Event) {\n  function DragBoxEvent(type, coordinate, mapBrowserEvent) {\r\n    Event.call(this, type);\r\n\r\n    /**\r\n     * The coordinate of the drag event.\r\n     * @const\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     * @api\r\n     */\r\n    this.coordinate = coordinate;\r\n\r\n    /**\r\n     * @const\r\n     * @type {import(\"../MapBrowserEvent.js\").default}\r\n     * @api\r\n     */\r\n    this.mapBrowserEvent = mapBrowserEvent;\r\n\r\n  }\n\n  if ( Event ) DragBoxEvent.__proto__ = Event;\n  DragBoxEvent.prototype = Object.create( Event && Event.prototype );\n  DragBoxEvent.prototype.constructor = DragBoxEvent;\n\n  return DragBoxEvent;\n}(Event));\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to draw a vector box by clicking and dragging on the map,\r\n * normally combined with an {@link module:ol/events/condition} that limits\r\n * it to when the shift or other key is held down. This is used, for example,\r\n * for zooming to a specific area of the map\r\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\r\n * {@link module:ol/interaction/DragRotateAndZoom}).\r\n *\r\n * This interaction is only supported for mouse devices.\r\n *\r\n * @fires DragBoxEvent\r\n * @api\r\n */\r\nvar DragBox = /*@__PURE__*/(function (PointerInteraction) {\n  function DragBox(opt_options) {\r\n\r\n    PointerInteraction.call(this);\r\n\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    /**\r\n    * @type {import(\"../render/Box.js\").default}\r\n    * @private\r\n    */\r\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\r\n\r\n    /**\r\n    * @type {number}\r\n    * @private\r\n    */\r\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\r\n\r\n    /**\r\n     * Function to execute just before `onboxend` is fired\r\n     * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)}\r\n     * @private\r\n     */\r\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\r\n\r\n    /**\r\n    * @type {import(\"../pixel.js\").Pixel}\r\n    * @private\r\n    */\r\n    this.startPixel_ = null;\r\n\r\n    /**\r\n    * @private\r\n    * @type {import(\"../events/condition.js\").Condition}\r\n    */\r\n    this.condition_ = options.condition ? options.condition : always;\r\n\r\n    /**\r\n    * @private\r\n    * @type {EndCondition}\r\n    */\r\n    this.boxEndCondition_ = options.boxEndCondition ?\r\n      options.boxEndCondition : this.defaultBoxEndCondition;\r\n  }\n\n  if ( PointerInteraction ) DragBox.__proto__ = PointerInteraction;\n  DragBox.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragBox.prototype.constructor = DragBox;\r\n\r\n  /**\r\n   * The default condition for determining whether the boxend event\r\n   * should fire.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\r\n   *     leading to the box end.\r\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\r\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\r\n   * @return {boolean} Whether or not the boxend condition should be fired.\r\n   */\r\n  DragBox.prototype.defaultBoxEndCondition = function defaultBoxEndCondition (mapBrowserEvent, startPixel, endPixel) {\r\n    var width = endPixel[0] - startPixel[0];\r\n    var height = endPixel[1] - startPixel[1];\r\n    return width * width + height * height >= this.minArea_;\r\n  };\r\n\r\n  /**\r\n  * Returns geometry of last drawn box.\r\n  * @return {import(\"../geom/Polygon.js\").default} Geometry.\r\n  * @api\r\n  */\r\n  DragBox.prototype.getGeometry = function getGeometry () {\r\n    return this.box_.getGeometry();\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  DragBox.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\r\n    if (!mouseOnly(mapBrowserEvent)) {\r\n      return;\r\n    }\r\n\r\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\r\n\r\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\r\n      mapBrowserEvent.coordinate, mapBrowserEvent));\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  DragBox.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\r\n    if (!mouseOnly(mapBrowserEvent)) {\r\n      return true;\r\n    }\r\n\r\n    this.box_.setMap(null);\r\n\r\n    if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\r\n      this.onBoxEnd_(mapBrowserEvent);\r\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\r\n        mapBrowserEvent.coordinate, mapBrowserEvent));\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  DragBox.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\r\n    if (!mouseOnly(mapBrowserEvent)) {\r\n      return false;\r\n    }\r\n\r\n    if (mouseActionButton(mapBrowserEvent) &&\r\n        this.condition_(mapBrowserEvent)) {\r\n      this.startPixel_ = mapBrowserEvent.pixel;\r\n      this.box_.setMap(mapBrowserEvent.map);\r\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\r\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\r\n        mapBrowserEvent.coordinate, mapBrowserEvent));\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\n\n  return DragBox;\n}(PointerInteraction));\r\n\r\n\r\nexport default DragBox;\r\n\r\n//# sourceMappingURL=DragBox.js.map","/**\r\n * @module ol/interaction/DragZoom\r\n */\r\nimport {easeOut} from '../easing.js';\r\nimport {shiftKeyOnly} from '../events/condition.js';\r\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\r\nimport DragBox from './DragBox.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\r\n * box.\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled.\r\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\r\n * @property {number} [duration=200] Animation duration in milliseconds.\r\n * @property {boolean} [out=false] Use interaction for zooming out.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom the map by clicking and dragging on the map,\r\n * normally combined with an {@link module:ol/events/condition} that limits\r\n * it to when a key, shift by default, is held down.\r\n *\r\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\r\n * your custom one configured with `className`.\r\n * @api\r\n */\r\nvar DragZoom = /*@__PURE__*/(function (DragBox) {\n  function DragZoom(opt_options) {\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    var condition = options.condition ? options.condition : shiftKeyOnly;\r\n\r\n    DragBox.call(this, {\r\n      condition: condition,\r\n      className: options.className || 'ol-dragzoom',\r\n      onBoxEnd: onBoxEnd\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.out_ = options.out !== undefined ? options.out : false;\r\n  }\n\n  if ( DragBox ) DragZoom.__proto__ = DragBox;\n  DragZoom.prototype = Object.create( DragBox && DragBox.prototype );\n  DragZoom.prototype.constructor = DragZoom;\n\n  return DragZoom;\n}(DragBox));\r\n\r\n\r\n/**\r\n * @this {DragZoom}\r\n */\r\nfunction onBoxEnd() {\r\n  var map = this.getMap();\r\n  var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\r\n  var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\r\n  var extent = this.getGeometry().getExtent();\r\n\r\n  if (this.out_) {\r\n    var mapExtent = view.calculateExtent(size);\r\n    var boxPixelExtent = createOrUpdateFromCoordinates([\r\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\r\n      map.getPixelFromCoordinate(getTopRight(extent))]);\r\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\r\n\r\n    scaleFromCenter(mapExtent, 1 / factor);\r\n    extent = mapExtent;\r\n  }\r\n\r\n  var resolution = view.constrainResolution(\r\n    view.getResolutionForExtent(extent, size));\r\n\r\n  var center = getCenter(extent);\r\n  center = view.constrainCenter(center);\r\n\r\n  view.animate({\r\n    resolution: resolution,\r\n    center: center,\r\n    duration: this.duration_,\r\n    easing: easeOut\r\n  });\r\n}\r\n\r\n\r\nexport default DragZoom;\r\n\r\n//# sourceMappingURL=DragZoom.js.map","/**\r\n * @module ol/events/KeyCode\r\n */\r\n\r\n/**\r\n * @enum {number}\r\n * @const\r\n */\r\nexport default {\r\n  LEFT: 37,\r\n  UP: 38,\r\n  RIGHT: 39,\r\n  DOWN: 40\r\n};\r\n\r\n//# sourceMappingURL=Keycode.js.map","/**\r\n * @module ol/interaction/KeyboardPan\r\n */\r\nimport {rotate as rotateCoordinate} from '../coordinate.js';\r\nimport EventType from '../events/EventType.js';\r\nimport KeyCode from '../events/KeyCode.js';\r\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\r\nimport Interaction, {pan} from './Interaction.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. Default is\r\n * {@link module:ol/events/condition~noModifierKeys} and\r\n * {@link module:ol/events/condition~targetNotEditable}.\r\n * @property {number} [duration=100] Animation duration in milliseconds.\r\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\r\n * press.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to pan the map using keyboard arrows.\r\n * Note that, although this interaction is by default included in maps,\r\n * the keys can only be used when browser focus is on the element to which\r\n * the keyboard events are attached. By default, this is the map div,\r\n * though you can change this with the `keyboardEventTarget` in\r\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\r\n * element, focus will have to be on, and returned to, this element if the keys\r\n * are to function.\r\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\r\n * @api\r\n */\r\nvar KeyboardPan = /*@__PURE__*/(function (Interaction) {\n  function KeyboardPan(opt_options) {\r\n\r\n    Interaction.call(this, {\r\n      handleEvent: handleEvent\r\n    });\r\n\r\n    var options = opt_options || {};\r\n\r\n    /**\r\n     * @private\r\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\r\n     * @return {boolean} Combined condition result.\r\n     */\r\n    this.defaultCondition_ = function(mapBrowserEvent) {\r\n      return noModifierKeys(mapBrowserEvent) &&\r\n        targetNotEditable(mapBrowserEvent);\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition !== undefined ?\r\n      options.condition : this.defaultCondition_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\r\n      options.pixelDelta : 128;\r\n\r\n  }\n\n  if ( Interaction ) KeyboardPan.__proto__ = Interaction;\n  KeyboardPan.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardPan.prototype.constructor = KeyboardPan;\n\n  return KeyboardPan;\n}(Interaction));\r\n\r\n\r\n/**\r\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\r\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\r\n * pressed).\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} `false` to stop event propagation.\r\n * @this {KeyboardPan}\r\n */\r\nfunction handleEvent(mapBrowserEvent) {\r\n  var stopEvent = false;\r\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\r\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\r\n    var keyCode = keyEvent.keyCode;\r\n    if (this.condition_(mapBrowserEvent) &&\r\n        (keyCode == KeyCode.DOWN ||\r\n        keyCode == KeyCode.LEFT ||\r\n        keyCode == KeyCode.RIGHT ||\r\n        keyCode == KeyCode.UP)) {\r\n      var map = mapBrowserEvent.map;\r\n      var view = map.getView();\r\n      var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\r\n      var deltaX = 0, deltaY = 0;\r\n      if (keyCode == KeyCode.DOWN) {\r\n        deltaY = -mapUnitsDelta;\r\n      } else if (keyCode == KeyCode.LEFT) {\r\n        deltaX = -mapUnitsDelta;\r\n      } else if (keyCode == KeyCode.RIGHT) {\r\n        deltaX = mapUnitsDelta;\r\n      } else {\r\n        deltaY = mapUnitsDelta;\r\n      }\r\n      var delta = [deltaX, deltaY];\r\n      rotateCoordinate(delta, view.getRotation());\r\n      pan(view, delta, this.duration_);\r\n      mapBrowserEvent.preventDefault();\r\n      stopEvent = true;\r\n    }\r\n  }\r\n  return !stopEvent;\r\n}\r\n\r\nexport default KeyboardPan;\r\n\r\n//# sourceMappingURL=KeyboardPan.js.map","/**\r\n * @module ol/interaction/KeyboardZoom\r\n */\r\nimport EventType from '../events/EventType.js';\r\nimport {targetNotEditable} from '../events/condition.js';\r\nimport Interaction, {zoomByDelta} from './Interaction.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [duration=100] Animation duration in milliseconds.\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. Default is\r\n * {@link module:ol/events/condition~targetNotEditable}.\r\n * @property {number} [delta=1] The zoom level delta on each key press.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom the map using keyboard + and -.\r\n * Note that, although this interaction is by default included in maps,\r\n * the keys can only be used when browser focus is on the element to which\r\n * the keyboard events are attached. By default, this is the map div,\r\n * though you can change this with the `keyboardEventTarget` in\r\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\r\n * element, focus will have to be on, and returned to, this element if the keys\r\n * are to function.\r\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\r\n * @api\r\n */\r\nvar KeyboardZoom = /*@__PURE__*/(function (Interaction) {\n  function KeyboardZoom(opt_options) {\r\n\r\n    Interaction.call(this, {\r\n      handleEvent: handleEvent\r\n    });\r\n\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.delta_ = options.delta ? options.delta : 1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\r\n\r\n  }\n\n  if ( Interaction ) KeyboardZoom.__proto__ = Interaction;\n  KeyboardZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardZoom.prototype.constructor = KeyboardZoom;\n\n  return KeyboardZoom;\n}(Interaction));\r\n\r\n\r\n/**\r\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\r\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\r\n * key pressed was '+' or '-').\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} `false` to stop event propagation.\r\n * @this {KeyboardZoom}\r\n */\r\nfunction handleEvent(mapBrowserEvent) {\r\n  var stopEvent = false;\r\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\r\n      mapBrowserEvent.type == EventType.KEYPRESS) {\r\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\r\n    var charCode = keyEvent.charCode;\r\n    if (this.condition_(mapBrowserEvent) &&\r\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\r\n      var map = mapBrowserEvent.map;\r\n      var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\r\n      var view = map.getView();\r\n      zoomByDelta(view, delta, undefined, this.duration_);\r\n      mapBrowserEvent.preventDefault();\r\n      stopEvent = true;\r\n    }\r\n  }\r\n  return !stopEvent;\r\n}\r\n\r\nexport default KeyboardZoom;\r\n\r\n//# sourceMappingURL=KeyboardZoom.js.map","/**\r\n * @module ol/interaction/MouseWheelZoom\r\n */\r\nimport ViewHint from '../ViewHint.js';\r\nimport {always} from '../events/condition.js';\r\nimport {easeOut} from '../easing.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\r\nimport Interaction, {zoomByDelta} from './Interaction.js';\r\nimport {clamp} from '../math.js';\r\n\r\n\r\n/**\r\n * Maximum mouse wheel delta.\r\n * @type {number}\r\n */\r\nvar MAX_DELTA = 1;\r\n\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport var Mode = {\r\n  TRACKPAD: 'trackpad',\r\n  WHEEL: 'wheel'\r\n};\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. Default is\r\n * {@link module:ol/events/condition~always}.\r\n * @property {number} [duration=250] Animation duration in milliseconds.\r\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\r\n * @property {boolean} [constrainResolution=false] When using a trackpad or\r\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\r\n * ends.\r\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\r\n * location as the anchor. When set to `false`, zooming in and out will zoom to\r\n * the center of the screen instead of zooming on the mouse's location.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom the map by scrolling the mouse wheel.\r\n * @api\r\n */\r\nvar MouseWheelZoom = /*@__PURE__*/(function (Interaction) {\n  function MouseWheelZoom(opt_options) {\r\n\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.delta_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.constrainResolution_ = options.constrainResolution || false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : always;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../coordinate.js\").Coordinate}\r\n     */\r\n    this.lastAnchor_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.startTime_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?}\r\n     */\r\n    this.timeoutId_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Mode|undefined}\r\n     */\r\n    this.mode_ = undefined;\r\n\r\n    /**\r\n     * Trackpad events separated by this delay will be considered separate\r\n     * interactions.\r\n     * @type {number}\r\n     */\r\n    this.trackpadEventGap_ = 400;\r\n\r\n    /**\r\n     * @type {?}\r\n     */\r\n    this.trackpadTimeoutId_;\r\n\r\n    /**\r\n     * The number of delta values per zoom level\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.trackpadDeltaPerZoom_ = 300;\r\n\r\n    /**\r\n     * The zoom factor by which scroll zooming is allowed to exceed the limits.\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.trackpadZoomBuffer_ = 1.5;\r\n\r\n  }\n\n  if ( Interaction ) MouseWheelZoom.__proto__ = Interaction;\n  MouseWheelZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  MouseWheelZoom.prototype.constructor = MouseWheelZoom;\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  MouseWheelZoom.prototype.decrementInteractingHint_ = function decrementInteractingHint_ () {\r\n    this.trackpadTimeoutId_ = undefined;\r\n    var view = this.getMap().getView();\r\n    view.setHint(ViewHint.INTERACTING, -1);\r\n  };\r\n\r\n  /**\r\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\r\n   * zooms the map.\r\n   * @override\r\n   */\r\n  MouseWheelZoom.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\r\n    if (!this.condition_(mapBrowserEvent)) {\r\n      return true;\r\n    }\r\n    var type = mapBrowserEvent.type;\r\n    if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\r\n      return true;\r\n    }\r\n\r\n    mapBrowserEvent.preventDefault();\r\n\r\n    var map = mapBrowserEvent.map;\r\n    var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\r\n\r\n    if (this.useAnchor_) {\r\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\r\n    }\r\n\r\n    // Delta normalisation inspired by\r\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\r\n    var delta;\r\n    if (mapBrowserEvent.type == EventType.WHEEL) {\r\n      delta = wheelEvent.deltaY;\r\n      if (FIREFOX &&\r\n          wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\r\n        delta /= DEVICE_PIXEL_RATIO;\r\n      }\r\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\r\n        delta *= 40;\r\n      }\r\n    } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\r\n      delta = -wheelEvent.wheelDeltaY;\r\n      if (SAFARI) {\r\n        delta /= 3;\r\n      }\r\n    }\r\n\r\n    if (delta === 0) {\r\n      return false;\r\n    }\r\n\r\n    var now = Date.now();\r\n\r\n    if (this.startTime_ === undefined) {\r\n      this.startTime_ = now;\r\n    }\r\n\r\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\r\n      this.mode_ = Math.abs(delta) < 4 ?\r\n        Mode.TRACKPAD :\r\n        Mode.WHEEL;\r\n    }\r\n\r\n    if (this.mode_ === Mode.TRACKPAD) {\r\n      var view = map.getView();\r\n      if (this.trackpadTimeoutId_) {\r\n        clearTimeout(this.trackpadTimeoutId_);\r\n      } else {\r\n        view.setHint(ViewHint.INTERACTING, 1);\r\n      }\r\n      this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\r\n      var resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\r\n      var minResolution = view.getMinResolution();\r\n      var maxResolution = view.getMaxResolution();\r\n      var rebound = 0;\r\n      if (resolution < minResolution) {\r\n        resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\r\n        rebound = 1;\r\n      } else if (resolution > maxResolution) {\r\n        resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\r\n        rebound = -1;\r\n      }\r\n      if (this.lastAnchor_) {\r\n        var center = view.calculateCenterZoom(resolution, this.lastAnchor_);\r\n        view.setCenter(view.constrainCenter(center));\r\n      }\r\n      view.setResolution(resolution);\r\n\r\n      if (rebound === 0 && this.constrainResolution_) {\r\n        view.animate({\r\n          resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\r\n          easing: easeOut,\r\n          anchor: this.lastAnchor_,\r\n          duration: this.duration_\r\n        });\r\n      }\r\n\r\n      if (rebound > 0) {\r\n        view.animate({\r\n          resolution: minResolution,\r\n          easing: easeOut,\r\n          anchor: this.lastAnchor_,\r\n          duration: 500\r\n        });\r\n      } else if (rebound < 0) {\r\n        view.animate({\r\n          resolution: maxResolution,\r\n          easing: easeOut,\r\n          anchor: this.lastAnchor_,\r\n          duration: 500\r\n        });\r\n      }\r\n      this.startTime_ = now;\r\n      return false;\r\n    }\r\n\r\n    this.delta_ += delta;\r\n\r\n    var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\r\n\r\n    clearTimeout(this.timeoutId_);\r\n    this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\r\n\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {import(\"../PluggableMap.js\").default} map Map.\r\n   */\r\n  MouseWheelZoom.prototype.handleWheelZoom_ = function handleWheelZoom_ (map) {\r\n    var view = map.getView();\r\n    if (view.getAnimating()) {\r\n      view.cancelAnimations();\r\n    }\r\n    var maxDelta = MAX_DELTA;\r\n    var delta = clamp(this.delta_, -maxDelta, maxDelta);\r\n    zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\r\n    this.mode_ = undefined;\r\n    this.delta_ = 0;\r\n    this.lastAnchor_ = null;\r\n    this.startTime_ = undefined;\r\n    this.timeoutId_ = undefined;\r\n  };\r\n\r\n  /**\r\n   * Enable or disable using the mouse's location as an anchor when zooming\r\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\r\n   * to zoom to the center of the map\r\n   * @api\r\n   */\r\n  MouseWheelZoom.prototype.setMouseAnchor = function setMouseAnchor (useAnchor) {\r\n    this.useAnchor_ = useAnchor;\r\n    if (!useAnchor) {\r\n      this.lastAnchor_ = null;\r\n    }\r\n  };\n\n  return MouseWheelZoom;\n}(Interaction));\r\n\r\nexport default MouseWheelZoom;\r\n\r\n//# sourceMappingURL=MouseWheelZoom.js.map","/**\r\n * @module ol/interaction/PinchRotate\r\n */\r\nimport ViewHint from '../ViewHint.js';\r\nimport {FALSE} from '../functions.js';\r\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\r\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\r\nimport {disable} from '../rotationconstraint.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [duration=250] The duration of the animation in\r\n * milliseconds.\r\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to rotate the map by twisting with two fingers\r\n * on a touch screen.\r\n * @api\r\n */\r\nvar PinchRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchRotate(opt_options) {\r\n\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\r\n\r\n    if (!pointerOptions.stopDown) {\r\n      pointerOptions.stopDown = FALSE;\r\n    }\r\n\r\n    PointerInteraction.call(this, pointerOptions);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     */\r\n    this.anchor_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.lastAngle_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.rotating_ = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.rotationDelta_ = 0.0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n\r\n  }\n\n  if ( PointerInteraction ) PinchRotate.__proto__ = PointerInteraction;\n  PinchRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchRotate.prototype.constructor = PinchRotate;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  PinchRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\r\n    var rotationDelta = 0.0;\r\n\r\n    var touch0 = this.targetPointers[0];\r\n    var touch1 = this.targetPointers[1];\r\n\r\n    // angle between touches\r\n    var angle = Math.atan2(\r\n      touch1.clientY - touch0.clientY,\r\n      touch1.clientX - touch0.clientX);\r\n\r\n    if (this.lastAngle_ !== undefined) {\r\n      var delta = angle - this.lastAngle_;\r\n      this.rotationDelta_ += delta;\r\n      if (!this.rotating_ &&\r\n          Math.abs(this.rotationDelta_) > this.threshold_) {\r\n        this.rotating_ = true;\r\n      }\r\n      rotationDelta = delta;\r\n    }\r\n    this.lastAngle_ = angle;\r\n\r\n    var map = mapBrowserEvent.map;\r\n    var view = map.getView();\r\n    if (view.getConstraints().rotation === disable) {\r\n      return;\r\n    }\r\n\r\n    // rotate anchor point.\r\n    // FIXME: should be the intersection point between the lines:\r\n    //     touch0,touch1 and previousTouch0,previousTouch1\r\n    var viewportPosition = map.getViewport().getBoundingClientRect();\r\n    var centroid = centroidFromPointers(this.targetPointers);\r\n    centroid[0] -= viewportPosition.left;\r\n    centroid[1] -= viewportPosition.top;\r\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\r\n\r\n    // rotate\r\n    if (this.rotating_) {\r\n      var rotation = view.getRotation();\r\n      map.render();\r\n      rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  PinchRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\r\n    if (this.targetPointers.length < 2) {\r\n      var map = mapBrowserEvent.map;\r\n      var view = map.getView();\r\n      view.setHint(ViewHint.INTERACTING, -1);\r\n      if (this.rotating_) {\r\n        var rotation = view.getRotation();\r\n        rotate(view, rotation, this.anchor_, this.duration_);\r\n      }\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  PinchRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\r\n    if (this.targetPointers.length >= 2) {\r\n      var map = mapBrowserEvent.map;\r\n      this.anchor_ = null;\r\n      this.lastAngle_ = undefined;\r\n      this.rotating_ = false;\r\n      this.rotationDelta_ = 0.0;\r\n      if (!this.handlingDownUpSequence) {\r\n        map.getView().setHint(ViewHint.INTERACTING, 1);\r\n      }\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\n\n  return PinchRotate;\n}(PointerInteraction));\r\n\r\nexport default PinchRotate;\r\n\r\n//# sourceMappingURL=PinchRotate.js.map","/**\r\n * @module ol/interaction/PinchZoom\r\n */\r\nimport ViewHint from '../ViewHint.js';\r\nimport {FALSE} from '../functions.js';\r\nimport {zoom, zoomWithoutConstraints} from './Interaction.js';\r\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [duration=400] Animation duration in milliseconds.\r\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\r\n * zoom level after the pinch gesture ends.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom the map by pinching with two fingers\r\n * on a touch screen.\r\n * @api\r\n */\r\nvar PinchZoom = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchZoom(opt_options) {\r\n\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\r\n\r\n    if (!pointerOptions.stopDown) {\r\n      pointerOptions.stopDown = FALSE;\r\n    }\r\n\r\n    PointerInteraction.call(this, pointerOptions);\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.constrainResolution_ = options.constrainResolution || false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     */\r\n    this.anchor_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.lastDistance_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.lastScaleDelta_ = 1;\r\n\r\n  }\n\n  if ( PointerInteraction ) PinchZoom.__proto__ = PointerInteraction;\n  PinchZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchZoom.prototype.constructor = PinchZoom;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  PinchZoom.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\r\n    var scaleDelta = 1.0;\r\n\r\n    var touch0 = this.targetPointers[0];\r\n    var touch1 = this.targetPointers[1];\r\n    var dx = touch0.clientX - touch1.clientX;\r\n    var dy = touch0.clientY - touch1.clientY;\r\n\r\n    // distance between touches\r\n    var distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n    if (this.lastDistance_ !== undefined) {\r\n      scaleDelta = this.lastDistance_ / distance;\r\n    }\r\n    this.lastDistance_ = distance;\r\n\r\n\r\n    var map = mapBrowserEvent.map;\r\n    var view = map.getView();\r\n    var resolution = view.getResolution();\r\n    var maxResolution = view.getMaxResolution();\r\n    var minResolution = view.getMinResolution();\r\n    var newResolution = resolution * scaleDelta;\r\n    if (newResolution > maxResolution) {\r\n      scaleDelta = maxResolution / resolution;\r\n      newResolution = maxResolution;\r\n    } else if (newResolution < minResolution) {\r\n      scaleDelta = minResolution / resolution;\r\n      newResolution = minResolution;\r\n    }\r\n\r\n    if (scaleDelta != 1.0) {\r\n      this.lastScaleDelta_ = scaleDelta;\r\n    }\r\n\r\n    // scale anchor point.\r\n    var viewportPosition = map.getViewport().getBoundingClientRect();\r\n    var centroid = centroidFromPointers(this.targetPointers);\r\n    centroid[0] -= viewportPosition.left;\r\n    centroid[1] -= viewportPosition.top;\r\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\r\n\r\n    // scale, bypass the resolution constraint\r\n    map.render();\r\n    zoomWithoutConstraints(view, newResolution, this.anchor_);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  PinchZoom.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\r\n    if (this.targetPointers.length < 2) {\r\n      var map = mapBrowserEvent.map;\r\n      var view = map.getView();\r\n      view.setHint(ViewHint.INTERACTING, -1);\r\n      var resolution = view.getResolution();\r\n      if (this.constrainResolution_ ||\r\n          resolution < view.getMinResolution() ||\r\n          resolution > view.getMaxResolution()) {\r\n        // Zoom to final resolution, with an animation, and provide a\r\n        // direction not to zoom out/in if user was pinching in/out.\r\n        // Direction is > 0 if pinching out, and < 0 if pinching in.\r\n        var direction = this.lastScaleDelta_ - 1;\r\n        zoom(view, resolution, this.anchor_, this.duration_, direction);\r\n      }\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  PinchZoom.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\r\n    if (this.targetPointers.length >= 2) {\r\n      var map = mapBrowserEvent.map;\r\n      this.anchor_ = null;\r\n      this.lastDistance_ = undefined;\r\n      this.lastScaleDelta_ = 1;\r\n      if (!this.handlingDownUpSequence) {\r\n        map.getView().setHint(ViewHint.INTERACTING, 1);\r\n      }\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\n\n  return PinchZoom;\n}(PointerInteraction));\r\n\r\nexport default PinchZoom;\r\n\r\n//# sourceMappingURL=PinchZoom.js.map","/**\r\n * @module ol/interaction\r\n */\r\nimport Collection from './Collection.js';\r\nimport Kinetic from './Kinetic.js';\r\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\r\nimport DragPan from './interaction/DragPan.js';\r\nimport DragRotate from './interaction/DragRotate.js';\r\nimport DragZoom from './interaction/DragZoom.js';\r\nimport KeyboardPan from './interaction/KeyboardPan.js';\r\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\r\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\r\nimport PinchRotate from './interaction/PinchRotate.js';\r\nimport PinchZoom from './interaction/PinchZoom.js';\r\nimport {focus} from './events/condition.js';\r\n\r\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\r\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\r\nexport {default as DragBox} from './interaction/DragBox.js';\r\nexport {default as DragPan} from './interaction/DragPan.js';\r\nexport {default as DragRotate} from './interaction/DragRotate.js';\r\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\r\nexport {default as DragZoom} from './interaction/DragZoom.js';\r\nexport {default as Draw} from './interaction/Draw.js';\r\nexport {default as Extent} from './interaction/Extent.js';\r\nexport {default as Interaction} from './interaction/Interaction.js';\r\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\r\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\r\nexport {default as Modify} from './interaction/Modify.js';\r\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\r\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\r\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\r\nexport {default as Pointer} from './interaction/Pointer.js';\r\nexport {default as Select} from './interaction/Select.js';\r\nexport {default as Snap} from './interaction/Snap.js';\r\nexport {default as Translate} from './interaction/Translate.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} DefaultsOptions\r\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\r\n * desired.\r\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\r\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\r\n * useful when page scroll is desired for maps that do not have the browser's\r\n * focus.\r\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\r\n * zoom level after the wheel/trackpad or pinch gesture ends.\r\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\r\n * desired.\r\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\r\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\r\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\r\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\r\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\r\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\r\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\r\n * mousewheel zoom.\r\n * @property {number} [zoomDuration] Duration of the zoom animation in\r\n * milliseconds.\r\n */\r\n\r\n\r\n/**\r\n * Set of interactions included in maps by default. Specific interactions can be\r\n * excluded by setting the appropriate option to false in the constructor\r\n * options, but the order of the interactions is fixed.  If you want to specify\r\n * a different order for interactions, you will need to create your own\r\n * {@link module:ol/interaction/Interaction} instances and insert\r\n * them into a {@link module:ol/Collection} in the order you want\r\n * before creating your {@link module:ol/Map~Map} instance. The default set of\r\n * interactions, in sequence, is:\r\n * * {@link module:ol/interaction/DragRotate~DragRotate}\r\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\r\n * * {@link module:ol/interaction/DragPan~DragPan}\r\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\r\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\r\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\r\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\r\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\r\n * * {@link module:ol/interaction/DragZoom~DragZoom}\r\n *\r\n * @param {DefaultsOptions=} opt_options Defaults options.\r\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\r\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\r\n * constructor's `interactions` option.\r\n * @api\r\n */\r\nexport function defaults(opt_options) {\r\n\r\n  var options = opt_options ? opt_options : {};\r\n\r\n  var interactions = new Collection();\r\n\r\n  var kinetic = new Kinetic(-0.005, 0.05, 100);\r\n\r\n  var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\r\n    options.altShiftDragRotate : true;\r\n  if (altShiftDragRotate) {\r\n    interactions.push(new DragRotate());\r\n  }\r\n\r\n  var doubleClickZoom = options.doubleClickZoom !== undefined ?\r\n    options.doubleClickZoom : true;\r\n  if (doubleClickZoom) {\r\n    interactions.push(new DoubleClickZoom({\r\n      delta: options.zoomDelta,\r\n      duration: options.zoomDuration\r\n    }));\r\n  }\r\n\r\n  var dragPan = options.dragPan !== undefined ? options.dragPan : true;\r\n  if (dragPan) {\r\n    interactions.push(new DragPan({\r\n      condition: options.onFocusOnly ? focus : undefined,\r\n      kinetic: kinetic\r\n    }));\r\n  }\r\n\r\n  var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\r\n    true;\r\n  if (pinchRotate) {\r\n    interactions.push(new PinchRotate());\r\n  }\r\n\r\n  var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\r\n  if (pinchZoom) {\r\n    interactions.push(new PinchZoom({\r\n      constrainResolution: options.constrainResolution,\r\n      duration: options.zoomDuration\r\n    }));\r\n  }\r\n\r\n  var keyboard = options.keyboard !== undefined ? options.keyboard : true;\r\n  if (keyboard) {\r\n    interactions.push(new KeyboardPan());\r\n    interactions.push(new KeyboardZoom({\r\n      delta: options.zoomDelta,\r\n      duration: options.zoomDuration\r\n    }));\r\n  }\r\n\r\n  var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\r\n    options.mouseWheelZoom : true;\r\n  if (mouseWheelZoom) {\r\n    interactions.push(new MouseWheelZoom({\r\n      condition: options.onFocusOnly ? focus : undefined,\r\n      constrainResolution: options.constrainResolution,\r\n      duration: options.zoomDuration\r\n    }));\r\n  }\r\n\r\n  var shiftDragZoom = options.shiftDragZoom !== undefined ?\r\n    options.shiftDragZoom : true;\r\n  if (shiftDragZoom) {\r\n    interactions.push(new DragZoom({\r\n      duration: options.zoomDuration\r\n    }));\r\n  }\r\n\r\n  return interactions;\r\n\r\n}\r\n\r\n//# sourceMappingURL=interaction.js.map","/**\r\n * @module ol/reproj/common\r\n */\r\n\r\n/**\r\n * Default maximum allowed threshold  (in pixels) for reprojection\r\n * triangulation.\r\n * @type {number}\r\n */\r\nexport var ERROR_THRESHOLD = 0.5;\r\n\r\n/**\r\n * Enable automatic reprojection of raster sources. Default is `true`.\r\n * TODO: decide if we want to expose this as a build flag or remove it\r\n * @type {boolean}\r\n */\r\nexport var ENABLE_RASTER_REPROJECTION = true;\r\n\r\n//# sourceMappingURL=common.js.map","/**\r\n * @module ol/ImageBase\r\n */\r\nimport {abstract} from './util.js';\r\nimport EventTarget from './events/Target.js';\r\nimport EventType from './events/EventType.js';\r\n\r\n/**\r\n * @abstract\r\n */\r\nvar ImageBase = /*@__PURE__*/(function (EventTarget) {\n  function ImageBase(extent, resolution, pixelRatio, state) {\r\n\r\n    EventTarget.call(this);\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"./extent.js\").Extent}\r\n     */\r\n    this.extent = extent;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.pixelRatio_ = pixelRatio;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number|undefined}\r\n     */\r\n    this.resolution = resolution;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"./ImageState.js\").default}\r\n     */\r\n    this.state = state;\r\n\r\n  }\n\n  if ( EventTarget ) ImageBase.__proto__ = EventTarget;\n  ImageBase.prototype = Object.create( EventTarget && EventTarget.prototype );\n  ImageBase.prototype.constructor = ImageBase;\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  ImageBase.prototype.changed = function changed () {\r\n    this.dispatchEvent(EventType.CHANGE);\r\n  };\r\n\r\n  /**\r\n   * @return {import(\"./extent.js\").Extent} Extent.\r\n   */\r\n  ImageBase.prototype.getExtent = function getExtent () {\r\n    return this.extent;\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\r\n   */\r\n  ImageBase.prototype.getImage = function getImage () {\r\n    return abstract();\r\n  };\r\n\r\n  /**\r\n   * @return {number} PixelRatio.\r\n   */\r\n  ImageBase.prototype.getPixelRatio = function getPixelRatio () {\r\n    return this.pixelRatio_;\r\n  };\r\n\r\n  /**\r\n   * @return {number} Resolution.\r\n   */\r\n  ImageBase.prototype.getResolution = function getResolution () {\r\n    return /** @type {number} */ (this.resolution);\r\n  };\r\n\r\n  /**\r\n   * @return {import(\"./ImageState.js\").default} State.\r\n   */\r\n  ImageBase.prototype.getState = function getState () {\r\n    return this.state;\r\n  };\r\n\r\n  /**\r\n   * Load not yet loaded URI.\r\n   * @abstract\r\n   */\r\n  ImageBase.prototype.load = function load () {\r\n    abstract();\r\n  };\n\n  return ImageBase;\n}(EventTarget));\r\n\r\n\r\nexport default ImageBase;\r\n\r\n//# sourceMappingURL=ImageBase.js.map","/**\r\n * @module ol/ImageState\r\n */\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport default {\r\n  IDLE: 0,\r\n  LOADING: 1,\r\n  LOADED: 2,\r\n  ERROR: 3\r\n};\r\n\r\n//# sourceMappingURL=ImageState.js.map","/**\r\n * @module ol/ImageCanvas\r\n */\r\nimport ImageBase from './ImageBase.js';\r\nimport ImageState from './ImageState.js';\r\n\r\n\r\n/**\r\n * A function that is called to trigger asynchronous canvas drawing.  It is\r\n * called with a \"done\" callback that should be called when drawing is done.\r\n * If any error occurs during drawing, the \"done\" callback should be called with\r\n * that error.\r\n *\r\n * @typedef {function(function(Error=))} Loader\r\n */\r\n\r\n\r\nvar ImageCanvas = /*@__PURE__*/(function (ImageBase) {\n  function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\r\n\r\n    var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\r\n\r\n    ImageBase.call(this, extent, resolution, pixelRatio, state);\r\n\r\n    /**\r\n     * Optional canvas loader function.\r\n     * @type {?Loader}\r\n     * @private\r\n     */\r\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement}\r\n     */\r\n    this.canvas_ = canvas;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Error}\r\n     */\r\n    this.error_ = null;\r\n\r\n  }\n\n  if ( ImageBase ) ImageCanvas.__proto__ = ImageBase;\n  ImageCanvas.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageCanvas.prototype.constructor = ImageCanvas;\r\n\r\n  /**\r\n   * Get any error associated with asynchronous rendering.\r\n   * @return {Error} Any error that occurred during rendering.\r\n   */\r\n  ImageCanvas.prototype.getError = function getError () {\r\n    return this.error_;\r\n  };\r\n\r\n  /**\r\n   * Handle async drawing complete.\r\n   * @param {Error=} err Any error during drawing.\r\n   * @private\r\n   */\r\n  ImageCanvas.prototype.handleLoad_ = function handleLoad_ (err) {\r\n    if (err) {\r\n      this.error_ = err;\r\n      this.state = ImageState.ERROR;\r\n    } else {\r\n      this.state = ImageState.LOADED;\r\n    }\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  ImageCanvas.prototype.load = function load () {\r\n    if (this.state == ImageState.IDLE) {\r\n      this.state = ImageState.LOADING;\r\n      this.changed();\r\n      this.loader_(this.handleLoad_.bind(this));\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @return {HTMLCanvasElement} Canvas element.\r\n   */\r\n  ImageCanvas.prototype.getImage = function getImage () {\r\n    return this.canvas_;\r\n  };\n\n  return ImageCanvas;\n}(ImageBase));\r\n\r\n\r\nexport default ImageCanvas;\r\n\r\n//# sourceMappingURL=ImageCanvas.js.map","/**\r\n * @module ol/LayerType\r\n */\r\n\r\n/**\r\n * A layer type used when creating layer renderers.\r\n * @enum {string}\r\n */\r\nexport default {\r\n  IMAGE: 'IMAGE',\r\n  TILE: 'TILE',\r\n  VECTOR_TILE: 'VECTOR_TILE',\r\n  VECTOR: 'VECTOR'\r\n};\r\n\r\n//# sourceMappingURL=LayerType.js.map","/**\r\n * @module ol/layer/VectorRenderType\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n * Render mode for vector layers:\r\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\r\n *    point symbols and texts are always rotated with the view and pixels are\r\n *    scaled during zoom animations.\r\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\r\n *    even during animations, but slower performance.\r\n * @api\r\n */\r\nexport default {\r\n  IMAGE: 'image',\r\n  VECTOR: 'vector'\r\n};\r\n\r\n//# sourceMappingURL=VectorRenderType.js.map","/**\r\n * @module ol/render/Event\r\n */\r\n\r\nimport Event from '../events/Event.js';\r\n\r\nvar RenderEvent = /*@__PURE__*/(function (Event) {\n  function RenderEvent(type, opt_vectorContext, opt_frameState, opt_context, opt_glContext) {\r\n\r\n    Event.call(this, type);\r\n\r\n    /**\r\n     * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\r\n     * @type {import(\"./VectorContext.js\").default|undefined}\r\n     * @api\r\n     */\r\n    this.vectorContext = opt_vectorContext;\r\n\r\n    /**\r\n     * An object representing the current render frame state.\r\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\r\n     * @api\r\n     */\r\n    this.frameState = opt_frameState;\r\n\r\n    /**\r\n     * Canvas context. Only available when a Canvas renderer is used, null\r\n     * otherwise.\r\n     * @type {CanvasRenderingContext2D|null|undefined}\r\n     * @api\r\n     */\r\n    this.context = opt_context;\r\n\r\n    /**\r\n     * WebGL context. Only available when a WebGL renderer is used, null\r\n     * otherwise.\r\n     * @type {import(\"../webgl/Context.js\").default|null|undefined}\r\n     * @api\r\n     */\r\n    this.glContext = opt_glContext;\r\n\r\n  }\n\n  if ( Event ) RenderEvent.__proto__ = Event;\n  RenderEvent.prototype = Object.create( Event && Event.prototype );\n  RenderEvent.prototype.constructor = RenderEvent;\n\n  return RenderEvent;\n}(Event));\r\n\r\nexport default RenderEvent;\r\n\r\n//# sourceMappingURL=Event.js.map","/**\r\n * @module ol/structs/LRUCache\r\n */\r\n\r\nimport {assert} from '../asserts.js';\r\nimport EventTarget from '../events/Target.js';\r\nimport EventType from '../events/EventType.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Entry\r\n * @property {string} key_\r\n * @property {Object} newer\r\n * @property {Object} older\r\n * @property {*} value_\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Implements a Least-Recently-Used cache where the keys do not conflict with\r\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\r\n * items from the cache is the responsibility of the user.\r\n *\r\n * @fires import(\"../events/Event.js\").Event\r\n * @template T\r\n */\r\nvar LRUCache = /*@__PURE__*/(function (EventTarget) {\n  function LRUCache(opt_highWaterMark) {\r\n\r\n    EventTarget.call(this);\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.count_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, Entry>}\r\n     */\r\n    this.entries_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {?Entry}\r\n     */\r\n    this.oldest_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?Entry}\r\n     */\r\n    this.newest_ = null;\r\n\r\n  }\n\n  if ( EventTarget ) LRUCache.__proto__ = EventTarget;\n  LRUCache.prototype = Object.create( EventTarget && EventTarget.prototype );\n  LRUCache.prototype.constructor = LRUCache;\r\n\r\n\r\n  /**\r\n   * @return {boolean} Can expire cache.\r\n   */\r\n  LRUCache.prototype.canExpireCache = function canExpireCache () {\r\n    return this.getCount() > this.highWaterMark;\r\n  };\r\n\r\n\r\n  /**\r\n   * FIXME empty description for jsdoc\r\n   */\r\n  LRUCache.prototype.clear = function clear () {\r\n    this.count_ = 0;\r\n    this.entries_ = {};\r\n    this.oldest_ = null;\r\n    this.newest_ = null;\r\n    this.dispatchEvent(EventType.CLEAR);\r\n  };\r\n\r\n\r\n  /**\r\n   * @param {string} key Key.\r\n   * @return {boolean} Contains key.\r\n   */\r\n  LRUCache.prototype.containsKey = function containsKey (key) {\r\n    return this.entries_.hasOwnProperty(key);\r\n  };\r\n\r\n\r\n  /**\r\n   * @param {function(this: S, T, string, LRUCache): ?} f The function\r\n   *     to call for every entry from the oldest to the newer. This function takes\r\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\r\n   *     The return value is ignored.\r\n   * @param {S=} opt_this The object to use as `this` in `f`.\r\n   * @template S\r\n   */\r\n  LRUCache.prototype.forEach = function forEach (f, opt_this) {\r\n    var entry = this.oldest_;\r\n    while (entry) {\r\n      f.call(opt_this, entry.value_, entry.key_, this);\r\n      entry = entry.newer;\r\n    }\r\n  };\r\n\r\n\r\n  /**\r\n   * @param {string} key Key.\r\n   * @return {T} Value.\r\n   */\r\n  LRUCache.prototype.get = function get (key) {\r\n    var entry = this.entries_[key];\r\n    assert(entry !== undefined,\r\n      15); // Tried to get a value for a key that does not exist in the cache\r\n    if (entry === this.newest_) {\r\n      return entry.value_;\r\n    } else if (entry === this.oldest_) {\r\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\r\n      this.oldest_.older = null;\r\n    } else {\r\n      entry.newer.older = entry.older;\r\n      entry.older.newer = entry.newer;\r\n    }\r\n    entry.newer = null;\r\n    entry.older = this.newest_;\r\n    this.newest_.newer = entry;\r\n    this.newest_ = entry;\r\n    return entry.value_;\r\n  };\r\n\r\n\r\n  /**\r\n   * Remove an entry from the cache.\r\n   * @param {string} key The entry key.\r\n   * @return {T} The removed entry.\r\n   */\r\n  LRUCache.prototype.remove = function remove (key) {\r\n    var entry = this.entries_[key];\r\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\r\n    if (entry === this.newest_) {\r\n      this.newest_ = /** @type {Entry} */ (entry.older);\r\n      if (this.newest_) {\r\n        this.newest_.newer = null;\r\n      }\r\n    } else if (entry === this.oldest_) {\r\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\r\n      if (this.oldest_) {\r\n        this.oldest_.older = null;\r\n      }\r\n    } else {\r\n      entry.newer.older = entry.older;\r\n      entry.older.newer = entry.newer;\r\n    }\r\n    delete this.entries_[key];\r\n    --this.count_;\r\n    return entry.value_;\r\n  };\r\n\r\n\r\n  /**\r\n   * @return {number} Count.\r\n   */\r\n  LRUCache.prototype.getCount = function getCount () {\r\n    return this.count_;\r\n  };\r\n\r\n\r\n  /**\r\n   * @return {Array<string>} Keys.\r\n   */\r\n  LRUCache.prototype.getKeys = function getKeys () {\r\n    var keys = new Array(this.count_);\r\n    var i = 0;\r\n    var entry;\r\n    for (entry = this.newest_; entry; entry = entry.older) {\r\n      keys[i++] = entry.key_;\r\n    }\r\n    return keys;\r\n  };\r\n\r\n\r\n  /**\r\n   * @return {Array<T>} Values.\r\n   */\r\n  LRUCache.prototype.getValues = function getValues () {\r\n    var values = new Array(this.count_);\r\n    var i = 0;\r\n    var entry;\r\n    for (entry = this.newest_; entry; entry = entry.older) {\r\n      values[i++] = entry.value_;\r\n    }\r\n    return values;\r\n  };\r\n\r\n\r\n  /**\r\n   * @return {T} Last value.\r\n   */\r\n  LRUCache.prototype.peekLast = function peekLast () {\r\n    return this.oldest_.value_;\r\n  };\r\n\r\n\r\n  /**\r\n   * @return {string} Last key.\r\n   */\r\n  LRUCache.prototype.peekLastKey = function peekLastKey () {\r\n    return this.oldest_.key_;\r\n  };\r\n\r\n\r\n  /**\r\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\r\n   * @return {string} The newest key.\r\n   */\r\n  LRUCache.prototype.peekFirstKey = function peekFirstKey () {\r\n    return this.newest_.key_;\r\n  };\r\n\r\n\r\n  /**\r\n   * @return {T} value Value.\r\n   */\r\n  LRUCache.prototype.pop = function pop () {\r\n    var entry = this.oldest_;\r\n    delete this.entries_[entry.key_];\r\n    if (entry.newer) {\r\n      entry.newer.older = null;\r\n    }\r\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\r\n    if (!this.oldest_) {\r\n      this.newest_ = null;\r\n    }\r\n    --this.count_;\r\n    return entry.value_;\r\n  };\r\n\r\n\r\n  /**\r\n   * @param {string} key Key.\r\n   * @param {T} value Value.\r\n   */\r\n  LRUCache.prototype.replace = function replace (key, value) {\r\n    this.get(key); // update `newest_`\r\n    this.entries_[key].value_ = value;\r\n  };\r\n\r\n\r\n  /**\r\n   * @param {string} key Key.\r\n   * @param {T} value Value.\r\n   */\r\n  LRUCache.prototype.set = function set (key, value) {\r\n    assert(!(key in this.entries_),\r\n      16); // Tried to set a value for a key that is used already\r\n    var entry = /** @type {Entry} */ ({\r\n      key_: key,\r\n      newer: null,\r\n      older: this.newest_,\r\n      value_: value\r\n    });\r\n    if (!this.newest_) {\r\n      this.oldest_ = entry;\r\n    } else {\r\n      this.newest_.newer = entry;\r\n    }\r\n    this.newest_ = entry;\r\n    this.entries_[key] = entry;\r\n    ++this.count_;\r\n  };\r\n\r\n\r\n  /**\r\n   * Set a maximum number of entries for the cache.\r\n   * @param {number} size Cache size.\r\n   * @api\r\n   */\r\n  LRUCache.prototype.setSize = function setSize (size) {\r\n    this.highWaterMark = size;\r\n  };\r\n\r\n\r\n  /**\r\n   * Prune the cache.\r\n   */\r\n  LRUCache.prototype.prune = function prune () {\r\n    while (this.canExpireCache()) {\r\n      this.pop();\r\n    }\r\n  };\n\n  return LRUCache;\n}(EventTarget));\r\n\r\nexport default LRUCache;\r\n\r\n//# sourceMappingURL=LRUCache.js.map","/**\r\n * @module ol/render/canvas\r\n */\r\nimport {getFontFamilies} from '../css.js';\r\nimport {createCanvasContext2D} from '../dom.js';\r\nimport {clear} from '../obj.js';\r\nimport LRUCache from '../structs/LRUCache.js';\r\nimport {create as createTransform} from '../transform.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} FillState\r\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} FillStrokeState\r\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\r\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\r\n * @property {string} [currentLineCap]\r\n * @property {Array<number>} currentLineDash\r\n * @property {number} [currentLineDashOffset]\r\n * @property {string} [currentLineJoin]\r\n * @property {number} [currentLineWidth]\r\n * @property {number} [currentMiterLimit]\r\n * @property {number} [lastStroke]\r\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\r\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\r\n * @property {string} [lineCap]\r\n * @property {Array<number>} lineDash\r\n * @property {number} [lineDashOffset]\r\n * @property {string} [lineJoin]\r\n * @property {number} [lineWidth]\r\n * @property {number} [miterLimit]\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} StrokeState\r\n * @property {string} lineCap\r\n * @property {Array<number>} lineDash\r\n * @property {number} lineDashOffset\r\n * @property {string} lineJoin\r\n * @property {number} lineWidth\r\n * @property {number} miterLimit\r\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} TextState\r\n * @property {string} font\r\n * @property {string} [textAlign]\r\n * @property {string} textBaseline\r\n * @property {string} [placement]\r\n * @property {number} [maxAngle]\r\n * @property {boolean} [overflow]\r\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\r\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\r\n * @property {number} [scale]\r\n * @property {Array<number>} [padding]\r\n */\r\n\r\n\r\n/**\r\n * Container for decluttered replay instructions that need to be rendered or\r\n * omitted together, i.e. when styles render both an image and text, or for the\r\n * characters that form text along lines. The basic elements of this array are\r\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\r\n * rendered extent of the group in pixel space. `count` is the number of styles\r\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\r\n * In addition to these four elements, declutter instruction arrays (i.e. the\r\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\r\n * @typedef {Array<*>} DeclutterGroup\r\n */\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nexport var defaultFont = '10px sans-serif';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {import(\"../color.js\").Color}\r\n */\r\nexport var defaultFillStyle = [0, 0, 0, 1];\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nexport var defaultLineCap = 'round';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Array<number>}\r\n */\r\nexport var defaultLineDash = [];\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var defaultLineDashOffset = 0;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nexport var defaultLineJoin = 'round';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var defaultMiterLimit = 10;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {import(\"../color.js\").Color}\r\n */\r\nexport var defaultStrokeStyle = [0, 0, 0, 1];\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nexport var defaultTextAlign = 'center';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nexport var defaultTextBaseline = 'middle';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Array<number>}\r\n */\r\nexport var defaultPadding = [0, 0, 0, 0];\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var defaultLineWidth = 1;\r\n\r\n\r\n/**\r\n * The label cache for text rendering. To change the default cache size of 2048\r\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\r\n * @type {LRUCache<HTMLCanvasElement>}\r\n * @api\r\n */\r\nexport var labelCache = new LRUCache();\r\n\r\n\r\n/**\r\n * @type {!Object<string, number>}\r\n */\r\nexport var checkedFonts = {};\r\n\r\n\r\n/**\r\n * @type {CanvasRenderingContext2D}\r\n */\r\nvar measureContext = null;\r\n\r\n\r\n/**\r\n * @type {!Object<string, number>}\r\n */\r\nexport var textHeights = {};\r\n\r\n\r\n/**\r\n * Clears the label cache when a font becomes available.\r\n * @param {string} fontSpec CSS font spec.\r\n */\r\nexport var checkFont = (function() {\r\n  var retries = 60;\r\n  var checked = checkedFonts;\r\n  var size = '32px ';\r\n  var referenceFonts = ['monospace', 'serif'];\r\n  var len = referenceFonts.length;\r\n  var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\r\n  var interval, referenceWidth;\r\n\r\n  function isAvailable(font) {\r\n    var context = getMeasureContext();\r\n    // Check weight ranges according to\r\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\r\n    for (var weight = 100; weight <= 700; weight += 300) {\r\n      var fontWeight = weight + ' ';\r\n      var available = true;\r\n      for (var i = 0; i < len; ++i) {\r\n        var referenceFont = referenceFonts[i];\r\n        context.font = fontWeight + size + referenceFont;\r\n        referenceWidth = context.measureText(text).width;\r\n        if (font != referenceFont) {\r\n          context.font = fontWeight + size + font + ',' + referenceFont;\r\n          var width = context.measureText(text).width;\r\n          // If width and referenceWidth are the same, then the fallback was used\r\n          // instead of the font we wanted, so the font is not available.\r\n          available = available && width != referenceWidth;\r\n        }\r\n      }\r\n      if (available) {\r\n        // Consider font available when it is available in one weight range.\r\n        //FIXME With this we miss rare corner cases, so we should consider\r\n        //FIXME checking availability for each requested weight range.\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function check() {\r\n    var done = true;\r\n    for (var font in checked) {\r\n      if (checked[font] < retries) {\r\n        if (isAvailable(font)) {\r\n          checked[font] = retries;\r\n          clear(textHeights);\r\n          // Make sure that loaded fonts are picked up by Safari\r\n          measureContext = null;\r\n          labelCache.clear();\r\n        } else {\r\n          ++checked[font];\r\n          done = false;\r\n        }\r\n      }\r\n    }\r\n    if (done) {\r\n      clearInterval(interval);\r\n      interval = undefined;\r\n    }\r\n  }\r\n\r\n  return function(fontSpec) {\r\n    var fontFamilies = getFontFamilies(fontSpec);\r\n    if (!fontFamilies) {\r\n      return;\r\n    }\r\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\r\n      var fontFamily = fontFamilies[i];\r\n      if (!(fontFamily in checked)) {\r\n        checked[fontFamily] = retries;\r\n        if (!isAvailable(fontFamily)) {\r\n          checked[fontFamily] = 0;\r\n          if (interval === undefined) {\r\n            interval = setInterval(check, 32);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n})();\r\n\r\n\r\n/**\r\n * @return {CanvasRenderingContext2D} Measure context.\r\n */\r\nfunction getMeasureContext() {\r\n  if (!measureContext) {\r\n    measureContext = createCanvasContext2D(1, 1);\r\n  }\r\n  return measureContext;\r\n}\r\n\r\n\r\n/**\r\n * @param {string} font Font to use for measuring.\r\n * @return {import(\"../size.js\").Size} Measurement.\r\n */\r\nexport var measureTextHeight = (function() {\r\n  var span;\r\n  var heights = textHeights;\r\n  return function(font) {\r\n    var height = heights[font];\r\n    if (height == undefined) {\r\n      if (!span) {\r\n        span = document.createElement('span');\r\n        span.textContent = 'M';\r\n        span.style.margin = span.style.padding = '0 !important';\r\n        span.style.position = 'absolute !important';\r\n        span.style.left = '-99999px !important';\r\n      }\r\n      span.style.font = font;\r\n      document.body.appendChild(span);\r\n      height = heights[font] = span.offsetHeight;\r\n      document.body.removeChild(span);\r\n    }\r\n    return height;\r\n  };\r\n})();\r\n\r\n\r\n/**\r\n * @param {string} font Font.\r\n * @param {string} text Text.\r\n * @return {number} Width.\r\n */\r\nexport function measureTextWidth(font, text) {\r\n  var measureContext = getMeasureContext();\r\n  if (font != measureContext.font) {\r\n    measureContext.font = font;\r\n  }\r\n  return measureContext.measureText(text).width;\r\n}\r\n\r\n\r\n/**\r\n * @param {CanvasRenderingContext2D} context Context.\r\n * @param {number} rotation Rotation.\r\n * @param {number} offsetX X offset.\r\n * @param {number} offsetY Y offset.\r\n */\r\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\r\n  if (rotation !== 0) {\r\n    context.translate(offsetX, offsetY);\r\n    context.rotate(rotation);\r\n    context.translate(-offsetX, -offsetY);\r\n  }\r\n}\r\n\r\n\r\nexport var resetTransform = createTransform();\r\n\r\n\r\n/**\r\n * @param {CanvasRenderingContext2D} context Context.\r\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\r\n * @param {number} opacity Opacity.\r\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\r\n * @param {number} originX Origin X.\r\n * @param {number} originY Origin Y.\r\n * @param {number} w Width.\r\n * @param {number} h Height.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @param {number} scale Scale.\r\n */\r\nexport function drawImage(context,\r\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\r\n  var alpha;\r\n  if (opacity != 1) {\r\n    alpha = context.globalAlpha;\r\n    context.globalAlpha = alpha * opacity;\r\n  }\r\n  if (transform) {\r\n    context.setTransform.apply(context, transform);\r\n  }\r\n\r\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\r\n\r\n  if (alpha) {\r\n    context.globalAlpha = alpha;\r\n  }\r\n  if (transform) {\r\n    context.setTransform.apply(context, resetTransform);\r\n  }\r\n}\r\n\r\n//# sourceMappingURL=canvas.js.map","/**\r\n * @module ol/render/VectorContext\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Context for drawing geometries.  A vector context is available on render\r\n * events and does not need to be constructed directly.\r\n * @api\r\n */\r\nvar VectorContext = function VectorContext () {};\n\nVectorContext.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {};\r\n\r\n/**\r\n * Render a geometry.\r\n *\r\n * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\r\n */\r\nVectorContext.prototype.drawGeometry = function drawGeometry (geometry) {};\r\n\r\n/**\r\n * Set the rendering style.\r\n *\r\n * @param {import(\"../style/Style.js\").default} style The rendering style.\r\n */\r\nVectorContext.prototype.setStyle = function setStyle (style) {};\r\n\r\n/**\r\n * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\r\n * @param {import(\"../Feature.js\").default} feature Feature.\r\n */\r\nVectorContext.prototype.drawCircle = function drawCircle (circleGeometry, feature) {};\r\n\r\n/**\r\n * @param {import(\"../Feature.js\").default} feature Feature.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n */\r\nVectorContext.prototype.drawFeature = function drawFeature (feature, style) {};\r\n\r\n/**\r\n * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\r\n * @param {import(\"../Feature.js\").default} feature Feature.\r\n */\r\nVectorContext.prototype.drawGeometryCollection = function drawGeometryCollection (geometryCollectionGeometry, feature) {};\r\n\r\n/**\r\n * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\r\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\r\n */\r\nVectorContext.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {};\r\n\r\n/**\r\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\r\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\r\n */\r\nVectorContext.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {};\r\n\r\n/**\r\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\r\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\r\n */\r\nVectorContext.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {};\r\n\r\n/**\r\n * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\r\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\r\n */\r\nVectorContext.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {};\r\n\r\n/**\r\n * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\r\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\r\n */\r\nVectorContext.prototype.drawPoint = function drawPoint (pointGeometry, feature) {};\r\n\r\n/**\r\n * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\r\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\r\n */\r\nVectorContext.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {};\r\n\r\n/**\r\n * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\r\n */\r\nVectorContext.prototype.drawText = function drawText (geometry, feature) {};\r\n\r\n/**\r\n * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\r\n * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\r\n */\r\nVectorContext.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {};\r\n\r\n/**\r\n * @param {import(\"../style/Image.js\").default} imageStyle Image style.\r\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\r\n */\r\nVectorContext.prototype.setImageStyle = function setImageStyle (imageStyle, opt_declutterGroup) {};\r\n\r\n/**\r\n * @param {import(\"../style/Text.js\").default} textStyle Text style.\r\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\r\n */\r\nVectorContext.prototype.setTextStyle = function setTextStyle (textStyle, opt_declutterGroup) {};\r\n\r\nexport default VectorContext;\r\n\r\n//# sourceMappingURL=VectorContext.js.map","/**\r\n * @module ol/render/canvas/Immediate\r\n */\r\n// FIXME test, especially polygons with holes and multipolygons\r\n// FIXME need to handle large thick features (where pixel size matters)\r\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\r\n\r\nimport {equals} from '../../array.js';\r\nimport {asColorLike} from '../../colorlike.js';\r\nimport {intersects} from '../../extent.js';\r\nimport GeometryType from '../../geom/GeometryType.js';\r\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\r\nimport {transform2D} from '../../geom/flat/transform.js';\r\nimport {CANVAS_LINE_DASH} from '../../has.js';\r\nimport VectorContext from '../VectorContext.js';\r\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\r\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\r\n\r\n/**\r\n * @classdesc\r\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\r\n * direct rendering of features and geometries to an HTML5 Canvas context.\r\n * Instances of this class are created internally by the library and\r\n * provided to application code as vectorContext member of the\r\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\r\n * render events emitted by layers and maps.\r\n */\r\nvar CanvasImmediateRenderer = /*@__PURE__*/(function (VectorContext) {\n  function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\r\n    VectorContext.call(this);\r\n\r\n    /**\r\n     * @private\r\n     * @type {CanvasRenderingContext2D}\r\n     */\r\n    this.context_ = context;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.pixelRatio_ = pixelRatio;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.extent_ = extent;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.transform_ = transform;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.viewRotation_ = viewRotation;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").FillState}\r\n     */\r\n    this.contextFillState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").StrokeState}\r\n     */\r\n    this.contextStrokeState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").TextState}\r\n     */\r\n    this.contextTextState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").FillState}\r\n     */\r\n    this.fillState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").StrokeState}\r\n     */\r\n    this.strokeState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\r\n     */\r\n    this.image_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageAnchorX_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageAnchorY_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageHeight_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageOpacity_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageOriginX_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageOriginY_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.imageRotateWithView_ = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageRotation_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageScale_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.imageWidth_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.text_ = '';\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.textOffsetX_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.textOffsetY_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.textRotateWithView_ = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.textRotation_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.textScale_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").FillState}\r\n     */\r\n    this.textFillState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").StrokeState}\r\n     */\r\n    this.textStrokeState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").TextState}\r\n     */\r\n    this.textState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.pixelCoordinates_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.tmpLocalTransform_ = createTransform();\r\n\r\n  }\n\n  if ( VectorContext ) CanvasImmediateRenderer.__proto__ = VectorContext;\n  CanvasImmediateRenderer.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasImmediateRenderer.prototype.constructor = CanvasImmediateRenderer;\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   * @private\r\n   */\r\n  CanvasImmediateRenderer.prototype.drawImages_ = function drawImages_ (flatCoordinates, offset, end, stride) {\r\n    if (!this.image_) {\r\n      return;\r\n    }\r\n    var pixelCoordinates = transform2D(\r\n      flatCoordinates, offset, end, 2, this.transform_,\r\n      this.pixelCoordinates_);\r\n    var context = this.context_;\r\n    var localTransform = this.tmpLocalTransform_;\r\n    var alpha = context.globalAlpha;\r\n    if (this.imageOpacity_ != 1) {\r\n      context.globalAlpha = alpha * this.imageOpacity_;\r\n    }\r\n    var rotation = this.imageRotation_;\r\n    if (this.imageRotateWithView_) {\r\n      rotation += this.viewRotation_;\r\n    }\r\n    for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\r\n      var x = pixelCoordinates[i] - this.imageAnchorX_;\r\n      var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\r\n      if (rotation !== 0 || this.imageScale_ != 1) {\r\n        var centerX = x + this.imageAnchorX_;\r\n        var centerY = y + this.imageAnchorY_;\r\n        composeTransform(localTransform,\r\n          centerX, centerY,\r\n          this.imageScale_, this.imageScale_,\r\n          rotation,\r\n          -centerX, -centerY);\r\n        context.setTransform.apply(context, localTransform);\r\n      }\r\n      context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\r\n        this.imageWidth_, this.imageHeight_, x, y,\r\n        this.imageWidth_, this.imageHeight_);\r\n    }\r\n    if (rotation !== 0 || this.imageScale_ != 1) {\r\n      context.setTransform(1, 0, 0, 1, 0, 0);\r\n    }\r\n    if (this.imageOpacity_ != 1) {\r\n      context.globalAlpha = alpha;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   * @private\r\n   */\r\n  CanvasImmediateRenderer.prototype.drawText_ = function drawText_ (flatCoordinates, offset, end, stride) {\r\n    if (!this.textState_ || this.text_ === '') {\r\n      return;\r\n    }\r\n    if (this.textFillState_) {\r\n      this.setContextFillState_(this.textFillState_);\r\n    }\r\n    if (this.textStrokeState_) {\r\n      this.setContextStrokeState_(this.textStrokeState_);\r\n    }\r\n    this.setContextTextState_(this.textState_);\r\n    var pixelCoordinates = transform2D(\r\n      flatCoordinates, offset, end, stride, this.transform_,\r\n      this.pixelCoordinates_);\r\n    var context = this.context_;\r\n    var rotation = this.textRotation_;\r\n    if (this.textRotateWithView_) {\r\n      rotation += this.viewRotation_;\r\n    }\r\n    for (; offset < end; offset += stride) {\r\n      var x = pixelCoordinates[offset] + this.textOffsetX_;\r\n      var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\r\n      if (rotation !== 0 || this.textScale_ != 1) {\r\n        var localTransform = composeTransform(this.tmpLocalTransform_,\r\n          x, y,\r\n          this.textScale_, this.textScale_,\r\n          rotation,\r\n          -x, -y);\r\n        context.setTransform.apply(context, localTransform);\r\n      }\r\n      if (this.textStrokeState_) {\r\n        context.strokeText(this.text_, x, y);\r\n      }\r\n      if (this.textFillState_) {\r\n        context.fillText(this.text_, x, y);\r\n      }\r\n    }\r\n    if (rotation !== 0 || this.textScale_ != 1) {\r\n      context.setTransform(1, 0, 0, 1, 0, 0);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   * @param {boolean} close Close.\r\n   * @private\r\n   * @return {number} end End.\r\n   */\r\n  CanvasImmediateRenderer.prototype.moveToLineTo_ = function moveToLineTo_ (flatCoordinates, offset, end, stride, close) {\r\n    var context = this.context_;\r\n    var pixelCoordinates = transform2D(\r\n      flatCoordinates, offset, end, stride, this.transform_,\r\n      this.pixelCoordinates_);\r\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\r\n    var length = pixelCoordinates.length;\r\n    if (close) {\r\n      length -= 2;\r\n    }\r\n    for (var i = 2; i < length; i += 2) {\r\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\r\n    }\r\n    if (close) {\r\n      context.closePath();\r\n    }\r\n    return end;\r\n  };\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {Array<number>} ends Ends.\r\n   * @param {number} stride Stride.\r\n   * @private\r\n   * @return {number} End.\r\n   */\r\n  CanvasImmediateRenderer.prototype.drawRings_ = function drawRings_ (flatCoordinates, offset, ends, stride) {\r\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\r\n    }\r\n    return offset;\r\n  };\r\n\r\n  /**\r\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\r\n   * the current fill and stroke styles.\r\n   *\r\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\r\n   * @override\r\n   * @api\r\n   */\r\n  CanvasImmediateRenderer.prototype.drawCircle = function drawCircle (geometry) {\r\n    if (!intersects(this.extent_, geometry.getExtent())) {\r\n      return;\r\n    }\r\n    if (this.fillState_ || this.strokeState_) {\r\n      if (this.fillState_) {\r\n        this.setContextFillState_(this.fillState_);\r\n      }\r\n      if (this.strokeState_) {\r\n        this.setContextStrokeState_(this.strokeState_);\r\n      }\r\n      var pixelCoordinates = transformGeom2D(\r\n        geometry, this.transform_, this.pixelCoordinates_);\r\n      var dx = pixelCoordinates[2] - pixelCoordinates[0];\r\n      var dy = pixelCoordinates[3] - pixelCoordinates[1];\r\n      var radius = Math.sqrt(dx * dx + dy * dy);\r\n      var context = this.context_;\r\n      context.beginPath();\r\n      context.arc(\r\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\r\n      if (this.fillState_) {\r\n        context.fill();\r\n      }\r\n      if (this.strokeState_) {\r\n        context.stroke();\r\n      }\r\n    }\r\n    if (this.text_ !== '') {\r\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Set the rendering style.  Note that since this is an immediate rendering API,\r\n   * any `zIndex` on the provided style will be ignored.\r\n   *\r\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\r\n   * @override\r\n   * @api\r\n   */\r\n  CanvasImmediateRenderer.prototype.setStyle = function setStyle (style) {\r\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\r\n    this.setImageStyle(style.getImage());\r\n    this.setTextStyle(style.getText());\r\n  };\r\n\r\n  /**\r\n   * Render a geometry into the canvas.  Call\r\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\r\n   *\r\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\r\n   * @override\r\n   * @api\r\n   */\r\n  CanvasImmediateRenderer.prototype.drawGeometry = function drawGeometry (geometry) {\r\n    var type = geometry.getType();\r\n    switch (type) {\r\n      case GeometryType.POINT:\r\n        this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\r\n        break;\r\n      case GeometryType.LINE_STRING:\r\n        this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\r\n        break;\r\n      case GeometryType.POLYGON:\r\n        this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\r\n        break;\r\n      case GeometryType.MULTI_POINT:\r\n        this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\r\n        break;\r\n      case GeometryType.MULTI_LINE_STRING:\r\n        this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\r\n        break;\r\n      case GeometryType.MULTI_POLYGON:\r\n        this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\r\n        break;\r\n      case GeometryType.GEOMETRY_COLLECTION:\r\n        this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\r\n        break;\r\n      case GeometryType.CIRCLE:\r\n        this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\r\n   * style will be ignored - features are rendered immediately in the order that\r\n   * this method is called.  If you need `zIndex` support, you should be using an\r\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\r\n   *\r\n   * @param {import(\"../../Feature.js\").default} feature Feature.\r\n   * @param {import(\"../../style/Style.js\").default} style Style.\r\n   * @override\r\n   * @api\r\n   */\r\n  CanvasImmediateRenderer.prototype.drawFeature = function drawFeature (feature, style) {\r\n    var geometry = style.getGeometryFunction()(feature);\r\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\r\n      return;\r\n    }\r\n    this.setStyle(style);\r\n    this.drawGeometry(geometry);\r\n  };\r\n\r\n  /**\r\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\r\n   * uses the current styles appropriate for each geometry in the collection.\r\n   *\r\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\r\n   * @override\r\n   */\r\n  CanvasImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection (geometry) {\r\n    var geometries = geometry.getGeometriesArray();\r\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\r\n      this.drawGeometry(geometries[i]);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\r\n   * the current style.\r\n   *\r\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\r\n   * @override\r\n   */\r\n  CanvasImmediateRenderer.prototype.drawPoint = function drawPoint (geometry) {\r\n    var flatCoordinates = geometry.getFlatCoordinates();\r\n    var stride = geometry.getStride();\r\n    if (this.image_) {\r\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\r\n    }\r\n    if (this.text_ !== '') {\r\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\r\n   * uses the current style.\r\n   *\r\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\r\n   * @override\r\n   */\r\n  CanvasImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint (geometry) {\r\n    var flatCoordinates = geometry.getFlatCoordinates();\r\n    var stride = geometry.getStride();\r\n    if (this.image_) {\r\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\r\n    }\r\n    if (this.text_ !== '') {\r\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Render a LineString into the canvas.  Rendering is immediate and uses\r\n   * the current style.\r\n   *\r\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\r\n   * @override\r\n   */\r\n  CanvasImmediateRenderer.prototype.drawLineString = function drawLineString (geometry) {\r\n    if (!intersects(this.extent_, geometry.getExtent())) {\r\n      return;\r\n    }\r\n    if (this.strokeState_) {\r\n      this.setContextStrokeState_(this.strokeState_);\r\n      var context = this.context_;\r\n      var flatCoordinates = geometry.getFlatCoordinates();\r\n      context.beginPath();\r\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\r\n        geometry.getStride(), false);\r\n      context.stroke();\r\n    }\r\n    if (this.text_ !== '') {\r\n      var flatMidpoint = geometry.getFlatMidpoint();\r\n      this.drawText_(flatMidpoint, 0, 2, 2);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\r\n   * and uses the current style.\r\n   *\r\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\r\n   * @override\r\n   */\r\n  CanvasImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString (geometry) {\r\n    var geometryExtent = geometry.getExtent();\r\n    if (!intersects(this.extent_, geometryExtent)) {\r\n      return;\r\n    }\r\n    if (this.strokeState_) {\r\n      this.setContextStrokeState_(this.strokeState_);\r\n      var context = this.context_;\r\n      var flatCoordinates = geometry.getFlatCoordinates();\r\n      var offset = 0;\r\n      var ends = /** @type {Array<number>} */ (geometry.getEnds());\r\n      var stride = geometry.getStride();\r\n      context.beginPath();\r\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n        offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\r\n      }\r\n      context.stroke();\r\n    }\r\n    if (this.text_ !== '') {\r\n      var flatMidpoints = geometry.getFlatMidpoints();\r\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\r\n   * the current style.\r\n   *\r\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\r\n   * @override\r\n   */\r\n  CanvasImmediateRenderer.prototype.drawPolygon = function drawPolygon (geometry) {\r\n    if (!intersects(this.extent_, geometry.getExtent())) {\r\n      return;\r\n    }\r\n    if (this.strokeState_ || this.fillState_) {\r\n      if (this.fillState_) {\r\n        this.setContextFillState_(this.fillState_);\r\n      }\r\n      if (this.strokeState_) {\r\n        this.setContextStrokeState_(this.strokeState_);\r\n      }\r\n      var context = this.context_;\r\n      context.beginPath();\r\n      this.drawRings_(geometry.getOrientedFlatCoordinates(),\r\n        0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\r\n      if (this.fillState_) {\r\n        context.fill();\r\n      }\r\n      if (this.strokeState_) {\r\n        context.stroke();\r\n      }\r\n    }\r\n    if (this.text_ !== '') {\r\n      var flatInteriorPoint = geometry.getFlatInteriorPoint();\r\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\r\n   * uses the current style.\r\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\r\n   * @override\r\n   */\r\n  CanvasImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon (geometry) {\r\n    if (!intersects(this.extent_, geometry.getExtent())) {\r\n      return;\r\n    }\r\n    if (this.strokeState_ || this.fillState_) {\r\n      if (this.fillState_) {\r\n        this.setContextFillState_(this.fillState_);\r\n      }\r\n      if (this.strokeState_) {\r\n        this.setContextStrokeState_(this.strokeState_);\r\n      }\r\n      var context = this.context_;\r\n      var flatCoordinates = geometry.getOrientedFlatCoordinates();\r\n      var offset = 0;\r\n      var endss = geometry.getEndss();\r\n      var stride = geometry.getStride();\r\n      context.beginPath();\r\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\r\n        var ends = endss[i];\r\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\r\n      }\r\n      if (this.fillState_) {\r\n        context.fill();\r\n      }\r\n      if (this.strokeState_) {\r\n        context.stroke();\r\n      }\r\n    }\r\n    if (this.text_ !== '') {\r\n      var flatInteriorPoints = geometry.getFlatInteriorPoints();\r\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\r\n   * @private\r\n   */\r\n  CanvasImmediateRenderer.prototype.setContextFillState_ = function setContextFillState_ (fillState) {\r\n    var context = this.context_;\r\n    var contextFillState = this.contextFillState_;\r\n    if (!contextFillState) {\r\n      context.fillStyle = fillState.fillStyle;\r\n      this.contextFillState_ = {\r\n        fillStyle: fillState.fillStyle\r\n      };\r\n    } else {\r\n      if (contextFillState.fillStyle != fillState.fillStyle) {\r\n        contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\r\n   * @private\r\n   */\r\n  CanvasImmediateRenderer.prototype.setContextStrokeState_ = function setContextStrokeState_ (strokeState) {\r\n    var context = this.context_;\r\n    var contextStrokeState = this.contextStrokeState_;\r\n    if (!contextStrokeState) {\r\n      context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\r\n      if (CANVAS_LINE_DASH) {\r\n        context.setLineDash(strokeState.lineDash);\r\n        context.lineDashOffset = strokeState.lineDashOffset;\r\n      }\r\n      context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\r\n      context.lineWidth = strokeState.lineWidth;\r\n      context.miterLimit = strokeState.miterLimit;\r\n      context.strokeStyle = strokeState.strokeStyle;\r\n      this.contextStrokeState_ = {\r\n        lineCap: strokeState.lineCap,\r\n        lineDash: strokeState.lineDash,\r\n        lineDashOffset: strokeState.lineDashOffset,\r\n        lineJoin: strokeState.lineJoin,\r\n        lineWidth: strokeState.lineWidth,\r\n        miterLimit: strokeState.miterLimit,\r\n        strokeStyle: strokeState.strokeStyle\r\n      };\r\n    } else {\r\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\r\n        contextStrokeState.lineCap = context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\r\n      }\r\n      if (CANVAS_LINE_DASH) {\r\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\r\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\r\n        }\r\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\r\n          contextStrokeState.lineDashOffset = context.lineDashOffset =\r\n              strokeState.lineDashOffset;\r\n        }\r\n      }\r\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\r\n        contextStrokeState.lineJoin = context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\r\n      }\r\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\r\n        contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\r\n      }\r\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\r\n        contextStrokeState.miterLimit = context.miterLimit =\r\n            strokeState.miterLimit;\r\n      }\r\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\r\n        contextStrokeState.strokeStyle = context.strokeStyle =\r\n            strokeState.strokeStyle;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\r\n   * @private\r\n   */\r\n  CanvasImmediateRenderer.prototype.setContextTextState_ = function setContextTextState_ (textState) {\r\n    var context = this.context_;\r\n    var contextTextState = this.contextTextState_;\r\n    var textAlign = textState.textAlign ?\r\n      textState.textAlign : defaultTextAlign;\r\n    if (!contextTextState) {\r\n      context.font = textState.font;\r\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\r\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\r\n      this.contextTextState_ = {\r\n        font: textState.font,\r\n        textAlign: textAlign,\r\n        textBaseline: textState.textBaseline\r\n      };\r\n    } else {\r\n      if (contextTextState.font != textState.font) {\r\n        contextTextState.font = context.font = textState.font;\r\n      }\r\n      if (contextTextState.textAlign != textAlign) {\r\n        contextTextState.textAlign = context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\r\n      }\r\n      if (contextTextState.textBaseline != textState.textBaseline) {\r\n        contextTextState.textBaseline = context.textBaseline =\r\n          /** @type {CanvasTextBaseline} */ (textState.textBaseline);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Set the fill and stroke style for subsequent draw operations.  To clear\r\n   * either fill or stroke styles, pass null for the appropriate parameter.\r\n   *\r\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\r\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\r\n   * @override\r\n   */\r\n  CanvasImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\r\n    if (!fillStyle) {\r\n      this.fillState_ = null;\r\n    } else {\r\n      var fillStyleColor = fillStyle.getColor();\r\n      this.fillState_ = {\r\n        fillStyle: asColorLike(fillStyleColor ?\r\n          fillStyleColor : defaultFillStyle)\r\n      };\r\n    }\r\n    if (!strokeStyle) {\r\n      this.strokeState_ = null;\r\n    } else {\r\n      var strokeStyleColor = strokeStyle.getColor();\r\n      var strokeStyleLineCap = strokeStyle.getLineCap();\r\n      var strokeStyleLineDash = strokeStyle.getLineDash();\r\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\r\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\r\n      var strokeStyleWidth = strokeStyle.getWidth();\r\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\r\n      this.strokeState_ = {\r\n        lineCap: strokeStyleLineCap !== undefined ?\r\n          strokeStyleLineCap : defaultLineCap,\r\n        lineDash: strokeStyleLineDash ?\r\n          strokeStyleLineDash : defaultLineDash,\r\n        lineDashOffset: strokeStyleLineDashOffset ?\r\n          strokeStyleLineDashOffset : defaultLineDashOffset,\r\n        lineJoin: strokeStyleLineJoin !== undefined ?\r\n          strokeStyleLineJoin : defaultLineJoin,\r\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\r\n          strokeStyleWidth : defaultLineWidth),\r\n        miterLimit: strokeStyleMiterLimit !== undefined ?\r\n          strokeStyleMiterLimit : defaultMiterLimit,\r\n        strokeStyle: asColorLike(strokeStyleColor ?\r\n          strokeStyleColor : defaultStrokeStyle)\r\n      };\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Set the image style for subsequent draw operations.  Pass null to remove\r\n   * the image style.\r\n   *\r\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\r\n   * @override\r\n   */\r\n  CanvasImmediateRenderer.prototype.setImageStyle = function setImageStyle (imageStyle) {\r\n    if (!imageStyle) {\r\n      this.image_ = null;\r\n    } else {\r\n      var imageAnchor = imageStyle.getAnchor();\r\n      // FIXME pixel ratio\r\n      var imageImage = imageStyle.getImage(1);\r\n      var imageOrigin = imageStyle.getOrigin();\r\n      var imageSize = imageStyle.getSize();\r\n      this.imageAnchorX_ = imageAnchor[0];\r\n      this.imageAnchorY_ = imageAnchor[1];\r\n      this.imageHeight_ = imageSize[1];\r\n      this.image_ = imageImage;\r\n      this.imageOpacity_ = imageStyle.getOpacity();\r\n      this.imageOriginX_ = imageOrigin[0];\r\n      this.imageOriginY_ = imageOrigin[1];\r\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\r\n      this.imageRotation_ = imageStyle.getRotation();\r\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\r\n      this.imageWidth_ = imageSize[0];\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Set the text style for subsequent draw operations.  Pass null to\r\n   * remove the text style.\r\n   *\r\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\r\n   * @override\r\n   */\r\n  CanvasImmediateRenderer.prototype.setTextStyle = function setTextStyle (textStyle) {\r\n    if (!textStyle) {\r\n      this.text_ = '';\r\n    } else {\r\n      var textFillStyle = textStyle.getFill();\r\n      if (!textFillStyle) {\r\n        this.textFillState_ = null;\r\n      } else {\r\n        var textFillStyleColor = textFillStyle.getColor();\r\n        this.textFillState_ = {\r\n          fillStyle: asColorLike(textFillStyleColor ?\r\n            textFillStyleColor : defaultFillStyle)\r\n        };\r\n      }\r\n      var textStrokeStyle = textStyle.getStroke();\r\n      if (!textStrokeStyle) {\r\n        this.textStrokeState_ = null;\r\n      } else {\r\n        var textStrokeStyleColor = textStrokeStyle.getColor();\r\n        var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\r\n        var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\r\n        var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\r\n        var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\r\n        var textStrokeStyleWidth = textStrokeStyle.getWidth();\r\n        var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\r\n        this.textStrokeState_ = {\r\n          lineCap: textStrokeStyleLineCap !== undefined ?\r\n            textStrokeStyleLineCap : defaultLineCap,\r\n          lineDash: textStrokeStyleLineDash ?\r\n            textStrokeStyleLineDash : defaultLineDash,\r\n          lineDashOffset: textStrokeStyleLineDashOffset ?\r\n            textStrokeStyleLineDashOffset : defaultLineDashOffset,\r\n          lineJoin: textStrokeStyleLineJoin !== undefined ?\r\n            textStrokeStyleLineJoin : defaultLineJoin,\r\n          lineWidth: textStrokeStyleWidth !== undefined ?\r\n            textStrokeStyleWidth : defaultLineWidth,\r\n          miterLimit: textStrokeStyleMiterLimit !== undefined ?\r\n            textStrokeStyleMiterLimit : defaultMiterLimit,\r\n          strokeStyle: asColorLike(textStrokeStyleColor ?\r\n            textStrokeStyleColor : defaultStrokeStyle)\r\n        };\r\n      }\r\n      var textFont = textStyle.getFont();\r\n      var textOffsetX = textStyle.getOffsetX();\r\n      var textOffsetY = textStyle.getOffsetY();\r\n      var textRotateWithView = textStyle.getRotateWithView();\r\n      var textRotation = textStyle.getRotation();\r\n      var textScale = textStyle.getScale();\r\n      var textText = textStyle.getText();\r\n      var textTextAlign = textStyle.getTextAlign();\r\n      var textTextBaseline = textStyle.getTextBaseline();\r\n      this.textState_ = {\r\n        font: textFont !== undefined ?\r\n          textFont : defaultFont,\r\n        textAlign: textTextAlign !== undefined ?\r\n          textTextAlign : defaultTextAlign,\r\n        textBaseline: textTextBaseline !== undefined ?\r\n          textTextBaseline : defaultTextBaseline\r\n      };\r\n      this.text_ = textText !== undefined ? textText : '';\r\n      this.textOffsetX_ =\r\n          textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\r\n      this.textOffsetY_ =\r\n          textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\r\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\r\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\r\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\r\n        textScale : 1);\r\n    }\r\n  };\n\n  return CanvasImmediateRenderer;\n}(VectorContext));\r\n\r\n\r\nexport default CanvasImmediateRenderer;\r\n\r\n//# sourceMappingURL=Immediate.js.map","/**\r\n * @module ol/style/IconImageCache\r\n */\r\nimport {asString} from '../color.js';\r\n\r\n/**\r\n * @classdesc\r\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\r\n */\r\nvar IconImageCache = function IconImageCache() {\r\n\r\n  /**\r\n  * @type {!Object<string, import(\"./IconImage.js\").default>}\r\n  * @private\r\n  */\r\n  this.cache_ = {};\r\n\r\n  /**\r\n  * @type {number}\r\n  * @private\r\n  */\r\n  this.cacheSize_ = 0;\r\n\r\n  /**\r\n  * @type {number}\r\n  * @private\r\n  */\r\n  this.maxCacheSize_ = 32;\r\n};\r\n\r\n/**\r\n* FIXME empty description for jsdoc\r\n*/\r\nIconImageCache.prototype.clear = function clear () {\r\n  this.cache_ = {};\r\n  this.cacheSize_ = 0;\r\n};\r\n\r\n/**\r\n* FIXME empty description for jsdoc\r\n*/\r\nIconImageCache.prototype.expire = function expire () {\r\n  if (this.cacheSize_ > this.maxCacheSize_) {\r\n    var i = 0;\r\n    for (var key in this.cache_) {\r\n      var iconImage = this.cache_[key];\r\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\r\n        delete this.cache_[key];\r\n        --this.cacheSize_;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n* @param {string} src Src.\r\n* @param {?string} crossOrigin Cross origin.\r\n* @param {import(\"../color.js\").Color} color Color.\r\n* @return {import(\"./IconImage.js\").default} Icon image.\r\n*/\r\nIconImageCache.prototype.get = function get (src, crossOrigin, color) {\r\n  var key = getKey(src, crossOrigin, color);\r\n  return key in this.cache_ ? this.cache_[key] : null;\r\n};\r\n\r\n/**\r\n* @param {string} src Src.\r\n* @param {?string} crossOrigin Cross origin.\r\n* @param {import(\"../color.js\").Color} color Color.\r\n* @param {import(\"./IconImage.js\").default} iconImage Icon image.\r\n*/\r\nIconImageCache.prototype.set = function set (src, crossOrigin, color, iconImage) {\r\n  var key = getKey(src, crossOrigin, color);\r\n  this.cache_[key] = iconImage;\r\n  ++this.cacheSize_;\r\n};\r\n\r\n/**\r\n* Set the cache size of the icon cache. Default is `32`. Change this value when\r\n* your map uses more than 32 different icon images and you are not caching icon\r\n* styles on the application level.\r\n* @param {number} maxCacheSize Cache max size.\r\n* @api\r\n*/\r\nIconImageCache.prototype.setSize = function setSize (maxCacheSize) {\r\n  this.maxCacheSize_ = maxCacheSize;\r\n  this.expire();\r\n};\r\n\r\n\r\n/**\r\n * @param {string} src Src.\r\n * @param {?string} crossOrigin Cross origin.\r\n * @param {import(\"../color.js\").Color} color Color.\r\n * @return {string} Cache key.\r\n */\r\nfunction getKey(src, crossOrigin, color) {\r\n  var colorString = color ? asString(color) : 'null';\r\n  return crossOrigin + ':' + src + ':' + colorString;\r\n}\r\n\r\n\r\nexport default IconImageCache;\r\n\r\n\r\n/**\r\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\r\n * {@link module:ol/style/Icon~Icon} images.\r\n * @api\r\n */\r\nexport var shared = new IconImageCache();\r\n\r\n//# sourceMappingURL=IconImageCache.js.map","/**\r\n * @module ol/renderer/Map\r\n */\r\nimport {abstract, getUid} from '../util.js';\r\nimport Disposable from '../Disposable.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {getWidth} from '../extent.js';\r\nimport {TRUE} from '../functions.js';\r\nimport {visibleAtResolution} from '../layer/Layer.js';\r\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\r\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\r\n\r\n/**\r\n * @abstract\r\n */\r\nvar MapRenderer = /*@__PURE__*/(function (Disposable) {\n  function MapRenderer(map) {\r\n    Disposable.call(this);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../PluggableMap.js\").default}\r\n     */\r\n    this.map_ = map;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, import(\"./Layer.js\").default>}\r\n     */\r\n    this.layerRenderers_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\r\n     */\r\n    this.layerRendererListeners_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<typeof import(\"./Layer.js\").default>}\r\n     */\r\n    this.layerRendererConstructors_ = [];\r\n\r\n  }\n\n  if ( Disposable ) MapRenderer.__proto__ = Disposable;\n  MapRenderer.prototype = Object.create( Disposable && Disposable.prototype );\n  MapRenderer.prototype.constructor = MapRenderer;\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {import(\"../render/EventType.js\").default} type Event type.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   */\r\n  MapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\r\n    abstract();\r\n  };\r\n\r\n  /**\r\n   * Register layer renderer constructors.\r\n   * @param {Array<typeof import(\"./Layer.js\").default>} constructors Layer renderers.\r\n   */\r\n  MapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\r\n    this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\r\n   * @protected\r\n   */\r\n  MapRenderer.prototype.calculateMatrices2D = function calculateMatrices2D (frameState) {\r\n    var viewState = frameState.viewState;\r\n    var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\r\n    var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\r\n\r\n    composeTransform(coordinateToPixelTransform,\r\n      frameState.size[0] / 2, frameState.size[1] / 2,\r\n      1 / viewState.resolution, -1 / viewState.resolution,\r\n      -viewState.rotation,\r\n      -viewState.center[0], -viewState.center[1]);\r\n\r\n    invertTransform(\r\n      transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\r\n  };\r\n\r\n  /**\r\n   * Removes all layer renderers.\r\n   */\r\n  MapRenderer.prototype.removeLayerRenderers = function removeLayerRenderers () {\r\n    for (var key in this.layerRenderers_) {\r\n      this.removeLayerRendererByKey_(key).dispose();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\r\n   *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\r\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\r\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\r\n   *     function, only layers which are visible and for which this function\r\n   *     returns `true` will be tested for features.  By default, all visible\r\n   *     layers will be tested.\r\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\r\n   * @return {T|undefined} Callback result.\r\n   * @template S,T,U\r\n   */\r\n  MapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\r\n    coordinate,\r\n    frameState,\r\n    hitTolerance,\r\n    callback,\r\n    thisArg,\r\n    layerFilter,\r\n    thisArg2\r\n  ) {\r\n    var result;\r\n    var viewState = frameState.viewState;\r\n    var viewResolution = viewState.resolution;\r\n\r\n    /**\r\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\r\n     * @return {?} Callback result.\r\n     */\r\n    function forEachFeatureAtCoordinate(feature, layer) {\r\n      var managed = frameState.layerStates[getUid(layer)].managed;\r\n      if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\r\n        return callback.call(thisArg, feature, managed ? layer : null);\r\n      }\r\n    }\r\n\r\n    var projection = viewState.projection;\r\n\r\n    var translatedCoordinate = coordinate;\r\n    if (projection.canWrapX()) {\r\n      var projectionExtent = projection.getExtent();\r\n      var worldWidth = getWidth(projectionExtent);\r\n      var x = coordinate[0];\r\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\r\n        var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\r\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\r\n      }\r\n    }\r\n\r\n    var layerStates = frameState.layerStatesArray;\r\n    var numLayers = layerStates.length;\r\n    var i;\r\n    for (i = numLayers - 1; i >= 0; --i) {\r\n      var layerState = layerStates[i];\r\n      var layer = layerState.layer;\r\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\r\n        var layerRenderer = this.getLayerRenderer(layer);\r\n        var source = /** @type {import(\"../layer/Layer.js\").default} */ (layer).getSource();\r\n        if (source) {\r\n          result = layerRenderer.forEachFeatureAtCoordinate(\r\n            source.getWrapX() ? translatedCoordinate : coordinate,\r\n            frameState, hitTolerance, forEachFeatureAtCoordinate);\r\n        }\r\n        if (result) {\r\n          return result;\r\n        }\r\n      }\r\n    }\r\n    return undefined;\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\r\n   *     callback.\r\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\r\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\r\n   *     function, only layers which are visible and for which this function\r\n   *     returns `true` will be tested for features.  By default, all visible\r\n   *     layers will be tested.\r\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\r\n   * @return {T|undefined} Callback result.\r\n   * @template S,T,U\r\n   */\r\n  MapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\r\n    return abstract();\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\r\n   *     function, only layers which are visible and for which this function\r\n   *     returns `true` will be tested for features.  By default, all visible\r\n   *     layers will be tested.\r\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\r\n   * @return {boolean} Is there a feature at the given coordinate?\r\n   * @template U\r\n   */\r\n  MapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\r\n    var hasFeature = this.forEachFeatureAtCoordinate(\r\n      coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\r\n\r\n    return hasFeature !== undefined;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../layer/Base.js\").default} layer Layer.\r\n   * @protected\r\n   * @return {import(\"./Layer.js\").default} Layer renderer.\r\n   */\r\n  MapRenderer.prototype.getLayerRenderer = function getLayerRenderer (layer) {\r\n    var layerKey = getUid(layer);\r\n    if (layerKey in this.layerRenderers_) {\r\n      return this.layerRenderers_[layerKey];\r\n    } else {\r\n      var renderer;\r\n      for (var i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\r\n        var candidate = this.layerRendererConstructors_[i];\r\n        if (candidate['handles'](layer)) {\r\n          renderer = candidate['create'](this, layer);\r\n          break;\r\n        }\r\n      }\r\n      if (renderer) {\r\n        this.layerRenderers_[layerKey] = renderer;\r\n        this.layerRendererListeners_[layerKey] = listen(renderer,\r\n          EventType.CHANGE, this.handleLayerRendererChange_, this);\r\n      } else {\r\n        throw new Error('Unable to create renderer for layer: ' + layer.getType());\r\n      }\r\n      return renderer;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {string} layerKey Layer key.\r\n   * @protected\r\n   * @return {import(\"./Layer.js\").default} Layer renderer.\r\n   */\r\n  MapRenderer.prototype.getLayerRendererByKey = function getLayerRendererByKey (layerKey) {\r\n    return this.layerRenderers_[layerKey];\r\n  };\r\n\r\n  /**\r\n   * @protected\r\n   * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\r\n   */\r\n  MapRenderer.prototype.getLayerRenderers = function getLayerRenderers () {\r\n    return this.layerRenderers_;\r\n  };\r\n\r\n  /**\r\n   * @return {import(\"../PluggableMap.js\").default} Map.\r\n   */\r\n  MapRenderer.prototype.getMap = function getMap () {\r\n    return this.map_;\r\n  };\r\n\r\n  /**\r\n   * Handle changes in a layer renderer.\r\n   * @private\r\n   */\r\n  MapRenderer.prototype.handleLayerRendererChange_ = function handleLayerRendererChange_ () {\r\n    this.map_.render();\r\n  };\r\n\r\n  /**\r\n   * @param {string} layerKey Layer key.\r\n   * @return {import(\"./Layer.js\").default} Layer renderer.\r\n   * @private\r\n   */\r\n  MapRenderer.prototype.removeLayerRendererByKey_ = function removeLayerRendererByKey_ (layerKey) {\r\n    var layerRenderer = this.layerRenderers_[layerKey];\r\n    delete this.layerRenderers_[layerKey];\r\n\r\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\r\n    delete this.layerRendererListeners_[layerKey];\r\n\r\n    return layerRenderer;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../PluggableMap.js\").default} map Map.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @private\r\n   */\r\n  MapRenderer.prototype.removeUnusedLayerRenderers_ = function removeUnusedLayerRenderers_ (map, frameState) {\r\n    for (var layerKey in this.layerRenderers_) {\r\n      if (!frameState || !(layerKey in frameState.layerStates)) {\r\n        this.removeLayerRendererByKey_(layerKey).dispose();\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Render.\r\n   * @abstract\r\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   */\r\n  MapRenderer.prototype.renderFrame = function renderFrame (frameState) {\r\n    abstract();\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @protected\r\n   */\r\n  MapRenderer.prototype.scheduleExpireIconCache = function scheduleExpireIconCache (frameState) {\r\n    frameState.postRenderFunctions.push(/** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (expireIconCache));\r\n  };\r\n\r\n  /**\r\n   * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @protected\r\n   */\r\n  MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function scheduleRemoveUnusedLayerRenderers (frameState) {\r\n    for (var layerKey in this.layerRenderers_) {\r\n      if (!(layerKey in frameState.layerStates)) {\r\n        frameState.postRenderFunctions.push(\r\n          /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (this.removeUnusedLayerRenderers_.bind(this))\r\n        );\r\n        return;\r\n      }\r\n    }\r\n  };\n\n  return MapRenderer;\n}(Disposable));\r\n\r\n\r\n/**\r\n * @param {import(\"../PluggableMap.js\").default} map Map.\r\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n */\r\nfunction expireIconCache(map, frameState) {\r\n  iconImageCache.expire();\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../layer/Layer.js\").State} state1 First layer state.\r\n * @param {import(\"../layer/Layer.js\").State} state2 Second layer state.\r\n * @return {number} The zIndex difference.\r\n */\r\nexport function sortByZIndex(state1, state2) {\r\n  return state1.zIndex - state2.zIndex;\r\n}\r\nexport default MapRenderer;\r\n\r\n//# sourceMappingURL=Map.js.map","/**\r\n * @module ol/renderer/canvas/Map\r\n */\r\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\r\nimport {includes, stableSort} from '../../array.js';\r\nimport {CLASS_UNSELECTABLE} from '../../css.js';\r\nimport {createCanvasContext2D} from '../../dom.js';\r\nimport {visibleAtResolution} from '../../layer/Layer.js';\r\nimport RenderEvent from '../../render/Event.js';\r\nimport RenderEventType from '../../render/EventType.js';\r\nimport {rotateAtOffset} from '../../render/canvas.js';\r\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\r\nimport MapRenderer, {sortByZIndex} from '../Map.js';\r\nimport SourceState from '../../source/State.js';\r\n\r\n\r\n/**\r\n * @type {Array<typeof import(\"../Layer.js\").default>}\r\n */\r\nexport var layerRendererConstructors = [];\r\n\r\n/**\r\n * @classdesc\r\n * Canvas map renderer.\r\n * @api\r\n */\r\nvar CanvasMapRenderer = /*@__PURE__*/(function (MapRenderer) {\n  function CanvasMapRenderer(map) {\r\n    MapRenderer.call(this, map);\r\n\r\n    var container = map.getViewport();\r\n\r\n    /**\r\n     * @private\r\n     * @type {CanvasRenderingContext2D}\r\n     */\r\n    this.context_ = createCanvasContext2D();\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement}\r\n     */\r\n    this.canvas_ = this.context_.canvas;\r\n\r\n    this.canvas_.style.width = '100%';\r\n    this.canvas_.style.height = '100%';\r\n    this.canvas_.style.display = 'block';\r\n    this.canvas_.className = CLASS_UNSELECTABLE;\r\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.renderedVisible_ = true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.transform_ = createTransform();\r\n\r\n  }\n\n  if ( MapRenderer ) CanvasMapRenderer.__proto__ = MapRenderer;\n  CanvasMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  CanvasMapRenderer.prototype.constructor = CanvasMapRenderer;\r\n\r\n  /**\r\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\r\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n   */\r\n  CanvasMapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\r\n    var map = this.getMap();\r\n    var context = this.context_;\r\n    if (map.hasListener(type)) {\r\n      var extent = frameState.extent;\r\n      var pixelRatio = frameState.pixelRatio;\r\n      var viewState = frameState.viewState;\r\n      var rotation = viewState.rotation;\r\n\r\n      var transform = this.getTransform(frameState);\r\n\r\n      var vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\r\n        extent, transform, rotation);\r\n      var composeEvent = new RenderEvent(type, vectorContext,\r\n        frameState, context, null);\r\n      map.dispatchEvent(composeEvent);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @protected\r\n   * @return {!import(\"../../transform.js\").Transform} Transform.\r\n   */\r\n  CanvasMapRenderer.prototype.getTransform = function getTransform (frameState) {\r\n    var viewState = frameState.viewState;\r\n    var dx1 = this.canvas_.width / 2;\r\n    var dy1 = this.canvas_.height / 2;\r\n    var sx = frameState.pixelRatio / viewState.resolution;\r\n    var sy = -sx;\r\n    var angle = -viewState.rotation;\r\n    var dx2 = -viewState.center[0];\r\n    var dy2 = -viewState.center[1];\r\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\r\n\r\n    if (!frameState) {\r\n      if (this.renderedVisible_) {\r\n        this.canvas_.style.display = 'none';\r\n        this.renderedVisible_ = false;\r\n      }\r\n      return;\r\n    }\r\n\r\n    var context = this.context_;\r\n    var pixelRatio = frameState.pixelRatio;\r\n    var width = Math.round(frameState.size[0] * pixelRatio);\r\n    var height = Math.round(frameState.size[1] * pixelRatio);\r\n    if (this.canvas_.width != width || this.canvas_.height != height) {\r\n      this.canvas_.width = width;\r\n      this.canvas_.height = height;\r\n    } else {\r\n      context.clearRect(0, 0, width, height);\r\n    }\r\n\r\n    var rotation = frameState.viewState.rotation;\r\n\r\n    this.calculateMatrices2D(frameState);\r\n\r\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\r\n\r\n    var layerStatesArray = frameState.layerStatesArray;\r\n    stableSort(layerStatesArray, sortByZIndex);\r\n\r\n    if (rotation) {\r\n      context.save();\r\n      rotateAtOffset(context, rotation, width / 2, height / 2);\r\n    }\r\n\r\n    var viewResolution = frameState.viewState.resolution;\r\n    var i, ii;\r\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\r\n      var layerState = layerStatesArray[i];\r\n      var layer = layerState.layer;\r\n      var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\r\n      if (!visibleAtResolution(layerState, viewResolution) ||\r\n          layerState.sourceState != SourceState.READY) {\r\n        continue;\r\n      }\r\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\r\n        layerRenderer.composeFrame(frameState, layerState, context);\r\n      }\r\n    }\r\n\r\n    if (rotation) {\r\n      context.restore();\r\n    }\r\n\r\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\r\n\r\n    if (!this.renderedVisible_) {\r\n      this.canvas_.style.display = '';\r\n      this.renderedVisible_ = true;\r\n    }\r\n\r\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\r\n    this.scheduleExpireIconCache(frameState);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\r\n    var result;\r\n    var viewState = frameState.viewState;\r\n    var viewResolution = viewState.resolution;\r\n\r\n    var layerStates = frameState.layerStatesArray;\r\n    var numLayers = layerStates.length;\r\n\r\n    var coordinate = applyTransform(\r\n      frameState.pixelToCoordinateTransform, pixel.slice());\r\n\r\n    var i;\r\n    for (i = numLayers - 1; i >= 0; --i) {\r\n      var layerState = layerStates[i];\r\n      var layer = layerState.layer;\r\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\r\n        var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\r\n        result = layerRenderer.forEachLayerAtCoordinate(\r\n          coordinate, frameState, hitTolerance, callback, thisArg);\r\n        if (result) {\r\n          return result;\r\n        }\r\n      }\r\n    }\r\n    return undefined;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasMapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\r\n    MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\r\n    for (var i = 0, ii = constructors.length; i < ii; ++i) {\r\n      var ctor = constructors[i];\r\n      if (!includes(layerRendererConstructors, ctor)) {\r\n        layerRendererConstructors.push(ctor);\r\n      }\r\n    }\r\n  };\n\n  return CanvasMapRenderer;\n}(MapRenderer));\r\n\r\n\r\nexport default CanvasMapRenderer;\r\n\r\n//# sourceMappingURL=Map.js.map","/**\r\n * @module ol/renderer/Layer\r\n */\r\nimport {getUid} from '../util.js';\r\nimport ImageState from '../ImageState.js';\r\nimport Observable from '../Observable.js';\r\nimport TileState from '../TileState.js';\r\nimport {listen} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport SourceState from '../source/State.js';\r\n\r\nvar LayerRenderer = /*@__PURE__*/(function (Observable) {\n  function LayerRenderer(layer) {\r\n\r\n    Observable.call(this);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../layer/Layer.js\").default}\r\n     */\r\n    this.layer_ = layer;\r\n\r\n  }\n\n  if ( Observable ) LayerRenderer.__proto__ = Observable;\n  LayerRenderer.prototype = Object.create( Observable && Observable.prototype );\n  LayerRenderer.prototype.constructor = LayerRenderer;\r\n\r\n  /**\r\n   * Create a function that adds loaded tiles to the tile lookup.\r\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\r\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\r\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\r\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\r\n   * @protected\r\n   */\r\n  LayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\r\n    return (\r\n      /**\r\n       * @param {number} zoom Zoom level.\r\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\r\n       * @return {boolean} The tile range is fully loaded.\r\n       */\r\n      function(zoom, tileRange) {\r\n        /**\r\n         * @param {import(\"../Tile.js\").default} tile Tile.\r\n         */\r\n        function callback(tile) {\r\n          if (!tiles[zoom]) {\r\n            tiles[zoom] = {};\r\n          }\r\n          tiles[zoom][tile.tileCoord.toString()] = tile;\r\n        }\r\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\r\n      }\r\n    );\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\r\n   * @return {T|void} Callback result.\r\n   * @template T\r\n   */\r\n  LayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {};\r\n\r\n  /**\r\n   * @return {import(\"../layer/Layer.js\").default} Layer.\r\n   */\r\n  LayerRenderer.prototype.getLayer = function getLayer () {\r\n    return this.layer_;\r\n  };\r\n\r\n  /**\r\n   * Handle changes in image state.\r\n   * @param {import(\"../events/Event.js\").default} event Image change event.\r\n   * @private\r\n   */\r\n  LayerRenderer.prototype.handleImageChange_ = function handleImageChange_ (event) {\r\n    var image = /** @type {import(\"../Image.js\").default} */ (event.target);\r\n    if (image.getState() === ImageState.LOADED) {\r\n      this.renderIfReadyAndVisible();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @return {boolean} Is there a feature at the given coordinate?\r\n   */\r\n  LayerRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState) {\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Load the image if not already loaded, and register the image change\r\n   * listener if needed.\r\n   * @param {import(\"../ImageBase.js\").default} image Image.\r\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\r\n   * @protected\r\n   */\r\n  LayerRenderer.prototype.loadImage = function loadImage (image) {\r\n    var imageState = image.getState();\r\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\r\n      listen(image, EventType.CHANGE, this.handleImageChange_, this);\r\n    }\r\n    if (imageState == ImageState.IDLE) {\r\n      image.load();\r\n      imageState = image.getState();\r\n    }\r\n    return imageState == ImageState.LOADED;\r\n  };\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  LayerRenderer.prototype.renderIfReadyAndVisible = function renderIfReadyAndVisible () {\r\n    var layer = this.getLayer();\r\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\r\n      this.changed();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\r\n   * @protected\r\n   */\r\n  LayerRenderer.prototype.scheduleExpireCache = function scheduleExpireCache (frameState, tileSource) {\r\n    if (tileSource.canExpireCache()) {\r\n      /**\r\n       * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\r\n       * @param {import(\"../PluggableMap.js\").default} map Map.\r\n       * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n       */\r\n      var postRenderFunction = function(tileSource, map, frameState) {\r\n        var tileSourceKey = getUid(tileSource);\r\n        if (tileSourceKey in frameState.usedTiles) {\r\n          tileSource.expireCache(frameState.viewState.projection,\r\n            frameState.usedTiles[tileSourceKey]);\r\n        }\r\n      }.bind(null, tileSource);\r\n\r\n      frameState.postRenderFunctions.push(\r\n        /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\r\n      );\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {!Object<string, !Object<string, import(\"../TileRange.js\").default>>} usedTiles Used tiles.\r\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\r\n   * @param {number} z Z.\r\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\r\n   * @protected\r\n   */\r\n  LayerRenderer.prototype.updateUsedTiles = function updateUsedTiles (usedTiles, tileSource, z, tileRange) {\r\n    // FIXME should we use tilesToDrawByZ instead?\r\n    var tileSourceKey = getUid(tileSource);\r\n    var zKey = z.toString();\r\n    if (tileSourceKey in usedTiles) {\r\n      if (zKey in usedTiles[tileSourceKey]) {\r\n        usedTiles[tileSourceKey][zKey].extend(tileRange);\r\n      } else {\r\n        usedTiles[tileSourceKey][zKey] = tileRange;\r\n      }\r\n    } else {\r\n      usedTiles[tileSourceKey] = {};\r\n      usedTiles[tileSourceKey][zKey] = tileRange;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Manage tile pyramid.\r\n   * This function performs a number of functions related to the tiles at the\r\n   * current zoom and lower zoom levels:\r\n   * - registers idle tiles in frameState.wantedTiles so that they are not\r\n   *   discarded by the tile queue\r\n   * - enqueues missing tiles\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\r\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {number} currentZ Current Z.\r\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\r\n   * @param {function(this: T, import(\"../Tile.js\").default)=} opt_tileCallback Tile callback.\r\n   * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\r\n   * @protected\r\n   * @template T\r\n   */\r\n  LayerRenderer.prototype.manageTilePyramid = function manageTilePyramid (\r\n    frameState,\r\n    tileSource,\r\n    tileGrid,\r\n    pixelRatio,\r\n    projection,\r\n    extent,\r\n    currentZ,\r\n    preload,\r\n    opt_tileCallback,\r\n    opt_this\r\n  ) {\r\n    var tileSourceKey = getUid(tileSource);\r\n    if (!(tileSourceKey in frameState.wantedTiles)) {\r\n      frameState.wantedTiles[tileSourceKey] = {};\r\n    }\r\n    var wantedTiles = frameState.wantedTiles[tileSourceKey];\r\n    var tileQueue = frameState.tileQueue;\r\n    var minZoom = tileGrid.getMinZoom();\r\n    var tile, tileRange, tileResolution, x, y, z;\r\n    for (z = minZoom; z <= currentZ; ++z) {\r\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\r\n      tileResolution = tileGrid.getResolution(z);\r\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\r\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\r\n          if (currentZ - z <= preload) {\r\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\r\n            if (tile.getState() == TileState.IDLE) {\r\n              wantedTiles[tile.getKey()] = true;\r\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\r\n                tileQueue.enqueue([tile, tileSourceKey,\r\n                  tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\r\n              }\r\n            }\r\n            if (opt_tileCallback !== undefined) {\r\n              opt_tileCallback.call(opt_this, tile);\r\n            }\r\n          } else {\r\n            tileSource.useTile(z, x, y, projection);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\n\n  return LayerRenderer;\n}(Observable));\r\n\r\nexport default LayerRenderer;\r\n\r\n//# sourceMappingURL=Layer.js.map","/**\r\n * @module ol/renderer/canvas/Layer\r\n */\r\nimport {abstract} from '../../util.js';\r\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\r\nimport {TRUE} from '../../functions.js';\r\nimport RenderEvent from '../../render/Event.js';\r\nimport RenderEventType from '../../render/EventType.js';\r\nimport {rotateAtOffset} from '../../render/canvas.js';\r\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\r\nimport LayerRenderer from '../Layer.js';\r\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\r\n\r\n/**\r\n * @abstract\r\n */\r\nvar CanvasLayerRenderer = /*@__PURE__*/(function (LayerRenderer) {\n  function CanvasLayerRenderer(layer) {\r\n\r\n    LayerRenderer.call(this, layer);\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.renderedResolution;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.transform_ = createTransform();\r\n\r\n  }\n\n  if ( LayerRenderer ) CanvasLayerRenderer.__proto__ = LayerRenderer;\n  CanvasLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  CanvasLayerRenderer.prototype.constructor = CanvasLayerRenderer;\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\r\n   * @protected\r\n   */\r\n  CanvasLayerRenderer.prototype.clip = function clip (context, frameState, extent) {\r\n    var pixelRatio = frameState.pixelRatio;\r\n    var width = frameState.size[0] * pixelRatio;\r\n    var height = frameState.size[1] * pixelRatio;\r\n    var rotation = frameState.viewState.rotation;\r\n    var topLeft = getTopLeft(extent);\r\n    var topRight = getTopRight(extent);\r\n    var bottomRight = getBottomRight(extent);\r\n    var bottomLeft = getBottomLeft(extent);\r\n\r\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\r\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\r\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\r\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\r\n\r\n    context.save();\r\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\r\n    context.beginPath();\r\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\r\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\r\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\r\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\r\n    context.clip();\r\n    rotateAtOffset(context, rotation, width / 2, height / 2);\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\r\n   * @private\r\n   */\r\n  CanvasLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState, opt_transform) {\r\n    var layer = this.getLayer();\r\n    if (layer.hasListener(type)) {\r\n      var width = frameState.size[0] * frameState.pixelRatio;\r\n      var height = frameState.size[1] * frameState.pixelRatio;\r\n      var rotation = frameState.viewState.rotation;\r\n      rotateAtOffset(context, -rotation, width / 2, height / 2);\r\n      var transform = opt_transform !== undefined ?\r\n        opt_transform : this.getTransform(frameState, 0);\r\n      var render = new CanvasImmediateRenderer(\r\n        context, frameState.pixelRatio, frameState.extent, transform,\r\n        frameState.viewState.rotation);\r\n      var composeEvent = new RenderEvent(type, render, frameState,\r\n        context, null);\r\n      layer.dispatchEvent(composeEvent);\r\n      rotateAtOffset(context, rotation, width / 2, height / 2);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @param {function(this: S, import(\"../../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\r\n   *     callback.\r\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\r\n   * @return {T|undefined} Callback result.\r\n   * @template S,T,U\r\n   */\r\n  CanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\r\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE);\r\n\r\n    if (hasFeature) {\r\n      return callback.call(thisArg, this.getLayer(), null);\r\n    } else {\r\n      return undefined;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\r\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\r\n   * @protected\r\n   */\r\n  CanvasLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState, opt_transform) {\r\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\r\n  };\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\r\n   * @protected\r\n   */\r\n  CanvasLayerRenderer.prototype.preCompose = function preCompose (context, frameState, opt_transform) {\r\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\r\n  };\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\r\n   * @protected\r\n   */\r\n  CanvasLayerRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (context, frameState, opt_transform) {\r\n    this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\r\n   * @protected\r\n   * @return {!import(\"../../transform.js\").Transform} Transform.\r\n   */\r\n  CanvasLayerRenderer.prototype.getTransform = function getTransform (frameState, offsetX) {\r\n    var viewState = frameState.viewState;\r\n    var pixelRatio = frameState.pixelRatio;\r\n    var dx1 = pixelRatio * frameState.size[0] / 2;\r\n    var dy1 = pixelRatio * frameState.size[1] / 2;\r\n    var sx = pixelRatio / viewState.resolution;\r\n    var sy = -sx;\r\n    var angle = -viewState.rotation;\r\n    var dx2 = -viewState.center[0] + offsetX;\r\n    var dy2 = -viewState.center[1];\r\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   */\r\n  CanvasLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\r\n    abstract();\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\r\n   * @return {boolean} whether composeFrame should be called.\r\n   */\r\n  CanvasLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\r\n    return abstract();\r\n  };\n\n  return CanvasLayerRenderer;\n}(LayerRenderer));\r\n\r\nexport default CanvasLayerRenderer;\r\n\r\n//# sourceMappingURL=Layer.js.map","/**\r\n * @module ol/renderer/canvas/IntermediateCanvas\r\n */\r\nimport {abstract} from '../../util.js';\r\nimport {scale as scaleCoordinate} from '../../coordinate.js';\r\nimport {createCanvasContext2D} from '../../dom.js';\r\nimport {containsExtent, intersects} from '../../extent.js';\r\nimport CanvasLayerRenderer from './Layer.js';\r\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\r\n\r\n/**\r\n * @abstract\r\n */\r\nvar IntermediateCanvasRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function IntermediateCanvasRenderer(layer) {\r\n\r\n    CanvasLayerRenderer.call(this, layer);\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.coordinateToCanvasPixelTransform = createTransform();\r\n\r\n    /**\r\n     * @private\r\n     * @type {CanvasRenderingContext2D}\r\n     */\r\n    this.hitCanvasContext_ = null;\r\n\r\n  }\n\n  if ( CanvasLayerRenderer ) IntermediateCanvasRenderer.__proto__ = CanvasLayerRenderer;\n  IntermediateCanvasRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  IntermediateCanvasRenderer.prototype.constructor = IntermediateCanvasRenderer;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  IntermediateCanvasRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\r\n\r\n    this.preCompose(context, frameState);\r\n\r\n    var image = this.getImage();\r\n    if (image) {\r\n\r\n      // clipped rendering if layer extent is set\r\n      var extent = layerState.extent;\r\n      var clipped = extent !== undefined &&\r\n          !containsExtent(extent, frameState.extent) &&\r\n          intersects(extent, frameState.extent);\r\n      if (clipped) {\r\n        this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (extent));\r\n      }\r\n\r\n      var imageTransform = this.getImageTransform();\r\n      // for performance reasons, context.save / context.restore is not used\r\n      // to save and restore the transformation matrix and the opacity.\r\n      // see http://jsperf.com/context-save-restore-versus-variable\r\n      var alpha = context.globalAlpha;\r\n      context.globalAlpha = layerState.opacity;\r\n\r\n      // for performance reasons, context.setTransform is only used\r\n      // when the view is rotated. see http://jsperf.com/canvas-transform\r\n      var dx = imageTransform[4];\r\n      var dy = imageTransform[5];\r\n      var dw = image.width * imageTransform[0];\r\n      var dh = image.height * imageTransform[3];\r\n      if (dw >= 0.5 && dh >= 0.5) {\r\n        context.drawImage(image, 0, 0, +image.width, +image.height,\r\n          Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\r\n      }\r\n      context.globalAlpha = alpha;\r\n\r\n      if (clipped) {\r\n        context.restore();\r\n      }\r\n    }\r\n\r\n    this.postCompose(context, frameState, layerState);\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Canvas.\r\n   */\r\n  IntermediateCanvasRenderer.prototype.getImage = function getImage () {\r\n    return abstract();\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {!import(\"../../transform.js\").Transform} Image transform.\r\n   */\r\n  IntermediateCanvasRenderer.prototype.getImageTransform = function getImageTransform () {\r\n    return abstract();\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  IntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\r\n    if (!this.getImage()) {\r\n      return undefined;\r\n    }\r\n\r\n    var pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\r\n    scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\r\n\r\n    if (!this.hitCanvasContext_) {\r\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\r\n    }\r\n\r\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\r\n    this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\r\n\r\n    var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\r\n    if (imageData[3] > 0) {\r\n      return callback.call(thisArg, this.getLayer(), imageData);\r\n    } else {\r\n      return undefined;\r\n    }\r\n  };\n\n  return IntermediateCanvasRenderer;\n}(CanvasLayerRenderer));\r\n\r\n\r\nexport default IntermediateCanvasRenderer;\r\n\r\n//# sourceMappingURL=IntermediateCanvas.js.map","/**\r\n * @module ol/renderer/canvas/ImageLayer\r\n */\r\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\r\nimport ImageCanvas from '../../ImageCanvas.js';\r\nimport LayerType from '../../LayerType.js';\r\nimport ViewHint from '../../ViewHint.js';\r\nimport {equals} from '../../array.js';\r\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\r\nimport VectorRenderType from '../../layer/VectorRenderType.js';\r\nimport {assign} from '../../obj.js';\r\nimport {layerRendererConstructors} from './Map.js';\r\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\r\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\r\n\r\n/**\r\n * @classdesc\r\n * Canvas renderer for image layers.\r\n * @api\r\n */\r\nvar CanvasImageLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasImageLayerRenderer(imageLayer) {\r\n\r\n    IntermediateCanvasRenderer.call(this, imageLayer);\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../../ImageBase.js\").default}\r\n     */\r\n    this.image_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.imageTransform_ = createTransform();\r\n\r\n    /**\r\n     * @type {!Array<string>}\r\n     */\r\n    this.skippedFeatures_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./VectorLayer.js\").default}\r\n     */\r\n    this.vectorRenderer_ = null;\r\n\r\n    if (imageLayer.getType() === LayerType.VECTOR) {\r\n      for (var i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\r\n        var ctor = layerRendererConstructors[i];\r\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\r\n          this.vectorRenderer_ = /** @type {import(\"./VectorLayer.js\").default} */ (new ctor(imageLayer));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasImageLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasImageLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasImageLayerRenderer.prototype.constructor = CanvasImageLayerRenderer;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasImageLayerRenderer.prototype.disposeInternal = function disposeInternal () {\r\n    if (this.vectorRenderer_) {\r\n      this.vectorRenderer_.dispose();\r\n    }\r\n    IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasImageLayerRenderer.prototype.getImage = function getImage () {\r\n    return !this.image_ ? null : this.image_.getImage();\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasImageLayerRenderer.prototype.getImageTransform = function getImageTransform () {\r\n    return this.imageTransform_;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\r\n\r\n    var pixelRatio = frameState.pixelRatio;\r\n    var size = frameState.size;\r\n    var viewState = frameState.viewState;\r\n    var viewCenter = viewState.center;\r\n    var viewResolution = viewState.resolution;\r\n\r\n    var image;\r\n    var imageLayer = /** @type {import(\"../../layer/Image.js\").default} */ (this.getLayer());\r\n    var imageSource = /** @type {import(\"../../source/Image.js\").default} */ (imageLayer.getSource());\r\n\r\n    var hints = frameState.viewHints;\r\n\r\n    var vectorRenderer = this.vectorRenderer_;\r\n    var renderedExtent = frameState.extent;\r\n    if (!vectorRenderer && layerState.extent !== undefined) {\r\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\r\n    }\r\n\r\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\r\n        !isEmpty(renderedExtent)) {\r\n      var projection = viewState.projection;\r\n      if (!ENABLE_RASTER_REPROJECTION) {\r\n        var sourceProjection = imageSource.getProjection();\r\n        if (sourceProjection) {\r\n          projection = sourceProjection;\r\n        }\r\n      }\r\n      var skippedFeatures = this.skippedFeatures_;\r\n      if (vectorRenderer) {\r\n        var context = vectorRenderer.context;\r\n        var imageFrameState = /** @type {import(\"../../PluggableMap.js\").FrameState} */ (assign({}, frameState, {\r\n          size: [\r\n            getWidth(renderedExtent) / viewResolution,\r\n            getHeight(renderedExtent) / viewResolution\r\n          ],\r\n          viewState: /** @type {import(\"../../View.js\").State} */ (assign({}, frameState.viewState, {\r\n            rotation: 0\r\n          }))\r\n        }));\r\n        var newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\r\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\r\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\r\n              (vectorRenderer.replayGroupChanged ||\r\n              !equals(skippedFeatures, newSkippedFeatures))) {\r\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\r\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\r\n            vectorRenderer.compose(context, imageFrameState, layerState);\r\n            skippedFeatures = newSkippedFeatures;\r\n            callback();\r\n          }\r\n        });\r\n      } else {\r\n        image = imageSource.getImage(\r\n          renderedExtent, viewResolution, pixelRatio, projection);\r\n      }\r\n      if (image && this.loadImage(image)) {\r\n        this.image_ = image;\r\n        this.skippedFeatures_ = skippedFeatures;\r\n      }\r\n    }\r\n\r\n    if (this.image_) {\r\n      image = this.image_;\r\n      var imageExtent = image.getExtent();\r\n      var imageResolution = image.getResolution();\r\n      var imagePixelRatio = image.getPixelRatio();\r\n      var scale = pixelRatio * imageResolution /\r\n          (viewResolution * imagePixelRatio);\r\n      var transform = composeTransform(this.imageTransform_,\r\n        pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\r\n        scale, scale,\r\n        0,\r\n        imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\r\n        imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\r\n      composeTransform(this.coordinateToCanvasPixelTransform,\r\n        pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\r\n        pixelRatio / viewResolution, -pixelRatio / viewResolution,\r\n        0,\r\n        -viewCenter[0], -viewCenter[1]);\r\n\r\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\r\n    }\r\n\r\n    return !!this.image_;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {\r\n    if (this.vectorRenderer_) {\r\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback);\r\n    } else {\r\n      return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback);\r\n    }\r\n  };\n\n  return CanvasImageLayerRenderer;\n}(IntermediateCanvasRenderer));\r\n\r\n\r\n/**\r\n * Determine if this renderer handles the provided layer.\r\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\r\n * @return {boolean} The renderer can render the layer.\r\n */\r\nCanvasImageLayerRenderer['handles'] = function(layer) {\r\n  return layer.getType() === LayerType.IMAGE ||\r\n    layer.getType() === LayerType.VECTOR &&\r\n    /** @type {import(\"../../layer/Vector.js\").default} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\r\n};\r\n\r\n\r\n/**\r\n * Create a layer renderer.\r\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\r\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\r\n * @return {CanvasImageLayerRenderer} The layer renderer.\r\n */\r\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\r\n  return new CanvasImageLayerRenderer(/** @type {import(\"../../layer/Image.js\").default} */ (layer));\r\n};\r\n\r\n\r\nexport default CanvasImageLayerRenderer;\r\n\r\n//# sourceMappingURL=ImageLayer.js.map","/**\r\n * @module ol/TileRange\r\n */\r\n\r\n/**\r\n * A representation of a contiguous block of tiles.  A tile range is specified\r\n * by its min/max tile coordinates and is inclusive of coordinates.\r\n */\r\nvar TileRange = function TileRange(minX, maxX, minY, maxY) {\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.minX = minX;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.maxX = maxX;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.minY = minY;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.maxY = maxY;\r\n\r\n};\r\n\r\n/**\r\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n * @return {boolean} Contains tile coordinate.\r\n */\r\nTileRange.prototype.contains = function contains (tileCoord) {\r\n  return this.containsXY(tileCoord[1], tileCoord[2]);\r\n};\r\n\r\n/**\r\n * @param {TileRange} tileRange Tile range.\r\n * @return {boolean} Contains.\r\n */\r\nTileRange.prototype.containsTileRange = function containsTileRange (tileRange) {\r\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\r\n     this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\r\n};\r\n\r\n/**\r\n * @param {number} x Tile coordinate x.\r\n * @param {number} y Tile coordinate y.\r\n * @return {boolean} Contains coordinate.\r\n */\r\nTileRange.prototype.containsXY = function containsXY (x, y) {\r\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\r\n};\r\n\r\n/**\r\n * @param {TileRange} tileRange Tile range.\r\n * @return {boolean} Equals.\r\n */\r\nTileRange.prototype.equals = function equals (tileRange) {\r\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\r\n     this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\r\n};\r\n\r\n/**\r\n * @param {TileRange} tileRange Tile range.\r\n */\r\nTileRange.prototype.extend = function extend (tileRange) {\r\n  if (tileRange.minX < this.minX) {\r\n    this.minX = tileRange.minX;\r\n  }\r\n  if (tileRange.maxX > this.maxX) {\r\n    this.maxX = tileRange.maxX;\r\n  }\r\n  if (tileRange.minY < this.minY) {\r\n    this.minY = tileRange.minY;\r\n  }\r\n  if (tileRange.maxY > this.maxY) {\r\n    this.maxY = tileRange.maxY;\r\n  }\r\n};\r\n\r\n/**\r\n * @return {number} Height.\r\n */\r\nTileRange.prototype.getHeight = function getHeight () {\r\n  return this.maxY - this.minY + 1;\r\n};\r\n\r\n/**\r\n * @return {import(\"./size.js\").Size} Size.\r\n */\r\nTileRange.prototype.getSize = function getSize () {\r\n  return [this.getWidth(), this.getHeight()];\r\n};\r\n\r\n/**\r\n * @return {number} Width.\r\n */\r\nTileRange.prototype.getWidth = function getWidth () {\r\n  return this.maxX - this.minX + 1;\r\n};\r\n\r\n/**\r\n * @param {TileRange} tileRange Tile range.\r\n * @return {boolean} Intersects.\r\n */\r\nTileRange.prototype.intersects = function intersects (tileRange) {\r\n  return this.minX <= tileRange.maxX &&\r\n     this.maxX >= tileRange.minX &&\r\n     this.minY <= tileRange.maxY &&\r\n     this.maxY >= tileRange.minY;\r\n};\r\n\r\n\r\n/**\r\n * @param {number} minX Minimum X.\r\n * @param {number} maxX Maximum X.\r\n * @param {number} minY Minimum Y.\r\n * @param {number} maxY Maximum Y.\r\n * @param {TileRange=} tileRange TileRange.\r\n * @return {TileRange} Tile range.\r\n */\r\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\r\n  if (tileRange !== undefined) {\r\n    tileRange.minX = minX;\r\n    tileRange.maxX = maxX;\r\n    tileRange.minY = minY;\r\n    tileRange.maxY = maxY;\r\n    return tileRange;\r\n  } else {\r\n    return new TileRange(minX, maxX, minY, maxY);\r\n  }\r\n}\r\n\r\n\r\nexport default TileRange;\r\n\r\n//# sourceMappingURL=TileRange.js.map","/**\r\n * @module ol/renderer/canvas/TileLayer\r\n */\r\nimport {getUid} from '../../util.js';\r\nimport LayerType from '../../LayerType.js';\r\nimport TileRange from '../../TileRange.js';\r\nimport TileState from '../../TileState.js';\r\nimport ViewHint from '../../ViewHint.js';\r\nimport {createCanvasContext2D} from '../../dom.js';\r\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\r\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\r\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\r\n\r\n/**\r\n * @classdesc\r\n * Canvas renderer for tile layers.\r\n * @api\r\n */\r\nvar CanvasTileLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasTileLayerRenderer(tileLayer, opt_noContext) {\r\n\r\n    IntermediateCanvasRenderer.call(this, tileLayer);\r\n\r\n    /**\r\n     * @protected\r\n     * @type {CanvasRenderingContext2D}\r\n     */\r\n    this.context = opt_noContext ? null : createCanvasContext2D();\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.oversampling_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.renderedExtent_ = null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.renderedRevision;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {!Array<import(\"../../Tile.js\").default>}\r\n     */\r\n    this.renderedTiles = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.newTiles_ = false;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.tmpExtent = createEmpty();\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../TileRange.js\").default}\r\n     */\r\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.imageTransform_ = createTransform();\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.zDirection = 0;\r\n\r\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasTileLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasTileLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasTileLayerRenderer.prototype.constructor = CanvasTileLayerRenderer;\r\n\r\n  /**\r\n   * @private\r\n   * @param {import(\"../../Tile.js\").default} tile Tile.\r\n   * @return {boolean} Tile is drawable.\r\n   */\r\n  CanvasTileLayerRenderer.prototype.isDrawableTile_ = function isDrawableTile_ (tile) {\r\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\r\n    var tileState = tile.getState();\r\n    var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\r\n    return tileState == TileState.LOADED ||\r\n        tileState == TileState.EMPTY ||\r\n        tileState == TileState.ERROR && !useInterimTilesOnError;\r\n  };\r\n\r\n  /**\r\n   * @param {number} z Tile coordinate z.\r\n   * @param {number} x Tile coordinate x.\r\n   * @param {number} y Tile coordinate y.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\r\n   * @return {!import(\"../../Tile.js\").default} Tile.\r\n   */\r\n  CanvasTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\r\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\r\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\r\n    var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\r\n    if (tile.getState() == TileState.ERROR) {\r\n      if (!tileLayer.getUseInterimTilesOnError()) {\r\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\r\n        tile.setState(TileState.LOADED);\r\n      } else if (tileLayer.getPreload() > 0) {\r\n        // Preloaded tiles for lower resolutions might have finished loading.\r\n        this.newTiles_ = true;\r\n      }\r\n    }\r\n    if (!this.isDrawableTile_(tile)) {\r\n      tile = tile.getInterimTile();\r\n    }\r\n    return tile;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\r\n\r\n    var pixelRatio = frameState.pixelRatio;\r\n    var size = frameState.size;\r\n    var viewState = frameState.viewState;\r\n    var projection = viewState.projection;\r\n    var viewResolution = viewState.resolution;\r\n    var viewCenter = viewState.center;\r\n\r\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\r\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\r\n    var sourceRevision = tileSource.getRevision();\r\n    var tileGrid = tileSource.getTileGridForProjection(projection);\r\n    var z = tileGrid.getZForResolution(viewResolution, this.zDirection);\r\n    var tileResolution = tileGrid.getResolution(z);\r\n    var oversampling = Math.round(viewResolution / tileResolution) || 1;\r\n    var extent = frameState.extent;\r\n\r\n    if (layerState.extent !== undefined) {\r\n      extent = getIntersection(extent, layerState.extent);\r\n    }\r\n    if (isEmpty(extent)) {\r\n      // Return false to prevent the rendering of the layer.\r\n      return false;\r\n    }\r\n\r\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\r\n    var imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\r\n\r\n    var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\r\n\r\n    /**\r\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\r\n     */\r\n    var tilesToDrawByZ = {};\r\n    tilesToDrawByZ[z] = {};\r\n\r\n    var findLoadedTiles = this.createLoadedTileFinder(\r\n      tileSource, projection, tilesToDrawByZ);\r\n\r\n    var hints = frameState.viewHints;\r\n    var animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\r\n\r\n    var tmpExtent = this.tmpExtent;\r\n    var tmpTileRange = this.tmpTileRange_;\r\n    this.newTiles_ = false;\r\n    var tile, x, y;\r\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\r\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\r\n        if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\r\n          continue;\r\n        }\r\n        tile = this.getTile(z, x, y, pixelRatio, projection);\r\n        if (this.isDrawableTile_(tile)) {\r\n          var uid = getUid(this);\r\n          if (tile.getState() == TileState.LOADED) {\r\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\r\n            var inTransition = tile.inTransition(uid);\r\n            if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\r\n              this.newTiles_ = true;\r\n            }\r\n          }\r\n          if (tile.getAlpha(uid, frameState.time) === 1) {\r\n            // don't look for alt tiles if alpha is 1\r\n            continue;\r\n          }\r\n        }\r\n\r\n        var childTileRange = tileGrid.getTileCoordChildTileRange(\r\n          tile.tileCoord, tmpTileRange, tmpExtent);\r\n        var covered = false;\r\n        if (childTileRange) {\r\n          covered = findLoadedTiles(z + 1, childTileRange);\r\n        }\r\n        if (!covered) {\r\n          tileGrid.forEachTileCoordParentTileRange(\r\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n    var renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\r\n    if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\r\n      this.newTiles_ ||\r\n          !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\r\n          this.renderedRevision != sourceRevision ||\r\n          oversampling != this.oversampling_ ||\r\n          !animatingOrInteracting && renderedResolution != this.renderedResolution\r\n    )) {\r\n\r\n      var context = this.context;\r\n      if (context) {\r\n        var tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\r\n        var width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\r\n        var height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\r\n        var canvas = context.canvas;\r\n        if (canvas.width != width || canvas.height != height) {\r\n          this.oversampling_ = oversampling;\r\n          canvas.width = width;\r\n          canvas.height = height;\r\n        } else {\r\n          if ((this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) ||\r\n              this.renderedRevision != sourceRevision) {\r\n            context.clearRect(0, 0, width, height);\r\n          }\r\n          oversampling = this.oversampling_;\r\n        }\r\n      }\r\n\r\n      this.renderedTiles.length = 0;\r\n      /** @type {Array<number>} */\r\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\r\n      zs.sort(function(a, b) {\r\n        if (a === z) {\r\n          return 1;\r\n        } else if (b === z) {\r\n          return -1;\r\n        } else {\r\n          return a > b ? 1 : a < b ? -1 : 0;\r\n        }\r\n      });\r\n      var currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\r\n      var tileExtent, tileGutter, tilesToDraw, w, h;\r\n      for (i = 0, ii = zs.length; i < ii; ++i) {\r\n        currentZ = zs[i];\r\n        currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\r\n        currentResolution = tileGrid.getResolution(currentZ);\r\n        currentScale = currentResolution / tileResolution;\r\n        tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\r\n        tilesToDraw = tilesToDrawByZ[currentZ];\r\n        for (var tileCoordKey in tilesToDraw) {\r\n          tile = tilesToDraw[tileCoordKey];\r\n          tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\r\n          x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\r\n          y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\r\n          w = currentTilePixelSize[0] * currentScale / oversampling;\r\n          h = currentTilePixelSize[1] * currentScale / oversampling;\r\n          this.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\r\n          this.renderedTiles.push(tile);\r\n        }\r\n      }\r\n\r\n      this.renderedRevision = sourceRevision;\r\n      this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\r\n      this.renderedExtent_ = imageExtent;\r\n    }\r\n\r\n    var scale = this.renderedResolution / viewResolution;\r\n    var transform = composeTransform(this.imageTransform_,\r\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\r\n      scale, scale,\r\n      0,\r\n      (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\r\n      (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\r\n    composeTransform(this.coordinateToCanvasPixelTransform,\r\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\r\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\r\n      0,\r\n      -viewCenter[0], -viewCenter[1]);\r\n\r\n\r\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\r\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\r\n      projection, extent, z, tileLayer.getPreload());\r\n    this.scheduleExpireCache(frameState, tileSource);\r\n\r\n    return this.renderedTiles.length > 0;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../../Tile.js\").default} tile Tile.\r\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\r\n   * @param {number} x Left of the tile.\r\n   * @param {number} y Top of the tile.\r\n   * @param {number} w Width of the tile.\r\n   * @param {number} h Height of the tile.\r\n   * @param {number} gutter Tile gutter.\r\n   * @param {boolean} transition Apply an alpha transition.\r\n   */\r\n  CanvasTileLayerRenderer.prototype.drawTileImage = function drawTileImage (tile, frameState, layerState, x, y, w, h, gutter, transition) {\r\n    var image = this.getTileImage(tile);\r\n    if (!image) {\r\n      return;\r\n    }\r\n    var uid = getUid(this);\r\n    var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\r\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\r\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\r\n    if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\r\n      this.context.clearRect(x, y, w, h);\r\n    }\r\n    var alphaChanged = alpha !== this.context.globalAlpha;\r\n    if (alphaChanged) {\r\n      this.context.save();\r\n      this.context.globalAlpha = alpha;\r\n    }\r\n    this.context.drawImage(image, gutter, gutter,\r\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\r\n\r\n    if (alphaChanged) {\r\n      this.context.restore();\r\n    }\r\n    if (alpha !== 1) {\r\n      frameState.animate = true;\r\n    } else if (transition) {\r\n      tile.endTransition(uid);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasTileLayerRenderer.prototype.getImage = function getImage () {\r\n    var context = this.context;\r\n    return context ? context.canvas : null;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasTileLayerRenderer.prototype.getImageTransform = function getImageTransform () {\r\n    return this.imageTransform_;\r\n  };\r\n\r\n  /**\r\n   * Get the image from a tile.\r\n   * @param {import(\"../../Tile.js\").default} tile Tile.\r\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\r\n   * @protected\r\n   */\r\n  CanvasTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\r\n    return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\r\n  };\n\n  return CanvasTileLayerRenderer;\n}(IntermediateCanvasRenderer));\r\n\r\n\r\n/**\r\n * Determine if this renderer handles the provided layer.\r\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\r\n * @return {boolean} The renderer can render the layer.\r\n */\r\nCanvasTileLayerRenderer['handles'] = function(layer) {\r\n  return layer.getType() === LayerType.TILE;\r\n};\r\n\r\n\r\n/**\r\n * Create a layer renderer.\r\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\r\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\r\n * @return {CanvasTileLayerRenderer} The layer renderer.\r\n */\r\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\r\n  return new CanvasTileLayerRenderer(/** @type {import(\"../../layer/Tile.js\").default} */ (layer));\r\n};\r\n\r\n\r\n/**\r\n * @function\r\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\r\n */\r\nCanvasTileLayerRenderer.prototype.getLayer;\r\n\r\n\r\nexport default CanvasTileLayerRenderer;\r\n\r\n//# sourceMappingURL=TileLayer.js.map","/**\r\n * @module ol/render/ReplayGroup\r\n */\r\nimport {abstract} from '../util.js';\r\n\r\n/**\r\n * Base class for replay groups.\r\n */\r\nvar ReplayGroup = function ReplayGroup () {};\n\nReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\r\n  return abstract();\r\n};\r\n\r\n/**\r\n * @abstract\r\n * @return {boolean} Is empty.\r\n */\r\nReplayGroup.prototype.isEmpty = function isEmpty () {\r\n  return abstract();\r\n};\r\n\r\n/**\r\n * @abstract\r\n * @param {boolean} group Group with previous replay\r\n * @return {Array<*>} The resulting instruction group\r\n */\r\nReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\r\n  return abstract();\r\n};\r\n\r\nexport default ReplayGroup;\r\n\r\n//# sourceMappingURL=ReplayGroup.js.map","/**\r\n * @module ol/render/ReplayType\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  CIRCLE: 'Circle',\r\n  DEFAULT: 'Default',\r\n  IMAGE: 'Image',\r\n  LINE_STRING: 'LineString',\r\n  POLYGON: 'Polygon',\r\n  TEXT: 'Text'\r\n};\r\n\r\n//# sourceMappingURL=ReplayType.js.map","/**\r\n * @module ol/geom/flat/length\r\n */\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @return {number} Length.\r\n */\r\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\r\n  var x1 = flatCoordinates[offset];\r\n  var y1 = flatCoordinates[offset + 1];\r\n  var length = 0;\r\n  for (var i = offset + stride; i < end; i += stride) {\r\n    var x2 = flatCoordinates[i];\r\n    var y2 = flatCoordinates[i + 1];\r\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\r\n    x1 = x2;\r\n    y1 = y2;\r\n  }\r\n  return length;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @return {number} Perimeter.\r\n */\r\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\r\n  var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\r\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\r\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\r\n  perimeter += Math.sqrt(dx * dx + dy * dy);\r\n  return perimeter;\r\n}\r\n\r\n//# sourceMappingURL=length.js.map","/**\r\n * @module ol/geom/flat/textpath\r\n */\r\nimport {lerp} from '../../math.js';\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Path to put text on.\r\n * @param {number} offset Start offset of the `flatCoordinates`.\r\n * @param {number} end End offset of the `flatCoordinates`.\r\n * @param {number} stride Stride.\r\n * @param {string} text Text to place on the path.\r\n * @param {function(string):number} measure Measure function returning the\r\n * width of the character passed as 1st argument.\r\n * @param {number} startM m along the path where the text starts.\r\n * @param {number} maxAngle Max angle between adjacent chars in radians.\r\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\r\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\r\n */\r\nexport function drawTextOnPath(\r\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\r\n  var result = [];\r\n\r\n  // Keep text upright\r\n  var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\r\n\r\n  var numChars = text.length;\r\n\r\n  var x1 = flatCoordinates[offset];\r\n  var y1 = flatCoordinates[offset + 1];\r\n  offset += stride;\r\n  var x2 = flatCoordinates[offset];\r\n  var y2 = flatCoordinates[offset + 1];\r\n  var segmentM = 0;\r\n  var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\r\n\r\n  var chunk = '';\r\n  var chunkLength = 0;\r\n  var data, index, previousAngle;\r\n  for (var i = 0; i < numChars; ++i) {\r\n    index = reverse ? numChars - i - 1 : i;\r\n    var char = text.charAt(index);\r\n    chunk = reverse ? char + chunk : chunk + char;\r\n    var charLength = measure(chunk) - chunkLength;\r\n    chunkLength += charLength;\r\n    var charM = startM + charLength / 2;\r\n    while (offset < end - stride && segmentM + segmentLength < charM) {\r\n      x1 = x2;\r\n      y1 = y2;\r\n      offset += stride;\r\n      x2 = flatCoordinates[offset];\r\n      y2 = flatCoordinates[offset + 1];\r\n      segmentM += segmentLength;\r\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\r\n    }\r\n    var segmentPos = charM - segmentM;\r\n    var angle = Math.atan2(y2 - y1, x2 - x1);\r\n    if (reverse) {\r\n      angle += angle > 0 ? -Math.PI : Math.PI;\r\n    }\r\n    if (previousAngle !== undefined) {\r\n      var delta = angle - previousAngle;\r\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\r\n      if (Math.abs(delta) > maxAngle) {\r\n        return null;\r\n      }\r\n    }\r\n    var interpolate = segmentPos / segmentLength;\r\n    var x = lerp(x1, x2, interpolate);\r\n    var y = lerp(y1, y2, interpolate);\r\n    if (previousAngle == angle) {\r\n      if (reverse) {\r\n        data[0] = x;\r\n        data[1] = y;\r\n        data[2] = charLength / 2;\r\n      }\r\n      data[4] = chunk;\r\n    } else {\r\n      chunk = char;\r\n      chunkLength = charLength;\r\n      data = [x, y, charLength / 2, angle, chunk];\r\n      if (reverse) {\r\n        result.unshift(data);\r\n      } else {\r\n        result.push(data);\r\n      }\r\n      previousAngle = angle;\r\n    }\r\n    startM += charLength;\r\n  }\r\n  return result;\r\n}\r\n\r\n//# sourceMappingURL=textpath.js.map","/**\r\n * @module ol/render/canvas/Instruction\r\n */\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nvar Instruction = {\r\n  BEGIN_GEOMETRY: 0,\r\n  BEGIN_PATH: 1,\r\n  CIRCLE: 2,\r\n  CLOSE_PATH: 3,\r\n  CUSTOM: 4,\r\n  DRAW_CHARS: 5,\r\n  DRAW_IMAGE: 6,\r\n  END_GEOMETRY: 7,\r\n  FILL: 8,\r\n  MOVE_TO_LINE_TO: 9,\r\n  SET_FILL_STYLE: 10,\r\n  SET_STROKE_STYLE: 11,\r\n  STROKE: 12\r\n};\r\n\r\n\r\n/**\r\n * @type {Array<Instruction>}\r\n */\r\nexport var fillInstruction = [Instruction.FILL];\r\n\r\n\r\n/**\r\n * @type {Array<Instruction>}\r\n */\r\nexport var strokeInstruction = [Instruction.STROKE];\r\n\r\n\r\n/**\r\n * @type {Array<Instruction>}\r\n */\r\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\r\n\r\n\r\n/**\r\n * @type {Array<Instruction>}\r\n */\r\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\r\n\r\n\r\nexport default Instruction;\r\n\r\n//# sourceMappingURL=Instruction.js.map","/**\r\n * @module ol/render/replay\r\n */\r\nimport ReplayType from './ReplayType.js';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Array<ReplayType>}\r\n */\r\nexport var ORDER = [\r\n  ReplayType.POLYGON,\r\n  ReplayType.CIRCLE,\r\n  ReplayType.LINE_STRING,\r\n  ReplayType.IMAGE,\r\n  ReplayType.TEXT,\r\n  ReplayType.DEFAULT\r\n];\r\n\r\n/**\r\n * @const\r\n * @enum {number}\r\n */\r\nexport var TEXT_ALIGN = {};\r\nTEXT_ALIGN['left'] = 0;\r\nTEXT_ALIGN['end'] = 0;\r\nTEXT_ALIGN['center'] = 0.5;\r\nTEXT_ALIGN['right'] = 1;\r\nTEXT_ALIGN['start'] = 1;\r\nTEXT_ALIGN['top'] = 0;\r\nTEXT_ALIGN['middle'] = 0.5;\r\nTEXT_ALIGN['hanging'] = 0.2;\r\nTEXT_ALIGN['alphabetic'] = 0.8;\r\nTEXT_ALIGN['ideographic'] = 0.8;\r\nTEXT_ALIGN['bottom'] = 1;\r\n\r\n//# sourceMappingURL=replay.js.map","/**\r\n * @module ol/render/canvas/Replay\r\n */\r\nimport {getUid} from '../../util.js';\r\nimport {equals, reverseSubArray} from '../../array.js';\r\nimport {asColorLike} from '../../colorlike.js';\r\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\r\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\r\nimport Relationship from '../../extent/Relationship.js';\r\nimport GeometryType from '../../geom/GeometryType.js';\r\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\r\nimport {lineStringLength} from '../../geom/flat/length.js';\r\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\r\nimport {transform2D} from '../../geom/flat/transform.js';\r\nimport {CANVAS_LINE_DASH} from '../../has.js';\r\nimport {isEmpty} from '../../obj.js';\r\nimport VectorContext from '../VectorContext.js';\r\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\r\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\r\n  defaultLineDash, defaultLineCap} from '../canvas.js';\r\nimport CanvasInstruction from './Instruction.js';\r\nimport {TEXT_ALIGN} from '../replay.js';\r\nimport {\r\n  create as createTransform,\r\n  compose as composeTransform,\r\n  apply as applyTransform,\r\n  setFromArray as transformSetFromArray\r\n} from '../../transform.js';\r\n\r\n\r\n/**\r\n * @type {import(\"../../extent.js\").Extent}\r\n */\r\nvar tmpExtent = createEmpty();\r\n\r\n\r\n/**\r\n * @type {!import(\"../../transform.js\").Transform}\r\n */\r\nvar tmpTransform = createTransform();\r\n\r\n\r\nvar CanvasReplay = /*@__PURE__*/(function (VectorContext) {\n  function CanvasReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\r\n    VectorContext.call(this);\r\n\r\n    /**\r\n     * @type {?}\r\n     */\r\n    this.declutterTree = declutterTree;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.tolerance = tolerance;\r\n\r\n    /**\r\n     * @protected\r\n     * @const\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.maxExtent = maxExtent;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {boolean}\r\n     */\r\n    this.overlaps = overlaps;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.pixelRatio = pixelRatio;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.maxLineWidth = 0;\r\n\r\n    /**\r\n     * @protected\r\n     * @const\r\n     * @type {number}\r\n     */\r\n    this.resolution = resolution;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.alignFill_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<*>}\r\n     */\r\n    this.beginGeometryInstruction1_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<*>}\r\n     */\r\n    this.beginGeometryInstruction2_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.bufferedMaxExtent_ = null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array<*>}\r\n     */\r\n    this.instructions = [];\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array<number>}\r\n     */\r\n    this.coordinates = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\r\n     */\r\n    this.coordinateCache_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {!import(\"../../transform.js\").Transform}\r\n     */\r\n    this.renderedTransform_ = createTransform();\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array<*>}\r\n     */\r\n    this.hitDetectionInstructions = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.pixelCoordinates_ = null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../canvas.js\").FillStrokeState}\r\n     */\r\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.viewRotation_ = 0;\r\n\r\n  }\n\n  if ( VectorContext ) CanvasReplay.__proto__ = VectorContext;\n  CanvasReplay.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasReplay.prototype.constructor = CanvasReplay;\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\r\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\r\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\r\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\r\n   * @param {Array<*>} fillInstruction Fill instruction.\r\n   * @param {Array<*>} strokeInstruction Stroke instruction.\r\n   */\r\n  CanvasReplay.prototype.replayTextBackground_ = function replayTextBackground_ (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\r\n    context.beginPath();\r\n    context.moveTo.apply(context, p1);\r\n    context.lineTo.apply(context, p2);\r\n    context.lineTo.apply(context, p3);\r\n    context.lineTo.apply(context, p4);\r\n    context.lineTo.apply(context, p1);\r\n    if (fillInstruction) {\r\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\r\n      this.fill_(context);\r\n    }\r\n    if (strokeInstruction) {\r\n      this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\r\n      context.stroke();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {number} x X.\r\n   * @param {number} y Y.\r\n   * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\r\n   * @param {number} anchorX Anchor X.\r\n   * @param {number} anchorY Anchor Y.\r\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\r\n   * @param {number} height Height.\r\n   * @param {number} opacity Opacity.\r\n   * @param {number} originX Origin X.\r\n   * @param {number} originY Origin Y.\r\n   * @param {number} rotation Rotation.\r\n   * @param {number} scale Scale.\r\n   * @param {boolean} snapToPixel Snap to pixel.\r\n   * @param {number} width Width.\r\n   * @param {Array<number>} padding Padding.\r\n   * @param {Array<*>} fillInstruction Fill instruction.\r\n   * @param {Array<*>} strokeInstruction Stroke instruction.\r\n   */\r\n  CanvasReplay.prototype.replayImage_ = function replayImage_ (\r\n    context,\r\n    x,\r\n    y,\r\n    image,\r\n    anchorX,\r\n    anchorY,\r\n    declutterGroup,\r\n    height,\r\n    opacity,\r\n    originX,\r\n    originY,\r\n    rotation,\r\n    scale,\r\n    snapToPixel,\r\n    width,\r\n    padding,\r\n    fillInstruction,\r\n    strokeInstruction\r\n  ) {\r\n    var fillStroke = fillInstruction || strokeInstruction;\r\n    anchorX *= scale;\r\n    anchorY *= scale;\r\n    x -= anchorX;\r\n    y -= anchorY;\r\n\r\n    var w = (width + originX > image.width) ? image.width - originX : width;\r\n    var h = (height + originY > image.height) ? image.height - originY : height;\r\n    var boxW = padding[3] + w * scale + padding[1];\r\n    var boxH = padding[0] + h * scale + padding[2];\r\n    var boxX = x - padding[3];\r\n    var boxY = y - padding[0];\r\n\r\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\r\n    var p1;\r\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\r\n    var p2;\r\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\r\n    var p3;\r\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\r\n    var p4;\r\n    if (fillStroke || rotation !== 0) {\r\n      p1 = [boxX, boxY];\r\n      p2 = [boxX + boxW, boxY];\r\n      p3 = [boxX + boxW, boxY + boxH];\r\n      p4 = [boxX, boxY + boxH];\r\n    }\r\n\r\n    var transform = null;\r\n    if (rotation !== 0) {\r\n      var centerX = x + anchorX;\r\n      var centerY = y + anchorY;\r\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\r\n\r\n      createOrUpdateEmpty(tmpExtent);\r\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\r\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\r\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\r\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\r\n    } else {\r\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\r\n    }\r\n    var canvas = context.canvas;\r\n    var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\r\n    var intersects =\r\n        tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\r\n        tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\r\n\r\n    if (snapToPixel) {\r\n      x = Math.round(x);\r\n      y = Math.round(y);\r\n    }\r\n\r\n    if (declutterGroup) {\r\n      if (!intersects && declutterGroup[4] == 1) {\r\n        return;\r\n      }\r\n      extend(declutterGroup, tmpExtent);\r\n      var declutterArgs = intersects ?\r\n        [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\r\n        null;\r\n      if (declutterArgs && fillStroke) {\r\n        declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\r\n      }\r\n      declutterGroup.push(declutterArgs);\r\n    } else if (intersects) {\r\n      if (fillStroke) {\r\n        this.replayTextBackground_(context, p1, p2, p3, p4,\r\n          /** @type {Array<*>} */ (fillInstruction),\r\n          /** @type {Array<*>} */ (strokeInstruction));\r\n      }\r\n      drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @protected\r\n   * @param {Array<number>} dashArray Dash array.\r\n   * @return {Array<number>} Dash array with pixel ratio applied\r\n   */\r\n  CanvasReplay.prototype.applyPixelRatio = function applyPixelRatio (dashArray) {\r\n    var pixelRatio = this.pixelRatio;\r\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\r\n      return dash * pixelRatio;\r\n    });\r\n  };\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   * @param {boolean} closed Last input coordinate equals first.\r\n   * @param {boolean} skipFirst Skip first coordinate.\r\n   * @protected\r\n   * @return {number} My end.\r\n   */\r\n  CanvasReplay.prototype.appendFlatCoordinates = function appendFlatCoordinates (flatCoordinates, offset, end, stride, closed, skipFirst) {\r\n\r\n    var myEnd = this.coordinates.length;\r\n    var extent = this.getBufferedMaxExtent();\r\n    if (skipFirst) {\r\n      offset += stride;\r\n    }\r\n    var lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\r\n    var nextCoord = [NaN, NaN];\r\n    var skipped = true;\r\n\r\n    var i, lastRel, nextRel;\r\n    for (i = offset + stride; i < end; i += stride) {\r\n      nextCoord[0] = flatCoordinates[i];\r\n      nextCoord[1] = flatCoordinates[i + 1];\r\n      nextRel = coordinateRelationship(extent, nextCoord);\r\n      if (nextRel !== lastRel) {\r\n        if (skipped) {\r\n          this.coordinates[myEnd++] = lastCoord[0];\r\n          this.coordinates[myEnd++] = lastCoord[1];\r\n        }\r\n        this.coordinates[myEnd++] = nextCoord[0];\r\n        this.coordinates[myEnd++] = nextCoord[1];\r\n        skipped = false;\r\n      } else if (nextRel === Relationship.INTERSECTING) {\r\n        this.coordinates[myEnd++] = nextCoord[0];\r\n        this.coordinates[myEnd++] = nextCoord[1];\r\n        skipped = false;\r\n      } else {\r\n        skipped = true;\r\n      }\r\n      lastCoord[0] = nextCoord[0];\r\n      lastCoord[1] = nextCoord[1];\r\n      lastRel = nextRel;\r\n    }\r\n\r\n    // Last coordinate equals first or only one point to append:\r\n    if ((closed && skipped) || i === offset + stride) {\r\n      this.coordinates[myEnd++] = lastCoord[0];\r\n      this.coordinates[myEnd++] = lastCoord[1];\r\n    }\r\n    return myEnd;\r\n  };\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {Array<number>} ends Ends.\r\n   * @param {number} stride Stride.\r\n   * @param {Array<number>} replayEnds Replay ends.\r\n   * @return {number} Offset.\r\n   */\r\n  CanvasReplay.prototype.drawCustomCoordinates_ = function drawCustomCoordinates_ (flatCoordinates, offset, ends, stride, replayEnds) {\r\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n      var end = ends[i];\r\n      var replayEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\r\n      replayEnds.push(replayEnd);\r\n      offset = end;\r\n    }\r\n    return offset;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc.\r\n   */\r\n  CanvasReplay.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {\r\n    this.beginGeometry(geometry, feature);\r\n    var type = geometry.getType();\r\n    var stride = geometry.getStride();\r\n    var replayBegin = this.coordinates.length;\r\n    var flatCoordinates, replayEnd, replayEnds, replayEndss;\r\n    var offset;\r\n    if (type == GeometryType.MULTI_POLYGON) {\r\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\r\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\r\n      replayEndss = [];\r\n      var endss = geometry.getEndss();\r\n      offset = 0;\r\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\r\n        var myEnds = [];\r\n        offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\r\n        replayEndss.push(myEnds);\r\n      }\r\n      this.instructions.push([CanvasInstruction.CUSTOM,\r\n        replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\r\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\r\n      replayEnds = [];\r\n      flatCoordinates = (type == GeometryType.POLYGON) ?\r\n        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\r\n        geometry.getFlatCoordinates();\r\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\r\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\r\n        stride, replayEnds);\r\n      this.instructions.push([CanvasInstruction.CUSTOM,\r\n        replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\r\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\r\n      flatCoordinates = geometry.getFlatCoordinates();\r\n      replayEnd = this.appendFlatCoordinates(\r\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\r\n      this.instructions.push([CanvasInstruction.CUSTOM,\r\n        replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\r\n    } else if (type == GeometryType.POINT) {\r\n      flatCoordinates = geometry.getFlatCoordinates();\r\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\r\n      replayEnd = this.coordinates.length;\r\n      this.instructions.push([CanvasInstruction.CUSTOM,\r\n        replayBegin, replayEnd, geometry, renderer]);\r\n    }\r\n    this.endGeometry(geometry, feature);\r\n  };\r\n\r\n  /**\r\n   * @protected\r\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\r\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\r\n   */\r\n  CanvasReplay.prototype.beginGeometry = function beginGeometry (geometry, feature) {\r\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\r\n    this.instructions.push(this.beginGeometryInstruction1_);\r\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\r\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\r\n  };\r\n\r\n  /**\r\n   * FIXME empty description for jsdoc\r\n   */\r\n  CanvasReplay.prototype.finish = function finish () {};\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   */\r\n  CanvasReplay.prototype.fill_ = function fill_ (context) {\r\n    if (this.alignFill_) {\r\n      var origin = applyTransform(this.renderedTransform_, [0, 0]);\r\n      var repeatSize = 512 * this.pixelRatio;\r\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\r\n      context.rotate(this.viewRotation_);\r\n    }\r\n    context.fill();\r\n    if (this.alignFill_) {\r\n      context.setTransform.apply(context, resetTransform);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {Array<*>} instruction Instruction.\r\n   */\r\n  CanvasReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (context, instruction) {\r\n    context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\r\n    context.lineWidth = /** @type {number} */ (instruction[2]);\r\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\r\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\r\n    context.miterLimit = /** @type {number} */ (instruction[5]);\r\n    if (CANVAS_LINE_DASH) {\r\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\r\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\r\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\r\n   */\r\n  CanvasReplay.prototype.renderDeclutter_ = function renderDeclutter_ (declutterGroup, feature) {\r\n    if (declutterGroup && declutterGroup.length > 5) {\r\n      var groupCount = declutterGroup[4];\r\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\r\n        /** @type {import(\"../../structs/RBush.js\").Entry} */\r\n        var box = {\r\n          minX: /** @type {number} */ (declutterGroup[0]),\r\n          minY: /** @type {number} */ (declutterGroup[1]),\r\n          maxX: /** @type {number} */ (declutterGroup[2]),\r\n          maxY: /** @type {number} */ (declutterGroup[3]),\r\n          value: feature\r\n        };\r\n        if (!this.declutterTree.collides(box)) {\r\n          this.declutterTree.insert(box);\r\n          for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\r\n            var declutterData = /** @type {Array} */ (declutterGroup[j]);\r\n            if (declutterData) {\r\n              if (declutterData.length > 11) {\r\n                this.replayTextBackground_(declutterData[0],\r\n                  declutterData[13], declutterData[14], declutterData[15], declutterData[16],\r\n                  declutterData[11], declutterData[12]);\r\n              }\r\n              drawImage.apply(undefined, declutterData);\r\n            }\r\n          }\r\n        }\r\n        declutterGroup.length = 5;\r\n        createOrUpdateEmpty(declutterGroup);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\r\n   *     to skip.\r\n   * @param {Array<*>} instructions Instructions array.\r\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\r\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\r\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\r\n   *     extent.\r\n   * @return {T|undefined} Callback result.\r\n   * @template T\r\n   */\r\n  CanvasReplay.prototype.replay_ = function replay_ (\r\n    context,\r\n    transform,\r\n    skippedFeaturesHash,\r\n    instructions,\r\n    snapToPixel,\r\n    featureCallback,\r\n    opt_hitExtent\r\n  ) {\r\n    /** @type {Array<number>} */\r\n    var pixelCoordinates;\r\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\r\n      pixelCoordinates = this.pixelCoordinates_;\r\n    } else {\r\n      if (!this.pixelCoordinates_) {\r\n        this.pixelCoordinates_ = [];\r\n      }\r\n      pixelCoordinates = transform2D(\r\n        this.coordinates, 0, this.coordinates.length, 2,\r\n        transform, this.pixelCoordinates_);\r\n      transformSetFromArray(this.renderedTransform_, transform);\r\n    }\r\n    var skipFeatures = !isEmpty(skippedFeaturesHash);\r\n    var i = 0; // instruction index\r\n    var ii = instructions.length; // end of instructions\r\n    var d = 0; // data index\r\n    var dd; // end of per-instruction data\r\n    var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\r\n    var pendingFill = 0;\r\n    var pendingStroke = 0;\r\n    var lastFillInstruction = null;\r\n    var lastStrokeInstruction = null;\r\n    var coordinateCache = this.coordinateCache_;\r\n    var viewRotation = this.viewRotation_;\r\n\r\n    var state = /** @type {import(\"../../render.js\").State} */ ({\r\n      context: context,\r\n      pixelRatio: this.pixelRatio,\r\n      resolution: this.resolution,\r\n      rotation: viewRotation\r\n    });\r\n\r\n    // When the batch size gets too big, performance decreases. 200 is a good\r\n    // balance between batch size and number of fill/stroke instructions.\r\n    var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\r\n    var /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ feature;\r\n    var x, y;\r\n    while (i < ii) {\r\n      var instruction = instructions[i];\r\n      var type = /** @type {CanvasInstruction} */ (instruction[0]);\r\n      switch (type) {\r\n        case CanvasInstruction.BEGIN_GEOMETRY:\r\n          feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\r\n          if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\r\n            i = /** @type {number} */ (instruction[2]);\r\n          } else if (opt_hitExtent !== undefined && !intersects(\r\n            opt_hitExtent, feature.getGeometry().getExtent())) {\r\n            i = /** @type {number} */ (instruction[2]) + 1;\r\n          } else {\r\n            ++i;\r\n          }\r\n          break;\r\n        case CanvasInstruction.BEGIN_PATH:\r\n          if (pendingFill > batchSize) {\r\n            this.fill_(context);\r\n            pendingFill = 0;\r\n          }\r\n          if (pendingStroke > batchSize) {\r\n            context.stroke();\r\n            pendingStroke = 0;\r\n          }\r\n          if (!pendingFill && !pendingStroke) {\r\n            context.beginPath();\r\n            prevX = prevY = NaN;\r\n          }\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.CIRCLE:\r\n          d = /** @type {number} */ (instruction[1]);\r\n          var x1 = pixelCoordinates[d];\r\n          var y1 = pixelCoordinates[d + 1];\r\n          var x2 = pixelCoordinates[d + 2];\r\n          var y2 = pixelCoordinates[d + 3];\r\n          var dx = x2 - x1;\r\n          var dy = y2 - y1;\r\n          var r = Math.sqrt(dx * dx + dy * dy);\r\n          context.moveTo(x1 + r, y1);\r\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.CLOSE_PATH:\r\n          context.closePath();\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.CUSTOM:\r\n          d = /** @type {number} */ (instruction[1]);\r\n          dd = instruction[2];\r\n          var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\r\n          var renderer = instruction[4];\r\n          var fn = instruction.length == 6 ? instruction[5] : undefined;\r\n          state.geometry = geometry;\r\n          state.feature = feature;\r\n          if (!(i in coordinateCache)) {\r\n            coordinateCache[i] = [];\r\n          }\r\n          var coords = coordinateCache[i];\r\n          if (fn) {\r\n            fn(pixelCoordinates, d, dd, 2, coords);\r\n          } else {\r\n            coords[0] = pixelCoordinates[d];\r\n            coords[1] = pixelCoordinates[d + 1];\r\n            coords.length = 2;\r\n          }\r\n          renderer(coords, state);\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.DRAW_IMAGE:\r\n          d = /** @type {number} */ (instruction[1]);\r\n          dd = /** @type {number} */ (instruction[2]);\r\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */\r\n              (instruction[3]);\r\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\r\n          anchorX = /** @type {number} */ (instruction[4]);\r\n          anchorY = /** @type {number} */ (instruction[5]);\r\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\r\n          var height = /** @type {number} */ (instruction[7]);\r\n          var opacity = /** @type {number} */ (instruction[8]);\r\n          var originX = /** @type {number} */ (instruction[9]);\r\n          var originY = /** @type {number} */ (instruction[10]);\r\n          var rotateWithView = /** @type {boolean} */ (instruction[11]);\r\n          var rotation = /** @type {number} */ (instruction[12]);\r\n          var scale = /** @type {number} */ (instruction[13]);\r\n          var width = /** @type {number} */ (instruction[14]);\r\n\r\n          var padding = (void 0), backgroundFill = (void 0), backgroundStroke = (void 0);\r\n          if (instruction.length > 16) {\r\n            padding = /** @type {Array<number>} */ (instruction[15]);\r\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\r\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\r\n          } else {\r\n            padding = defaultPadding;\r\n            backgroundFill = backgroundStroke = false;\r\n          }\r\n\r\n          if (rotateWithView) {\r\n            rotation += viewRotation;\r\n          }\r\n          for (; d < dd; d += 2) {\r\n            this.replayImage_(context,\r\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\r\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\r\n              snapToPixel, width, padding,\r\n              backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null,\r\n              backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\r\n          }\r\n          this.renderDeclutter_(declutterGroup, feature);\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.DRAW_CHARS:\r\n          var begin = /** @type {number} */ (instruction[1]);\r\n          var end = /** @type {number} */ (instruction[2]);\r\n          var baseline = /** @type {number} */ (instruction[3]);\r\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\r\n          var overflow = /** @type {number} */ (instruction[5]);\r\n          var fillKey = /** @type {string} */ (instruction[6]);\r\n          var maxAngle = /** @type {number} */ (instruction[7]);\r\n          var measure = /** @type {function(string):number} */ (instruction[8]);\r\n          var offsetY = /** @type {number} */ (instruction[9]);\r\n          var strokeKey = /** @type {string} */ (instruction[10]);\r\n          var strokeWidth = /** @type {number} */ (instruction[11]);\r\n          var text = /** @type {string} */ (instruction[12]);\r\n          var textKey = /** @type {string} */ (instruction[13]);\r\n          var textScale = /** @type {number} */ (instruction[14]);\r\n\r\n          var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\r\n          var textLength = measure(text);\r\n          if (overflow || textLength <= pathLength) {\r\n            /** @type {import(\"./TextReplay.js\").default} */\r\n            var textReplay = /** @type {?} */ (this);\r\n            var textAlign = textReplay.textStates[textKey].textAlign;\r\n            var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\r\n            var parts = drawTextOnPath(\r\n              pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\r\n            if (parts) {\r\n              var c = (void 0), cc = (void 0), chars = (void 0), label = (void 0), part = (void 0);\r\n              if (strokeKey) {\r\n                for (c = 0, cc = parts.length; c < cc; ++c) {\r\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\r\n                  chars = /** @type {string} */ (part[4]);\r\n                  label = textReplay.getImage(chars, textKey, '', strokeKey);\r\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\r\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\r\n                  this.replayImage_(context,\r\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\r\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\r\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\r\n                    defaultPadding, null, null);\r\n                }\r\n              }\r\n              if (fillKey) {\r\n                for (c = 0, cc = parts.length; c < cc; ++c) {\r\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\r\n                  chars = /** @type {string} */ (part[4]);\r\n                  label = textReplay.getImage(chars, textKey, fillKey, '');\r\n                  anchorX = /** @type {number} */ (part[2]);\r\n                  anchorY = baseline * label.height - offsetY;\r\n                  this.replayImage_(context,\r\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\r\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\r\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\r\n                    defaultPadding, null, null);\r\n                }\r\n              }\r\n            }\r\n          }\r\n          this.renderDeclutter_(declutterGroup, feature);\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.END_GEOMETRY:\r\n          if (featureCallback !== undefined) {\r\n            feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\r\n            var result = featureCallback(feature);\r\n            if (result) {\r\n              return result;\r\n            }\r\n          }\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.FILL:\r\n          if (batchSize) {\r\n            pendingFill++;\r\n          } else {\r\n            this.fill_(context);\r\n          }\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.MOVE_TO_LINE_TO:\r\n          d = /** @type {number} */ (instruction[1]);\r\n          dd = /** @type {number} */ (instruction[2]);\r\n          x = pixelCoordinates[d];\r\n          y = pixelCoordinates[d + 1];\r\n          roundX = (x + 0.5) | 0;\r\n          roundY = (y + 0.5) | 0;\r\n          if (roundX !== prevX || roundY !== prevY) {\r\n            context.moveTo(x, y);\r\n            prevX = roundX;\r\n            prevY = roundY;\r\n          }\r\n          for (d += 2; d < dd; d += 2) {\r\n            x = pixelCoordinates[d];\r\n            y = pixelCoordinates[d + 1];\r\n            roundX = (x + 0.5) | 0;\r\n            roundY = (y + 0.5) | 0;\r\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\r\n              context.lineTo(x, y);\r\n              prevX = roundX;\r\n              prevY = roundY;\r\n            }\r\n          }\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.SET_FILL_STYLE:\r\n          lastFillInstruction = instruction;\r\n          this.alignFill_ = instruction[2];\r\n\r\n          if (pendingFill) {\r\n            this.fill_(context);\r\n            pendingFill = 0;\r\n            if (pendingStroke) {\r\n              context.stroke();\r\n              pendingStroke = 0;\r\n            }\r\n          }\r\n\r\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.SET_STROKE_STYLE:\r\n          lastStrokeInstruction = instruction;\r\n          if (pendingStroke) {\r\n            context.stroke();\r\n            pendingStroke = 0;\r\n          }\r\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.STROKE:\r\n          if (batchSize) {\r\n            pendingStroke++;\r\n          } else {\r\n            context.stroke();\r\n          }\r\n          ++i;\r\n          break;\r\n        default:\r\n          ++i; // consume the instruction anyway, to avoid an infinite loop\r\n          break;\r\n      }\r\n    }\r\n    if (pendingFill) {\r\n      this.fill_(context);\r\n    }\r\n    if (pendingStroke) {\r\n      context.stroke();\r\n    }\r\n    return undefined;\r\n  };\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   * @param {number} viewRotation View rotation.\r\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\r\n   *     to skip.\r\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\r\n   */\r\n  CanvasReplay.prototype.replay = function replay (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\r\n    this.viewRotation_ = viewRotation;\r\n    this.replay_(context, transform,\r\n      skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\r\n  };\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   * @param {number} viewRotation View rotation.\r\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\r\n   *     to skip.\r\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T=} opt_featureCallback\r\n   *     Feature callback.\r\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\r\n   *     extent.\r\n   * @return {T|undefined} Callback result.\r\n   * @template T\r\n   */\r\n  CanvasReplay.prototype.replayHitDetection = function replayHitDetection (\r\n    context,\r\n    transform,\r\n    viewRotation,\r\n    skippedFeaturesHash,\r\n    opt_featureCallback,\r\n    opt_hitExtent\r\n  ) {\r\n    this.viewRotation_ = viewRotation;\r\n    return this.replay_(context, transform, skippedFeaturesHash,\r\n      this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\r\n  };\r\n\r\n  /**\r\n   * Reverse the hit detection instructions.\r\n   */\r\n  CanvasReplay.prototype.reverseHitDetectionInstructions = function reverseHitDetectionInstructions () {\r\n    var hitDetectionInstructions = this.hitDetectionInstructions;\r\n    // step 1 - reverse array\r\n    hitDetectionInstructions.reverse();\r\n    // step 2 - reverse instructions within geometry blocks\r\n    var i;\r\n    var n = hitDetectionInstructions.length;\r\n    var instruction;\r\n    var type;\r\n    var begin = -1;\r\n    for (i = 0; i < n; ++i) {\r\n      instruction = hitDetectionInstructions[i];\r\n      type = /** @type {CanvasInstruction} */ (instruction[0]);\r\n      if (type == CanvasInstruction.END_GEOMETRY) {\r\n        begin = i;\r\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\r\n        instruction[2] = i;\r\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\r\n        begin = -1;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\r\n    var state = this.state;\r\n    if (fillStyle) {\r\n      var fillStyleColor = fillStyle.getColor();\r\n      state.fillStyle = asColorLike(fillStyleColor ?\r\n        fillStyleColor : defaultFillStyle);\r\n    } else {\r\n      state.fillStyle = undefined;\r\n    }\r\n    if (strokeStyle) {\r\n      var strokeStyleColor = strokeStyle.getColor();\r\n      state.strokeStyle = asColorLike(strokeStyleColor ?\r\n        strokeStyleColor : defaultStrokeStyle);\r\n      var strokeStyleLineCap = strokeStyle.getLineCap();\r\n      state.lineCap = strokeStyleLineCap !== undefined ?\r\n        strokeStyleLineCap : defaultLineCap;\r\n      var strokeStyleLineDash = strokeStyle.getLineDash();\r\n      state.lineDash = strokeStyleLineDash ?\r\n        strokeStyleLineDash.slice() : defaultLineDash;\r\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\r\n      state.lineDashOffset = strokeStyleLineDashOffset ?\r\n        strokeStyleLineDashOffset : defaultLineDashOffset;\r\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\r\n      state.lineJoin = strokeStyleLineJoin !== undefined ?\r\n        strokeStyleLineJoin : defaultLineJoin;\r\n      var strokeStyleWidth = strokeStyle.getWidth();\r\n      state.lineWidth = strokeStyleWidth !== undefined ?\r\n        strokeStyleWidth : defaultLineWidth;\r\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\r\n      state.miterLimit = strokeStyleMiterLimit !== undefined ?\r\n        strokeStyleMiterLimit : defaultMiterLimit;\r\n\r\n      if (state.lineWidth > this.maxLineWidth) {\r\n        this.maxLineWidth = state.lineWidth;\r\n        // invalidate the buffered max extent cache\r\n        this.bufferedMaxExtent_ = null;\r\n      }\r\n    } else {\r\n      state.strokeStyle = undefined;\r\n      state.lineCap = undefined;\r\n      state.lineDash = null;\r\n      state.lineDashOffset = undefined;\r\n      state.lineJoin = undefined;\r\n      state.lineWidth = undefined;\r\n      state.miterLimit = undefined;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\r\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\r\n   * @return {Array<*>} Fill instruction.\r\n   */\r\n  CanvasReplay.prototype.createFill = function createFill (state, geometry) {\r\n    var fillStyle = state.fillStyle;\r\n    /** @type {Array<*>} */\r\n    var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\r\n    if (typeof fillStyle !== 'string') {\r\n      // Fill is a pattern or gradient - align it!\r\n      fillInstruction.push(true);\r\n    }\r\n    return fillInstruction;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\r\n   */\r\n  CanvasReplay.prototype.applyStroke = function applyStroke (state) {\r\n    this.instructions.push(this.createStroke(state));\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\r\n   * @return {Array<*>} Stroke instruction.\r\n   */\r\n  CanvasReplay.prototype.createStroke = function createStroke (state) {\r\n    return [\r\n      CanvasInstruction.SET_STROKE_STYLE,\r\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\r\n      state.lineJoin, state.miterLimit,\r\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\r\n    ];\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\r\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState, (import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default)):Array<*>} createFill Create fill.\r\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\r\n   */\r\n  CanvasReplay.prototype.updateFillStyle = function updateFillStyle (state, createFill, geometry) {\r\n    var fillStyle = state.fillStyle;\r\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\r\n      if (fillStyle !== undefined) {\r\n        this.instructions.push(createFill.call(this, state, geometry));\r\n      }\r\n      state.currentFillStyle = fillStyle;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\r\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState)} applyStroke Apply stroke.\r\n   */\r\n  CanvasReplay.prototype.updateStrokeStyle = function updateStrokeStyle (state, applyStroke) {\r\n    var strokeStyle = state.strokeStyle;\r\n    var lineCap = state.lineCap;\r\n    var lineDash = state.lineDash;\r\n    var lineDashOffset = state.lineDashOffset;\r\n    var lineJoin = state.lineJoin;\r\n    var lineWidth = state.lineWidth;\r\n    var miterLimit = state.miterLimit;\r\n    if (state.currentStrokeStyle != strokeStyle ||\r\n        state.currentLineCap != lineCap ||\r\n        (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\r\n        state.currentLineDashOffset != lineDashOffset ||\r\n        state.currentLineJoin != lineJoin ||\r\n        state.currentLineWidth != lineWidth ||\r\n        state.currentMiterLimit != miterLimit) {\r\n      if (strokeStyle !== undefined) {\r\n        applyStroke.call(this, state);\r\n      }\r\n      state.currentStrokeStyle = strokeStyle;\r\n      state.currentLineCap = lineCap;\r\n      state.currentLineDash = lineDash;\r\n      state.currentLineDashOffset = lineDashOffset;\r\n      state.currentLineJoin = lineJoin;\r\n      state.currentLineWidth = lineWidth;\r\n      state.currentMiterLimit = miterLimit;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\r\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\r\n   */\r\n  CanvasReplay.prototype.endGeometry = function endGeometry (geometry, feature) {\r\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\r\n    this.beginGeometryInstruction1_ = null;\r\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\r\n    this.beginGeometryInstruction2_ = null;\r\n    var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\r\n    this.instructions.push(endGeometryInstruction);\r\n    this.hitDetectionInstructions.push(endGeometryInstruction);\r\n  };\r\n\r\n  /**\r\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\r\n   * provided to the constructor.  To account for symbolizers that may intersect\r\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\r\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\r\n   * @protected\r\n   */\r\n  CanvasReplay.prototype.getBufferedMaxExtent = function getBufferedMaxExtent () {\r\n    if (!this.bufferedMaxExtent_) {\r\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\r\n      if (this.maxLineWidth > 0) {\r\n        var width = this.resolution * (this.maxLineWidth + 1) / 2;\r\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\r\n      }\r\n    }\r\n    return this.bufferedMaxExtent_;\r\n  };\n\n  return CanvasReplay;\n}(VectorContext));\r\n\r\n\r\nexport default CanvasReplay;\r\n\r\n//# sourceMappingURL=Replay.js.map","/**\r\n * @module ol/render/canvas/ImageReplay\r\n */\r\nimport CanvasInstruction from './Instruction.js';\r\nimport CanvasReplay from './Replay.js';\r\n\r\nvar CanvasImageReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasImageReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\r\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../canvas.js\").DeclutterGroup}\r\n     */\r\n    this.declutterGroup_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\r\n     */\r\n    this.hitDetectionImage_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\r\n     */\r\n    this.image_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.anchorX_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.anchorY_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.height_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.opacity_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.originX_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.originY_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.rotateWithView_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.rotation_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.scale_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.width_ = undefined;\r\n\r\n  }\n\n  if ( CanvasReplay ) CanvasImageReplay.__proto__ = CanvasReplay;\n  CanvasImageReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasImageReplay.prototype.constructor = CanvasImageReplay;\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   * @private\r\n   * @return {number} My end.\r\n   */\r\n  CanvasImageReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\r\n    return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasImageReplay.prototype.drawPoint = function drawPoint (pointGeometry, feature) {\r\n    if (!this.image_) {\r\n      return;\r\n    }\r\n    this.beginGeometry(pointGeometry, feature);\r\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\r\n    var stride = pointGeometry.getStride();\r\n    var myBegin = this.coordinates.length;\r\n    var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\r\n    this.instructions.push([\r\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\r\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\r\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\r\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\r\n      this.scale_ * this.pixelRatio, this.width_\r\n    ]);\r\n    this.hitDetectionInstructions.push([\r\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\r\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\r\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\r\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\r\n      this.scale_, this.width_\r\n    ]);\r\n    this.endGeometry(pointGeometry, feature);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasImageReplay.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {\r\n    if (!this.image_) {\r\n      return;\r\n    }\r\n    this.beginGeometry(multiPointGeometry, feature);\r\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\r\n    var stride = multiPointGeometry.getStride();\r\n    var myBegin = this.coordinates.length;\r\n    var myEnd = this.drawCoordinates_(\r\n      flatCoordinates, 0, flatCoordinates.length, stride);\r\n    this.instructions.push([\r\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\r\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\r\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\r\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\r\n      this.scale_ * this.pixelRatio, this.width_\r\n    ]);\r\n    this.hitDetectionInstructions.push([\r\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\r\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\r\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\r\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\r\n      this.scale_, this.width_\r\n    ]);\r\n    this.endGeometry(multiPointGeometry, feature);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasImageReplay.prototype.finish = function finish () {\r\n    this.reverseHitDetectionInstructions();\r\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\r\n    this.anchorX_ = undefined;\r\n    this.anchorY_ = undefined;\r\n    this.hitDetectionImage_ = null;\r\n    this.image_ = null;\r\n    this.height_ = undefined;\r\n    this.scale_ = undefined;\r\n    this.opacity_ = undefined;\r\n    this.originX_ = undefined;\r\n    this.originY_ = undefined;\r\n    this.rotateWithView_ = undefined;\r\n    this.rotation_ = undefined;\r\n    this.width_ = undefined;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasImageReplay.prototype.setImageStyle = function setImageStyle (imageStyle, declutterGroup) {\r\n    var anchor = imageStyle.getAnchor();\r\n    var size = imageStyle.getSize();\r\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\r\n    var image = imageStyle.getImage(1);\r\n    var origin = imageStyle.getOrigin();\r\n    this.anchorX_ = anchor[0];\r\n    this.anchorY_ = anchor[1];\r\n    this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\r\n    this.hitDetectionImage_ = hitDetectionImage;\r\n    this.image_ = image;\r\n    this.height_ = size[1];\r\n    this.opacity_ = imageStyle.getOpacity();\r\n    this.originX_ = origin[0];\r\n    this.originY_ = origin[1];\r\n    this.rotateWithView_ = imageStyle.getRotateWithView();\r\n    this.rotation_ = imageStyle.getRotation();\r\n    this.scale_ = imageStyle.getScale();\r\n    this.width_ = size[0];\r\n  };\n\n  return CanvasImageReplay;\n}(CanvasReplay));\r\n\r\n\r\nexport default CanvasImageReplay;\r\n\r\n//# sourceMappingURL=ImageReplay.js.map","/**\r\n * @module ol/render/canvas/LineStringReplay\r\n */\r\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from './Instruction.js';\r\nimport CanvasReplay from './Replay.js';\r\n\r\nvar CanvasLineStringReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasLineStringReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\r\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\r\n  }\n\n  if ( CanvasReplay ) CanvasLineStringReplay.__proto__ = CanvasReplay;\n  CanvasLineStringReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasLineStringReplay.prototype.constructor = CanvasLineStringReplay;\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   * @private\r\n   * @return {number} end.\r\n   */\r\n  CanvasLineStringReplay.prototype.drawFlatCoordinates_ = function drawFlatCoordinates_ (flatCoordinates, offset, end, stride) {\r\n    var myBegin = this.coordinates.length;\r\n    var myEnd = this.appendFlatCoordinates(\r\n      flatCoordinates, offset, end, stride, false, false);\r\n    var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\r\n    this.instructions.push(moveToLineToInstruction);\r\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\r\n    return end;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasLineStringReplay.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {\r\n    var state = this.state;\r\n    var strokeStyle = state.strokeStyle;\r\n    var lineWidth = state.lineWidth;\r\n    if (strokeStyle === undefined || lineWidth === undefined) {\r\n      return;\r\n    }\r\n    this.updateStrokeStyle(state, this.applyStroke);\r\n    this.beginGeometry(lineStringGeometry, feature);\r\n    this.hitDetectionInstructions.push([\r\n      CanvasInstruction.SET_STROKE_STYLE,\r\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\r\n      state.miterLimit, state.lineDash, state.lineDashOffset\r\n    ], beginPathInstruction);\r\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\r\n    var stride = lineStringGeometry.getStride();\r\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\r\n    this.hitDetectionInstructions.push(strokeInstruction);\r\n    this.endGeometry(lineStringGeometry, feature);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {\r\n    var state = this.state;\r\n    var strokeStyle = state.strokeStyle;\r\n    var lineWidth = state.lineWidth;\r\n    if (strokeStyle === undefined || lineWidth === undefined) {\r\n      return;\r\n    }\r\n    this.updateStrokeStyle(state, this.applyStroke);\r\n    this.beginGeometry(multiLineStringGeometry, feature);\r\n    this.hitDetectionInstructions.push([\r\n      CanvasInstruction.SET_STROKE_STYLE,\r\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\r\n      state.miterLimit, state.lineDash, state.lineDashOffset\r\n    ], beginPathInstruction);\r\n    var ends = multiLineStringGeometry.getEnds();\r\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\r\n    var stride = multiLineStringGeometry.getStride();\r\n    var offset = 0;\r\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n      offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\r\n    }\r\n    this.hitDetectionInstructions.push(strokeInstruction);\r\n    this.endGeometry(multiLineStringGeometry, feature);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasLineStringReplay.prototype.finish = function finish () {\r\n    var state = this.state;\r\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\r\n      this.instructions.push(strokeInstruction);\r\n    }\r\n    this.reverseHitDetectionInstructions();\r\n    this.state = null;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc.\r\n   */\r\n  CanvasLineStringReplay.prototype.applyStroke = function applyStroke (state) {\r\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\r\n      this.instructions.push(strokeInstruction);\r\n      state.lastStroke = this.coordinates.length;\r\n    }\r\n    state.lastStroke = 0;\r\n    CanvasReplay.prototype.applyStroke.call(this, state);\r\n    this.instructions.push(beginPathInstruction);\r\n  };\n\n  return CanvasLineStringReplay;\n}(CanvasReplay));\r\n\r\n\r\nexport default CanvasLineStringReplay;\r\n\r\n//# sourceMappingURL=LineStringReplay.js.map","/**\r\n * @module ol/render/canvas/PolygonReplay\r\n */\r\nimport {asString} from '../../color.js';\r\nimport {snap} from '../../geom/flat/simplify.js';\r\nimport {defaultFillStyle} from '../canvas.js';\r\nimport CanvasInstruction, {\r\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\r\n} from './Instruction.js';\r\nimport CanvasReplay from './Replay.js';\r\n\r\n\r\nvar CanvasPolygonReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasPolygonReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\r\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\r\n  }\n\n  if ( CanvasReplay ) CanvasPolygonReplay.__proto__ = CanvasReplay;\n  CanvasPolygonReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasPolygonReplay.prototype.constructor = CanvasPolygonReplay;\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {Array<number>} ends Ends.\r\n   * @param {number} stride Stride.\r\n   * @private\r\n   * @return {number} End.\r\n   */\r\n  CanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function drawFlatCoordinatess_ (flatCoordinates, offset, ends, stride) {\r\n    var state = this.state;\r\n    var fill = state.fillStyle !== undefined;\r\n    var stroke = state.strokeStyle != undefined;\r\n    var numEnds = ends.length;\r\n    this.instructions.push(beginPathInstruction);\r\n    this.hitDetectionInstructions.push(beginPathInstruction);\r\n    for (var i = 0; i < numEnds; ++i) {\r\n      var end = ends[i];\r\n      var myBegin = this.coordinates.length;\r\n      var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\r\n      var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\r\n      this.instructions.push(moveToLineToInstruction);\r\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\r\n      if (stroke) {\r\n        // Performance optimization: only call closePath() when we have a stroke.\r\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\r\n        this.instructions.push(closePathInstruction);\r\n        this.hitDetectionInstructions.push(closePathInstruction);\r\n      }\r\n      offset = end;\r\n    }\r\n    if (fill) {\r\n      this.instructions.push(fillInstruction);\r\n      this.hitDetectionInstructions.push(fillInstruction);\r\n    }\r\n    if (stroke) {\r\n      this.instructions.push(strokeInstruction);\r\n      this.hitDetectionInstructions.push(strokeInstruction);\r\n    }\r\n    return offset;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasPolygonReplay.prototype.drawCircle = function drawCircle (circleGeometry, feature) {\r\n    var state = this.state;\r\n    var fillStyle = state.fillStyle;\r\n    var strokeStyle = state.strokeStyle;\r\n    if (fillStyle === undefined && strokeStyle === undefined) {\r\n      return;\r\n    }\r\n    this.setFillStrokeStyles_(circleGeometry);\r\n    this.beginGeometry(circleGeometry, feature);\r\n    if (state.fillStyle !== undefined) {\r\n      this.hitDetectionInstructions.push([\r\n        CanvasInstruction.SET_FILL_STYLE,\r\n        asString(defaultFillStyle)\r\n      ]);\r\n    }\r\n    if (state.strokeStyle !== undefined) {\r\n      this.hitDetectionInstructions.push([\r\n        CanvasInstruction.SET_STROKE_STYLE,\r\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\r\n        state.miterLimit, state.lineDash, state.lineDashOffset\r\n      ]);\r\n    }\r\n    var flatCoordinates = circleGeometry.getFlatCoordinates();\r\n    var stride = circleGeometry.getStride();\r\n    var myBegin = this.coordinates.length;\r\n    this.appendFlatCoordinates(\r\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\r\n    var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\r\n    this.instructions.push(beginPathInstruction, circleInstruction);\r\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\r\n    this.hitDetectionInstructions.push(fillInstruction);\r\n    if (state.fillStyle !== undefined) {\r\n      this.instructions.push(fillInstruction);\r\n    }\r\n    if (state.strokeStyle !== undefined) {\r\n      this.instructions.push(strokeInstruction);\r\n      this.hitDetectionInstructions.push(strokeInstruction);\r\n    }\r\n    this.endGeometry(circleGeometry, feature);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasPolygonReplay.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {\r\n    var state = this.state;\r\n    var fillStyle = state.fillStyle;\r\n    var strokeStyle = state.strokeStyle;\r\n    if (fillStyle === undefined && strokeStyle === undefined) {\r\n      return;\r\n    }\r\n    this.setFillStrokeStyles_(polygonGeometry);\r\n    this.beginGeometry(polygonGeometry, feature);\r\n    if (state.fillStyle !== undefined) {\r\n      this.hitDetectionInstructions.push([\r\n        CanvasInstruction.SET_FILL_STYLE,\r\n        asString(defaultFillStyle)\r\n      ]);\r\n    }\r\n    if (state.strokeStyle !== undefined) {\r\n      this.hitDetectionInstructions.push([\r\n        CanvasInstruction.SET_STROKE_STYLE,\r\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\r\n        state.miterLimit, state.lineDash, state.lineDashOffset\r\n      ]);\r\n    }\r\n    var ends = polygonGeometry.getEnds();\r\n    var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\r\n    var stride = polygonGeometry.getStride();\r\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\r\n    this.endGeometry(polygonGeometry, feature);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {\r\n    var state = this.state;\r\n    var fillStyle = state.fillStyle;\r\n    var strokeStyle = state.strokeStyle;\r\n    if (fillStyle === undefined && strokeStyle === undefined) {\r\n      return;\r\n    }\r\n    this.setFillStrokeStyles_(multiPolygonGeometry);\r\n    this.beginGeometry(multiPolygonGeometry, feature);\r\n    if (state.fillStyle !== undefined) {\r\n      this.hitDetectionInstructions.push([\r\n        CanvasInstruction.SET_FILL_STYLE,\r\n        asString(defaultFillStyle)\r\n      ]);\r\n    }\r\n    if (state.strokeStyle !== undefined) {\r\n      this.hitDetectionInstructions.push([\r\n        CanvasInstruction.SET_STROKE_STYLE,\r\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\r\n        state.miterLimit, state.lineDash, state.lineDashOffset\r\n      ]);\r\n    }\r\n    var endss = multiPolygonGeometry.getEndss();\r\n    var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\r\n    var stride = multiPolygonGeometry.getStride();\r\n    var offset = 0;\r\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\r\n      offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\r\n    }\r\n    this.endGeometry(multiPolygonGeometry, feature);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasPolygonReplay.prototype.finish = function finish () {\r\n    this.reverseHitDetectionInstructions();\r\n    this.state = null;\r\n    // We want to preserve topology when drawing polygons.  Polygons are\r\n    // simplified using quantization and point elimination. However, we might\r\n    // have received a mix of quantized and non-quantized geometries, so ensure\r\n    // that all are quantized by quantizing all coordinates in the batch.\r\n    var tolerance = this.tolerance;\r\n    if (tolerance !== 0) {\r\n      var coordinates = this.coordinates;\r\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\r\n        coordinates[i] = snap(coordinates[i], tolerance);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\r\n   */\r\n  CanvasPolygonReplay.prototype.setFillStrokeStyles_ = function setFillStrokeStyles_ (geometry) {\r\n    var state = this.state;\r\n    var fillStyle = state.fillStyle;\r\n    if (fillStyle !== undefined) {\r\n      this.updateFillStyle(state, this.createFill, geometry);\r\n    }\r\n    if (state.strokeStyle !== undefined) {\r\n      this.updateStrokeStyle(state, this.applyStroke);\r\n    }\r\n  };\n\n  return CanvasPolygonReplay;\n}(CanvasReplay));\r\n\r\n\r\nexport default CanvasPolygonReplay;\r\n\r\n//# sourceMappingURL=PolygonReplay.js.map","/**\r\n * @module ol/geom/flat/straightchunk\r\n */\r\n\r\n\r\n/**\r\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @return {Array<number>} Start and end of the first suitable chunk of the\r\n * given `flatCoordinates`.\r\n */\r\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\r\n  var chunkStart = offset;\r\n  var chunkEnd = offset;\r\n  var chunkM = 0;\r\n  var m = 0;\r\n  var start = offset;\r\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\r\n  for (i = offset; i < end; i += stride) {\r\n    var x2 = flatCoordinates[i];\r\n    var y2 = flatCoordinates[i + 1];\r\n    if (x1 !== undefined) {\r\n      x23 = x2 - x1;\r\n      y23 = y2 - y1;\r\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\r\n      if (x12 !== undefined) {\r\n        m += m12;\r\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\r\n        if (acos > maxAngle) {\r\n          if (m > chunkM) {\r\n            chunkM = m;\r\n            chunkStart = start;\r\n            chunkEnd = i;\r\n          }\r\n          m = 0;\r\n          start = i - stride;\r\n        }\r\n      }\r\n      m12 = m23;\r\n      x12 = x23;\r\n      y12 = y23;\r\n    }\r\n    x1 = x2;\r\n    y1 = y2;\r\n  }\r\n  m += m23;\r\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\r\n}\r\n\r\n//# sourceMappingURL=straightchunk.js.map","/**\r\n * @module ol/style/TextPlacement\r\n */\r\n\r\n/**\r\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\r\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\r\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\r\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\r\n * @enum {string}\r\n */\r\nexport default {\r\n  POINT: 'point',\r\n  LINE: 'line'\r\n};\r\n\r\n//# sourceMappingURL=TextPlacement.js.map","/**\r\n * @module ol/render/canvas/TextReplay\r\n */\r\nimport {getUid} from '../../util.js';\r\nimport {asColorLike} from '../../colorlike.js';\r\nimport {createCanvasContext2D} from '../../dom.js';\r\nimport {intersects} from '../../extent.js';\r\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\r\nimport GeometryType from '../../geom/GeometryType.js';\r\nimport {CANVAS_LINE_DASH} from '../../has.js';\r\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\r\nimport CanvasInstruction from './Instruction.js';\r\nimport CanvasReplay from './Replay.js';\r\nimport {TEXT_ALIGN} from '../replay.js';\r\nimport TextPlacement from '../../style/TextPlacement.js';\r\n\r\nvar CanvasTextReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasTextReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\r\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../canvas.js\").DeclutterGroup}\r\n     */\r\n    this.declutterGroup_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<HTMLCanvasElement>}\r\n     */\r\n    this.labels_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.text_ = '';\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.textOffsetX_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.textOffsetY_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.textRotateWithView_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.textRotation_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").FillState}\r\n     */\r\n    this.textFillState_ = null;\r\n\r\n    /**\r\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\r\n     */\r\n    this.fillStates = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../canvas.js\").StrokeState}\r\n     */\r\n    this.textStrokeState_ = null;\r\n\r\n    /**\r\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\r\n     */\r\n    this.strokeStates = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../canvas.js\").TextState}\r\n     */\r\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\r\n\r\n    /**\r\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\r\n     */\r\n    this.textStates = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.textKey_ = '';\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.fillKey_ = '';\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.strokeKey_ = '';\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<string, Object<string, number>>}\r\n     */\r\n    this.widths_ = {};\r\n\r\n    labelCache.prune();\r\n\r\n  }\n\n  if ( CanvasReplay ) CanvasTextReplay.__proto__ = CanvasReplay;\n  CanvasTextReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasTextReplay.prototype.constructor = CanvasTextReplay;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasTextReplay.prototype.drawText = function drawText (geometry, feature) {\r\n    var fillState = this.textFillState_;\r\n    var strokeState = this.textStrokeState_;\r\n    var textState = this.textState_;\r\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\r\n      return;\r\n    }\r\n\r\n    var begin = this.coordinates.length;\r\n\r\n    var geometryType = geometry.getType();\r\n    var flatCoordinates = null;\r\n    var end = 2;\r\n    var stride = 2;\r\n    var i, ii;\r\n\r\n    if (textState.placement === TextPlacement.LINE) {\r\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\r\n        return;\r\n      }\r\n      var ends;\r\n      flatCoordinates = geometry.getFlatCoordinates();\r\n      stride = geometry.getStride();\r\n      if (geometryType == GeometryType.LINE_STRING) {\r\n        ends = [flatCoordinates.length];\r\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\r\n        ends = geometry.getEnds();\r\n      } else if (geometryType == GeometryType.POLYGON) {\r\n        ends = geometry.getEnds().slice(0, 1);\r\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\r\n        var endss = geometry.getEndss();\r\n        ends = [];\r\n        for (i = 0, ii = endss.length; i < ii; ++i) {\r\n          ends.push(endss[i][0]);\r\n        }\r\n      }\r\n      this.beginGeometry(geometry, feature);\r\n      var textAlign = textState.textAlign;\r\n      var flatOffset = 0;\r\n      var flatEnd;\r\n      for (var o = 0, oo = ends.length; o < oo; ++o) {\r\n        if (textAlign == undefined) {\r\n          var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\r\n          flatOffset = range[0];\r\n          flatEnd = range[1];\r\n        } else {\r\n          flatEnd = ends[o];\r\n        }\r\n        for (i = flatOffset; i < flatEnd; i += stride) {\r\n          this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\r\n        }\r\n        end = this.coordinates.length;\r\n        flatOffset = ends[o];\r\n        this.drawChars_(begin, end, this.declutterGroup_);\r\n        begin = end;\r\n      }\r\n      this.endGeometry(geometry, feature);\r\n\r\n    } else {\r\n      var label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\r\n      var width = label.width / this.pixelRatio;\r\n      switch (geometryType) {\r\n        case GeometryType.POINT:\r\n        case GeometryType.MULTI_POINT:\r\n          flatCoordinates = geometry.getFlatCoordinates();\r\n          end = flatCoordinates.length;\r\n          break;\r\n        case GeometryType.LINE_STRING:\r\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\r\n          break;\r\n        case GeometryType.CIRCLE:\r\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\r\n          break;\r\n        case GeometryType.MULTI_LINE_STRING:\r\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\r\n          end = flatCoordinates.length;\r\n          break;\r\n        case GeometryType.POLYGON:\r\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\r\n          if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\r\n            return;\r\n          }\r\n          stride = 3;\r\n          break;\r\n        case GeometryType.MULTI_POLYGON:\r\n          var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\r\n          flatCoordinates = [];\r\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\r\n            if (textState.overflow || interiorPoints[i + 2] / this.resolution >= width) {\r\n              flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\r\n            }\r\n          }\r\n          end = flatCoordinates.length;\r\n          if (end == 0) {\r\n            return;\r\n          }\r\n          break;\r\n        default:\r\n      }\r\n      end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\r\n      if (textState.backgroundFill || textState.backgroundStroke) {\r\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\r\n        if (textState.backgroundFill) {\r\n          this.updateFillStyle(this.state, this.createFill, geometry);\r\n          this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\r\n        }\r\n        if (textState.backgroundStroke) {\r\n          this.updateStrokeStyle(this.state, this.applyStroke);\r\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\r\n        }\r\n      }\r\n      this.beginGeometry(geometry, feature);\r\n      this.drawTextImage_(label, begin, end);\r\n      this.endGeometry(geometry, feature);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {string} text Text.\r\n   * @param {string} textKey Text style key.\r\n   * @param {string} fillKey Fill style key.\r\n   * @param {string} strokeKey Stroke style key.\r\n   * @return {HTMLCanvasElement} Image.\r\n   */\r\n  CanvasTextReplay.prototype.getImage = function getImage (text, textKey, fillKey, strokeKey) {\r\n    var label;\r\n    var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\r\n\r\n    if (!labelCache.containsKey(key)) {\r\n      var strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\r\n      var fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\r\n      var textState = this.textStates[textKey] || this.textState_;\r\n      var pixelRatio = this.pixelRatio;\r\n      var scale = textState.scale * pixelRatio;\r\n      var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\r\n      var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\r\n\r\n      var lines = text.split('\\n');\r\n      var numLines = lines.length;\r\n      var widths = [];\r\n      var width = measureTextWidths(textState.font, lines, widths);\r\n      var lineHeight = measureTextHeight(textState.font);\r\n      var height = lineHeight * numLines;\r\n      var renderWidth = (width + strokeWidth);\r\n      var context = createCanvasContext2D(\r\n        Math.ceil(renderWidth * scale),\r\n        Math.ceil((height + strokeWidth) * scale));\r\n      label = context.canvas;\r\n      labelCache.set(key, label);\r\n      if (scale != 1) {\r\n        context.scale(scale, scale);\r\n      }\r\n      context.font = textState.font;\r\n      if (strokeKey) {\r\n        context.strokeStyle = strokeState.strokeStyle;\r\n        context.lineWidth = strokeWidth;\r\n        context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\r\n        context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\r\n        context.miterLimit = strokeState.miterLimit;\r\n        if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\r\n          context.setLineDash(strokeState.lineDash);\r\n          context.lineDashOffset = strokeState.lineDashOffset;\r\n        }\r\n      }\r\n      if (fillKey) {\r\n        context.fillStyle = fillState.fillStyle;\r\n      }\r\n      context.textBaseline = 'middle';\r\n      context.textAlign = 'center';\r\n      var leftRight = (0.5 - align);\r\n      var x = align * label.width / scale + leftRight * strokeWidth;\r\n      var i;\r\n      if (strokeKey) {\r\n        for (i = 0; i < numLines; ++i) {\r\n          context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\r\n        }\r\n      }\r\n      if (fillKey) {\r\n        for (i = 0; i < numLines; ++i) {\r\n          context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\r\n        }\r\n      }\r\n    }\r\n    return labelCache.get(key);\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {HTMLCanvasElement} label Label.\r\n   * @param {number} begin Begin.\r\n   * @param {number} end End.\r\n   */\r\n  CanvasTextReplay.prototype.drawTextImage_ = function drawTextImage_ (label, begin, end) {\r\n    var textState = this.textState_;\r\n    var strokeState = this.textStrokeState_;\r\n    var pixelRatio = this.pixelRatio;\r\n    var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\r\n    var baseline = TEXT_ALIGN[textState.textBaseline];\r\n    var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\r\n\r\n    var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\r\n    var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\r\n    this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\r\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\r\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\r\n      1, label.width,\r\n      textState.padding == defaultPadding ?\r\n        defaultPadding : textState.padding.map(function(p) {\r\n          return p * pixelRatio;\r\n        }),\r\n      !!textState.backgroundFill, !!textState.backgroundStroke\r\n    ]);\r\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\r\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\r\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\r\n      1 / pixelRatio, label.width, textState.padding,\r\n      !!textState.backgroundFill, !!textState.backgroundStroke\r\n    ]);\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {number} begin Begin.\r\n   * @param {number} end End.\r\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\r\n   */\r\n  CanvasTextReplay.prototype.drawChars_ = function drawChars_ (begin, end, declutterGroup) {\r\n    var strokeState = this.textStrokeState_;\r\n    var textState = this.textState_;\r\n    var fillState = this.textFillState_;\r\n\r\n    var strokeKey = this.strokeKey_;\r\n    if (strokeState) {\r\n      if (!(strokeKey in this.strokeStates)) {\r\n        this.strokeStates[strokeKey] = /** @type {import(\"../canvas.js\").StrokeState} */ ({\r\n          strokeStyle: strokeState.strokeStyle,\r\n          lineCap: strokeState.lineCap,\r\n          lineDashOffset: strokeState.lineDashOffset,\r\n          lineWidth: strokeState.lineWidth,\r\n          lineJoin: strokeState.lineJoin,\r\n          miterLimit: strokeState.miterLimit,\r\n          lineDash: strokeState.lineDash\r\n        });\r\n      }\r\n    }\r\n    var textKey = this.textKey_;\r\n    if (!(this.textKey_ in this.textStates)) {\r\n      this.textStates[this.textKey_] = /** @type {import(\"../canvas.js\").TextState} */ ({\r\n        font: textState.font,\r\n        textAlign: textState.textAlign || defaultTextAlign,\r\n        scale: textState.scale\r\n      });\r\n    }\r\n    var fillKey = this.fillKey_;\r\n    if (fillState) {\r\n      if (!(fillKey in this.fillStates)) {\r\n        this.fillStates[fillKey] = /** @type {import(\"../canvas.js\").FillState} */ ({\r\n          fillStyle: fillState.fillStyle\r\n        });\r\n      }\r\n    }\r\n\r\n    var pixelRatio = this.pixelRatio;\r\n    var baseline = TEXT_ALIGN[textState.textBaseline];\r\n\r\n    var offsetY = this.textOffsetY_ * pixelRatio;\r\n    var text = this.text_;\r\n    var font = textState.font;\r\n    var textScale = textState.scale;\r\n    var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\r\n    var widths = this.widths_[font];\r\n    if (!widths) {\r\n      this.widths_[font] = widths = {};\r\n    }\r\n    this.instructions.push([CanvasInstruction.DRAW_CHARS,\r\n      begin, end, baseline, declutterGroup,\r\n      textState.overflow, fillKey, textState.maxAngle,\r\n      function(text) {\r\n        var width = widths[text];\r\n        if (!width) {\r\n          width = widths[text] = measureTextWidth(font, text);\r\n        }\r\n        return width * textScale * pixelRatio;\r\n      },\r\n      offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\r\n    ]);\r\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\r\n      begin, end, baseline, declutterGroup,\r\n      textState.overflow, fillKey, textState.maxAngle,\r\n      function(text) {\r\n        var width = widths[text];\r\n        if (!width) {\r\n          width = widths[text] = measureTextWidth(font, text);\r\n        }\r\n        return width * textScale;\r\n      },\r\n      offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\r\n    ]);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasTextReplay.prototype.setTextStyle = function setTextStyle (textStyle, declutterGroup) {\r\n    var textState, fillState, strokeState;\r\n    if (!textStyle) {\r\n      this.text_ = '';\r\n    } else {\r\n      this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\r\n\r\n      var textFillStyle = textStyle.getFill();\r\n      if (!textFillStyle) {\r\n        fillState = this.textFillState_ = null;\r\n      } else {\r\n        fillState = this.textFillState_;\r\n        if (!fillState) {\r\n          fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\r\n        }\r\n        fillState.fillStyle = asColorLike(\r\n          textFillStyle.getColor() || defaultFillStyle);\r\n      }\r\n\r\n      var textStrokeStyle = textStyle.getStroke();\r\n      if (!textStrokeStyle) {\r\n        strokeState = this.textStrokeState_ = null;\r\n      } else {\r\n        strokeState = this.textStrokeState_;\r\n        if (!strokeState) {\r\n          strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\r\n        }\r\n        var lineDash = textStrokeStyle.getLineDash();\r\n        var lineDashOffset = textStrokeStyle.getLineDashOffset();\r\n        var lineWidth = textStrokeStyle.getWidth();\r\n        var miterLimit = textStrokeStyle.getMiterLimit();\r\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\r\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\r\n        strokeState.lineDashOffset =\r\n            lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\r\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\r\n        strokeState.lineWidth =\r\n            lineWidth === undefined ? defaultLineWidth : lineWidth;\r\n        strokeState.miterLimit =\r\n            miterLimit === undefined ? defaultMiterLimit : miterLimit;\r\n        strokeState.strokeStyle = asColorLike(\r\n          textStrokeStyle.getColor() || defaultStrokeStyle);\r\n      }\r\n\r\n      textState = this.textState_;\r\n      var font = textStyle.getFont() || defaultFont;\r\n      checkFont(font);\r\n      var textScale = textStyle.getScale();\r\n      textState.overflow = textStyle.getOverflow();\r\n      textState.font = font;\r\n      textState.maxAngle = textStyle.getMaxAngle();\r\n      textState.placement = textStyle.getPlacement();\r\n      textState.textAlign = textStyle.getTextAlign();\r\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\r\n      textState.backgroundFill = textStyle.getBackgroundFill();\r\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\r\n      textState.padding = textStyle.getPadding() || defaultPadding;\r\n      textState.scale = textScale === undefined ? 1 : textScale;\r\n\r\n      var textOffsetX = textStyle.getOffsetX();\r\n      var textOffsetY = textStyle.getOffsetY();\r\n      var textRotateWithView = textStyle.getRotateWithView();\r\n      var textRotation = textStyle.getRotation();\r\n      this.text_ = textStyle.getText() || '';\r\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\r\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\r\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\r\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\r\n\r\n      this.strokeKey_ = strokeState ?\r\n        (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\r\n        strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\r\n        strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\r\n        '';\r\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\r\n      this.fillKey_ = fillState ?\r\n        (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\r\n        '';\r\n    }\r\n  };\n\n  return CanvasTextReplay;\n}(CanvasReplay));\r\n\r\n\r\n/**\r\n * @param {string} font Font to use for measuring.\r\n * @param {Array<string>} lines Lines to measure.\r\n * @param {Array<number>} widths Array will be populated with the widths of\r\n * each line.\r\n * @return {number} Width of the whole text.\r\n */\r\nexport function measureTextWidths(font, lines, widths) {\r\n  var numLines = lines.length;\r\n  var width = 0;\r\n  for (var i = 0; i < numLines; ++i) {\r\n    var currentWidth = measureTextWidth(font, lines[i]);\r\n    width = Math.max(width, currentWidth);\r\n    widths.push(currentWidth);\r\n  }\r\n  return width;\r\n}\r\n\r\n\r\nexport default CanvasTextReplay;\r\n\r\n//# sourceMappingURL=TextReplay.js.map","/**\r\n * @module ol/render/canvas/ReplayGroup\r\n */\r\n\r\nimport {numberSafeCompareFunction} from '../../array.js';\r\nimport {createCanvasContext2D} from '../../dom.js';\r\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\r\nimport {transform2D} from '../../geom/flat/transform.js';\r\nimport {isEmpty} from '../../obj.js';\r\nimport ReplayGroup from '../ReplayGroup.js';\r\nimport ReplayType from '../ReplayType.js';\r\nimport CanvasReplay from './Replay.js';\r\nimport CanvasImageReplay from './ImageReplay.js';\r\nimport CanvasLineStringReplay from './LineStringReplay.js';\r\nimport CanvasPolygonReplay from './PolygonReplay.js';\r\nimport CanvasTextReplay from './TextReplay.js';\r\nimport {ORDER} from '../replay.js';\r\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\r\n\r\n\r\n/**\r\n * @type {Object<ReplayType, typeof CanvasReplay>}\r\n */\r\nvar BATCH_CONSTRUCTORS = {\r\n  'Circle': CanvasPolygonReplay,\r\n  'Default': CanvasReplay,\r\n  'Image': CanvasImageReplay,\r\n  'LineString': CanvasLineStringReplay,\r\n  'Polygon': CanvasPolygonReplay,\r\n  'Text': CanvasTextReplay\r\n};\r\n\r\n\r\nvar CanvasReplayGroup = /*@__PURE__*/(function (ReplayGroup) {\n  function CanvasReplayGroup(\r\n    tolerance,\r\n    maxExtent,\r\n    resolution,\r\n    pixelRatio,\r\n    overlaps,\r\n    declutterTree,\r\n    opt_renderBuffer\r\n  ) {\r\n    ReplayGroup.call(this);\r\n\r\n    /**\r\n     * Declutter tree.\r\n     * @private\r\n     */\r\n    this.declutterTree_ = declutterTree;\r\n\r\n    /**\r\n     * @type {import(\"../canvas.js\").DeclutterGroup}\r\n     * @private\r\n     */\r\n    this.declutterGroup_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.tolerance_ = tolerance;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.maxExtent_ = maxExtent;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.overlaps_ = overlaps;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.pixelRatio_ = pixelRatio;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.resolution_ = resolution;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.renderBuffer_ = opt_renderBuffer;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, !Object<ReplayType, CanvasReplay>>}\r\n     */\r\n    this.replaysByZIndex_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {CanvasRenderingContext2D}\r\n     */\r\n    this.hitDetectionContext_ = createCanvasContext2D(1, 1);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.hitDetectionTransform_ = createTransform();\r\n  }\n\n  if ( ReplayGroup ) CanvasReplayGroup.__proto__ = ReplayGroup;\n  CanvasReplayGroup.prototype = Object.create( ReplayGroup && ReplayGroup.prototype );\n  CanvasReplayGroup.prototype.constructor = CanvasReplayGroup;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\r\n    var declutter = null;\r\n    if (this.declutterTree_) {\r\n      if (group) {\r\n        declutter = this.declutterGroup_;\r\n        /** @type {number} */ (declutter[4])++;\r\n      } else {\r\n        declutter = this.declutterGroup_ = createEmpty();\r\n        declutter.push(1);\r\n      }\r\n    }\r\n    return declutter;\r\n  };\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   */\r\n  CanvasReplayGroup.prototype.clip = function clip (context, transform) {\r\n    var flatClipCoords = this.getClipCoords(transform);\r\n    context.beginPath();\r\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\r\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\r\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\r\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\r\n    context.clip();\r\n  };\r\n\r\n  /**\r\n   * @param {Array<ReplayType>} replays Replays.\r\n   * @return {boolean} Has replays of the provided types.\r\n   */\r\n  CanvasReplayGroup.prototype.hasReplays = function hasReplays (replays) {\r\n    for (var zIndex in this.replaysByZIndex_) {\r\n      var candidates = this.replaysByZIndex_[zIndex];\r\n      for (var i = 0, ii = replays.length; i < ii; ++i) {\r\n        if (replays[i] in candidates) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * FIXME empty description for jsdoc\r\n   */\r\n  CanvasReplayGroup.prototype.finish = function finish () {\r\n    for (var zKey in this.replaysByZIndex_) {\r\n      var replays = this.replaysByZIndex_[zKey];\r\n      for (var replayKey in replays) {\r\n        replays[replayKey].finish();\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} rotation Rotation.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\r\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T} callback Feature callback.\r\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>} declutterReplays Declutter replays.\r\n   * @return {T|undefined} Callback result.\r\n   * @template T\r\n   */\r\n  CanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\r\n    coordinate,\r\n    resolution,\r\n    rotation,\r\n    hitTolerance,\r\n    skippedFeaturesHash,\r\n    callback,\r\n    declutterReplays\r\n  ) {\r\n\r\n    hitTolerance = Math.round(hitTolerance);\r\n    var contextSize = hitTolerance * 2 + 1;\r\n    var transform = composeTransform(this.hitDetectionTransform_,\r\n      hitTolerance + 0.5, hitTolerance + 0.5,\r\n      1 / resolution, -1 / resolution,\r\n      -rotation,\r\n      -coordinate[0], -coordinate[1]);\r\n    var context = this.hitDetectionContext_;\r\n\r\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\r\n      context.canvas.width = contextSize;\r\n      context.canvas.height = contextSize;\r\n    } else {\r\n      context.clearRect(0, 0, contextSize, contextSize);\r\n    }\r\n\r\n    /**\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    var hitExtent;\r\n    if (this.renderBuffer_ !== undefined) {\r\n      hitExtent = createEmpty();\r\n      extendCoordinate(hitExtent, coordinate);\r\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\r\n    }\r\n\r\n    var mask = getCircleArray(hitTolerance);\r\n    var declutteredFeatures;\r\n    if (this.declutterTree_) {\r\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\r\n        return entry.value;\r\n      });\r\n    }\r\n\r\n    var replayType;\r\n\r\n    /**\r\n     * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\r\n     * @return {?} Callback result.\r\n     */\r\n    function featureCallback(feature) {\r\n      var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\r\n      for (var i = 0; i < contextSize; i++) {\r\n        for (var j = 0; j < contextSize; j++) {\r\n          if (mask[i][j]) {\r\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\r\n              var result = (void 0);\r\n              if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\r\n                  declutteredFeatures.indexOf(feature) !== -1) {\r\n                result = callback(feature);\r\n              }\r\n              if (result) {\r\n                return result;\r\n              } else {\r\n                context.clearRect(0, 0, contextSize, contextSize);\r\n                return undefined;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    /** @type {Array<number>} */\r\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\r\n    zs.sort(numberSafeCompareFunction);\r\n\r\n    var i, j, replays, replay, result;\r\n    for (i = zs.length - 1; i >= 0; --i) {\r\n      var zIndexKey = zs[i].toString();\r\n      replays = this.replaysByZIndex_[zIndexKey];\r\n      for (j = ORDER.length - 1; j >= 0; --j) {\r\n        replayType = ORDER[j];\r\n        replay = replays[replayType];\r\n        if (replay !== undefined) {\r\n          if (declutterReplays &&\r\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\r\n            var declutter = declutterReplays[zIndexKey];\r\n            if (!declutter) {\r\n              declutterReplays[zIndexKey] = [replay, transform.slice(0)];\r\n            } else {\r\n              declutter.push(replay, transform.slice(0));\r\n            }\r\n          } else {\r\n            result = replay.replayHitDetection(context, transform, rotation,\r\n              skippedFeaturesHash, featureCallback, hitExtent);\r\n            if (result) {\r\n              return result;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return undefined;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   * @return {Array<number>} Clip coordinates.\r\n   */\r\n  CanvasReplayGroup.prototype.getClipCoords = function getClipCoords (transform) {\r\n    var maxExtent = this.maxExtent_;\r\n    var minX = maxExtent[0];\r\n    var minY = maxExtent[1];\r\n    var maxX = maxExtent[2];\r\n    var maxY = maxExtent[3];\r\n    var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\r\n    transform2D(\r\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\r\n    return flatClipCoords;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\r\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\r\n    var replays = this.replaysByZIndex_[zIndexKey];\r\n    if (replays === undefined) {\r\n      replays = {};\r\n      this.replaysByZIndex_[zIndexKey] = replays;\r\n    }\r\n    var replay = replays[replayType];\r\n    if (replay === undefined) {\r\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\r\n      replay = new Constructor(this.tolerance_, this.maxExtent_,\r\n        this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\r\n      replays[replayType] = replay;\r\n    }\r\n    return replay;\r\n  };\r\n\r\n  /**\r\n   * @return {Object<string, Object<ReplayType, CanvasReplay>>} Replays.\r\n   */\r\n  CanvasReplayGroup.prototype.getReplays = function getReplays () {\r\n    return this.replaysByZIndex_;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasReplayGroup.prototype.isEmpty = function isEmpty$1 () {\r\n    return isEmpty(this.replaysByZIndex_);\r\n  };\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   * @param {number} viewRotation View rotation.\r\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\r\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\r\n   * @param {Array<ReplayType>=} opt_replayTypes Ordered replay types to replay.\r\n   *     Default is {@link module:ol/render/replay~ORDER}\r\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\r\n   */\r\n  CanvasReplayGroup.prototype.replay = function replay (\r\n    context,\r\n    transform,\r\n    viewRotation,\r\n    skippedFeaturesHash,\r\n    snapToPixel,\r\n    opt_replayTypes,\r\n    opt_declutterReplays\r\n  ) {\r\n\r\n    /** @type {Array<number>} */\r\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\r\n    zs.sort(numberSafeCompareFunction);\r\n\r\n    // setup clipping so that the parts of over-simplified geometries are not\r\n    // visible outside the current extent when panning\r\n    context.save();\r\n    this.clip(context, transform);\r\n\r\n    var replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\r\n    var i, ii, j, jj, replays, replay;\r\n    for (i = 0, ii = zs.length; i < ii; ++i) {\r\n      var zIndexKey = zs[i].toString();\r\n      replays = this.replaysByZIndex_[zIndexKey];\r\n      for (j = 0, jj = replayTypes.length; j < jj; ++j) {\r\n        var replayType = replayTypes[j];\r\n        replay = replays[replayType];\r\n        if (replay !== undefined) {\r\n          if (opt_declutterReplays &&\r\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\r\n            var declutter = opt_declutterReplays[zIndexKey];\r\n            if (!declutter) {\r\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\r\n            } else {\r\n              declutter.push(replay, transform.slice(0));\r\n            }\r\n          } else {\r\n            replay.replay(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    context.restore();\r\n  };\n\n  return CanvasReplayGroup;\n}(ReplayGroup));\r\n\r\n\r\n/**\r\n * This cache is used for storing calculated pixel circles for increasing performance.\r\n * It is a static property to allow each Replaygroup to access it.\r\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\r\n */\r\nvar circleArrayCache = {\r\n  0: [[true]]\r\n};\r\n\r\n\r\n/**\r\n * This method fills a row in the array from the given coordinate to the\r\n * middle with `true`.\r\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\r\n * @param {number} x X coordinate.\r\n * @param {number} y Y coordinate.\r\n */\r\nfunction fillCircleArrayRowToMiddle(array, x, y) {\r\n  var i;\r\n  var radius = Math.floor(array.length / 2);\r\n  if (x >= radius) {\r\n    for (i = radius; i < x; i++) {\r\n      array[i][y] = true;\r\n    }\r\n  } else if (x < radius) {\r\n    for (i = x + 1; i < radius; i++) {\r\n      array[i][y] = true;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * This methods creates a circle inside a fitting array. Points inside the\r\n * circle are marked by true, points on the outside are undefined.\r\n * It uses the midpoint circle algorithm.\r\n * A cache is used to increase performance.\r\n * @param {number} radius Radius.\r\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\r\n */\r\nexport function getCircleArray(radius) {\r\n  if (circleArrayCache[radius] !== undefined) {\r\n    return circleArrayCache[radius];\r\n  }\r\n\r\n  var arraySize = radius * 2 + 1;\r\n  var arr = new Array(arraySize);\r\n  for (var i = 0; i < arraySize; i++) {\r\n    arr[i] = new Array(arraySize);\r\n  }\r\n\r\n  var x = radius;\r\n  var y = 0;\r\n  var error = 0;\r\n\r\n  while (x >= y) {\r\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\r\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\r\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\r\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\r\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\r\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\r\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\r\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\r\n\r\n    y++;\r\n    error += 1 + 2 * y;\r\n    if (2 * (error - x) + 1 > 0) {\r\n      x -= 1;\r\n      error += 1 - 2 * x;\r\n    }\r\n  }\r\n\r\n  circleArrayCache[radius] = arr;\r\n  return arr;\r\n}\r\n\r\n\r\n/**\r\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\r\n * @param {CanvasRenderingContext2D} context Context.\r\n * @param {number} rotation Rotation.\r\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\r\n */\r\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\r\n  var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\r\n  var skippedFeatureUids = {};\r\n  for (var z = 0, zz = zs.length; z < zz; ++z) {\r\n    var replayData = declutterReplays[zs[z].toString()];\r\n    for (var i = 0, ii = replayData.length; i < ii;) {\r\n      var replay = replayData[i++];\r\n      var transform = replayData[i++];\r\n      replay.replay(context, transform, rotation, skippedFeatureUids, snapToPixel);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default CanvasReplayGroup;\r\n\r\n//# sourceMappingURL=ReplayGroup.js.map","/**\r\n * @module ol/renderer/vector\r\n */\r\nimport {getUid} from '../util.js';\r\nimport ImageState from '../ImageState.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport ReplayType from '../render/ReplayType.js';\r\n\r\n\r\n/**\r\n * Tolerance for geometry simplification in device pixels.\r\n * @type {number}\r\n */\r\nvar SIMPLIFY_TOLERANCE = 0.5;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<import(\"../geom/GeometryType.js\").default,\r\n *                function(import(\"../render/ReplayGroup.js\").default, import(\"../geom/Geometry.js\").default,\r\n *                         import(\"../style/Style.js\").default, Object)>}\r\n */\r\nvar GEOMETRY_RENDERERS = {\r\n  'Point': renderPointGeometry,\r\n  'LineString': renderLineStringGeometry,\r\n  'Polygon': renderPolygonGeometry,\r\n  'MultiPoint': renderMultiPointGeometry,\r\n  'MultiLineString': renderMultiLineStringGeometry,\r\n  'MultiPolygon': renderMultiPolygonGeometry,\r\n  'GeometryCollection': renderGeometryCollectionGeometry,\r\n  'Circle': renderCircleGeometry\r\n};\r\n\r\n\r\n/**\r\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\r\n * @return {number} Order.\r\n */\r\nexport function defaultOrder(feature1, feature2) {\r\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\r\n}\r\n\r\n\r\n/**\r\n * @param {number} resolution Resolution.\r\n * @param {number} pixelRatio Pixel ratio.\r\n * @return {number} Squared pixel tolerance.\r\n */\r\nexport function getSquaredTolerance(resolution, pixelRatio) {\r\n  var tolerance = getTolerance(resolution, pixelRatio);\r\n  return tolerance * tolerance;\r\n}\r\n\r\n\r\n/**\r\n * @param {number} resolution Resolution.\r\n * @param {number} pixelRatio Pixel ratio.\r\n * @return {number} Pixel tolerance.\r\n */\r\nexport function getTolerance(resolution, pixelRatio) {\r\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").default} feature Feature.\r\n */\r\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\r\n  var fillStyle = style.getFill();\r\n  var strokeStyle = style.getStroke();\r\n  if (fillStyle || strokeStyle) {\r\n    var circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\r\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\r\n    circleReplay.drawCircle(geometry, feature);\r\n  }\r\n  var textStyle = style.getText();\r\n  if (textStyle) {\r\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\r\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\r\n    textReplay.drawText(geometry, feature);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\r\n * @param {T} thisArg Value to use as `this` when executing `listener`.\r\n * @return {boolean} `true` if style is loading.\r\n * @template T\r\n */\r\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\r\n  var loading = false;\r\n  var imageStyle = style.getImage();\r\n  if (imageStyle) {\r\n    var imageState = imageStyle.getImageState();\r\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\r\n      imageStyle.unlistenImageChange(listener, thisArg);\r\n    } else {\r\n      if (imageState == ImageState.IDLE) {\r\n        imageStyle.load();\r\n      }\r\n      imageState = imageStyle.getImageState();\r\n      imageStyle.listenImageChange(listener, thisArg);\r\n      loading = true;\r\n    }\r\n  }\r\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\r\n\r\n  return loading;\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n */\r\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\r\n  var geometry = style.getGeometryFunction()(feature);\r\n  if (!geometry) {\r\n    return;\r\n  }\r\n  var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\r\n  var renderer = style.getRenderer();\r\n  if (renderer) {\r\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\r\n  } else {\r\n    var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\r\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n */\r\nfunction renderGeometry(replayGroup, geometry, style, feature) {\r\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\r\n    var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\r\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\r\n      renderGeometry(replayGroup, geometries[i], style, feature);\r\n    }\r\n    return;\r\n  }\r\n  var replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\r\n  replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").default} feature Feature.\r\n */\r\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\r\n  var geometries = geometry.getGeometriesArray();\r\n  var i, ii;\r\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\r\n    var geometryRenderer =\r\n        GEOMETRY_RENDERERS[geometries[i].getType()];\r\n    geometryRenderer(replayGroup, geometries[i], style, feature);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n */\r\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\r\n  var strokeStyle = style.getStroke();\r\n  if (strokeStyle) {\r\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\r\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\r\n    lineStringReplay.drawLineString(geometry, feature);\r\n  }\r\n  var textStyle = style.getText();\r\n  if (textStyle) {\r\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\r\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\r\n    textReplay.drawText(geometry, feature);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n */\r\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\r\n  var strokeStyle = style.getStroke();\r\n  if (strokeStyle) {\r\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\r\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\r\n    lineStringReplay.drawMultiLineString(geometry, feature);\r\n  }\r\n  var textStyle = style.getText();\r\n  if (textStyle) {\r\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\r\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\r\n    textReplay.drawText(geometry, feature);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").default} feature Feature.\r\n */\r\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\r\n  var fillStyle = style.getFill();\r\n  var strokeStyle = style.getStroke();\r\n  if (strokeStyle || fillStyle) {\r\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\r\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\r\n    polygonReplay.drawMultiPolygon(geometry, feature);\r\n  }\r\n  var textStyle = style.getText();\r\n  if (textStyle) {\r\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\r\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\r\n    textReplay.drawText(geometry, feature);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n */\r\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\r\n  var imageStyle = style.getImage();\r\n  if (imageStyle) {\r\n    if (imageStyle.getImageState() != ImageState.LOADED) {\r\n      return;\r\n    }\r\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\r\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\r\n    imageReplay.drawPoint(geometry, feature);\r\n  }\r\n  var textStyle = style.getText();\r\n  if (textStyle) {\r\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\r\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\r\n    textReplay.drawText(geometry, feature);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n */\r\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\r\n  var imageStyle = style.getImage();\r\n  if (imageStyle) {\r\n    if (imageStyle.getImageState() != ImageState.LOADED) {\r\n      return;\r\n    }\r\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\r\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\r\n    imageReplay.drawMultiPoint(geometry, feature);\r\n  }\r\n  var textStyle = style.getText();\r\n  if (textStyle) {\r\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\r\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\r\n    textReplay.drawText(geometry, feature);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\r\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\r\n * @param {import(\"../style/Style.js\").default} style Style.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n */\r\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\r\n  var fillStyle = style.getFill();\r\n  var strokeStyle = style.getStroke();\r\n  if (fillStyle || strokeStyle) {\r\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\r\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\r\n    polygonReplay.drawPolygon(geometry, feature);\r\n  }\r\n  var textStyle = style.getText();\r\n  if (textStyle) {\r\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\r\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\r\n    textReplay.drawText(geometry, feature);\r\n  }\r\n}\r\n\r\n//# sourceMappingURL=vector.js.map","/**\r\n * @module ol/renderer/canvas/VectorLayer\r\n */\r\nimport {getUid} from '../../util.js';\r\nimport LayerType from '../../LayerType.js';\r\nimport ViewHint from '../../ViewHint.js';\r\nimport {createCanvasContext2D} from '../../dom.js';\r\nimport {listen, unlisten} from '../../events.js';\r\nimport EventType from '../../events/EventType.js';\r\nimport rbush from 'rbush';\r\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\r\nimport RenderEventType from '../../render/EventType.js';\r\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\r\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\r\nimport CanvasLayerRenderer from './Layer.js';\r\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\r\n\r\n/**\r\n * @classdesc\r\n * Canvas renderer for vector layers.\r\n * @api\r\n */\r\nvar CanvasVectorLayerRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function CanvasVectorLayerRenderer(vectorLayer) {\r\n\r\n    CanvasLayerRenderer.call(this, vectorLayer);\r\n\r\n    /**\r\n     * Declutter tree.\r\n     * @private\r\n     */\r\n    this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.dirty_ = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.renderedRevision_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.renderedResolution_ = NaN;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.renderedExtent_ = createEmpty();\r\n\r\n    /**\r\n     * @private\r\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\r\n     */\r\n    this.renderedRenderOrder_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../render/canvas/ReplayGroup.js\").default}\r\n     */\r\n    this.replayGroup_ = null;\r\n\r\n    /**\r\n     * A new replay group had to be created by `prepareFrame()`\r\n     * @type {boolean}\r\n     */\r\n    this.replayGroupChanged = true;\r\n\r\n    /**\r\n     * @type {CanvasRenderingContext2D}\r\n     */\r\n    this.context = createCanvasContext2D();\r\n\r\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\r\n\r\n  }\n\n  if ( CanvasLayerRenderer ) CanvasVectorLayerRenderer.__proto__ = CanvasLayerRenderer;\n  CanvasVectorLayerRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  CanvasVectorLayerRenderer.prototype.constructor = CanvasVectorLayerRenderer;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\r\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\r\n    CanvasLayerRenderer.prototype.disposeInternal.call(this);\r\n  };\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\r\n   */\r\n  CanvasVectorLayerRenderer.prototype.compose = function compose (context, frameState, layerState) {\r\n    var extent = frameState.extent;\r\n    var pixelRatio = frameState.pixelRatio;\r\n    var skippedFeatureUids = layerState.managed ?\r\n      frameState.skippedFeatureUids : {};\r\n    var viewState = frameState.viewState;\r\n    var projection = viewState.projection;\r\n    var rotation = viewState.rotation;\r\n    var projectionExtent = projection.getExtent();\r\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (this.getLayer().getSource());\r\n\r\n    var transform = this.getTransform(frameState, 0);\r\n\r\n    // clipped rendering if layer extent is set\r\n    var clipExtent = layerState.extent;\r\n    var clipped = clipExtent !== undefined;\r\n    if (clipped) {\r\n      this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (clipExtent));\r\n    }\r\n    var replayGroup = this.replayGroup_;\r\n    if (replayGroup && !replayGroup.isEmpty()) {\r\n      if (this.declutterTree_) {\r\n        this.declutterTree_.clear();\r\n      }\r\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\r\n      var drawOffsetX = 0;\r\n      var drawOffsetY = 0;\r\n      var replayContext;\r\n      var transparentLayer = layerState.opacity !== 1;\r\n      var hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\r\n      if (transparentLayer || hasRenderListeners) {\r\n        var drawWidth = context.canvas.width;\r\n        var drawHeight = context.canvas.height;\r\n        if (rotation) {\r\n          var drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\r\n          drawOffsetX = (drawSize - drawWidth) / 2;\r\n          drawOffsetY = (drawSize - drawHeight) / 2;\r\n          drawWidth = drawHeight = drawSize;\r\n        }\r\n        // resize and clear\r\n        this.context.canvas.width = drawWidth;\r\n        this.context.canvas.height = drawHeight;\r\n        replayContext = this.context;\r\n      } else {\r\n        replayContext = context;\r\n      }\r\n\r\n      var alpha = replayContext.globalAlpha;\r\n      if (!transparentLayer) {\r\n        // for performance reasons, context.save / context.restore is not used\r\n        // to save and restore the transformation matrix and the opacity.\r\n        // see http://jsperf.com/context-save-restore-versus-variable\r\n        replayContext.globalAlpha = layerState.opacity;\r\n      }\r\n\r\n      if (replayContext != context) {\r\n        replayContext.translate(drawOffsetX, drawOffsetY);\r\n      }\r\n\r\n      var viewHints = frameState.viewHints;\r\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\r\n      var width = frameState.size[0] * pixelRatio;\r\n      var height = frameState.size[1] * pixelRatio;\r\n      rotateAtOffset(replayContext, -rotation,\r\n        width / 2, height / 2);\r\n      replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\r\n      if (vectorSource.getWrapX() && projection.canWrapX() &&\r\n          !containsExtent(projectionExtent, extent)) {\r\n        var startX = extent[0];\r\n        var worldWidth = getWidth(projectionExtent);\r\n        var world = 0;\r\n        var offsetX;\r\n        while (startX < projectionExtent[0]) {\r\n          --world;\r\n          offsetX = worldWidth * world;\r\n          transform = this.getTransform(frameState, offsetX);\r\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\r\n          startX += worldWidth;\r\n        }\r\n        world = 0;\r\n        startX = extent[2];\r\n        while (startX > projectionExtent[2]) {\r\n          ++world;\r\n          offsetX = worldWidth * world;\r\n          transform = this.getTransform(frameState, offsetX);\r\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\r\n          startX -= worldWidth;\r\n        }\r\n      }\r\n      rotateAtOffset(replayContext, rotation,\r\n        width / 2, height / 2);\r\n\r\n      if (hasRenderListeners) {\r\n        this.dispatchRenderEvent(replayContext, frameState, transform);\r\n      }\r\n      if (replayContext != context) {\r\n        if (transparentLayer) {\r\n          var mainContextAlpha = context.globalAlpha;\r\n          context.globalAlpha = layerState.opacity;\r\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\r\n          context.globalAlpha = mainContextAlpha;\r\n        } else {\r\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\r\n        }\r\n        replayContext.translate(-drawOffsetX, -drawOffsetY);\r\n      }\r\n\r\n      if (!transparentLayer) {\r\n        replayContext.globalAlpha = alpha;\r\n      }\r\n    }\r\n\r\n    if (clipped) {\r\n      context.restore();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasVectorLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\r\n    var transform = this.getTransform(frameState, 0);\r\n    this.preCompose(context, frameState, transform);\r\n    this.compose(context, frameState, layerState);\r\n    this.postCompose(context, frameState, layerState, transform);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\r\n    if (!this.replayGroup_) {\r\n      return undefined;\r\n    } else {\r\n      var resolution = frameState.viewState.resolution;\r\n      var rotation = frameState.viewState.rotation;\r\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\r\n      /** @type {!Object<string, boolean>} */\r\n      var features = {};\r\n      var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\r\n        /**\r\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n         * @return {?} Callback result.\r\n         */\r\n        function(feature) {\r\n          var key = getUid(feature);\r\n          if (!(key in features)) {\r\n            features[key] = true;\r\n            return callback.call(thisArg, feature, layer);\r\n          }\r\n        }, null);\r\n      return result;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../../events/Event.js\").default} event Event.\r\n   */\r\n  CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\r\n    var layer = this.getLayer();\r\n    if (layer.getVisible() && this.replayGroup_) {\r\n      layer.changed();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle changes in image style state.\r\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\r\n   * @private\r\n   */\r\n  CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\r\n    this.renderIfReadyAndVisible();\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\r\n    var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\r\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (vectorLayer.getSource());\r\n\r\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\r\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\r\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\r\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\r\n\r\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\r\n        (!updateWhileInteracting && interacting)) {\r\n      return true;\r\n    }\r\n\r\n    var frameStateExtent = frameState.extent;\r\n    var viewState = frameState.viewState;\r\n    var projection = viewState.projection;\r\n    var resolution = viewState.resolution;\r\n    var pixelRatio = frameState.pixelRatio;\r\n    var vectorLayerRevision = vectorLayer.getRevision();\r\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\r\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\r\n\r\n    if (vectorLayerRenderOrder === undefined) {\r\n      vectorLayerRenderOrder = defaultRenderOrder;\r\n    }\r\n\r\n    var extent = buffer(frameStateExtent,\r\n      vectorLayerRenderBuffer * resolution);\r\n    var projectionExtent = viewState.projection.getExtent();\r\n\r\n    if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\r\n        !containsExtent(projectionExtent, frameState.extent)) {\r\n      // For the replay group, we need an extent that intersects the real world\r\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\r\n      // to +540°, we add at least 1 world width on each side of the projection\r\n      // extent. If the viewport is wider than the world, we need to add half of\r\n      // the viewport width to make sure we cover the whole viewport.\r\n      var worldWidth = getWidth(projectionExtent);\r\n      var gutter = Math.max(getWidth(extent) / 2, worldWidth);\r\n      extent[0] = projectionExtent[0] - gutter;\r\n      extent[2] = projectionExtent[2] + gutter;\r\n    }\r\n\r\n    if (!this.dirty_ &&\r\n        this.renderedResolution_ == resolution &&\r\n        this.renderedRevision_ == vectorLayerRevision &&\r\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\r\n        containsExtent(this.renderedExtent_, extent)) {\r\n      this.replayGroupChanged = false;\r\n      return true;\r\n    }\r\n\r\n    this.replayGroup_ = null;\r\n\r\n    this.dirty_ = false;\r\n\r\n    var replayGroup = new CanvasReplayGroup(\r\n      getRenderTolerance(resolution, pixelRatio), extent, resolution,\r\n      pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\r\n    vectorSource.loadFeatures(extent, resolution, projection);\r\n    /**\r\n     * @param {import(\"../../Feature.js\").default} feature Feature.\r\n     * @this {CanvasVectorLayerRenderer}\r\n     */\r\n    var render = function(feature) {\r\n      var styles;\r\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\r\n      if (styleFunction) {\r\n        styles = styleFunction(feature, resolution);\r\n      }\r\n      if (styles) {\r\n        var dirty = this.renderFeature(\r\n          feature, resolution, pixelRatio, styles, replayGroup);\r\n        this.dirty_ = this.dirty_ || dirty;\r\n      }\r\n    }.bind(this);\r\n    if (vectorLayerRenderOrder) {\r\n      /** @type {Array<import(\"../../Feature.js\").default>} */\r\n      var features = [];\r\n      vectorSource.forEachFeatureInExtent(extent,\r\n        /**\r\n         * @param {import(\"../../Feature.js\").default} feature Feature.\r\n         */\r\n        function(feature) {\r\n          features.push(feature);\r\n        });\r\n      features.sort(vectorLayerRenderOrder);\r\n      for (var i = 0, ii = features.length; i < ii; ++i) {\r\n        render(features[i]);\r\n      }\r\n    } else {\r\n      vectorSource.forEachFeatureInExtent(extent, render);\r\n    }\r\n    replayGroup.finish();\r\n\r\n    this.renderedResolution_ = resolution;\r\n    this.renderedRevision_ = vectorLayerRevision;\r\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\r\n    this.renderedExtent_ = extent;\r\n    this.replayGroup_ = replayGroup;\r\n\r\n    this.replayGroupChanged = true;\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../../Feature.js\").default} feature Feature.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\r\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\r\n   * @return {boolean} `true` if an image is loading.\r\n   */\r\n  CanvasVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, replayGroup) {\r\n    if (!styles) {\r\n      return false;\r\n    }\r\n    var loading = false;\r\n    if (Array.isArray(styles)) {\r\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\r\n        loading = renderFeature(\r\n          replayGroup, feature, styles[i],\r\n          getSquaredRenderTolerance(resolution, pixelRatio),\r\n          this.handleStyleImageChange_, this) || loading;\r\n      }\r\n    } else {\r\n      loading = renderFeature(\r\n        replayGroup, feature, styles,\r\n        getSquaredRenderTolerance(resolution, pixelRatio),\r\n        this.handleStyleImageChange_, this);\r\n    }\r\n    return loading;\r\n  };\n\n  return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\r\n\r\n\r\n/**\r\n * Determine if this renderer handles the provided layer.\r\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\r\n * @return {boolean} The renderer can render the layer.\r\n */\r\nCanvasVectorLayerRenderer['handles'] = function(layer) {\r\n  return layer.getType() === LayerType.VECTOR;\r\n};\r\n\r\n\r\n/**\r\n * Create a layer renderer.\r\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\r\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\r\n * @return {CanvasVectorLayerRenderer} The layer renderer.\r\n */\r\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\r\n  return new CanvasVectorLayerRenderer(/** @type {import(\"../../layer/Vector.js\").default} */ (layer));\r\n};\r\n\r\n\r\nexport default CanvasVectorLayerRenderer;\r\n\r\n//# sourceMappingURL=VectorLayer.js.map","/**\r\n * @module ol/layer/VectorTileRenderType\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n * Render mode for vector tiles:\r\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\r\n *    point symbols and texts are always rotated with the view and pixels are\r\n *    scaled during zoom animations.\r\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\r\n *    are scaled during zoom animations. Point symbols and texts are accurately\r\n *    rendered as vectors and can stay upright on rotated views.\r\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\r\n *    even during animations, but slower performance than the other options.\r\n * @api\r\n */\r\nexport default {\r\n  IMAGE: 'image',\r\n  HYBRID: 'hybrid',\r\n  VECTOR: 'vector'\r\n};\r\n\r\n//# sourceMappingURL=VectorTileRenderType.js.map","/**\r\n * @module ol/renderer/canvas/VectorTileLayer\r\n */\r\nimport {getUid} from '../../util.js';\r\nimport LayerType from '../../LayerType.js';\r\nimport TileState from '../../TileState.js';\r\nimport ViewHint from '../../ViewHint.js';\r\nimport {createCanvasContext2D} from '../../dom.js';\r\nimport {listen, unlisten} from '../../events.js';\r\nimport EventType from '../../events/EventType.js';\r\nimport rbush from 'rbush';\r\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\r\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\r\nimport {equivalent as equivalentProjection} from '../../proj.js';\r\nimport Units from '../../proj/Units.js';\r\nimport ReplayType from '../../render/ReplayType.js';\r\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\r\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\r\nimport {ORDER} from '../../render/replay.js';\r\nimport CanvasTileLayerRenderer from './TileLayer.js';\r\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\r\nimport {\r\n  create as createTransform,\r\n  compose as composeTransform,\r\n  reset as resetTransform,\r\n  scale as scaleTransform,\r\n  translate as translateTransform\r\n} from '../../transform.js';\r\n\r\n\r\n/**\r\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\r\n */\r\nvar IMAGE_REPLAYS = {\r\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\r\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\r\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\r\n};\r\n\r\n\r\n/**\r\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\r\n */\r\nvar VECTOR_REPLAYS = {\r\n  'image': [ReplayType.DEFAULT],\r\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\r\n  'vector': ORDER\r\n};\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Canvas renderer for vector tile layers.\r\n * @api\r\n */\r\nvar CanvasVectorTileLayerRenderer = /*@__PURE__*/(function (CanvasTileLayerRenderer) {\n  function CanvasVectorTileLayerRenderer(layer) {\r\n\r\n    CanvasTileLayerRenderer.call(this, layer, true);\r\n\r\n    /**\r\n     * Declutter tree.\r\n     * @private\r\n     */\r\n    this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.dirty_ = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.renderedLayerRevision_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.tmpTransform_ = createTransform();\r\n\r\n    var renderMode = layer.getRenderMode();\r\n\r\n    // Use lower resolution for pure vector rendering. Closest resolution otherwise.\r\n    this.zDirection = renderMode === VectorTileRenderType.VECTOR ? 1 : 0;\r\n\r\n    if (renderMode !== VectorTileRenderType.VECTOR) {\r\n      this.context = createCanvasContext2D();\r\n    }\r\n\r\n\r\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\r\n\r\n  }\n\n  if ( CanvasTileLayerRenderer ) CanvasVectorTileLayerRenderer.__proto__ = CanvasTileLayerRenderer;\n  CanvasVectorTileLayerRenderer.prototype = Object.create( CanvasTileLayerRenderer && CanvasTileLayerRenderer.prototype );\n  CanvasVectorTileLayerRenderer.prototype.constructor = CanvasVectorTileLayerRenderer;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasVectorTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\r\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\r\n    CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasVectorTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\r\n    var tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\r\n    if (tile.getState() === TileState.LOADED) {\r\n      this.createReplayGroup_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\r\n      if (this.context) {\r\n        this.renderTileImage_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\r\n      }\r\n    }\r\n    return tile;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasVectorTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\r\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\r\n    return /** @type {import(\"../../VectorImageTile.js\").default} */ (tile).getImage(tileLayer);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasVectorTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\r\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\r\n    var layerRevision = layer.getRevision();\r\n    if (this.renderedLayerRevision_ != layerRevision) {\r\n      this.renderedTiles.length = 0;\r\n    }\r\n    this.renderedLayerRevision_ = layerRevision;\r\n    return CanvasTileLayerRenderer.prototype.prepareFrame.call(this, frameState, layerState);\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\r\n   * @private\r\n   */\r\n  CanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function createReplayGroup_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\r\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\r\n    var revision = layer.getRevision();\r\n    var renderOrder = /** @type {import(\"../../render.js\").OrderFunction} */ (layer.getRenderOrder()) || null;\r\n\r\n    var replayState = tile.getReplayState(layer);\r\n    if (!replayState.dirty && replayState.renderedRevision == revision &&\r\n        replayState.renderedRenderOrder == renderOrder) {\r\n      return;\r\n    }\r\n\r\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\r\n    var sourceTileGrid = source.getTileGrid();\r\n    var tileGrid = source.getTileGridForProjection(projection);\r\n    var resolution = tileGrid.getResolution(tile.tileCoord[0]);\r\n    var tileExtent = tile.extent;\r\n\r\n    var loop = function ( t, tt ) {\r\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\r\n      if (sourceTile.getState() != TileState.LOADED) {\r\n        return;\r\n      }\r\n\r\n      var sourceTileCoord = sourceTile.tileCoord;\r\n      var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\r\n      var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\r\n      var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\r\n        buffer(sharedExtent, layer.getRenderBuffer() * resolution, this$1.tmpExtent);\r\n      var tileProjection = sourceTile.getProjection();\r\n      var reproject = false;\r\n      if (!equivalentProjection(projection, tileProjection)) {\r\n        reproject = true;\r\n        sourceTile.setProjection(projection);\r\n      }\r\n      replayState.dirty = false;\r\n      var replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\r\n        pixelRatio, source.getOverlaps(), this$1.declutterTree_, layer.getRenderBuffer());\r\n      var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\r\n\r\n      /**\r\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n       * @this {CanvasVectorTileLayerRenderer}\r\n       */\r\n      var render = function(feature) {\r\n        var styles;\r\n        var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\r\n        if (styleFunction) {\r\n          styles = styleFunction(feature, resolution);\r\n        }\r\n        if (styles) {\r\n          var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\r\n          this.dirty_ = this.dirty_ || dirty;\r\n          replayState.dirty = replayState.dirty || dirty;\r\n        }\r\n      };\r\n\r\n      var features = sourceTile.getFeatures();\r\n      if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\r\n        features.sort(renderOrder);\r\n      }\r\n      for (var i = 0, ii = features.length; i < ii; ++i) {\r\n        var feature = features[i];\r\n        if (reproject) {\r\n          if (tileProjection.getUnits() == Units.TILE_PIXELS) {\r\n            // projected tile extent\r\n            tileProjection.setWorldExtent(sourceTileExtent);\r\n            // tile extent in tile pixel space\r\n            tileProjection.setExtent(sourceTile.getExtent());\r\n          }\r\n          feature.getGeometry().transform(tileProjection, projection);\r\n        }\r\n        if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\r\n          render.call(this$1, feature);\r\n        }\r\n      }\r\n      replayGroup.finish();\r\n      sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\r\n    };\n\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) loop( t, tt );\r\n    replayState.renderedRevision = revision;\r\n    replayState.renderedRenderOrder = renderOrder;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\r\n    var resolution = frameState.viewState.resolution;\r\n    var rotation = frameState.viewState.rotation;\r\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\r\n    var layer = this.getLayer();\r\n    /** @type {!Object<string, boolean>} */\r\n    var features = {};\r\n\r\n    var renderedTiles = /** @type {Array<import(\"../../VectorImageTile.js\").default>} */ (this.renderedTiles);\r\n\r\n    var bufferedExtent, found;\r\n    var i, ii;\r\n    for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\r\n      var tile = renderedTiles[i];\r\n      bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\r\n      if (!containsCoordinate(bufferedExtent, coordinate)) {\r\n        continue;\r\n      }\r\n      for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\r\n        var sourceTile = tile.getTile(tile.tileKeys[t]);\r\n        if (sourceTile.getState() != TileState.LOADED) {\r\n          continue;\r\n        }\r\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\r\n          tile.tileCoord.toString()));\r\n        found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\r\n          /**\r\n           * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n           * @return {?} Callback result.\r\n           */\r\n          function(feature) {\r\n            var key = getUid(feature);\r\n            if (!(key in features)) {\r\n              features[key] = true;\r\n              return callback.call(thisArg, feature, layer);\r\n            }\r\n          }, null);\r\n      }\r\n    }\r\n    return found;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../../VectorTile.js\").default} tile Tile.\r\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @return {import(\"../../transform.js\").Transform} transform Transform.\r\n   * @private\r\n   */\r\n  CanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function getReplayTransform_ (tile, frameState) {\r\n    var layer = this.getLayer();\r\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\r\n    var tileGrid = source.getTileGrid();\r\n    var tileCoord = tile.tileCoord;\r\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\r\n    var viewState = frameState.viewState;\r\n    var pixelRatio = frameState.pixelRatio;\r\n    var renderResolution = viewState.resolution / pixelRatio;\r\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\r\n    var center = viewState.center;\r\n    var origin = getTopLeft(tileExtent);\r\n    var size = frameState.size;\r\n    var offsetX = Math.round(pixelRatio * size[0] / 2);\r\n    var offsetY = Math.round(pixelRatio * size[1] / 2);\r\n    return composeTransform(this.tmpTransform_,\r\n      offsetX, offsetY,\r\n      tileResolution / renderResolution, tileResolution / renderResolution,\r\n      viewState.rotation,\r\n      (origin[0] - center[0]) / tileResolution,\r\n      (center[1] - origin[1]) / tileResolution);\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../../events/Event.js\").default} event Event.\r\n   */\r\n  CanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\r\n    var layer = this.getLayer();\r\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\r\n      layer.changed();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle changes in image style state.\r\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\r\n   * @private\r\n   */\r\n  CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\r\n    this.renderIfReadyAndVisible();\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasVectorTileLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState) {\r\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\r\n    var renderMode = layer.getRenderMode();\r\n    if (renderMode != VectorTileRenderType.IMAGE) {\r\n      var declutterReplays = layer.getDeclutter() ? {} : null;\r\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\r\n      var replayTypes = VECTOR_REPLAYS[renderMode];\r\n      var pixelRatio = frameState.pixelRatio;\r\n      var rotation = frameState.viewState.rotation;\r\n      var size = frameState.size;\r\n      var offsetX, offsetY;\r\n      if (rotation) {\r\n        offsetX = Math.round(pixelRatio * size[0] / 2);\r\n        offsetY = Math.round(pixelRatio * size[1] / 2);\r\n        rotateAtOffset(context, -rotation, offsetX, offsetY);\r\n      }\r\n      if (declutterReplays) {\r\n        this.declutterTree_.clear();\r\n      }\r\n      var viewHints = frameState.viewHints;\r\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\r\n      var tiles = this.renderedTiles;\r\n      var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\r\n      var clips = [];\r\n      var zs = [];\r\n      for (var i = tiles.length - 1; i >= 0; --i) {\r\n        var tile = /** @type {import(\"../../VectorImageTile.js\").default} */ (tiles[i]);\r\n        if (tile.getState() == TileState.ABORT) {\r\n          continue;\r\n        }\r\n        var tileCoord = tile.tileCoord;\r\n        var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tile.extent[0];\r\n        var transform = undefined;\r\n        for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\r\n          var sourceTile = tile.getTile(tile.tileKeys[t]);\r\n          if (sourceTile.getState() != TileState.LOADED) {\r\n            continue;\r\n          }\r\n          var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer, tileCoord.toString()));\r\n          if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\r\n            // sourceTile was not yet loaded when this.createReplayGroup_() was\r\n            // called, or it has no replays of the types we want to render\r\n            continue;\r\n          }\r\n          if (!transform) {\r\n            transform = this.getTransform(frameState, worldOffset);\r\n          }\r\n          var currentZ = sourceTile.tileCoord[0];\r\n          var currentClip = replayGroup.getClipCoords(transform);\r\n          context.save();\r\n          context.globalAlpha = layerState.opacity;\r\n          // Create a clip mask for regions in this low resolution tile that are\r\n          // already filled by a higher resolution tile\r\n          for (var j = 0, jj = clips.length; j < jj; ++j) {\r\n            var clip = clips[j];\r\n            if (currentZ < zs[j]) {\r\n              context.beginPath();\r\n              // counter-clockwise (outer ring) for current tile\r\n              context.moveTo(currentClip[0], currentClip[1]);\r\n              context.lineTo(currentClip[2], currentClip[3]);\r\n              context.lineTo(currentClip[4], currentClip[5]);\r\n              context.lineTo(currentClip[6], currentClip[7]);\r\n              // clockwise (inner ring) for higher resolution tile\r\n              context.moveTo(clip[6], clip[7]);\r\n              context.lineTo(clip[4], clip[5]);\r\n              context.lineTo(clip[2], clip[3]);\r\n              context.lineTo(clip[0], clip[1]);\r\n              context.clip();\r\n            }\r\n          }\r\n          replayGroup.replay(context, transform, rotation, {}, snapToPixel, replayTypes, declutterReplays);\r\n          context.restore();\r\n          clips.push(currentClip);\r\n          zs.push(currentZ);\r\n        }\r\n      }\r\n      if (declutterReplays) {\r\n        replayDeclutter(declutterReplays, context, rotation, snapToPixel);\r\n      }\r\n      if (rotation) {\r\n        rotateAtOffset(context, rotation,\r\n          /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\r\n      }\r\n    }\r\n    CanvasTileLayerRenderer.prototype.postCompose.call(this, context, frameState, layerState);\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n   * @param {number} squaredTolerance Squared tolerance.\r\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\r\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\r\n   * @return {boolean} `true` if an image is loading.\r\n   */\r\n  CanvasVectorTileLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, squaredTolerance, styles, replayGroup) {\r\n    if (!styles) {\r\n      return false;\r\n    }\r\n    var loading = false;\r\n    if (Array.isArray(styles)) {\r\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\r\n        loading = renderFeature(\r\n          replayGroup, feature, styles[i], squaredTolerance,\r\n          this.handleStyleImageChange_, this) || loading;\r\n      }\r\n    } else {\r\n      loading = renderFeature(\r\n        replayGroup, feature, styles, squaredTolerance,\r\n        this.handleStyleImageChange_, this);\r\n    }\r\n    return loading;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\r\n   * @private\r\n   */\r\n  CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function renderTileImage_ (tile, pixelRatio, projection) {\r\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\r\n    var replayState = tile.getReplayState(layer);\r\n    var revision = layer.getRevision();\r\n    var replays = IMAGE_REPLAYS[layer.getRenderMode()];\r\n    if (replays && replayState.renderedTileRevision !== revision) {\r\n      replayState.renderedTileRevision = revision;\r\n      var tileCoord = tile.wrappedTileCoord;\r\n      var z = tileCoord[0];\r\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\r\n      var tileGrid = source.getTileGridForProjection(projection);\r\n      var resolution = tileGrid.getResolution(z);\r\n      var context = tile.getContext(layer);\r\n      var size = source.getTilePixelSize(z, pixelRatio, projection);\r\n      context.canvas.width = size[0];\r\n      context.canvas.height = size[1];\r\n      var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\r\n      for (var i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\r\n        var sourceTile = tile.getTile(tile.tileKeys[i]);\r\n        if (sourceTile.getState() != TileState.LOADED) {\r\n          continue;\r\n        }\r\n        var pixelScale = pixelRatio / resolution;\r\n        var transform = resetTransform(this.tmpTransform_);\r\n        scaleTransform(transform, pixelScale, -pixelScale);\r\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\r\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\r\n          tile.tileCoord.toString()));\r\n        replayGroup.replay(context, transform, 0, {}, true, replays);\r\n      }\r\n    }\r\n  };\n\n  return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\r\n\r\n\r\n/**\r\n * Determine if this renderer handles the provided layer.\r\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\r\n * @return {boolean} The renderer can render the layer.\r\n */\r\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\r\n  return layer.getType() === LayerType.VECTOR_TILE;\r\n};\r\n\r\n\r\n/**\r\n * Create a layer renderer.\r\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\r\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\r\n * @return {CanvasVectorTileLayerRenderer} The layer renderer.\r\n */\r\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\r\n  return new CanvasVectorTileLayerRenderer(/** @type {import(\"../../layer/VectorTile.js\").default} */ (layer));\r\n};\r\n\r\n\r\nexport default CanvasVectorTileLayerRenderer;\r\n\r\n//# sourceMappingURL=VectorTileLayer.js.map","/**\r\n * @module ol/Map\r\n */\r\nimport PluggableMap from './PluggableMap.js';\r\nimport {defaults as defaultControls} from './control/util.js';\r\nimport {defaults as defaultInteractions} from './interaction.js';\r\nimport {assign} from './obj.js';\r\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\r\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\r\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\r\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\r\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\r\n\r\n/**\r\n * @classdesc\r\n * The map is the core component of OpenLayers. For a map to render, a view,\r\n * one or more layers, and a target container are needed:\r\n *\r\n *     import Map from 'ol/Map';\r\n *     import View from 'ol/View';\r\n *     import TileLayer from 'ol/layer/Tile';\r\n *     import OSM from 'ol/source/OSM';\r\n *\r\n *     var map = new Map({\r\n *       view: new View({\r\n *         center: [0, 0],\r\n *         zoom: 1\r\n *       }),\r\n *       layers: [\r\n *         new TileLayer({\r\n *           source: new OSM()\r\n *         })\r\n *       ],\r\n *       target: 'map'\r\n *     });\r\n *\r\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\r\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\r\n * element with the id `map`.\r\n *\r\n * The constructor places a viewport container (with CSS class name\r\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\r\n * further elements within the viewport: one with CSS class name\r\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\r\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\r\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\r\n * itself is placed in a further element within the viewport.\r\n *\r\n * Layers are stored as a {@link module:ol/Collection~Collection} in\r\n * layerGroups. A top-level group is provided by the library. This is what is\r\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\r\n * options are added to this group, and `addLayer` and `removeLayer` change the\r\n * layer collection in the group. `getLayers` is a convenience function for\r\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\r\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\r\n * options or added with `addLayer` can be groups, which can contain further\r\n * groups, and so on.\r\n *\r\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\r\n * @fires import(\"./MapEvent.js\").MapEvent\r\n * @fires module:ol/render/Event~RenderEvent#postcompose\r\n * @fires module:ol/render/Event~RenderEvent#precompose\r\n * @api\r\n */\r\nvar Map = /*@__PURE__*/(function (PluggableMap) {\n  function Map(options) {\r\n    options = assign({}, options);\r\n    if (!options.controls) {\r\n      options.controls = defaultControls();\r\n    }\r\n    if (!options.interactions) {\r\n      options.interactions = defaultInteractions();\r\n    }\r\n\r\n    PluggableMap.call(this, options);\r\n  }\n\n  if ( PluggableMap ) Map.__proto__ = PluggableMap;\n  Map.prototype = Object.create( PluggableMap && PluggableMap.prototype );\n  Map.prototype.constructor = Map;\r\n\r\n  Map.prototype.createRenderer = function createRenderer () {\r\n    var renderer = new CanvasMapRenderer(this);\r\n    renderer.registerLayerRenderers([\r\n      CanvasImageLayerRenderer,\r\n      CanvasTileLayerRenderer,\r\n      CanvasVectorLayerRenderer,\r\n      CanvasVectorTileLayerRenderer\r\n    ]);\r\n    return renderer;\r\n  };\n\n  return Map;\n}(PluggableMap));\r\n\r\n\r\nexport default Map;\r\n\r\n//# sourceMappingURL=Map.js.map","/**\r\n * @module ol/OverlayPositioning\r\n */\r\n\r\n/**\r\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\r\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\r\n * `'top-center'`, `'top-right'`\r\n * @enum {string}\r\n */\r\nexport default {\r\n  BOTTOM_LEFT: 'bottom-left',\r\n  BOTTOM_CENTER: 'bottom-center',\r\n  BOTTOM_RIGHT: 'bottom-right',\r\n  CENTER_LEFT: 'center-left',\r\n  CENTER_CENTER: 'center-center',\r\n  CENTER_RIGHT: 'center-right',\r\n  TOP_LEFT: 'top-left',\r\n  TOP_CENTER: 'top-center',\r\n  TOP_RIGHT: 'top-right'\r\n};\r\n\r\n//# sourceMappingURL=OverlayPositioning.js.map","/**\r\n * @module ol/Overlay\r\n */\r\nimport MapEventType from './MapEventType.js';\r\nimport BaseObject, {getChangeEventType} from './Object.js';\r\nimport OverlayPositioning from './OverlayPositioning.js';\r\nimport {CLASS_SELECTABLE} from './css.js';\r\nimport {removeNode, removeChildren, outerWidth, outerHeight} from './dom.js';\r\nimport {listen, unlistenByKey} from './events.js';\r\nimport {containsExtent} from './extent.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\r\n * with the {@link module:ol/Map~Map#getOverlayById} method.\r\n * @property {HTMLElement} [element] The overlay element.\r\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\r\n * the overlay. The first element in the\r\n * array is the horizontal offset. A positive value shifts the overlay right.\r\n * The second element in the array is the vertical offset. A positive value\r\n * shifts the overlay down.\r\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\r\n * in map projection.\r\n * @property {OverlayPositioning} [positioning='top-left'] Defines how\r\n * the overlay is actually positioned with respect to its `position` property.\r\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\r\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\r\n * `'top-center'`, and `'top-right'`.\r\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\r\n * viewport should be stopped. If `true` the overlay is placed in the same\r\n * container as that of the controls (CSS class name\r\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\r\n * with CSS class name specified by the `className` property.\r\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\r\n * in the overlay container, or appended. If the overlay is placed in the same\r\n * container as that of the controls (see the `stopEvent` option) you will\r\n * probably set `insertFirst` to `true` so the overlay is displayed below the\r\n * controls.\r\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\r\n * calling `setPosition`, so that the overlay is entirely visible in the current\r\n * viewport.\r\n * @property {PanOptions} [autoPanAnimation] The\r\n * animation options used to pan the overlay into view. This animation is only\r\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\r\n * customize the animation.\r\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\r\n * overlay and the borders of the map when autopanning.\r\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\r\n * name.\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} PanOptions\r\n * @property {number} [duration=1000] The duration of the animation in\r\n * milliseconds.\r\n * @property {function(number):number} [easing] The easing function to use. Can\r\n * be one from {@link module:ol/easing} or a custom function.\r\n * Default is {@link module:ol/easing~inAndOut}.\r\n */\r\n\r\n\r\n/**\r\n * @enum {string}\r\n * @protected\r\n */\r\nvar Property = {\r\n  ELEMENT: 'element',\r\n  MAP: 'map',\r\n  OFFSET: 'offset',\r\n  POSITION: 'position',\r\n  POSITIONING: 'positioning'\r\n};\r\n\r\n\r\n/**\r\n * @classdesc\r\n * An element to be displayed over the map and attached to a single map\r\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\r\n * visible widgets. Unlike Controls, they are not in a fixed position on the\r\n * screen, but are tied to a geographical coordinate, so panning the map will\r\n * move an Overlay but not a Control.\r\n *\r\n * Example:\r\n *\r\n *     import Overlay from 'ol/Overlay';\r\n *\r\n *     var popup = new Overlay({\r\n *       element: document.getElementById('popup')\r\n *     });\r\n *     popup.setPosition(coordinate);\r\n *     map.addOverlay(popup);\r\n *\r\n * @api\r\n */\r\nvar Overlay = /*@__PURE__*/(function (BaseObject) {\n  function Overlay(options) {\r\n\r\n    BaseObject.call(this);\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Options}\r\n     */\r\n    this.options = options;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number|string|undefined}\r\n     */\r\n    this.id = options.id;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {boolean}\r\n     */\r\n    this.insertFirst = options.insertFirst !== undefined ?\r\n      options.insertFirst : true;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {boolean}\r\n     */\r\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {HTMLElement}\r\n     */\r\n    this.element = document.createElement('div');\r\n    this.element.className = options.className !== undefined ?\r\n      options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\r\n    this.element.style.position = 'absolute';\r\n\r\n    /**\r\n     * @protected\r\n     * @type {boolean}\r\n     */\r\n    this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {PanOptions}\r\n     */\r\n    this.autoPanAnimation = options.autoPanAnimation || /** @type {PanOptions} */ ({});\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.autoPanMargin = options.autoPanMargin !== undefined ?\r\n      options.autoPanMargin : 20;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {{bottom_: string,\r\n     *         left_: string,\r\n     *         right_: string,\r\n     *         top_: string,\r\n     *         visible: boolean}}\r\n     */\r\n    this.rendered = {\r\n      bottom_: '',\r\n      left_: '',\r\n      right_: '',\r\n      top_: '',\r\n      visible: true\r\n    };\r\n\r\n    /**\r\n     * @protected\r\n     * @type {?import(\"./events.js\").EventsKey}\r\n     */\r\n    this.mapPostrenderListenerKey = null;\r\n\r\n    listen(\r\n      this, getChangeEventType(Property.ELEMENT),\r\n      this.handleElementChanged, this);\r\n\r\n    listen(\r\n      this, getChangeEventType(Property.MAP),\r\n      this.handleMapChanged, this);\r\n\r\n    listen(\r\n      this, getChangeEventType(Property.OFFSET),\r\n      this.handleOffsetChanged, this);\r\n\r\n    listen(\r\n      this, getChangeEventType(Property.POSITION),\r\n      this.handlePositionChanged, this);\r\n\r\n    listen(\r\n      this, getChangeEventType(Property.POSITIONING),\r\n      this.handlePositioningChanged, this);\r\n\r\n    if (options.element !== undefined) {\r\n      this.setElement(options.element);\r\n    }\r\n\r\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\r\n\r\n    this.setPositioning(options.positioning !== undefined ?\r\n      /** @type {OverlayPositioning} */ (options.positioning) :\r\n      OverlayPositioning.TOP_LEFT);\r\n\r\n    if (options.position !== undefined) {\r\n      this.setPosition(options.position);\r\n    }\r\n\r\n  }\n\n  if ( BaseObject ) Overlay.__proto__ = BaseObject;\n  Overlay.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Overlay.prototype.constructor = Overlay;\r\n\r\n  /**\r\n   * Get the DOM element of this overlay.\r\n   * @return {HTMLElement|undefined} The Element containing the overlay.\r\n   * @observable\r\n   * @api\r\n   */\r\n  Overlay.prototype.getElement = function getElement () {\r\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\r\n  };\r\n\r\n  /**\r\n   * Get the overlay identifier which is set on constructor.\r\n   * @return {number|string|undefined} Id.\r\n   * @api\r\n   */\r\n  Overlay.prototype.getId = function getId () {\r\n    return this.id;\r\n  };\r\n\r\n  /**\r\n   * Get the map associated with this overlay.\r\n   * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\r\n   * overlay is part of.\r\n   * @observable\r\n   * @api\r\n   */\r\n  Overlay.prototype.getMap = function getMap () {\r\n    return (\r\n      /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(Property.MAP))\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Get the offset of this overlay.\r\n   * @return {Array<number>} The offset.\r\n   * @observable\r\n   * @api\r\n   */\r\n  Overlay.prototype.getOffset = function getOffset () {\r\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\r\n  };\r\n\r\n  /**\r\n   * Get the current position of this overlay.\r\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\r\n   *     anchored at.\r\n   * @observable\r\n   * @api\r\n   */\r\n  Overlay.prototype.getPosition = function getPosition () {\r\n    return (\r\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION))\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Get the current positioning of this overlay.\r\n   * @return {OverlayPositioning} How the overlay is positioned\r\n   *     relative to its point on the map.\r\n   * @observable\r\n   * @api\r\n   */\r\n  Overlay.prototype.getPositioning = function getPositioning () {\r\n    return (\r\n      /** @type {OverlayPositioning} */ (this.get(Property.POSITIONING))\r\n    );\r\n  };\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  Overlay.prototype.handleElementChanged = function handleElementChanged () {\r\n    removeChildren(this.element);\r\n    var element = this.getElement();\r\n    if (element) {\r\n      this.element.appendChild(element);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  Overlay.prototype.handleMapChanged = function handleMapChanged () {\r\n    if (this.mapPostrenderListenerKey) {\r\n      removeNode(this.element);\r\n      unlistenByKey(this.mapPostrenderListenerKey);\r\n      this.mapPostrenderListenerKey = null;\r\n    }\r\n    var map = this.getMap();\r\n    if (map) {\r\n      this.mapPostrenderListenerKey = listen(map,\r\n        MapEventType.POSTRENDER, this.render, this);\r\n      this.updatePixelPosition();\r\n      var container = this.stopEvent ?\r\n        map.getOverlayContainerStopEvent() : map.getOverlayContainer();\r\n      if (this.insertFirst) {\r\n        container.insertBefore(this.element, container.childNodes[0] || null);\r\n      } else {\r\n        container.appendChild(this.element);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  Overlay.prototype.render = function render () {\r\n    this.updatePixelPosition();\r\n  };\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  Overlay.prototype.handleOffsetChanged = function handleOffsetChanged () {\r\n    this.updatePixelPosition();\r\n  };\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  Overlay.prototype.handlePositionChanged = function handlePositionChanged () {\r\n    this.updatePixelPosition();\r\n    if (this.get(Property.POSITION) && this.autoPan) {\r\n      this.panIntoView();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  Overlay.prototype.handlePositioningChanged = function handlePositioningChanged () {\r\n    this.updatePixelPosition();\r\n  };\r\n\r\n  /**\r\n   * Set the DOM element to be associated with this overlay.\r\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\r\n   * @observable\r\n   * @api\r\n   */\r\n  Overlay.prototype.setElement = function setElement (element) {\r\n    this.set(Property.ELEMENT, element);\r\n  };\r\n\r\n  /**\r\n   * Set the map to be associated with this overlay.\r\n   * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\r\n   * overlay is part of.\r\n   * @observable\r\n   * @api\r\n   */\r\n  Overlay.prototype.setMap = function setMap (map) {\r\n    this.set(Property.MAP, map);\r\n  };\r\n\r\n  /**\r\n   * Set the offset for this overlay.\r\n   * @param {Array<number>} offset Offset.\r\n   * @observable\r\n   * @api\r\n   */\r\n  Overlay.prototype.setOffset = function setOffset (offset) {\r\n    this.set(Property.OFFSET, offset);\r\n  };\r\n\r\n  /**\r\n   * Set the position for this overlay. If the position is `undefined` the\r\n   * overlay is hidden.\r\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\r\n   *     is anchored at.\r\n   * @observable\r\n   * @api\r\n   */\r\n  Overlay.prototype.setPosition = function setPosition (position) {\r\n    this.set(Property.POSITION, position);\r\n  };\r\n\r\n  /**\r\n   * Pan the map so that the overlay is entirely visible in the current viewport\r\n   * (if necessary).\r\n   * @protected\r\n   */\r\n  Overlay.prototype.panIntoView = function panIntoView () {\r\n    var map = this.getMap();\r\n\r\n    if (!map || !map.getTargetElement()) {\r\n      return;\r\n    }\r\n\r\n    var mapRect = this.getRect(map.getTargetElement(), map.getSize());\r\n    var element = this.getElement();\r\n    var overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\r\n\r\n    var margin = this.autoPanMargin;\r\n    if (!containsExtent(mapRect, overlayRect)) {\r\n      // the overlay is not completely inside the viewport, so pan the map\r\n      var offsetLeft = overlayRect[0] - mapRect[0];\r\n      var offsetRight = mapRect[2] - overlayRect[2];\r\n      var offsetTop = overlayRect[1] - mapRect[1];\r\n      var offsetBottom = mapRect[3] - overlayRect[3];\r\n\r\n      var delta = [0, 0];\r\n      if (offsetLeft < 0) {\r\n        // move map to the left\r\n        delta[0] = offsetLeft - margin;\r\n      } else if (offsetRight < 0) {\r\n        // move map to the right\r\n        delta[0] = Math.abs(offsetRight) + margin;\r\n      }\r\n      if (offsetTop < 0) {\r\n        // move map up\r\n        delta[1] = offsetTop - margin;\r\n      } else if (offsetBottom < 0) {\r\n        // move map down\r\n        delta[1] = Math.abs(offsetBottom) + margin;\r\n      }\r\n\r\n      if (delta[0] !== 0 || delta[1] !== 0) {\r\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map.getView().getCenter());\r\n        var centerPx = map.getPixelFromCoordinate(center);\r\n        var newCenterPx = [\r\n          centerPx[0] + delta[0],\r\n          centerPx[1] + delta[1]\r\n        ];\r\n\r\n        map.getView().animate({\r\n          center: map.getCoordinateFromPixel(newCenterPx),\r\n          duration: this.autoPanAnimation.duration,\r\n          easing: this.autoPanAnimation.easing\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Get the extent of an element relative to the document\r\n   * @param {HTMLElement|undefined} element The element.\r\n   * @param {import(\"./size.js\").Size|undefined} size The size of the element.\r\n   * @return {import(\"./extent.js\").Extent} The extent.\r\n   * @protected\r\n   */\r\n  Overlay.prototype.getRect = function getRect (element, size) {\r\n    var box = element.getBoundingClientRect();\r\n    var offsetX = box.left + window.pageXOffset;\r\n    var offsetY = box.top + window.pageYOffset;\r\n    return [\r\n      offsetX,\r\n      offsetY,\r\n      offsetX + size[0],\r\n      offsetY + size[1]\r\n    ];\r\n  };\r\n\r\n  /**\r\n   * Set the positioning for this overlay.\r\n   * @param {OverlayPositioning} positioning how the overlay is\r\n   *     positioned relative to its point on the map.\r\n   * @observable\r\n   * @api\r\n   */\r\n  Overlay.prototype.setPositioning = function setPositioning (positioning) {\r\n    this.set(Property.POSITIONING, positioning);\r\n  };\r\n\r\n  /**\r\n   * Modify the visibility of the element.\r\n   * @param {boolean} visible Element visibility.\r\n   * @protected\r\n   */\r\n  Overlay.prototype.setVisible = function setVisible (visible) {\r\n    if (this.rendered.visible !== visible) {\r\n      this.element.style.display = visible ? '' : 'none';\r\n      this.rendered.visible = visible;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Update pixel position.\r\n   * @protected\r\n   */\r\n  Overlay.prototype.updatePixelPosition = function updatePixelPosition () {\r\n    var map = this.getMap();\r\n    var position = this.getPosition();\r\n    if (!map || !map.isRendered() || !position) {\r\n      this.setVisible(false);\r\n      return;\r\n    }\r\n\r\n    var pixel = map.getPixelFromCoordinate(position);\r\n    var mapSize = map.getSize();\r\n    this.updateRenderedPosition(pixel, mapSize);\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\r\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\r\n   * @protected\r\n   */\r\n  Overlay.prototype.updateRenderedPosition = function updateRenderedPosition (pixel, mapSize) {\r\n    var style = this.element.style;\r\n    var offset = this.getOffset();\r\n\r\n    var positioning = this.getPositioning();\r\n\r\n    this.setVisible(true);\r\n\r\n    var offsetX = offset[0];\r\n    var offsetY = offset[1];\r\n    if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\r\n        positioning == OverlayPositioning.CENTER_RIGHT ||\r\n        positioning == OverlayPositioning.TOP_RIGHT) {\r\n      if (this.rendered.left_ !== '') {\r\n        this.rendered.left_ = style.left = '';\r\n      }\r\n      var right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\r\n      if (this.rendered.right_ != right) {\r\n        this.rendered.right_ = style.right = right;\r\n      }\r\n    } else {\r\n      if (this.rendered.right_ !== '') {\r\n        this.rendered.right_ = style.right = '';\r\n      }\r\n      if (positioning == OverlayPositioning.BOTTOM_CENTER ||\r\n          positioning == OverlayPositioning.CENTER_CENTER ||\r\n          positioning == OverlayPositioning.TOP_CENTER) {\r\n        offsetX -= this.element.offsetWidth / 2;\r\n      }\r\n      var left = Math.round(pixel[0] + offsetX) + 'px';\r\n      if (this.rendered.left_ != left) {\r\n        this.rendered.left_ = style.left = left;\r\n      }\r\n    }\r\n    if (positioning == OverlayPositioning.BOTTOM_LEFT ||\r\n        positioning == OverlayPositioning.BOTTOM_CENTER ||\r\n        positioning == OverlayPositioning.BOTTOM_RIGHT) {\r\n      if (this.rendered.top_ !== '') {\r\n        this.rendered.top_ = style.top = '';\r\n      }\r\n      var bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\r\n      if (this.rendered.bottom_ != bottom) {\r\n        this.rendered.bottom_ = style.bottom = bottom;\r\n      }\r\n    } else {\r\n      if (this.rendered.bottom_ !== '') {\r\n        this.rendered.bottom_ = style.bottom = '';\r\n      }\r\n      if (positioning == OverlayPositioning.CENTER_LEFT ||\r\n          positioning == OverlayPositioning.CENTER_CENTER ||\r\n          positioning == OverlayPositioning.CENTER_RIGHT) {\r\n        offsetY -= this.element.offsetHeight / 2;\r\n      }\r\n      var top = Math.round(pixel[1] + offsetY) + 'px';\r\n      if (this.rendered.top_ != top) {\r\n        this.rendered.top_ = style.top = top;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * returns the options this Overlay has been created with\r\n   * @return {Options} overlay options\r\n   */\r\n  Overlay.prototype.getOptions = function getOptions () {\r\n    return this.options;\r\n  };\n\n  return Overlay;\n}(BaseObject));\r\n\r\n\r\nexport default Overlay;\r\n\r\n//# sourceMappingURL=Overlay.js.map","/**\r\n * @module ol/control/OverviewMap\r\n */\r\nimport Collection from '../Collection.js';\r\nimport Map from '../Map.js';\r\nimport MapEventType from '../MapEventType.js';\r\nimport MapProperty from '../MapProperty.js';\r\nimport {getChangeEventType} from '../Object.js';\r\nimport ObjectEventType from '../ObjectEventType.js';\r\nimport Overlay from '../Overlay.js';\r\nimport OverlayPositioning from '../OverlayPositioning.js';\r\nimport ViewProperty from '../ViewProperty.js';\r\nimport Control from './Control.js';\r\nimport {rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\r\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\r\nimport {replaceNode} from '../dom.js';\r\nimport {listen, listenOnce, unlisten} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {containsExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, scaleFromCenter} from '../extent.js';\r\n\r\n\r\n/**\r\n * Maximum width and/or height extent ratio that determines when the overview\r\n * map should be zoomed out.\r\n * @type {number}\r\n */\r\nvar MAX_RATIO = 0.75;\r\n\r\n\r\n/**\r\n * Minimum width and/or height extent ratio that determines when the overview\r\n * map should be zoomed in.\r\n * @type {number}\r\n */\r\nvar MIN_RATIO = 0.1;\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-overviewmap'] CSS class name.\r\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\r\n * @property {string|HTMLElement} [collapseLabel='«'] Text label to use for the\r\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\r\n * @property {string|HTMLElement} [label='»'] Text label to use for the collapsed\r\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {Array<import(\"../layer/Layer.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Layer.js\").default>} [layers]\r\n * Layers for the overview map. If not set, then all main map layers are used\r\n * instead.\r\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\r\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the control\r\n * to be rendered outside of the map's viewport.\r\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\r\n * @property {import(\"../View.js\").default} [view] Custom view for the overview map. If not provided,\r\n * a default view with an EPSG:3857 projection will be used.\r\n */\r\n\r\n\r\n/**\r\n * Create a new control with a map acting as an overview map for an other\r\n * defined map.\r\n *\r\n * @api\r\n */\r\nvar OverviewMap = /*@__PURE__*/(function (Control) {\n  function OverviewMap(opt_options) {\r\n\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    Control.call(this, {\r\n      element: document.createElement('div'),\r\n      render: options.render || render,\r\n      target: options.target\r\n    });\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.collapsible_ = options.collapsible !== undefined ?\r\n      options.collapsible : true;\r\n\r\n    if (!this.collapsible_) {\r\n      this.collapsed_ = false;\r\n    }\r\n\r\n    var className = options.className !== undefined ? options.className : 'ol-overviewmap';\r\n\r\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\r\n\r\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00AB';\r\n\r\n    if (typeof collapseLabel === 'string') {\r\n      /**\r\n       * @private\r\n       * @type {HTMLElement}\r\n       */\r\n      this.collapseLabel_ = document.createElement('span');\r\n      this.collapseLabel_.textContent = collapseLabel;\r\n    } else {\r\n      this.collapseLabel_ = collapseLabel;\r\n    }\r\n\r\n    var label = options.label !== undefined ? options.label : '\\u00BB';\r\n\r\n\r\n    if (typeof label === 'string') {\r\n      /**\r\n       * @private\r\n       * @type {HTMLElement}\r\n       */\r\n      this.label_ = document.createElement('span');\r\n      this.label_.textContent = label;\r\n    } else {\r\n      this.label_ = label;\r\n    }\r\n\r\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\r\n      this.collapseLabel_ : this.label_;\r\n    var button = document.createElement('button');\r\n    button.setAttribute('type', 'button');\r\n    button.title = tipLabel;\r\n    button.appendChild(activeLabel);\r\n\r\n    listen(button, EventType.CLICK,\r\n      this.handleClick_, this);\r\n\r\n    /**\r\n     * @type {HTMLElement}\r\n     * @private\r\n     */\r\n    this.ovmapDiv_ = document.createElement('div');\r\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\r\n\r\n    /**\r\n     * @type {import(\"../Map.js\").default}\r\n     * @private\r\n     */\r\n    this.ovmap_ = new Map({\r\n      controls: new Collection(),\r\n      interactions: new Collection(),\r\n      view: options.view\r\n    });\r\n    var ovmap = this.ovmap_;\r\n\r\n    if (options.layers) {\r\n      /** @type {Array<import(\"../layer/Layer.js\").default>} */ (options.layers).forEach(\r\n        /**\r\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\r\n         */\r\n        (function(layer) {\r\n          ovmap.addLayer(layer);\r\n        }).bind(this));\r\n    }\r\n\r\n    var box = document.createElement('div');\r\n    box.className = 'ol-overviewmap-box';\r\n    box.style.boxSizing = 'border-box';\r\n\r\n    /**\r\n     * @type {import(\"../Overlay.js\").default}\r\n     * @private\r\n     */\r\n    this.boxOverlay_ = new Overlay({\r\n      position: [0, 0],\r\n      positioning: OverlayPositioning.BOTTOM_LEFT,\r\n      element: box\r\n    });\r\n    this.ovmap_.addOverlay(this.boxOverlay_);\r\n\r\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\r\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\r\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\r\n    var element = this.element;\r\n    element.className = cssClasses;\r\n    element.appendChild(this.ovmapDiv_);\r\n    element.appendChild(button);\r\n\r\n    /* Interactive map */\r\n\r\n    var scope = this;\r\n\r\n    var overlay = this.boxOverlay_;\r\n    var overlayBox = this.boxOverlay_.getElement();\r\n\r\n    /* Functions definition */\r\n\r\n    var computeDesiredMousePosition = function(mousePosition) {\r\n      return {\r\n        clientX: mousePosition.clientX - (overlayBox.offsetWidth / 2),\r\n        clientY: mousePosition.clientY + (overlayBox.offsetHeight / 2)\r\n      };\r\n    };\r\n\r\n    var move = function(event) {\r\n      var position = /** @type {?} */ (computeDesiredMousePosition(event));\r\n      var coordinates = ovmap.getEventCoordinate(/** @type {Event} */ (position));\r\n\r\n      overlay.setPosition(coordinates);\r\n    };\r\n\r\n    var endMoving = function(event) {\r\n      var coordinates = ovmap.getEventCoordinate(event);\r\n\r\n      scope.getMap().getView().setCenter(coordinates);\r\n\r\n      window.removeEventListener('mousemove', move);\r\n      window.removeEventListener('mouseup', endMoving);\r\n    };\r\n\r\n    /* Binding */\r\n\r\n    overlayBox.addEventListener('mousedown', function() {\r\n      window.addEventListener('mousemove', move);\r\n      window.addEventListener('mouseup', endMoving);\r\n    });\r\n  }\n\n  if ( Control ) OverviewMap.__proto__ = Control;\n  OverviewMap.prototype = Object.create( Control && Control.prototype );\n  OverviewMap.prototype.constructor = OverviewMap;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  OverviewMap.prototype.setMap = function setMap (map) {\r\n    var oldMap = this.getMap();\r\n    if (map === oldMap) {\r\n      return;\r\n    }\r\n    if (oldMap) {\r\n      var oldView = oldMap.getView();\r\n      if (oldView) {\r\n        this.unbindView_(oldView);\r\n      }\r\n      this.ovmap_.setTarget(null);\r\n    }\r\n    Control.prototype.setMap.call(this, map);\r\n\r\n    if (map) {\r\n      this.ovmap_.setTarget(this.ovmapDiv_);\r\n      this.listenerKeys.push(listen(\r\n        map, ObjectEventType.PROPERTYCHANGE,\r\n        this.handleMapPropertyChange_, this));\r\n\r\n      // TODO: to really support map switching, this would need to be reworked\r\n      if (this.ovmap_.getLayers().getLength() === 0) {\r\n        this.ovmap_.setLayerGroup(map.getLayerGroup());\r\n      }\r\n\r\n      var view = map.getView();\r\n      if (view) {\r\n        this.bindView_(view);\r\n        if (view.isDef()) {\r\n          this.ovmap_.updateSize();\r\n          this.resetExtent_();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle map property changes.  This only deals with changes to the map's view.\r\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\r\n   * @private\r\n   */\r\n  OverviewMap.prototype.handleMapPropertyChange_ = function handleMapPropertyChange_ (event) {\r\n    if (event.key === MapProperty.VIEW) {\r\n      var oldView = /** @type {import(\"../View.js\").default} */ (event.oldValue);\r\n      if (oldView) {\r\n        this.unbindView_(oldView);\r\n      }\r\n      var newView = this.getMap().getView();\r\n      this.bindView_(newView);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Register listeners for view property changes.\r\n   * @param {import(\"../View.js\").default} view The view.\r\n   * @private\r\n   */\r\n  OverviewMap.prototype.bindView_ = function bindView_ (view) {\r\n    listen(view,\r\n      getChangeEventType(ViewProperty.ROTATION),\r\n      this.handleRotationChanged_, this);\r\n  };\r\n\r\n  /**\r\n   * Unregister listeners for view property changes.\r\n   * @param {import(\"../View.js\").default} view The view.\r\n   * @private\r\n   */\r\n  OverviewMap.prototype.unbindView_ = function unbindView_ (view) {\r\n    unlisten(view,\r\n      getChangeEventType(ViewProperty.ROTATION),\r\n      this.handleRotationChanged_, this);\r\n  };\r\n\r\n  /**\r\n   * Handle rotation changes to the main map.\r\n   * TODO: This should rotate the extent rectrangle instead of the\r\n   * overview map's view.\r\n   * @private\r\n   */\r\n  OverviewMap.prototype.handleRotationChanged_ = function handleRotationChanged_ () {\r\n    this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\r\n  };\r\n\r\n  /**\r\n   * Reset the overview map extent if the box size (width or\r\n   * height) is less than the size of the overview map size times minRatio\r\n   * or is greater than the size of the overview size times maxRatio.\r\n   *\r\n   * If the map extent was not reset, the box size can fits in the defined\r\n   * ratio sizes. This method then checks if is contained inside the overview\r\n   * map current extent. If not, recenter the overview map to the current\r\n   * main map center location.\r\n   * @private\r\n   */\r\n  OverviewMap.prototype.validateExtent_ = function validateExtent_ () {\r\n    var map = this.getMap();\r\n    var ovmap = this.ovmap_;\r\n\r\n    if (!map.isRendered() || !ovmap.isRendered()) {\r\n      return;\r\n    }\r\n\r\n    var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\r\n\r\n    var view = map.getView();\r\n    var extent = view.calculateExtent(mapSize);\r\n\r\n    var ovmapSize = /** @type {import(\"../size.js\").Size} */ (ovmap.getSize());\r\n\r\n    var ovview = ovmap.getView();\r\n    var ovextent = ovview.calculateExtent(ovmapSize);\r\n\r\n    var topLeftPixel =\r\n        ovmap.getPixelFromCoordinate(getTopLeft(extent));\r\n    var bottomRightPixel =\r\n        ovmap.getPixelFromCoordinate(getBottomRight(extent));\r\n\r\n    var boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\r\n    var boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\r\n\r\n    var ovmapWidth = ovmapSize[0];\r\n    var ovmapHeight = ovmapSize[1];\r\n\r\n    if (boxWidth < ovmapWidth * MIN_RATIO ||\r\n        boxHeight < ovmapHeight * MIN_RATIO ||\r\n        boxWidth > ovmapWidth * MAX_RATIO ||\r\n        boxHeight > ovmapHeight * MAX_RATIO) {\r\n      this.resetExtent_();\r\n    } else if (!containsExtent(ovextent, extent)) {\r\n      this.recenter_();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Reset the overview map extent to half calculated min and max ratio times\r\n   * the extent of the main map.\r\n   * @private\r\n   */\r\n  OverviewMap.prototype.resetExtent_ = function resetExtent_ () {\r\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\r\n      return;\r\n    }\r\n\r\n    var map = this.getMap();\r\n    var ovmap = this.ovmap_;\r\n\r\n    var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\r\n\r\n    var view = map.getView();\r\n    var extent = view.calculateExtent(mapSize);\r\n\r\n    var ovview = ovmap.getView();\r\n\r\n    // get how many times the current map overview could hold different\r\n    // box sizes using the min and max ratio, pick the step in the middle used\r\n    // to calculate the extent from the main map to set it to the overview map,\r\n    var steps = Math.log(\r\n      MAX_RATIO / MIN_RATIO) / Math.LN2;\r\n    var ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\r\n    scaleFromCenter(extent, ratio);\r\n    ovview.fit(extent);\r\n  };\r\n\r\n  /**\r\n   * Set the center of the overview map to the map center without changing its\r\n   * resolution.\r\n   * @private\r\n   */\r\n  OverviewMap.prototype.recenter_ = function recenter_ () {\r\n    var map = this.getMap();\r\n    var ovmap = this.ovmap_;\r\n\r\n    var view = map.getView();\r\n\r\n    var ovview = ovmap.getView();\r\n\r\n    ovview.setCenter(view.getCenter());\r\n  };\r\n\r\n  /**\r\n   * Update the box using the main map extent\r\n   * @private\r\n   */\r\n  OverviewMap.prototype.updateBox_ = function updateBox_ () {\r\n    var map = this.getMap();\r\n    var ovmap = this.ovmap_;\r\n\r\n    if (!map.isRendered() || !ovmap.isRendered()) {\r\n      return;\r\n    }\r\n\r\n    var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\r\n\r\n    var view = map.getView();\r\n\r\n    var ovview = ovmap.getView();\r\n\r\n    var rotation = view.getRotation();\r\n\r\n    var overlay = this.boxOverlay_;\r\n    var box = this.boxOverlay_.getElement();\r\n    var extent = view.calculateExtent(mapSize);\r\n    var ovresolution = ovview.getResolution();\r\n    var bottomLeft = getBottomLeft(extent);\r\n    var topRight = getTopRight(extent);\r\n\r\n    // set position using bottom left coordinates\r\n    var rotateBottomLeft = this.calculateCoordinateRotate_(rotation, bottomLeft);\r\n    overlay.setPosition(rotateBottomLeft);\r\n\r\n    // set box size calculated from map extent size and overview map resolution\r\n    if (box) {\r\n      box.style.width = Math.abs((bottomLeft[0] - topRight[0]) / ovresolution) + 'px';\r\n      box.style.height = Math.abs((topRight[1] - bottomLeft[1]) / ovresolution) + 'px';\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {number} rotation Target rotation.\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @return {import(\"../coordinate.js\").Coordinate|undefined} Coordinate for rotation and center anchor.\r\n   * @private\r\n   */\r\n  OverviewMap.prototype.calculateCoordinateRotate_ = function calculateCoordinateRotate_ (rotation, coordinate) {\r\n    var coordinateRotate;\r\n\r\n    var map = this.getMap();\r\n    var view = map.getView();\r\n\r\n    var currentCenter = view.getCenter();\r\n\r\n    if (currentCenter) {\r\n      coordinateRotate = [\r\n        coordinate[0] - currentCenter[0],\r\n        coordinate[1] - currentCenter[1]\r\n      ];\r\n      rotateCoordinate(coordinateRotate, rotation);\r\n      addCoordinate(coordinateRotate, currentCenter);\r\n    }\r\n    return coordinateRotate;\r\n  };\r\n\r\n  /**\r\n   * @param {MouseEvent} event The event to handle\r\n   * @private\r\n   */\r\n  OverviewMap.prototype.handleClick_ = function handleClick_ (event) {\r\n    event.preventDefault();\r\n    this.handleToggle_();\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  OverviewMap.prototype.handleToggle_ = function handleToggle_ () {\r\n    this.element.classList.toggle(CLASS_COLLAPSED);\r\n    if (this.collapsed_) {\r\n      replaceNode(this.collapseLabel_, this.label_);\r\n    } else {\r\n      replaceNode(this.label_, this.collapseLabel_);\r\n    }\r\n    this.collapsed_ = !this.collapsed_;\r\n\r\n    // manage overview map if it had not been rendered before and control\r\n    // is expanded\r\n    var ovmap = this.ovmap_;\r\n    if (!this.collapsed_ && !ovmap.isRendered()) {\r\n      ovmap.updateSize();\r\n      this.resetExtent_();\r\n      listenOnce(ovmap, MapEventType.POSTRENDER,\r\n        function(event) {\r\n          this.updateBox_();\r\n        },\r\n        this);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Return `true` if the overview map is collapsible, `false` otherwise.\r\n   * @return {boolean} True if the widget is collapsible.\r\n   * @api\r\n   */\r\n  OverviewMap.prototype.getCollapsible = function getCollapsible () {\r\n    return this.collapsible_;\r\n  };\r\n\r\n  /**\r\n   * Set whether the overview map should be collapsible.\r\n   * @param {boolean} collapsible True if the widget is collapsible.\r\n   * @api\r\n   */\r\n  OverviewMap.prototype.setCollapsible = function setCollapsible (collapsible) {\r\n    if (this.collapsible_ === collapsible) {\r\n      return;\r\n    }\r\n    this.collapsible_ = collapsible;\r\n    this.element.classList.toggle('ol-uncollapsible');\r\n    if (!collapsible && this.collapsed_) {\r\n      this.handleToggle_();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Collapse or expand the overview map according to the passed parameter. Will\r\n   * not do anything if the overview map isn't collapsible or if the current\r\n   * collapsed state is already the one requested.\r\n   * @param {boolean} collapsed True if the widget is collapsed.\r\n   * @api\r\n   */\r\n  OverviewMap.prototype.setCollapsed = function setCollapsed (collapsed) {\r\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\r\n      return;\r\n    }\r\n    this.handleToggle_();\r\n  };\r\n\r\n  /**\r\n   * Determine if the overview map is collapsed.\r\n   * @return {boolean} The overview map is collapsed.\r\n   * @api\r\n   */\r\n  OverviewMap.prototype.getCollapsed = function getCollapsed () {\r\n    return this.collapsed_;\r\n  };\r\n\r\n  /**\r\n   * Return the overview map.\r\n   * @return {import(\"../PluggableMap.js\").default} Overview map.\r\n   * @api\r\n   */\r\n  OverviewMap.prototype.getOverviewMap = function getOverviewMap () {\r\n    return this.ovmap_;\r\n  };\n\n  return OverviewMap;\n}(Control));\r\n\r\n\r\n/**\r\n * Update the overview map element.\r\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\r\n * @this {OverviewMap}\r\n * @api\r\n */\r\nexport function render(mapEvent) {\r\n  this.validateExtent_();\r\n  this.updateBox_();\r\n}\r\n\r\n\r\nexport default OverviewMap;\r\n\r\n//# sourceMappingURL=OverviewMap.js.map","/**\r\n * @module ol/control/ScaleLine\r\n */\r\nimport {getChangeEventType} from '../Object.js';\r\nimport {assert} from '../asserts.js';\r\nimport Control from './Control.js';\r\nimport {CLASS_UNSELECTABLE} from '../css.js';\r\nimport {listen} from '../events.js';\r\nimport {getPointResolution, METERS_PER_UNIT} from '../proj.js';\r\nimport ProjUnits from '../proj/Units.js';\r\n\r\n\r\n/**\r\n * @type {string}\r\n */\r\nvar UNITS_PROP = 'units';\r\n\r\n/**\r\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\r\n * `'nautical'`, `'metric'`, `'us'`.\r\n * @enum {string}\r\n */\r\nexport var Units = {\r\n  DEGREES: 'degrees',\r\n  IMPERIAL: 'imperial',\r\n  NAUTICAL: 'nautical',\r\n  METRIC: 'metric',\r\n  US: 'us'\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Array<number>}\r\n */\r\nvar LEADING_DIGITS = [1, 2, 5];\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-scale-line'] CSS Class name.\r\n * @property {number} [minWidth=64] Minimum width in pixels.\r\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\r\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the control\r\n * to be rendered outside of the map's viewport.\r\n * @property {Units|string} [units='metric'] Units.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * A control displaying rough y-axis distances, calculated for the center of the\r\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\r\n * projection in OpenLayers), the scale is valid for all directions.\r\n * No scale line will be shown when the y-axis distance of a pixel at the\r\n * viewport center cannot be calculated in the view projection.\r\n * By default the scale line will show in the bottom left portion of the map,\r\n * but this can be changed by using the css selector `.ol-scale-line`.\r\n *\r\n * @api\r\n */\r\nvar ScaleLine = /*@__PURE__*/(function (Control) {\n  function ScaleLine(opt_options) {\r\n\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    var className = options.className !== undefined ? options.className : 'ol-scale-line';\r\n\r\n    Control.call(this, {\r\n      element: document.createElement('div'),\r\n      render: options.render || render,\r\n      target: options.target\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement}\r\n     */\r\n    this.innerElement_ = document.createElement('div');\r\n    this.innerElement_.className = className + '-inner';\r\n\r\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\r\n    this.element.appendChild(this.innerElement_);\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../View.js\").State}\r\n     */\r\n    this.viewState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.renderedVisible_ = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.renderedWidth_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.renderedHTML_ = '';\r\n\r\n    listen(\r\n      this, getChangeEventType(UNITS_PROP),\r\n      this.handleUnitsChanged_, this);\r\n\r\n    this.setUnits(/** @type {Units} */ (options.units) || Units.METRIC);\r\n\r\n  }\n\n  if ( Control ) ScaleLine.__proto__ = Control;\n  ScaleLine.prototype = Object.create( Control && Control.prototype );\n  ScaleLine.prototype.constructor = ScaleLine;\r\n\r\n  /**\r\n   * Return the units to use in the scale line.\r\n   * @return {Units} The units\r\n   * to use in the scale line.\r\n   * @observable\r\n   * @api\r\n   */\r\n  ScaleLine.prototype.getUnits = function getUnits () {\r\n    return this.get(UNITS_PROP);\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  ScaleLine.prototype.handleUnitsChanged_ = function handleUnitsChanged_ () {\r\n    this.updateElement_();\r\n  };\r\n\r\n  /**\r\n   * Set the units to use in the scale line.\r\n   * @param {Units} units The units to use in the scale line.\r\n   * @observable\r\n   * @api\r\n   */\r\n  ScaleLine.prototype.setUnits = function setUnits (units) {\r\n    this.set(UNITS_PROP, units);\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  ScaleLine.prototype.updateElement_ = function updateElement_ () {\r\n    var viewState = this.viewState_;\r\n\r\n    if (!viewState) {\r\n      if (this.renderedVisible_) {\r\n        this.element.style.display = 'none';\r\n        this.renderedVisible_ = false;\r\n      }\r\n      return;\r\n    }\r\n\r\n    var center = viewState.center;\r\n    var projection = viewState.projection;\r\n    var units = this.getUnits();\r\n    var pointResolutionUnits = units == Units.DEGREES ?\r\n      ProjUnits.DEGREES :\r\n      ProjUnits.METERS;\r\n    var pointResolution =\r\n        getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\r\n    if (projection.getUnits() != ProjUnits.DEGREES && projection.getMetersPerUnit()\r\n      && pointResolutionUnits == ProjUnits.METERS) {\r\n      pointResolution *= projection.getMetersPerUnit();\r\n    }\r\n\r\n    var nominalCount = this.minWidth_ * pointResolution;\r\n    var suffix = '';\r\n    if (units == Units.DEGREES) {\r\n      var metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\r\n      if (projection.getUnits() == ProjUnits.DEGREES) {\r\n        nominalCount *= metersPerDegree;\r\n      } else {\r\n        pointResolution /= metersPerDegree;\r\n      }\r\n      if (nominalCount < metersPerDegree / 60) {\r\n        suffix = '\\u2033'; // seconds\r\n        pointResolution *= 3600;\r\n      } else if (nominalCount < metersPerDegree) {\r\n        suffix = '\\u2032'; // minutes\r\n        pointResolution *= 60;\r\n      } else {\r\n        suffix = '\\u00b0'; // degrees\r\n      }\r\n    } else if (units == Units.IMPERIAL) {\r\n      if (nominalCount < 0.9144) {\r\n        suffix = 'in';\r\n        pointResolution /= 0.0254;\r\n      } else if (nominalCount < 1609.344) {\r\n        suffix = 'ft';\r\n        pointResolution /= 0.3048;\r\n      } else {\r\n        suffix = 'mi';\r\n        pointResolution /= 1609.344;\r\n      }\r\n    } else if (units == Units.NAUTICAL) {\r\n      pointResolution /= 1852;\r\n      suffix = 'nm';\r\n    } else if (units == Units.METRIC) {\r\n      if (nominalCount < 0.001) {\r\n        suffix = 'μm';\r\n        pointResolution *= 1000000;\r\n      } else if (nominalCount < 1) {\r\n        suffix = 'mm';\r\n        pointResolution *= 1000;\r\n      } else if (nominalCount < 1000) {\r\n        suffix = 'm';\r\n      } else {\r\n        suffix = 'km';\r\n        pointResolution /= 1000;\r\n      }\r\n    } else if (units == Units.US) {\r\n      if (nominalCount < 0.9144) {\r\n        suffix = 'in';\r\n        pointResolution *= 39.37;\r\n      } else if (nominalCount < 1609.344) {\r\n        suffix = 'ft';\r\n        pointResolution /= 0.30480061;\r\n      } else {\r\n        suffix = 'mi';\r\n        pointResolution /= 1609.3472;\r\n      }\r\n    } else {\r\n      assert(false, 33); // Invalid units\r\n    }\r\n\r\n    var i = 3 * Math.floor(\r\n      Math.log(this.minWidth_ * pointResolution) / Math.log(10));\r\n    var count, width;\r\n    while (true) {\r\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] *\r\n          Math.pow(10, Math.floor(i / 3));\r\n      width = Math.round(count / pointResolution);\r\n      if (isNaN(width)) {\r\n        this.element.style.display = 'none';\r\n        this.renderedVisible_ = false;\r\n        return;\r\n      } else if (width >= this.minWidth_) {\r\n        break;\r\n      }\r\n      ++i;\r\n    }\r\n\r\n    var html = count + ' ' + suffix;\r\n    if (this.renderedHTML_ != html) {\r\n      this.innerElement_.innerHTML = html;\r\n      this.renderedHTML_ = html;\r\n    }\r\n\r\n    if (this.renderedWidth_ != width) {\r\n      this.innerElement_.style.width = width + 'px';\r\n      this.renderedWidth_ = width;\r\n    }\r\n\r\n    if (!this.renderedVisible_) {\r\n      this.element.style.display = '';\r\n      this.renderedVisible_ = true;\r\n    }\r\n\r\n  };\n\n  return ScaleLine;\n}(Control));\r\n\r\n\r\n/**\r\n * Update the scale line element.\r\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\r\n * @this {ScaleLine}\r\n * @api\r\n */\r\nexport function render(mapEvent) {\r\n  var frameState = mapEvent.frameState;\r\n  if (!frameState) {\r\n    this.viewState_ = null;\r\n  } else {\r\n    this.viewState_ = frameState.viewState;\r\n  }\r\n  this.updateElement_();\r\n}\r\n\r\n\r\nexport default ScaleLine;\r\n\r\n//# sourceMappingURL=ScaleLine.js.map","/**\r\n * @module ol/control/ZoomSlider\r\n */\r\nimport ViewHint from '../ViewHint.js';\r\nimport Control from './Control.js';\r\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\r\nimport {easeOut} from '../easing.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\nimport {stopPropagation} from '../events/Event.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {clamp} from '../math.js';\r\nimport PointerEventType from '../pointer/EventType.js';\r\nimport PointerEventHandler from '../pointer/PointerEventHandler.js';\r\n\r\n\r\n/**\r\n * The enum for available directions.\r\n *\r\n * @enum {number}\r\n */\r\nvar Direction = {\r\n  VERTICAL: 0,\r\n  HORIZONTAL: 1\r\n};\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-zoomslider'] CSS class name.\r\n * @property {number} [duration=200] Animation duration in milliseconds.\r\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\r\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * A slider type of control for zooming.\r\n *\r\n * Example:\r\n *\r\n *     map.addControl(new ZoomSlider());\r\n *\r\n * @api\r\n */\r\nvar ZoomSlider = /*@__PURE__*/(function (Control) {\n  function ZoomSlider(opt_options) {\r\n\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    Control.call(this, {\r\n      element: document.createElement('div'),\r\n      render: options.render || render\r\n    });\r\n\r\n    /**\r\n      * @type {!Array.<import(\"../events.js\").EventsKey>}\r\n      * @private\r\n      */\r\n    this.dragListenerKeys_ = [];\r\n\r\n    /**\r\n     * Will hold the current resolution of the view.\r\n     *\r\n     * @type {number|undefined}\r\n     * @private\r\n     */\r\n    this.currentResolution_ = undefined;\r\n\r\n    /**\r\n     * The direction of the slider. Will be determined from actual display of the\r\n     * container and defaults to Direction.VERTICAL.\r\n     *\r\n     * @type {Direction}\r\n     * @private\r\n     */\r\n    this.direction_ = Direction.VERTICAL;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.dragging_;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.heightLimit_ = 0;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.widthLimit_ = 0;\r\n\r\n    /**\r\n     * @type {number|undefined}\r\n     * @private\r\n     */\r\n    this.previousX_;\r\n\r\n    /**\r\n     * @type {number|undefined}\r\n     * @private\r\n     */\r\n    this.previousY_;\r\n\r\n    /**\r\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\r\n     * is called.\r\n     * @type {import(\"../size.js\").Size}\r\n     * @private\r\n     */\r\n    this.thumbSize_ = null;\r\n\r\n    /**\r\n     * Whether the slider is initialized.\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.sliderInitialized_ = false;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\r\n\r\n    var className = options.className !== undefined ? options.className : 'ol-zoomslider';\r\n    var thumbElement = document.createElement('button');\r\n    thumbElement.setAttribute('type', 'button');\r\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\r\n    var containerElement = this.element;\r\n    containerElement.className = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\r\n    containerElement.appendChild(thumbElement);\r\n    /**\r\n     * @type {PointerEventHandler}\r\n     * @private\r\n     */\r\n    this.dragger_ = new PointerEventHandler(containerElement);\r\n\r\n    listen(this.dragger_, PointerEventType.POINTERDOWN,\r\n      this.handleDraggerStart_, this);\r\n    listen(this.dragger_, PointerEventType.POINTERMOVE,\r\n      this.handleDraggerDrag_, this);\r\n    listen(this.dragger_, PointerEventType.POINTERUP,\r\n      this.handleDraggerEnd_, this);\r\n\r\n    listen(containerElement, EventType.CLICK, this.handleContainerClick_, this);\r\n    listen(thumbElement, EventType.CLICK, stopPropagation);\r\n  }\n\n  if ( Control ) ZoomSlider.__proto__ = Control;\n  ZoomSlider.prototype = Object.create( Control && Control.prototype );\n  ZoomSlider.prototype.constructor = ZoomSlider;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  ZoomSlider.prototype.disposeInternal = function disposeInternal () {\r\n    this.dragger_.dispose();\r\n    Control.prototype.disposeInternal.call(this);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  ZoomSlider.prototype.setMap = function setMap (map) {\r\n    Control.prototype.setMap.call(this, map);\r\n    if (map) {\r\n      map.render();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Initializes the slider element. This will determine and set this controls\r\n   * direction_ and also constrain the dragging of the thumb to always be within\r\n   * the bounds of the container.\r\n   *\r\n   * @private\r\n   */\r\n  ZoomSlider.prototype.initSlider_ = function initSlider_ () {\r\n    var container = this.element;\r\n    var containerSize = {\r\n      width: container.offsetWidth, height: container.offsetHeight\r\n    };\r\n\r\n    var thumb = /** @type {HTMLElement} */ (container.firstElementChild);\r\n    var computedStyle = getComputedStyle(thumb);\r\n    var thumbWidth = thumb.offsetWidth +\r\n        parseFloat(computedStyle['marginRight']) +\r\n        parseFloat(computedStyle['marginLeft']);\r\n    var thumbHeight = thumb.offsetHeight +\r\n        parseFloat(computedStyle['marginTop']) +\r\n        parseFloat(computedStyle['marginBottom']);\r\n    this.thumbSize_ = [thumbWidth, thumbHeight];\r\n\r\n    if (containerSize.width > containerSize.height) {\r\n      this.direction_ = Direction.HORIZONTAL;\r\n      this.widthLimit_ = containerSize.width - thumbWidth;\r\n    } else {\r\n      this.direction_ = Direction.VERTICAL;\r\n      this.heightLimit_ = containerSize.height - thumbHeight;\r\n    }\r\n    this.sliderInitialized_ = true;\r\n  };\r\n\r\n  /**\r\n   * @param {MouseEvent} event The browser event to handle.\r\n   * @private\r\n   */\r\n  ZoomSlider.prototype.handleContainerClick_ = function handleContainerClick_ (event) {\r\n    var view = this.getMap().getView();\r\n\r\n    var relativePosition = this.getRelativePosition_(\r\n      event.offsetX - this.thumbSize_[0] / 2,\r\n      event.offsetY - this.thumbSize_[1] / 2);\r\n\r\n    var resolution = this.getResolutionForPosition_(relativePosition);\r\n\r\n    view.animate({\r\n      resolution: view.constrainResolution(resolution),\r\n      duration: this.duration_,\r\n      easing: easeOut\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Handle dragger start events.\r\n   * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\r\n   * @private\r\n   */\r\n  ZoomSlider.prototype.handleDraggerStart_ = function handleDraggerStart_ (event) {\r\n    if (!this.dragging_ && event.originalEvent.target === this.element.firstElementChild) {\r\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\r\n      this.previousX_ = event.clientX;\r\n      this.previousY_ = event.clientY;\r\n      this.dragging_ = true;\r\n\r\n      if (this.dragListenerKeys_.length === 0) {\r\n        var drag = this.handleDraggerDrag_;\r\n        var end = this.handleDraggerEnd_;\r\n        this.dragListenerKeys_.push(\r\n          listen(document, EventType.MOUSEMOVE, drag, this),\r\n          listen(document, PointerEventType.POINTERMOVE, drag, this),\r\n          listen(document, EventType.MOUSEUP, end, this),\r\n          listen(document, PointerEventType.POINTERUP, end, this)\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle dragger drag events.\r\n   *\r\n   * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\r\n   * @private\r\n   */\r\n  ZoomSlider.prototype.handleDraggerDrag_ = function handleDraggerDrag_ (event) {\r\n    if (this.dragging_) {\r\n      var element = /** @type {HTMLElement} */ (this.element.firstElementChild);\r\n      var deltaX = event.clientX - this.previousX_ + parseFloat(element.style.left);\r\n      var deltaY = event.clientY - this.previousY_ + parseFloat(element.style.top);\r\n      var relativePosition = this.getRelativePosition_(deltaX, deltaY);\r\n      this.currentResolution_ = this.getResolutionForPosition_(relativePosition);\r\n      this.getMap().getView().setResolution(this.currentResolution_);\r\n      this.setThumbPosition_(this.currentResolution_);\r\n      this.previousX_ = event.clientX;\r\n      this.previousY_ = event.clientY;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle dragger end events.\r\n   * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\r\n   * @private\r\n   */\r\n  ZoomSlider.prototype.handleDraggerEnd_ = function handleDraggerEnd_ (event) {\r\n    if (this.dragging_) {\r\n      var view = this.getMap().getView();\r\n      view.setHint(ViewHint.INTERACTING, -1);\r\n\r\n      view.animate({\r\n        resolution: view.constrainResolution(this.currentResolution_),\r\n        duration: this.duration_,\r\n        easing: easeOut\r\n      });\r\n\r\n      this.dragging_ = false;\r\n      this.previousX_ = undefined;\r\n      this.previousY_ = undefined;\r\n      this.dragListenerKeys_.forEach(unlistenByKey);\r\n      this.dragListenerKeys_.length = 0;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Positions the thumb inside its container according to the given resolution.\r\n   *\r\n   * @param {number} res The res.\r\n   * @private\r\n   */\r\n  ZoomSlider.prototype.setThumbPosition_ = function setThumbPosition_ (res) {\r\n    var position = this.getPositionForResolution_(res);\r\n    var thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\r\n\r\n    if (this.direction_ == Direction.HORIZONTAL) {\r\n      thumb.style.left = this.widthLimit_ * position + 'px';\r\n    } else {\r\n      thumb.style.top = this.heightLimit_ * position + 'px';\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Calculates the relative position of the thumb given x and y offsets.  The\r\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\r\n   * in pixel units within the dragger limits.\r\n   *\r\n   * @param {number} x Pixel position relative to the left of the slider.\r\n   * @param {number} y Pixel position relative to the top of the slider.\r\n   * @return {number} The relative position of the thumb.\r\n   * @private\r\n   */\r\n  ZoomSlider.prototype.getRelativePosition_ = function getRelativePosition_ (x, y) {\r\n    var amount;\r\n    if (this.direction_ === Direction.HORIZONTAL) {\r\n      amount = x / this.widthLimit_;\r\n    } else {\r\n      amount = y / this.heightLimit_;\r\n    }\r\n    return clamp(amount, 0, 1);\r\n  };\r\n\r\n  /**\r\n   * Calculates the corresponding resolution of the thumb given its relative\r\n   * position (where 0 is the minimum and 1 is the maximum).\r\n   *\r\n   * @param {number} position The relative position of the thumb.\r\n   * @return {number} The corresponding resolution.\r\n   * @private\r\n   */\r\n  ZoomSlider.prototype.getResolutionForPosition_ = function getResolutionForPosition_ (position) {\r\n    var fn = this.getMap().getView().getResolutionForValueFunction();\r\n    return fn(1 - position);\r\n  };\r\n\r\n  /**\r\n   * Determines the relative position of the slider for the given resolution.  A\r\n   * relative position of 0 corresponds to the minimum view resolution.  A\r\n   * relative position of 1 corresponds to the maximum view resolution.\r\n   *\r\n   * @param {number} res The resolution.\r\n   * @return {number} The relative position value (between 0 and 1).\r\n   * @private\r\n   */\r\n  ZoomSlider.prototype.getPositionForResolution_ = function getPositionForResolution_ (res) {\r\n    var fn = this.getMap().getView().getValueForResolutionFunction();\r\n    return 1 - fn(res);\r\n  };\n\n  return ZoomSlider;\n}(Control));\r\n\r\n\r\n/**\r\n * Update the zoomslider element.\r\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\r\n * @this {ZoomSlider}\r\n * @api\r\n */\r\nexport function render(mapEvent) {\r\n  if (!mapEvent.frameState) {\r\n    return;\r\n  }\r\n  if (!this.sliderInitialized_) {\r\n    this.initSlider_();\r\n  }\r\n  var res = mapEvent.frameState.viewState.resolution;\r\n  if (res !== this.currentResolution_) {\r\n    this.currentResolution_ = res;\r\n    this.setThumbPosition_(res);\r\n  }\r\n}\r\n\r\n\r\nexport default ZoomSlider;\r\n\r\n//# sourceMappingURL=ZoomSlider.js.map","/**\r\n * @module ol/control/ZoomToExtent\r\n */\r\nimport {listen} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport Control from './Control.js';\r\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-zoom-extent'] Class name.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the control\r\n * to be rendered outside of the map's viewport.\r\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\r\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\r\n * extent of the view projection is used.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * A button control which, when pressed, changes the map view to a specific\r\n * extent. To style this control use the css selector `.ol-zoom-extent`.\r\n *\r\n * @api\r\n */\r\nvar ZoomToExtent = /*@__PURE__*/(function (Control) {\n  function ZoomToExtent(opt_options) {\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    Control.call(this, {\r\n      element: document.createElement('div'),\r\n      target: options.target\r\n    });\r\n\r\n    /**\r\n     * @type {import(\"../extent.js\").Extent}\r\n     * @protected\r\n     */\r\n    this.extent = options.extent ? options.extent : null;\r\n\r\n    var className = options.className !== undefined ? options.className : 'ol-zoom-extent';\r\n\r\n    var label = options.label !== undefined ? options.label : 'E';\r\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\r\n    var button = document.createElement('button');\r\n    button.setAttribute('type', 'button');\r\n    button.title = tipLabel;\r\n    button.appendChild(\r\n      typeof label === 'string' ? document.createTextNode(label) : label\r\n    );\r\n\r\n    listen(button, EventType.CLICK, this.handleClick_, this);\r\n\r\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\r\n    var element = this.element;\r\n    element.className = cssClasses;\r\n    element.appendChild(button);\r\n  }\n\n  if ( Control ) ZoomToExtent.__proto__ = Control;\n  ZoomToExtent.prototype = Object.create( Control && Control.prototype );\n  ZoomToExtent.prototype.constructor = ZoomToExtent;\r\n\r\n  /**\r\n   * @param {MouseEvent} event The event to handle\r\n   * @private\r\n   */\r\n  ZoomToExtent.prototype.handleClick_ = function handleClick_ (event) {\r\n    event.preventDefault();\r\n    this.handleZoomToExtent();\r\n  };\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  ZoomToExtent.prototype.handleZoomToExtent = function handleZoomToExtent () {\r\n    var map = this.getMap();\r\n    var view = map.getView();\r\n    var extent = !this.extent ? view.getProjection().getExtent() : this.extent;\r\n    view.fit(extent);\r\n  };\n\n  return ZoomToExtent;\n}(Control));\r\n\r\nexport default ZoomToExtent;\r\n\r\n//# sourceMappingURL=ZoomToExtent.js.map","/**\r\n * @module ol/Feature\r\n */\r\nimport {assert} from './asserts.js';\r\nimport {listen, unlisten, unlistenByKey} from './events.js';\r\nimport EventType from './events/EventType.js';\r\nimport BaseObject, {getChangeEventType} from './Object.js';\r\n\r\n/**\r\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\r\n */\r\n\r\n/**\r\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * A vector object for geographic features with a geometry and other\r\n * attribute properties, similar to the features in vector file formats like\r\n * GeoJSON.\r\n *\r\n * Features can be styled individually with `setStyle`; otherwise they use the\r\n * style of their vector layer.\r\n *\r\n * Note that attribute properties are set as {@link module:ol/Object} properties on\r\n * the feature object, so they are observable, and have get/set accessors.\r\n *\r\n * Typically, a feature has a single geometry property. You can set the\r\n * geometry using the `setGeometry` method and get it with `getGeometry`.\r\n * It is possible to store more than one geometry on a feature using attribute\r\n * properties. By default, the geometry used for rendering is identified by\r\n * the property name `geometry`. If you want to use another geometry property\r\n * for rendering, use the `setGeometryName` method to change the attribute\r\n * property associated with the geometry for the feature.  For example:\r\n *\r\n * ```js\r\n *\r\n * import Feature from 'ol/Feature';\r\n * import Polygon from 'ol/geom/Polygon';\r\n * import Point from 'ol/geom/Point';\r\n *\r\n * var feature = new Feature({\r\n *   geometry: new Polygon(polyCoords),\r\n *   labelPoint: new Point(labelCoords),\r\n *   name: 'My Polygon'\r\n * });\r\n *\r\n * // get the polygon geometry\r\n * var poly = feature.getGeometry();\r\n *\r\n * // Render the feature as a point using the coordinates from labelPoint\r\n * feature.setGeometryName('labelPoint');\r\n *\r\n * // get the point geometry\r\n * var point = feature.getGeometry();\r\n * ```\r\n *\r\n * @api\r\n */\r\nvar Feature = /*@__PURE__*/(function (BaseObject) {\n  function Feature(opt_geometryOrProperties) {\r\n\r\n    BaseObject.call(this);\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|string|undefined}\r\n     */\r\n    this.id_ = undefined;\r\n\r\n    /**\r\n     * @type {string}\r\n     * @private\r\n     */\r\n    this.geometryName_ = 'geometry';\r\n\r\n    /**\r\n     * User provided style.\r\n     * @private\r\n     * @type {import(\"./style/Style.js\").StyleLike}\r\n     */\r\n    this.style_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\r\n     */\r\n    this.styleFunction_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"./events.js\").EventsKey}\r\n     */\r\n    this.geometryChangeKey_ = null;\r\n\r\n    listen(\r\n      this, getChangeEventType(this.geometryName_),\r\n      this.handleGeometryChanged_, this);\r\n\r\n    if (opt_geometryOrProperties) {\r\n      if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\r\n        var geometry = /** @type {import(\"./geom/Geometry.js\").default} */ (opt_geometryOrProperties);\r\n        this.setGeometry(geometry);\r\n      } else {\r\n        /** @type {Object<string, *>} */\r\n        var properties = opt_geometryOrProperties;\r\n        this.setProperties(properties);\r\n      }\r\n    }\r\n  }\n\n  if ( BaseObject ) Feature.__proto__ = BaseObject;\n  Feature.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Feature.prototype.constructor = Feature;\r\n\r\n  /**\r\n   * Clone this feature. If the original feature has a geometry it\r\n   * is also cloned. The feature id is not set in the clone.\r\n   * @return {Feature} The clone.\r\n   * @api\r\n   */\r\n  Feature.prototype.clone = function clone () {\r\n    var clone = new Feature(this.getProperties());\r\n    clone.setGeometryName(this.getGeometryName());\r\n    var geometry = this.getGeometry();\r\n    if (geometry) {\r\n      clone.setGeometry(geometry.clone());\r\n    }\r\n    var style = this.getStyle();\r\n    if (style) {\r\n      clone.setStyle(style);\r\n    }\r\n    return clone;\r\n  };\r\n\r\n  /**\r\n   * Get the feature's default geometry.  A feature may have any number of named\r\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\r\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\r\n   * @return {import(\"./geom/Geometry.js\").default|undefined} The default geometry for the feature.\r\n   * @api\r\n   * @observable\r\n   */\r\n  Feature.prototype.getGeometry = function getGeometry () {\r\n    return (\r\n      /** @type {import(\"./geom/Geometry.js\").default|undefined} */ (this.get(this.geometryName_))\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Get the feature identifier.  This is a stable identifier for the feature and\r\n   * is either set when reading data from a remote source or set explicitly by\r\n   * calling {@link module:ol/Feature~Feature#setId}.\r\n   * @return {number|string|undefined} Id.\r\n   * @api\r\n   */\r\n  Feature.prototype.getId = function getId () {\r\n    return this.id_;\r\n  };\r\n\r\n  /**\r\n   * Get the name of the feature's default geometry.  By default, the default\r\n   * geometry is named `geometry`.\r\n   * @return {string} Get the property name associated with the default geometry\r\n   *     for this feature.\r\n   * @api\r\n   */\r\n  Feature.prototype.getGeometryName = function getGeometryName () {\r\n    return this.geometryName_;\r\n  };\r\n\r\n  /**\r\n   * Get the feature's style. Will return what was provided to the\r\n   * {@link module:ol/Feature~Feature#setStyle} method.\r\n   * @return {import(\"./style/Style.js\").StyleLike} The feature style.\r\n   * @api\r\n   */\r\n  Feature.prototype.getStyle = function getStyle () {\r\n    return this.style_;\r\n  };\r\n\r\n  /**\r\n   * Get the feature's style function.\r\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\r\n   * representing the current style of this feature.\r\n   * @api\r\n   */\r\n  Feature.prototype.getStyleFunction = function getStyleFunction () {\r\n    return this.styleFunction_;\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  Feature.prototype.handleGeometryChange_ = function handleGeometryChange_ () {\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  Feature.prototype.handleGeometryChanged_ = function handleGeometryChanged_ () {\r\n    if (this.geometryChangeKey_) {\r\n      unlistenByKey(this.geometryChangeKey_);\r\n      this.geometryChangeKey_ = null;\r\n    }\r\n    var geometry = this.getGeometry();\r\n    if (geometry) {\r\n      this.geometryChangeKey_ = listen(geometry,\r\n        EventType.CHANGE, this.handleGeometryChange_, this);\r\n    }\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * Set the default geometry for the feature.  This will update the property\r\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\r\n   * @param {import(\"./geom/Geometry.js\").default|undefined} geometry The new geometry.\r\n   * @api\r\n   * @observable\r\n   */\r\n  Feature.prototype.setGeometry = function setGeometry (geometry) {\r\n    this.set(this.geometryName_, geometry);\r\n  };\r\n\r\n  /**\r\n   * Set the style for the feature.  This can be a single style object, an array\r\n   * of styles, or a function that takes a resolution and returns an array of\r\n   * styles. If it is `null` the feature has no style (a `null` style).\r\n   * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\r\n   * @api\r\n   * @fires module:ol/events/Event~Event#event:change\r\n   */\r\n  Feature.prototype.setStyle = function setStyle (style) {\r\n    this.style_ = style;\r\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * Set the feature id.  The feature id is considered stable and may be used when\r\n   * requesting features or comparing identifiers returned from a remote source.\r\n   * The feature id can be used with the\r\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\r\n   * @param {number|string|undefined} id The feature id.\r\n   * @api\r\n   * @fires module:ol/events/Event~Event#event:change\r\n   */\r\n  Feature.prototype.setId = function setId (id) {\r\n    this.id_ = id;\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * Set the property name to be used when getting the feature's default geometry.\r\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\r\n   * this name will be returned.\r\n   * @param {string} name The property name of the default geometry.\r\n   * @api\r\n   */\r\n  Feature.prototype.setGeometryName = function setGeometryName (name) {\r\n    unlisten(\r\n      this, getChangeEventType(this.geometryName_),\r\n      this.handleGeometryChanged_, this);\r\n    this.geometryName_ = name;\r\n    listen(\r\n      this, getChangeEventType(this.geometryName_),\r\n      this.handleGeometryChanged_, this);\r\n    this.handleGeometryChanged_();\r\n  };\n\n  return Feature;\n}(BaseObject));\r\n\r\n\r\n/**\r\n * Convert the provided object into a feature style function.  Functions passed\r\n * through unchanged.  Arrays of Style or single style objects wrapped\r\n * in a new feature style function.\r\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\r\n *     A feature style function, a single style, or an array of styles.\r\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\r\n */\r\nexport function createStyleFunction(obj) {\r\n  if (typeof obj === 'function') {\r\n    return obj;\r\n  } else {\r\n    /**\r\n     * @type {Array<import(\"./style/Style.js\").default>}\r\n     */\r\n    var styles;\r\n    if (Array.isArray(obj)) {\r\n      styles = obj;\r\n    } else {\r\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\r\n        41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\r\n      var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\r\n      styles = [style];\r\n    }\r\n    return function() {\r\n      return styles;\r\n    };\r\n  }\r\n}\r\nexport default Feature;\r\n\r\n//# sourceMappingURL=Feature.js.map","/**\r\n * @module ol/format/FormatType\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  ARRAY_BUFFER: 'arraybuffer',\r\n  JSON: 'json',\r\n  TEXT: 'text',\r\n  XML: 'xml'\r\n};\r\n\r\n//# sourceMappingURL=FormatType.js.map","/**\r\n * @module ol/featureloader\r\n */\r\nimport {VOID} from './functions.js';\r\nimport FormatType from './format/FormatType.js';\r\n\r\n/**\r\n * {@link module:ol/source/Vector} sources use a function of this type to\r\n * load features.\r\n *\r\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\r\n * a `{number}` representing the resolution (map units per pixel) and an\r\n * {@link module:ol/proj/Projection} for the projection  as\r\n * arguments. `this` within the function is bound to the\r\n * {@link module:ol/source/Vector} it's called from.\r\n *\r\n * The function is responsible for loading the features and adding them to the\r\n * source.\r\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\r\n *                    import(\"./proj/Projection.js\").default)} FeatureLoader\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * {@link module:ol/source/Vector} sources use a function of this type to\r\n * get the url to load features from.\r\n *\r\n * This function takes an {@link module:ol/extent~Extent} representing the area\r\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\r\n * and an {@link module:ol/proj/Projection} for the projection  as\r\n * arguments and returns a `{string}` representing the URL.\r\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * @param {string|FeatureUrlFunction} url Feature URL service.\r\n * @param {import(\"./format/Feature.js\").default} format Feature format.\r\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent)|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>)} success\r\n *     Function called with the loaded features and optionally with the data\r\n *     projection. Called with the vector tile or source as `this`.\r\n * @param {function(this:import(\"./VectorTile.js\").default)|function(this:import(\"./source/Vector\").default)} failure\r\n *     Function called when loading failed. Called with the vector tile or\r\n *     source as `this`.\r\n * @return {FeatureLoader} The feature loader.\r\n * @api\r\n */\r\nexport function loadFeaturesXhr(url, format, success, failure) {\r\n  return (\r\n    /**\r\n     * @param {import(\"./extent.js\").Extent} extent Extent.\r\n     * @param {number} resolution Resolution.\r\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\r\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\r\n     */\r\n    function(extent, resolution, projection) {\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open('GET',\r\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\r\n        true);\r\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\r\n        xhr.responseType = 'arraybuffer';\r\n      }\r\n      /**\r\n       * @param {Event} event Event.\r\n       * @private\r\n       */\r\n      xhr.onload = function(event) {\r\n        // status will be 0 for file:// urls\r\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\r\n          var type = format.getType();\r\n          /** @type {Document|Node|Object|string|undefined} */\r\n          var source;\r\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\r\n            source = xhr.responseText;\r\n          } else if (type == FormatType.XML) {\r\n            source = xhr.responseXML;\r\n            if (!source) {\r\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\r\n            }\r\n          } else if (type == FormatType.ARRAY_BUFFER) {\r\n            source = /** @type {ArrayBuffer} */ (xhr.response);\r\n          }\r\n          if (source) {\r\n            success.call(this, format.readFeatures(source,\r\n              {featureProjection: projection}),\r\n            format.readProjection(source), format.getLastExtent());\r\n          } else {\r\n            failure.call(this);\r\n          }\r\n        } else {\r\n          failure.call(this);\r\n        }\r\n      }.bind(this);\r\n      /**\r\n       * @private\r\n       */\r\n      xhr.onerror = function() {\r\n        failure.call(this);\r\n      }.bind(this);\r\n      xhr.send();\r\n    }\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * Create an XHR feature loader for a `url` and `format`. The feature loader\r\n * loads features (with XHR), parses the features, and adds them to the\r\n * vector source.\r\n * @param {string|FeatureUrlFunction} url Feature URL service.\r\n * @param {import(\"./format/Feature.js\").default} format Feature format.\r\n * @return {FeatureLoader} The feature loader.\r\n * @api\r\n */\r\nexport function xhr(url, format) {\r\n  return loadFeaturesXhr(url, format,\r\n    /**\r\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\r\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\r\n     * projection.\r\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\r\n     */\r\n    function(features, dataProjection) {\r\n      var sourceOrTile = /** @type {?} */ (this);\r\n      if (typeof sourceOrTile.addFeatures === 'function') {\r\n        /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\r\n      }\r\n    }, /* FIXME handle error */ VOID);\r\n}\r\n\r\n//# sourceMappingURL=featureloader.js.map","/**\r\n * @module ol/format/Feature\r\n */\r\nimport {assign} from '../obj.js';\r\nimport {abstract} from '../util.js';\r\nimport {get as getProjection, equivalent as equivalentProjection, transformExtent} from '../proj.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} ReadOptions\r\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\r\n * If not provided, the projection will be derived from the data (where possible) or\r\n * the `dataProjection` of the format is assigned (where set). If the projection\r\n * can not be derived from the data and if no `dataProjection` is set for a format,\r\n * the features will not be reprojected.\r\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent of the tile being read. This is only used and\r\n * required for {@link module:ol/format/MVT}.\r\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\r\n * created by the format reader. If not provided, features will be returned in the\r\n * `dataProjection`.\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} WriteOptions\r\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\r\n * If not provided, the `dataProjection` of the format is assigned (where set).\r\n * If no `dataProjection` is set for a format, the features will be returned\r\n * in the `featureProjection`.\r\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\r\n * that will be serialized by the format writer. If not provided, geometries are assumed\r\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\r\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\r\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\r\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\r\n * as they are provided at construction.  If `true`, the right-hand rule will\r\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\r\n * exterior and counter-clockwise for interior rings).  Note that not all\r\n * formats support this.  The GeoJSON format does use this property when writing\r\n * geometries.\r\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\r\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\r\n * coordinates with a large number of decimal places, not generally wanted on output.\r\n * Set a number here to round coordinates. Can also be used to ensure that\r\n * coordinates read in can be written back out with the same number of decimals.\r\n * Default is no rounding.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Base class for feature formats.\r\n * {FeatureFormat} subclasses provide the ability to decode and encode\r\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\r\n * file formats.  See the documentation for each format for more details.\r\n *\r\n * @abstract\r\n * @api\r\n */\r\nvar FeatureFormat = function FeatureFormat() {\r\n\r\n  /**\r\n   * @protected\r\n   * @type {import(\"../proj/Projection.js\").default}\r\n   */\r\n  this.dataProjection = null;\r\n\r\n  /**\r\n   * @protected\r\n   * @type {import(\"../proj/Projection.js\").default}\r\n   */\r\n  this.defaultFeatureProjection = null;\r\n\r\n};\r\n\r\n/**\r\n * Adds the data projection to the read options.\r\n * @param {Document|Node|Object|string} source Source.\r\n * @param {ReadOptions=} opt_options Options.\r\n * @return {ReadOptions|undefined} Options.\r\n * @protected\r\n */\r\nFeatureFormat.prototype.getReadOptions = function getReadOptions (source, opt_options) {\r\n  var options;\r\n  if (opt_options) {\r\n    options = {\r\n      dataProjection: opt_options.dataProjection ?\r\n        opt_options.dataProjection : this.readProjection(source),\r\n      featureProjection: opt_options.featureProjection\r\n    };\r\n  }\r\n  return this.adaptOptions(options);\r\n};\r\n\r\n/**\r\n * Sets the `dataProjection` on the options, if no `dataProjection`\r\n * is set.\r\n * @param {WriteOptions|ReadOptions|undefined} options\r\n *   Options.\r\n * @protected\r\n * @return {WriteOptions|ReadOptions|undefined}\r\n *   Updated options.\r\n */\r\nFeatureFormat.prototype.adaptOptions = function adaptOptions (options) {\r\n  return assign({\r\n    dataProjection: this.dataProjection,\r\n    featureProjection: this.defaultFeatureProjection\r\n  }, options);\r\n};\r\n\r\n/**\r\n * Get the extent from the source of the last {@link readFeatures} call.\r\n * @return {import(\"../extent.js\").Extent} Tile extent.\r\n */\r\nFeatureFormat.prototype.getLastExtent = function getLastExtent () {\r\n  return null;\r\n};\r\n\r\n/**\r\n * @abstract\r\n * @return {import(\"./FormatType.js\").default} Format.\r\n */\r\nFeatureFormat.prototype.getType = function getType () {\r\n  return abstract();\r\n};\r\n\r\n/**\r\n * Read a single feature from a source.\r\n *\r\n * @abstract\r\n * @param {Document|Node|Object|string} source Source.\r\n * @param {ReadOptions=} opt_options Read options.\r\n * @return {import(\"../Feature.js\").FeatureLike} Feature.\r\n */\r\nFeatureFormat.prototype.readFeature = function readFeature (source, opt_options) {\r\n  return abstract();\r\n};\r\n\r\n/**\r\n * Read all features from a source.\r\n *\r\n * @abstract\r\n * @param {Document|Node|ArrayBuffer|Object|string} source Source.\r\n * @param {ReadOptions=} opt_options Read options.\r\n * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\r\n */\r\nFeatureFormat.prototype.readFeatures = function readFeatures (source, opt_options) {\r\n  return abstract();\r\n};\r\n\r\n/**\r\n * Read a single geometry from a source.\r\n *\r\n * @abstract\r\n * @param {Document|Node|Object|string} source Source.\r\n * @param {ReadOptions=} opt_options Read options.\r\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\r\n */\r\nFeatureFormat.prototype.readGeometry = function readGeometry (source, opt_options) {\r\n  return abstract();\r\n};\r\n\r\n/**\r\n * Read the projection from a source.\r\n *\r\n * @abstract\r\n * @param {Document|Node|Object|string} source Source.\r\n * @return {import(\"../proj/Projection.js\").default} Projection.\r\n */\r\nFeatureFormat.prototype.readProjection = function readProjection (source) {\r\n  return abstract();\r\n};\r\n\r\n/**\r\n * Encode a feature in this format.\r\n *\r\n * @abstract\r\n * @param {import(\"../Feature.js\").default} feature Feature.\r\n * @param {WriteOptions=} opt_options Write options.\r\n * @return {string} Result.\r\n */\r\nFeatureFormat.prototype.writeFeature = function writeFeature (feature, opt_options) {\r\n  return abstract();\r\n};\r\n\r\n/**\r\n * Encode an array of features in this format.\r\n *\r\n * @abstract\r\n * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n * @param {WriteOptions=} opt_options Write options.\r\n * @return {string} Result.\r\n */\r\nFeatureFormat.prototype.writeFeatures = function writeFeatures (features, opt_options) {\r\n  return abstract();\r\n};\r\n\r\n/**\r\n * Write a single geometry in this format.\r\n *\r\n * @abstract\r\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n * @param {WriteOptions=} opt_options Write options.\r\n * @return {string} Result.\r\n */\r\nFeatureFormat.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\r\n  return abstract();\r\n};\r\n\r\nexport default FeatureFormat;\r\n\r\n/**\r\n * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\r\n * @param {boolean} write Set to true for writing, false for reading.\r\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\r\n * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} Transformed geometry.\r\n */\r\nexport function transformWithOptions(geometry, write, opt_options) {\r\n  var featureProjection = opt_options ?\r\n    getProjection(opt_options.featureProjection) : null;\r\n  var dataProjection = opt_options ?\r\n    getProjection(opt_options.dataProjection) : null;\r\n  /**\r\n   * @type {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent}\r\n   */\r\n  var transformed;\r\n  if (featureProjection && dataProjection &&\r\n      !equivalentProjection(featureProjection, dataProjection)) {\r\n    if (Array.isArray(geometry)) {\r\n      // FIXME this is necessary because GML treats extents\r\n      // as geometries\r\n      transformed = transformExtent(\r\n        geometry,\r\n        dataProjection,\r\n        featureProjection);\r\n    } else {\r\n      transformed = (write ? /** @type {import(\"../geom/Geometry\").default} */ (geometry).clone() : geometry).transform(\r\n        write ? featureProjection : dataProjection,\r\n        write ? dataProjection : featureProjection);\r\n    }\r\n  } else {\r\n    transformed = geometry;\r\n  }\r\n  if (write && opt_options && /** @type {WriteOptions} */ (opt_options).decimals !== undefined &&\r\n    !Array.isArray(transformed)) {\r\n    var power = Math.pow(10, /** @type {WriteOptions} */ (opt_options).decimals);\r\n    // if decimals option on write, round each coordinate appropriately\r\n    /**\r\n     * @param {Array<number>} coordinates Coordinates.\r\n     * @return {Array<number>} Transformed coordinates.\r\n     */\r\n    var transform = function(coordinates) {\r\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\r\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\r\n      }\r\n      return coordinates;\r\n    };\r\n    if (transformed === geometry) {\r\n      transformed = /** @type {import(\"../geom/Geometry\").default} */ (geometry).clone();\r\n    }\r\n    transformed.applyTransform(transform);\r\n  }\r\n  return transformed;\r\n}\r\n\r\n//# sourceMappingURL=Feature.js.map","/**\r\n * @module ol/format/JSONFeature\r\n */\r\nimport {abstract} from '../util.js';\r\nimport FeatureFormat from './Feature.js';\r\nimport FormatType from './FormatType.js';\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Base class for JSON feature formats.\r\n *\r\n * @abstract\r\n */\r\nvar JSONFeature = /*@__PURE__*/(function (FeatureFormat) {\n  function JSONFeature() {\r\n    FeatureFormat.call(this);\r\n  }\n\n  if ( FeatureFormat ) JSONFeature.__proto__ = FeatureFormat;\n  JSONFeature.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  JSONFeature.prototype.constructor = JSONFeature;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  JSONFeature.prototype.getType = function getType () {\r\n    return FormatType.JSON;\r\n  };\r\n\r\n  /**\r\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\r\n   * read a feature collection.\r\n   *\r\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n   * @return {import(\"../Feature.js\").default} Feature.\r\n   * @api\r\n   */\r\n  JSONFeature.prototype.readFeature = function readFeature (source, opt_options) {\r\n    return this.readFeatureFromObject(\r\n      getObject(source), this.getReadOptions(source, opt_options));\r\n  };\r\n\r\n  /**\r\n   * Read all features.  Works with both a single feature and a feature\r\n   * collection.\r\n   *\r\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n   * @return {Array<import(\"../Feature.js\").default>} Features.\r\n   * @api\r\n   */\r\n  JSONFeature.prototype.readFeatures = function readFeatures (source, opt_options) {\r\n    return this.readFeaturesFromObject(\r\n      getObject(source), this.getReadOptions(source, opt_options));\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {Object} object Object.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n   * @protected\r\n   * @return {import(\"../Feature.js\").default} Feature.\r\n   */\r\n  JSONFeature.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\r\n    return abstract();\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {Object} object Object.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n   * @protected\r\n   * @return {Array<import(\"../Feature.js\").default>} Features.\r\n   */\r\n  JSONFeature.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\r\n    return abstract();\r\n  };\r\n\r\n  /**\r\n   * Read a geometry.\r\n   *\r\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\r\n   * @api\r\n   */\r\n  JSONFeature.prototype.readGeometry = function readGeometry (source, opt_options) {\r\n    return this.readGeometryFromObject(\r\n      getObject(source), this.getReadOptions(source, opt_options));\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {Object} object Object.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n   * @protected\r\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\r\n   */\r\n  JSONFeature.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\r\n    return abstract();\r\n  };\r\n\r\n  /**\r\n   * Read the projection.\r\n   *\r\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\r\n   * @return {import(\"../proj/Projection.js\").default} Projection.\r\n   * @api\r\n   */\r\n  JSONFeature.prototype.readProjection = function readProjection (source) {\r\n    return this.readProjectionFromObject(getObject(source));\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {Object} object Object.\r\n   * @protected\r\n   * @return {import(\"../proj/Projection.js\").default} Projection.\r\n   */\r\n  JSONFeature.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\r\n    return abstract();\r\n  };\r\n\r\n  /**\r\n   * Encode a feature as string.\r\n   *\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n   * @return {string} Encoded feature.\r\n   * @api\r\n   */\r\n  JSONFeature.prototype.writeFeature = function writeFeature (feature, opt_options) {\r\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n   * @return {Object} Object.\r\n   */\r\n  JSONFeature.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\r\n    return abstract();\r\n  };\r\n\r\n  /**\r\n   * Encode an array of features as string.\r\n   *\r\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n   * @return {string} Encoded features.\r\n   * @api\r\n   */\r\n  JSONFeature.prototype.writeFeatures = function writeFeatures (features, opt_options) {\r\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n   * @return {Object} Object.\r\n   */\r\n  JSONFeature.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\r\n    return abstract();\r\n  };\r\n\r\n  /**\r\n   * Encode a geometry as string.\r\n   *\r\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n   * @return {string} Encoded geometry.\r\n   * @api\r\n   */\r\n  JSONFeature.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\r\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n   * @return {Object} Object.\r\n   */\r\n  JSONFeature.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\r\n    return abstract();\r\n  };\n\n  return JSONFeature;\n}(FeatureFormat));\r\n\r\n\r\n/**\r\n * @param {Document|Node|Object|string} source Source.\r\n * @return {Object} Object.\r\n */\r\nfunction getObject(source) {\r\n  if (typeof source === 'string') {\r\n    var object = JSON.parse(source);\r\n    return object ? /** @type {Object} */ (object) : null;\r\n  } else if (source !== null) {\r\n    return source;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\n\r\nexport default JSONFeature;\r\n\r\n//# sourceMappingURL=JSONFeature.js.map","/**\r\n * @module ol/geom/flat/interpolate\r\n */\r\nimport {binarySearch} from '../../array.js';\r\nimport {lerp} from '../../math.js';\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} fraction Fraction.\r\n * @param {Array<number>=} opt_dest Destination.\r\n * @return {Array<number>} Destination.\r\n */\r\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\r\n  var pointX = NaN;\r\n  var pointY = NaN;\r\n  var n = (end - offset) / stride;\r\n  if (n === 1) {\r\n    pointX = flatCoordinates[offset];\r\n    pointY = flatCoordinates[offset + 1];\r\n  } else if (n == 2) {\r\n    pointX = (1 - fraction) * flatCoordinates[offset] +\r\n        fraction * flatCoordinates[offset + stride];\r\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\r\n        fraction * flatCoordinates[offset + stride + 1];\r\n  } else if (n !== 0) {\r\n    var x1 = flatCoordinates[offset];\r\n    var y1 = flatCoordinates[offset + 1];\r\n    var length = 0;\r\n    var cumulativeLengths = [0];\r\n    for (var i = offset + stride; i < end; i += stride) {\r\n      var x2 = flatCoordinates[i];\r\n      var y2 = flatCoordinates[i + 1];\r\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\r\n      cumulativeLengths.push(length);\r\n      x1 = x2;\r\n      y1 = y2;\r\n    }\r\n    var target = fraction * length;\r\n    var index = binarySearch(cumulativeLengths, target);\r\n    if (index < 0) {\r\n      var t = (target - cumulativeLengths[-index - 2]) /\r\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\r\n      var o = offset + (-index - 2) * stride;\r\n      pointX = lerp(\r\n        flatCoordinates[o], flatCoordinates[o + stride], t);\r\n      pointY = lerp(\r\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\r\n    } else {\r\n      pointX = flatCoordinates[offset + index * stride];\r\n      pointY = flatCoordinates[offset + index * stride + 1];\r\n    }\r\n  }\r\n  if (opt_dest) {\r\n    opt_dest[0] = pointX;\r\n    opt_dest[1] = pointY;\r\n    return opt_dest;\r\n  } else {\r\n    return [pointX, pointY];\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} m M.\r\n * @param {boolean} extrapolate Extrapolate.\r\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\r\n */\r\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\r\n  if (end == offset) {\r\n    return null;\r\n  }\r\n  var coordinate;\r\n  if (m < flatCoordinates[offset + stride - 1]) {\r\n    if (extrapolate) {\r\n      coordinate = flatCoordinates.slice(offset, offset + stride);\r\n      coordinate[stride - 1] = m;\r\n      return coordinate;\r\n    } else {\r\n      return null;\r\n    }\r\n  } else if (flatCoordinates[end - 1] < m) {\r\n    if (extrapolate) {\r\n      coordinate = flatCoordinates.slice(end - stride, end);\r\n      coordinate[stride - 1] = m;\r\n      return coordinate;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  // FIXME use O(1) search\r\n  if (m == flatCoordinates[offset + stride - 1]) {\r\n    return flatCoordinates.slice(offset, offset + stride);\r\n  }\r\n  var lo = offset / stride;\r\n  var hi = end / stride;\r\n  while (lo < hi) {\r\n    var mid = (lo + hi) >> 1;\r\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\r\n      hi = mid;\r\n    } else {\r\n      lo = mid + 1;\r\n    }\r\n  }\r\n  var m0 = flatCoordinates[lo * stride - 1];\r\n  if (m == m0) {\r\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\r\n  }\r\n  var m1 = flatCoordinates[(lo + 1) * stride - 1];\r\n  var t = (m - m0) / (m1 - m0);\r\n  coordinate = [];\r\n  for (var i = 0; i < stride - 1; ++i) {\r\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\r\n      flatCoordinates[lo * stride + i], t));\r\n  }\r\n  coordinate.push(m);\r\n  return coordinate;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {number} m M.\r\n * @param {boolean} extrapolate Extrapolate.\r\n * @param {boolean} interpolate Interpolate.\r\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\r\n */\r\nexport function lineStringsCoordinateAtM(\r\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\r\n  if (interpolate) {\r\n    return lineStringCoordinateAtM(\r\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\r\n  }\r\n  var coordinate;\r\n  if (m < flatCoordinates[stride - 1]) {\r\n    if (extrapolate) {\r\n      coordinate = flatCoordinates.slice(0, stride);\r\n      coordinate[stride - 1] = m;\r\n      return coordinate;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\r\n    if (extrapolate) {\r\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\r\n      coordinate[stride - 1] = m;\r\n      return coordinate;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n    var end = ends[i];\r\n    if (offset == end) {\r\n      continue;\r\n    }\r\n    if (m < flatCoordinates[offset + stride - 1]) {\r\n      return null;\r\n    } else if (m <= flatCoordinates[end - 1]) {\r\n      return lineStringCoordinateAtM(\r\n        flatCoordinates, offset, end, stride, m, false);\r\n    }\r\n    offset = end;\r\n  }\r\n  return null;\r\n}\r\n\r\n//# sourceMappingURL=interpolate.js.map","/**\r\n * @module ol/geom/LineString\r\n */\r\nimport {extend} from '../array.js';\r\nimport {closestSquaredDistanceXY} from '../extent.js';\r\nimport GeometryLayout from './GeometryLayout.js';\r\nimport GeometryType from './GeometryType.js';\r\nimport SimpleGeometry from './SimpleGeometry.js';\r\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\r\nimport {deflateCoordinates} from './flat/deflate.js';\r\nimport {inflateCoordinates} from './flat/inflate.js';\r\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\r\nimport {intersectsLineString} from './flat/intersectsextent.js';\r\nimport {lineStringLength} from './flat/length.js';\r\nimport {forEach as forEachSegment} from './flat/segments.js';\r\nimport {douglasPeucker} from './flat/simplify.js';\r\n\r\n/**\r\n * @classdesc\r\n * Linestring geometry.\r\n *\r\n * @api\r\n */\r\nvar LineString = /*@__PURE__*/(function (SimpleGeometry) {\n  function LineString(coordinates, opt_layout) {\r\n\r\n    SimpleGeometry.call(this);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     */\r\n    this.flatMidpoint_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.flatMidpointRevision_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDelta_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDeltaRevision_ = -1;\r\n\r\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\r\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\r\n    } else {\r\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\r\n    }\r\n\r\n  }\n\n  if ( SimpleGeometry ) LineString.__proto__ = SimpleGeometry;\n  LineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LineString.prototype.constructor = LineString;\r\n\r\n  /**\r\n   * Append the passed coordinate to the coordinates of the linestring.\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @api\r\n   */\r\n  LineString.prototype.appendCoordinate = function appendCoordinate (coordinate) {\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = coordinate.slice();\r\n    } else {\r\n      extend(this.flatCoordinates, coordinate);\r\n    }\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * Make a complete copy of the geometry.\r\n   * @return {!LineString} Clone.\r\n   * @override\r\n   * @api\r\n   */\r\n  LineString.prototype.clone = function clone () {\r\n    return new LineString(this.flatCoordinates.slice(), this.layout);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  LineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\r\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\r\n      return minSquaredDistance;\r\n    }\r\n    if (this.maxDeltaRevision_ != this.getRevision()) {\r\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\r\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\r\n      this.maxDeltaRevision_ = this.getRevision();\r\n    }\r\n    return assignClosestPoint(\r\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\r\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\r\n  };\r\n\r\n  /**\r\n   * Iterate over each segment, calling the provided callback.\r\n   * If the callback returns a truthy value the function returns that\r\n   * value immediately. Otherwise the function returns `false`.\r\n   *\r\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\r\n   *     called for each segment.\r\n   * @return {T|boolean} Value.\r\n   * @template T,S\r\n   * @api\r\n   */\r\n  LineString.prototype.forEachSegment = function forEachSegment$1 (callback) {\r\n    return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\r\n  };\r\n\r\n  /**\r\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\r\n   * such coordinate exists.\r\n   *\r\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\r\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\r\n   * M will return the first coordinate and Ms greater than the last M will\r\n   * return the last coordinate.\r\n   *\r\n   * @param {number} m M.\r\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\r\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\r\n   * @api\r\n   */\r\n  LineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate) {\r\n    if (this.layout != GeometryLayout.XYM &&\r\n        this.layout != GeometryLayout.XYZM) {\r\n      return null;\r\n    }\r\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\r\n    return lineStringCoordinateAtM(this.flatCoordinates, 0,\r\n      this.flatCoordinates.length, this.stride, m, extrapolate);\r\n  };\r\n\r\n  /**\r\n   * Return the coordinates of the linestring.\r\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\r\n   * @override\r\n   * @api\r\n   */\r\n  LineString.prototype.getCoordinates = function getCoordinates () {\r\n    return inflateCoordinates(\r\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\r\n  };\r\n\r\n  /**\r\n   * Return the coordinate at the provided fraction along the linestring.\r\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\r\n   * linestring and 1 is the end.\r\n   * @param {number} fraction Fraction.\r\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\r\n   *     be modified. If not provided, a new coordinate will be returned.\r\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\r\n   * @api\r\n   */\r\n  LineString.prototype.getCoordinateAt = function getCoordinateAt (fraction, opt_dest) {\r\n    return interpolatePoint(\r\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\r\n      fraction, opt_dest);\r\n  };\r\n\r\n  /**\r\n   * Return the length of the linestring on projected plane.\r\n   * @return {number} Length (on projected plane).\r\n   * @api\r\n   */\r\n  LineString.prototype.getLength = function getLength () {\r\n    return lineStringLength(\r\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\r\n  };\r\n\r\n  /**\r\n   * @return {Array<number>} Flat midpoint.\r\n   */\r\n  LineString.prototype.getFlatMidpoint = function getFlatMidpoint () {\r\n    if (this.flatMidpointRevision_ != this.getRevision()) {\r\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\r\n      this.flatMidpointRevision_ = this.getRevision();\r\n    }\r\n    return this.flatMidpoint_;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  LineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\r\n    var simplifiedFlatCoordinates = [];\r\n    simplifiedFlatCoordinates.length = douglasPeucker(\r\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\r\n      squaredTolerance, simplifiedFlatCoordinates, 0);\r\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  LineString.prototype.getType = function getType () {\r\n    return GeometryType.LINE_STRING;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  LineString.prototype.intersectsExtent = function intersectsExtent (extent) {\r\n    return intersectsLineString(\r\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\r\n      extent);\r\n  };\r\n\r\n  /**\r\n   * Set the coordinates of the linestring.\r\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\r\n   * @param {GeometryLayout=} opt_layout Layout.\r\n   * @override\r\n   * @api\r\n   */\r\n  LineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\r\n    this.setLayout(opt_layout, coordinates, 1);\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = [];\r\n    }\r\n    this.flatCoordinates.length = deflateCoordinates(\r\n      this.flatCoordinates, 0, coordinates, this.stride);\r\n    this.changed();\r\n  };\n\n  return LineString;\n}(SimpleGeometry));\r\n\r\n\r\nexport default LineString;\r\n\r\n//# sourceMappingURL=LineString.js.map","/**\r\n * @module ol/geom/MultiLineString\r\n */\r\nimport {extend} from '../array.js';\r\nimport {closestSquaredDistanceXY} from '../extent.js';\r\nimport GeometryLayout from './GeometryLayout.js';\r\nimport GeometryType from './GeometryType.js';\r\nimport LineString from './LineString.js';\r\nimport SimpleGeometry from './SimpleGeometry.js';\r\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\r\nimport {deflateCoordinatesArray} from './flat/deflate.js';\r\nimport {inflateCoordinatesArray} from './flat/inflate.js';\r\nimport {interpolatePoint, lineStringsCoordinateAtM} from './flat/interpolate.js';\r\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\r\nimport {douglasPeuckerArray} from './flat/simplify.js';\r\n\r\n/**\r\n * @classdesc\r\n * Multi-linestring geometry.\r\n *\r\n * @api\r\n */\r\nvar MultiLineString = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiLineString(coordinates, opt_layout, opt_ends) {\r\n\r\n    SimpleGeometry.call(this);\r\n\r\n    /**\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    this.ends_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDelta_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDeltaRevision_ = -1;\r\n\r\n    if (Array.isArray(coordinates[0])) {\r\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\r\n    } else if (opt_layout !== undefined && opt_ends) {\r\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\r\n      this.ends_ = opt_ends;\r\n    } else {\r\n      var layout = this.getLayout();\r\n      var lineStrings = /** @type {Array<LineString>} */ (coordinates);\r\n      var flatCoordinates = [];\r\n      var ends = [];\r\n      for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\r\n        var lineString = lineStrings[i];\r\n        if (i === 0) {\r\n          layout = lineString.getLayout();\r\n        }\r\n        extend(flatCoordinates, lineString.getFlatCoordinates());\r\n        ends.push(flatCoordinates.length);\r\n      }\r\n      this.setFlatCoordinates(layout, flatCoordinates);\r\n      this.ends_ = ends;\r\n    }\r\n\r\n  }\n\n  if ( SimpleGeometry ) MultiLineString.__proto__ = SimpleGeometry;\n  MultiLineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\r\n\r\n  /**\r\n   * Append the passed linestring to the multilinestring.\r\n   * @param {LineString} lineString LineString.\r\n   * @api\r\n   */\r\n  MultiLineString.prototype.appendLineString = function appendLineString (lineString) {\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\r\n    } else {\r\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\r\n    }\r\n    this.ends_.push(this.flatCoordinates.length);\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * Make a complete copy of the geometry.\r\n   * @return {!MultiLineString} Clone.\r\n   * @override\r\n   * @api\r\n   */\r\n  MultiLineString.prototype.clone = function clone () {\r\n    return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  MultiLineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\r\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\r\n      return minSquaredDistance;\r\n    }\r\n    if (this.maxDeltaRevision_ != this.getRevision()) {\r\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\r\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\r\n      this.maxDeltaRevision_ = this.getRevision();\r\n    }\r\n    return assignClosestArrayPoint(\r\n      this.flatCoordinates, 0, this.ends_, this.stride,\r\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\r\n  };\r\n\r\n  /**\r\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\r\n   * such coordinate exists.\r\n   *\r\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\r\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\r\n   * M will return the first coordinate and Ms greater than the last M will\r\n   * return the last coordinate.\r\n   *\r\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\r\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\r\n   * will be linearly interpolated between the last coordinate of one LineString\r\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\r\n   * `false` then the function will return `null` for Ms falling between\r\n   * LineStrings.\r\n   *\r\n   * @param {number} m M.\r\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\r\n   * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\r\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\r\n   * @api\r\n   */\r\n  MultiLineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate, opt_interpolate) {\r\n    if ((this.layout != GeometryLayout.XYM &&\r\n         this.layout != GeometryLayout.XYZM) ||\r\n        this.flatCoordinates.length === 0) {\r\n      return null;\r\n    }\r\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\r\n    var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\r\n    return lineStringsCoordinateAtM(this.flatCoordinates, 0,\r\n      this.ends_, this.stride, m, extrapolate, interpolate);\r\n  };\r\n\r\n  /**\r\n   * Return the coordinates of the multilinestring.\r\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\r\n   * @override\r\n   * @api\r\n   */\r\n  MultiLineString.prototype.getCoordinates = function getCoordinates () {\r\n    return inflateCoordinatesArray(\r\n      this.flatCoordinates, 0, this.ends_, this.stride);\r\n  };\r\n\r\n  /**\r\n   * @return {Array<number>} Ends.\r\n   */\r\n  MultiLineString.prototype.getEnds = function getEnds () {\r\n    return this.ends_;\r\n  };\r\n\r\n  /**\r\n   * Return the linestring at the specified index.\r\n   * @param {number} index Index.\r\n   * @return {LineString} LineString.\r\n   * @api\r\n   */\r\n  MultiLineString.prototype.getLineString = function getLineString (index) {\r\n    if (index < 0 || this.ends_.length <= index) {\r\n      return null;\r\n    }\r\n    return new LineString(this.flatCoordinates.slice(\r\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\r\n  };\r\n\r\n  /**\r\n   * Return the linestrings of this multilinestring.\r\n   * @return {Array<LineString>} LineStrings.\r\n   * @api\r\n   */\r\n  MultiLineString.prototype.getLineStrings = function getLineStrings () {\r\n    var flatCoordinates = this.flatCoordinates;\r\n    var ends = this.ends_;\r\n    var layout = this.layout;\r\n    /** @type {Array<LineString>} */\r\n    var lineStrings = [];\r\n    var offset = 0;\r\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n      var end = ends[i];\r\n      var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\r\n      lineStrings.push(lineString);\r\n      offset = end;\r\n    }\r\n    return lineStrings;\r\n  };\r\n\r\n  /**\r\n   * @return {Array<number>} Flat midpoints.\r\n   */\r\n  MultiLineString.prototype.getFlatMidpoints = function getFlatMidpoints () {\r\n    var midpoints = [];\r\n    var flatCoordinates = this.flatCoordinates;\r\n    var offset = 0;\r\n    var ends = this.ends_;\r\n    var stride = this.stride;\r\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n      var end = ends[i];\r\n      var midpoint = interpolatePoint(\r\n        flatCoordinates, offset, end, stride, 0.5);\r\n      extend(midpoints, midpoint);\r\n      offset = end;\r\n    }\r\n    return midpoints;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  MultiLineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\r\n    var simplifiedFlatCoordinates = [];\r\n    var simplifiedEnds = [];\r\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\r\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\r\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\r\n    return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  MultiLineString.prototype.getType = function getType () {\r\n    return GeometryType.MULTI_LINE_STRING;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  MultiLineString.prototype.intersectsExtent = function intersectsExtent (extent) {\r\n    return intersectsLineStringArray(\r\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\r\n  };\r\n\r\n  /**\r\n   * Set the coordinates of the multilinestring.\r\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\r\n   * @param {GeometryLayout=} opt_layout Layout.\r\n   * @override\r\n   * @api\r\n   */\r\n  MultiLineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\r\n    this.setLayout(opt_layout, coordinates, 2);\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = [];\r\n    }\r\n    var ends = deflateCoordinatesArray(\r\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\r\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\r\n    this.changed();\r\n  };\n\n  return MultiLineString;\n}(SimpleGeometry));\r\n\r\n\r\nexport default MultiLineString;\r\n\r\n//# sourceMappingURL=MultiLineString.js.map","/**\r\n * @module ol/geom/MultiPoint\r\n */\r\nimport {extend} from '../array.js';\r\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\r\nimport GeometryType from './GeometryType.js';\r\nimport Point from './Point.js';\r\nimport SimpleGeometry from './SimpleGeometry.js';\r\nimport {deflateCoordinates} from './flat/deflate.js';\r\nimport {inflateCoordinates} from './flat/inflate.js';\r\nimport {squaredDistance as squaredDx} from '../math.js';\r\n\r\n/**\r\n * @classdesc\r\n * Multi-point geometry.\r\n *\r\n * @api\r\n */\r\nvar MultiPoint = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiPoint(coordinates, opt_layout) {\r\n    SimpleGeometry.call(this);\r\n    if (opt_layout && !Array.isArray(coordinates[0])) {\r\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\r\n    } else {\r\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\r\n    }\r\n  }\n\n  if ( SimpleGeometry ) MultiPoint.__proto__ = SimpleGeometry;\n  MultiPoint.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\r\n\r\n  /**\r\n   * Append the passed point to this multipoint.\r\n   * @param {Point} point Point.\r\n   * @api\r\n   */\r\n  MultiPoint.prototype.appendPoint = function appendPoint (point) {\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = point.getFlatCoordinates().slice();\r\n    } else {\r\n      extend(this.flatCoordinates, point.getFlatCoordinates());\r\n    }\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * Make a complete copy of the geometry.\r\n   * @return {!MultiPoint} Clone.\r\n   * @override\r\n   * @api\r\n   */\r\n  MultiPoint.prototype.clone = function clone () {\r\n    var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\r\n    return multiPoint;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  MultiPoint.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\r\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\r\n      return minSquaredDistance;\r\n    }\r\n    var flatCoordinates = this.flatCoordinates;\r\n    var stride = this.stride;\r\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\r\n      var squaredDistance = squaredDx(\r\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\r\n      if (squaredDistance < minSquaredDistance) {\r\n        minSquaredDistance = squaredDistance;\r\n        for (var j = 0; j < stride; ++j) {\r\n          closestPoint[j] = flatCoordinates[i + j];\r\n        }\r\n        closestPoint.length = stride;\r\n      }\r\n    }\r\n    return minSquaredDistance;\r\n  };\r\n\r\n  /**\r\n   * Return the coordinates of the multipoint.\r\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\r\n   * @override\r\n   * @api\r\n   */\r\n  MultiPoint.prototype.getCoordinates = function getCoordinates () {\r\n    return inflateCoordinates(\r\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\r\n  };\r\n\r\n  /**\r\n   * Return the point at the specified index.\r\n   * @param {number} index Index.\r\n   * @return {Point} Point.\r\n   * @api\r\n   */\r\n  MultiPoint.prototype.getPoint = function getPoint (index) {\r\n    var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\r\n    if (index < 0 || n <= index) {\r\n      return null;\r\n    }\r\n    return new Point(this.flatCoordinates.slice(\r\n      index * this.stride, (index + 1) * this.stride), this.layout);\r\n  };\r\n\r\n  /**\r\n   * Return the points of this multipoint.\r\n   * @return {Array<Point>} Points.\r\n   * @api\r\n   */\r\n  MultiPoint.prototype.getPoints = function getPoints () {\r\n    var flatCoordinates = this.flatCoordinates;\r\n    var layout = this.layout;\r\n    var stride = this.stride;\r\n    /** @type {Array<Point>} */\r\n    var points = [];\r\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\r\n      var point = new Point(flatCoordinates.slice(i, i + stride), layout);\r\n      points.push(point);\r\n    }\r\n    return points;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  MultiPoint.prototype.getType = function getType () {\r\n    return GeometryType.MULTI_POINT;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  MultiPoint.prototype.intersectsExtent = function intersectsExtent (extent) {\r\n    var flatCoordinates = this.flatCoordinates;\r\n    var stride = this.stride;\r\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\r\n      var x = flatCoordinates[i];\r\n      var y = flatCoordinates[i + 1];\r\n      if (containsXY(extent, x, y)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Set the coordinates of the multipoint.\r\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\r\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\r\n   * @override\r\n   * @api\r\n   */\r\n  MultiPoint.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\r\n    this.setLayout(opt_layout, coordinates, 1);\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = [];\r\n    }\r\n    this.flatCoordinates.length = deflateCoordinates(\r\n      this.flatCoordinates, 0, coordinates, this.stride);\r\n    this.changed();\r\n  };\n\n  return MultiPoint;\n}(SimpleGeometry));\r\n\r\n\r\nexport default MultiPoint;\r\n\r\n//# sourceMappingURL=MultiPoint.js.map","/**\r\n * @module ol/geom/flat/center\r\n */\r\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @return {Array<number>} Flat centers.\r\n */\r\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\r\n  var flatCenters = [];\r\n  var extent = createEmpty();\r\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\r\n    var ends = endss[i];\r\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\r\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\r\n    offset = ends[ends.length - 1];\r\n  }\r\n  return flatCenters;\r\n}\r\n\r\n//# sourceMappingURL=center.js.map","/**\r\n * @module ol/geom/MultiPolygon\r\n */\r\nimport {extend} from '../array.js';\r\nimport {closestSquaredDistanceXY} from '../extent.js';\r\nimport GeometryLayout from './GeometryLayout.js';\r\nimport GeometryType from './GeometryType.js';\r\nimport MultiPoint from './MultiPoint.js';\r\nimport Polygon from './Polygon.js';\r\nimport SimpleGeometry from './SimpleGeometry.js';\r\nimport {linearRingss as linearRingssArea} from './flat/area.js';\r\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\r\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from './flat/closest.js';\r\nimport {linearRingssContainsXY} from './flat/contains.js';\r\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\r\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\r\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\r\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\r\nimport {linearRingsAreOriented, orientLinearRingsArray} from './flat/orient.js';\r\nimport {quantizeMultiArray} from './flat/simplify.js';\r\n\r\n/**\r\n * @classdesc\r\n * Multi-polygon geometry.\r\n *\r\n * @api\r\n */\r\nvar MultiPolygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiPolygon(coordinates, opt_layout, opt_endss) {\r\n\r\n    SimpleGeometry.call(this);\r\n\r\n    /**\r\n     * @type {Array<Array<number>>}\r\n     * @private\r\n     */\r\n    this.endss_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.flatInteriorPointsRevision_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.flatInteriorPoints_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDelta_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDeltaRevision_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.orientedRevision_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.orientedFlatCoordinates_ = null;\r\n\r\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\r\n      var layout = this.getLayout();\r\n      var polygons = /** @type {Array<Polygon>} */ (coordinates);\r\n      var flatCoordinates = [];\r\n      var endss = [];\r\n      for (var i = 0, ii = polygons.length; i < ii; ++i) {\r\n        var polygon = polygons[i];\r\n        if (i === 0) {\r\n          layout = polygon.getLayout();\r\n        }\r\n        var offset = flatCoordinates.length;\r\n        var ends = polygon.getEnds();\r\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\r\n          ends[j] += offset;\r\n        }\r\n        extend(flatCoordinates, polygon.getFlatCoordinates());\r\n        endss.push(ends);\r\n      }\r\n      opt_layout = layout;\r\n      coordinates = flatCoordinates;\r\n      opt_endss = endss;\r\n    }\r\n    if (opt_layout !== undefined && opt_endss) {\r\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\r\n      this.endss_ = opt_endss;\r\n    } else {\r\n      this.setCoordinates(/** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\r\n        opt_layout);\r\n    }\r\n\r\n  }\n\n  if ( SimpleGeometry ) MultiPolygon.__proto__ = SimpleGeometry;\n  MultiPolygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\r\n\r\n  /**\r\n   * Append the passed polygon to this multipolygon.\r\n   * @param {Polygon} polygon Polygon.\r\n   * @api\r\n   */\r\n  MultiPolygon.prototype.appendPolygon = function appendPolygon (polygon) {\r\n    /** @type {Array<number>} */\r\n    var ends;\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\r\n      ends = polygon.getEnds().slice();\r\n      this.endss_.push();\r\n    } else {\r\n      var offset = this.flatCoordinates.length;\r\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\r\n      ends = polygon.getEnds().slice();\r\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n        ends[i] += offset;\r\n      }\r\n    }\r\n    this.endss_.push(ends);\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * Make a complete copy of the geometry.\r\n   * @return {!MultiPolygon} Clone.\r\n   * @override\r\n   * @api\r\n   */\r\n  MultiPolygon.prototype.clone = function clone () {\r\n    var len = this.endss_.length;\r\n    var newEndss = new Array(len);\r\n    for (var i = 0; i < len; ++i) {\r\n      newEndss[i] = this.endss_[i].slice();\r\n    }\r\n\r\n    return new MultiPolygon(\r\n      this.flatCoordinates.slice(), this.layout, newEndss);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  MultiPolygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\r\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\r\n      return minSquaredDistance;\r\n    }\r\n    if (this.maxDeltaRevision_ != this.getRevision()) {\r\n      this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\r\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\r\n      this.maxDeltaRevision_ = this.getRevision();\r\n    }\r\n    return assignClosestMultiArrayPoint(\r\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\r\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  MultiPolygon.prototype.containsXY = function containsXY (x, y) {\r\n    return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\r\n  };\r\n\r\n  /**\r\n   * Return the area of the multipolygon on projected plane.\r\n   * @return {number} Area (on projected plane).\r\n   * @api\r\n   */\r\n  MultiPolygon.prototype.getArea = function getArea () {\r\n    return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\r\n  };\r\n\r\n  /**\r\n   * Get the coordinate array for this geometry.  This array has the structure\r\n   * of a GeoJSON coordinate array for multi-polygons.\r\n   *\r\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\r\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\r\n   *     If `false`, coordinates will be oriented according to the left-hand rule\r\n   *     (clockwise for exterior and counter-clockwise for interior rings).\r\n   *     By default, coordinate orientation will depend on how the geometry was\r\n   *     constructed.\r\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\r\n   * @override\r\n   * @api\r\n   */\r\n  MultiPolygon.prototype.getCoordinates = function getCoordinates (opt_right) {\r\n    var flatCoordinates;\r\n    if (opt_right !== undefined) {\r\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\r\n      orientLinearRingsArray(\r\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\r\n    } else {\r\n      flatCoordinates = this.flatCoordinates;\r\n    }\r\n\r\n    return inflateMultiCoordinatesArray(\r\n      flatCoordinates, 0, this.endss_, this.stride);\r\n  };\r\n\r\n  /**\r\n   * @return {Array<Array<number>>} Endss.\r\n   */\r\n  MultiPolygon.prototype.getEndss = function getEndss () {\r\n    return this.endss_;\r\n  };\r\n\r\n  /**\r\n   * @return {Array<number>} Flat interior points.\r\n   */\r\n  MultiPolygon.prototype.getFlatInteriorPoints = function getFlatInteriorPoints () {\r\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\r\n      var flatCenters = linearRingssCenter(\r\n        this.flatCoordinates, 0, this.endss_, this.stride);\r\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\r\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\r\n        flatCenters);\r\n      this.flatInteriorPointsRevision_ = this.getRevision();\r\n    }\r\n    return this.flatInteriorPoints_;\r\n  };\r\n\r\n  /**\r\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\r\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\r\n   * the length of the horizontal intersection that the point belongs to.\r\n   * @api\r\n   */\r\n  MultiPolygon.prototype.getInteriorPoints = function getInteriorPoints () {\r\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\r\n  };\r\n\r\n  /**\r\n   * @return {Array<number>} Oriented flat coordinates.\r\n   */\r\n  MultiPolygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\r\n    if (this.orientedRevision_ != this.getRevision()) {\r\n      var flatCoordinates = this.flatCoordinates;\r\n      if (linearRingsAreOriented(\r\n        flatCoordinates, 0, this.endss_, this.stride)) {\r\n        this.orientedFlatCoordinates_ = flatCoordinates;\r\n      } else {\r\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\r\n        this.orientedFlatCoordinates_.length =\r\n            orientLinearRingsArray(\r\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\r\n      }\r\n      this.orientedRevision_ = this.getRevision();\r\n    }\r\n    return this.orientedFlatCoordinates_;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  MultiPolygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\r\n    var simplifiedFlatCoordinates = [];\r\n    var simplifiedEndss = [];\r\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\r\n      this.flatCoordinates, 0, this.endss_, this.stride,\r\n      Math.sqrt(squaredTolerance),\r\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\r\n    return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\r\n  };\r\n\r\n  /**\r\n   * Return the polygon at the specified index.\r\n   * @param {number} index Index.\r\n   * @return {Polygon} Polygon.\r\n   * @api\r\n   */\r\n  MultiPolygon.prototype.getPolygon = function getPolygon (index) {\r\n    if (index < 0 || this.endss_.length <= index) {\r\n      return null;\r\n    }\r\n    var offset;\r\n    if (index === 0) {\r\n      offset = 0;\r\n    } else {\r\n      var prevEnds = this.endss_[index - 1];\r\n      offset = prevEnds[prevEnds.length - 1];\r\n    }\r\n    var ends = this.endss_[index].slice();\r\n    var end = ends[ends.length - 1];\r\n    if (offset !== 0) {\r\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n        ends[i] -= offset;\r\n      }\r\n    }\r\n    return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\r\n  };\r\n\r\n  /**\r\n   * Return the polygons of this multipolygon.\r\n   * @return {Array<Polygon>} Polygons.\r\n   * @api\r\n   */\r\n  MultiPolygon.prototype.getPolygons = function getPolygons () {\r\n    var layout = this.layout;\r\n    var flatCoordinates = this.flatCoordinates;\r\n    var endss = this.endss_;\r\n    var polygons = [];\r\n    var offset = 0;\r\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\r\n      var ends = endss[i].slice();\r\n      var end = ends[ends.length - 1];\r\n      if (offset !== 0) {\r\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\r\n          ends[j] -= offset;\r\n        }\r\n      }\r\n      var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\r\n      polygons.push(polygon);\r\n      offset = end;\r\n    }\r\n    return polygons;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  MultiPolygon.prototype.getType = function getType () {\r\n    return GeometryType.MULTI_POLYGON;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  MultiPolygon.prototype.intersectsExtent = function intersectsExtent (extent) {\r\n    return intersectsLinearRingMultiArray(\r\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\r\n  };\r\n\r\n  /**\r\n   * Set the coordinates of the multipolygon.\r\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\r\n   * @param {GeometryLayout=} opt_layout Layout.\r\n   * @override\r\n   * @api\r\n   */\r\n  MultiPolygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\r\n    this.setLayout(opt_layout, coordinates, 3);\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = [];\r\n    }\r\n    var endss = deflateMultiCoordinatesArray(\r\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\r\n    if (endss.length === 0) {\r\n      this.flatCoordinates.length = 0;\r\n    } else {\r\n      var lastEnds = endss[endss.length - 1];\r\n      this.flatCoordinates.length = lastEnds.length === 0 ?\r\n        0 : lastEnds[lastEnds.length - 1];\r\n    }\r\n    this.changed();\r\n  };\n\n  return MultiPolygon;\n}(SimpleGeometry));\r\n\r\n\r\nexport default MultiPolygon;\r\n\r\n//# sourceMappingURL=MultiPolygon.js.map","/**\r\n * @module ol/format/EsriJSON\r\n */\r\nimport Feature from '../Feature.js';\r\nimport {assert} from '../asserts.js';\r\nimport {containsExtent} from '../extent.js';\r\nimport {transformWithOptions} from './Feature.js';\r\nimport JSONFeature from './JSONFeature.js';\r\nimport GeometryLayout from '../geom/GeometryLayout.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport LinearRing from '../geom/LinearRing.js';\r\nimport MultiLineString from '../geom/MultiLineString.js';\r\nimport MultiPoint from '../geom/MultiPoint.js';\r\nimport MultiPolygon from '../geom/MultiPolygon.js';\r\nimport Point from '../geom/Point.js';\r\nimport Polygon from '../geom/Polygon.js';\r\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\r\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\r\nimport {isEmpty} from '../obj.js';\r\nimport {get as getProjection} from '../proj.js';\r\n\r\n/**\r\n * @typedef {import(\"arcgis-rest-api\").Feature} EsriJSONFeature\r\n * @typedef {import(\"arcgis-rest-api\").FeatureSet} EsriJSONFeatureSet\r\n * @typedef {import(\"arcgis-rest-api\").Geometry} EsriJSONGeometry\r\n * @typedef {import(\"arcgis-rest-api\").Point} EsriJSONPoint\r\n * @typedef {import(\"arcgis-rest-api\").Polyline} EsriJSONPolyline\r\n * @typedef {import(\"arcgis-rest-api\").Polygon} EsriJSONPolygon\r\n * @typedef {import(\"arcgis-rest-api\").Multipoint} EsriJSONMultipoint\r\n * @typedef {import(\"arcgis-rest-api\").HasZM} EsriJSONHasZM\r\n * @typedef {import(\"arcgis-rest-api\").Position} EsriJSONPosition\r\n * @typedef {import(\"arcgis-rest-api\").SpatialReferenceWkid} EsriJSONSpatialReferenceWkid\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} EsriJSONMultiPolygon\r\n * @property {Array<Array<Array<Array<number>>>>} rings Rings for the MultiPolygon.\r\n * @property {boolean} [hasM] If the polygon coordinates have an M value.\r\n * @property {boolean} [hasZ] If the polygon coordinates have a Z value.\r\n * @property {EsriJSONSpatialReferenceWkid} [spatialReference] The coordinate reference system.\r\n */\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<import(\"../geom/GeometryType.js\").default, function(EsriJSONGeometry): import(\"../geom/Geometry.js\").default>}\r\n */\r\nvar GEOMETRY_READERS = {};\r\nGEOMETRY_READERS[GeometryType.POINT] = readPointGeometry;\r\nGEOMETRY_READERS[GeometryType.LINE_STRING] = readLineStringGeometry;\r\nGEOMETRY_READERS[GeometryType.POLYGON] = readPolygonGeometry;\r\nGEOMETRY_READERS[GeometryType.MULTI_POINT] = readMultiPointGeometry;\r\nGEOMETRY_READERS[GeometryType.MULTI_LINE_STRING] = readMultiLineStringGeometry;\r\nGEOMETRY_READERS[GeometryType.MULTI_POLYGON] = readMultiPolygonGeometry;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default, import(\"./Feature.js\").WriteOptions=): (EsriJSONGeometry)>}\r\n */\r\nvar GEOMETRY_WRITERS = {};\r\nGEOMETRY_WRITERS[GeometryType.POINT] = writePointGeometry;\r\nGEOMETRY_WRITERS[GeometryType.LINE_STRING] = writeLineStringGeometry;\r\nGEOMETRY_WRITERS[GeometryType.POLYGON] = writePolygonGeometry;\r\nGEOMETRY_WRITERS[GeometryType.MULTI_POINT] = writeMultiPointGeometry;\r\nGEOMETRY_WRITERS[GeometryType.MULTI_LINE_STRING] = writeMultiLineStringGeometry;\r\nGEOMETRY_WRITERS[GeometryType.MULTI_POLYGON] = writeMultiPolygonGeometry;\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [geometryName] Geometry name to use when creating features.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Feature format for reading and writing data in the EsriJSON format.\r\n *\r\n * @api\r\n */\r\nvar EsriJSON = /*@__PURE__*/(function (JSONFeature) {\n  function EsriJSON(opt_options) {\r\n\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    JSONFeature.call(this);\r\n\r\n    /**\r\n     * Name of the geometry attribute for features.\r\n     * @type {string|undefined}\r\n     * @private\r\n     */\r\n    this.geometryName_ = options.geometryName;\r\n\r\n  }\n\n  if ( JSONFeature ) EsriJSON.__proto__ = JSONFeature;\n  EsriJSON.prototype = Object.create( JSONFeature && JSONFeature.prototype );\n  EsriJSON.prototype.constructor = EsriJSON;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  EsriJSON.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\r\n    var esriJSONFeature = /** @type {EsriJSONFeature} */ (object);\r\n    var geometry = readGeometry(esriJSONFeature.geometry, opt_options);\r\n    var feature = new Feature();\r\n    if (this.geometryName_) {\r\n      feature.setGeometryName(this.geometryName_);\r\n    }\r\n    feature.setGeometry(geometry);\r\n    if (opt_options && opt_options.idField &&\r\n      esriJSONFeature.attributes[opt_options.idField]) {\r\n      feature.setId(/** @type {number} */(esriJSONFeature.attributes[opt_options.idField]));\r\n    }\r\n    if (esriJSONFeature.attributes) {\r\n      feature.setProperties(esriJSONFeature.attributes);\r\n    }\r\n    return feature;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  EsriJSON.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\r\n    var options = opt_options ? opt_options : {};\r\n    if (object['features']) {\r\n      var esriJSONFeatureSet = /** @type {EsriJSONFeatureSet} */ (object);\r\n      /** @type {Array<import(\"../Feature.js\").default>} */\r\n      var features = [];\r\n      var esriJSONFeatures = esriJSONFeatureSet.features;\r\n      options.idField = object.objectIdFieldName;\r\n      for (var i = 0, ii = esriJSONFeatures.length; i < ii; ++i) {\r\n        features.push(this.readFeatureFromObject(esriJSONFeatures[i], options));\r\n      }\r\n      return features;\r\n    } else {\r\n      return [this.readFeatureFromObject(object, options)];\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  EsriJSON.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\r\n    return readGeometry(/** @type {EsriJSONGeometry} */(object), opt_options);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  EsriJSON.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\r\n    if (object['spatialReference'] && object['spatialReference']['wkid'] !== undefined) {\r\n      var spatialReference = /** @type {EsriJSONSpatialReferenceWkid} */ (object['spatialReference']);\r\n      var crs = spatialReference.wkid;\r\n      return getProjection('EPSG:' + crs);\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Encode a geometry as a EsriJSON object.\r\n   *\r\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n   * @return {EsriJSONGeometry} Object.\r\n   * @override\r\n   * @api\r\n   */\r\n  EsriJSON.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\r\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\r\n  };\r\n\r\n  /**\r\n   * Encode a feature as a esriJSON Feature object.\r\n   *\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n   * @return {Object} Object.\r\n   * @override\r\n   * @api\r\n   */\r\n  EsriJSON.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\r\n    opt_options = this.adaptOptions(opt_options);\r\n    var object = {};\r\n    var geometry = feature.getGeometry();\r\n    if (geometry) {\r\n      object['geometry'] = writeGeometry(geometry, opt_options);\r\n      if (opt_options && opt_options.featureProjection) {\r\n        object['geometry']['spatialReference'] = /** @type {EsriJSONSpatialReferenceWkid} */({\r\n          wkid: Number(getProjection(opt_options.featureProjection).getCode().split(':').pop())\r\n        });\r\n      }\r\n    }\r\n    var properties = feature.getProperties();\r\n    delete properties[feature.getGeometryName()];\r\n    if (!isEmpty(properties)) {\r\n      object['attributes'] = properties;\r\n    } else {\r\n      object['attributes'] = {};\r\n    }\r\n    return object;\r\n  };\r\n\r\n  /**\r\n   * Encode an array of features as a EsriJSON object.\r\n   *\r\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n   * @return {Object} EsriJSON Object.\r\n   * @override\r\n   * @api\r\n   */\r\n  EsriJSON.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\r\n    opt_options = this.adaptOptions(opt_options);\r\n    var objects = [];\r\n    for (var i = 0, ii = features.length; i < ii; ++i) {\r\n      objects.push(this.writeFeatureObject(features[i], opt_options));\r\n    }\r\n    return /** @type {EsriJSONFeatureSet} */ ({\r\n      'features': objects\r\n    });\r\n  };\n\n  return EsriJSON;\n}(JSONFeature));\r\n\r\n\r\n/**\r\n * @param {EsriJSONGeometry} object Object.\r\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\r\n */\r\nfunction readGeometry(object, opt_options) {\r\n  if (!object) {\r\n    return null;\r\n  }\r\n  /** @type {import(\"../geom/GeometryType.js\").default} */\r\n  var type;\r\n  if (typeof object['x'] === 'number' && typeof object['y'] === 'number') {\r\n    type = GeometryType.POINT;\r\n  } else if (object['points']) {\r\n    type = GeometryType.MULTI_POINT;\r\n  } else if (object['paths']) {\r\n    var esriJSONPolyline = /** @type {EsriJSONPolyline} */ (object);\r\n    if (esriJSONPolyline.paths.length === 1) {\r\n      type = GeometryType.LINE_STRING;\r\n    } else {\r\n      type = GeometryType.MULTI_LINE_STRING;\r\n    }\r\n  } else if (object['rings']) {\r\n    var esriJSONPolygon = /** @type {EsriJSONPolygon} */ (object);\r\n    var layout = getGeometryLayout(esriJSONPolygon);\r\n    var rings = convertRings(esriJSONPolygon.rings, layout);\r\n    if (rings.length === 1) {\r\n      type = GeometryType.POLYGON;\r\n      object['rings'] = rings[0];\r\n    } else {\r\n      type = GeometryType.MULTI_POLYGON;\r\n      object['rings'] = rings;\r\n    }\r\n  }\r\n  var geometryReader = GEOMETRY_READERS[type];\r\n  return (\r\n    /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometryReader(object), false, opt_options))\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * Determines inner and outer rings.\r\n * Checks if any polygons in this array contain any other polygons in this\r\n * array. It is used for checking for holes.\r\n * Logic inspired by: https://github.com/Esri/terraformer-arcgis-parser\r\n * @param {Array<!Array<!Array<number>>>} rings Rings.\r\n * @param {import(\"../geom/GeometryLayout.js\").default} layout Geometry layout.\r\n * @return {Array<!Array<!Array<!Array<number>>>>} Transformed rings.\r\n */\r\nfunction convertRings(rings, layout) {\r\n  var flatRing = [];\r\n  var outerRings = [];\r\n  var holes = [];\r\n  var i, ii;\r\n  for (i = 0, ii = rings.length; i < ii; ++i) {\r\n    flatRing.length = 0;\r\n    deflateCoordinates(flatRing, 0, rings[i], layout.length);\r\n    // is this ring an outer ring? is it clockwise?\r\n    var clockwise = linearRingIsClockwise(flatRing, 0,\r\n      flatRing.length, layout.length);\r\n    if (clockwise) {\r\n      outerRings.push([rings[i]]);\r\n    } else {\r\n      holes.push(rings[i]);\r\n    }\r\n  }\r\n  while (holes.length) {\r\n    var hole = holes.shift();\r\n    var matched = false;\r\n    // loop over all outer rings and see if they contain our hole.\r\n    for (i = outerRings.length - 1; i >= 0; i--) {\r\n      var outerRing = outerRings[i][0];\r\n      var containsHole = containsExtent(\r\n        new LinearRing(outerRing).getExtent(),\r\n        new LinearRing(hole).getExtent()\r\n      );\r\n      if (containsHole) {\r\n        // the hole is contained push it into our polygon\r\n        outerRings[i].push(hole);\r\n        matched = true;\r\n        break;\r\n      }\r\n    }\r\n    if (!matched) {\r\n      // no outer rings contain this hole turn it into and outer\r\n      // ring (reverse it)\r\n      outerRings.push([hole.reverse()]);\r\n    }\r\n  }\r\n  return outerRings;\r\n}\r\n\r\n\r\n/**\r\n * @param {EsriJSONPoint} object Object.\r\n * @return {import(\"../geom/Geometry.js\").default} Point.\r\n */\r\nfunction readPointGeometry(object) {\r\n  var point;\r\n  if (object.m !== undefined && object.z !== undefined) {\r\n    point = new Point([object.x, object.y, object.z, object.m],\r\n      GeometryLayout.XYZM);\r\n  } else if (object.z !== undefined) {\r\n    point = new Point([object.x, object.y, object.z],\r\n      GeometryLayout.XYZ);\r\n  } else if (object.m !== undefined) {\r\n    point = new Point([object.x, object.y, object.m],\r\n      GeometryLayout.XYM);\r\n  } else {\r\n    point = new Point([object.x, object.y]);\r\n  }\r\n  return point;\r\n}\r\n\r\n\r\n/**\r\n * @param {EsriJSONPolyline} object Object.\r\n * @return {import(\"../geom/Geometry.js\").default} LineString.\r\n */\r\nfunction readLineStringGeometry(object) {\r\n  var layout = getGeometryLayout(object);\r\n  return new LineString(object.paths[0], layout);\r\n}\r\n\r\n\r\n/**\r\n * @param {EsriJSONPolyline} object Object.\r\n * @return {import(\"../geom/Geometry.js\").default} MultiLineString.\r\n */\r\nfunction readMultiLineStringGeometry(object) {\r\n  var layout = getGeometryLayout(object);\r\n  return new MultiLineString(object.paths, layout);\r\n}\r\n\r\n\r\n/**\r\n * @param {EsriJSONHasZM} object Object.\r\n * @return {import(\"../geom/GeometryLayout.js\").default} The geometry layout to use.\r\n */\r\nfunction getGeometryLayout(object) {\r\n  var layout = GeometryLayout.XY;\r\n  if (object.hasZ === true && object.hasM === true) {\r\n    layout = GeometryLayout.XYZM;\r\n  } else if (object.hasZ === true) {\r\n    layout = GeometryLayout.XYZ;\r\n  } else if (object.hasM === true) {\r\n    layout = GeometryLayout.XYM;\r\n  }\r\n  return layout;\r\n}\r\n\r\n\r\n/**\r\n * @param {EsriJSONMultipoint} object Object.\r\n * @return {import(\"../geom/Geometry.js\").default} MultiPoint.\r\n */\r\nfunction readMultiPointGeometry(object) {\r\n  var layout = getGeometryLayout(object);\r\n  return new MultiPoint(object.points, layout);\r\n}\r\n\r\n\r\n/**\r\n * @param {EsriJSONMultiPolygon} object Object.\r\n * @return {import(\"../geom/Geometry.js\").default} MultiPolygon.\r\n */\r\nfunction readMultiPolygonGeometry(object) {\r\n  var layout = getGeometryLayout(object);\r\n  return new MultiPolygon(object.rings, layout);\r\n}\r\n\r\n\r\n/**\r\n * @param {EsriJSONPolygon} object Object.\r\n * @return {import(\"../geom/Geometry.js\").default} Polygon.\r\n */\r\nfunction readPolygonGeometry(object) {\r\n  var layout = getGeometryLayout(object);\r\n  return new Polygon(object.rings, layout);\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {EsriJSONGeometry} EsriJSON geometry.\r\n */\r\nfunction writePointGeometry(geometry, opt_options) {\r\n  var coordinates = /** @type {import(\"../geom/Point.js\").default} */ (geometry).getCoordinates();\r\n  var esriJSON;\r\n  var layout = /** @type {import(\"../geom/Point.js\").default} */ (geometry).getLayout();\r\n  if (layout === GeometryLayout.XYZ) {\r\n    esriJSON = /** @type {EsriJSONPoint} */ ({\r\n      x: coordinates[0],\r\n      y: coordinates[1],\r\n      z: coordinates[2]\r\n    });\r\n  } else if (layout === GeometryLayout.XYM) {\r\n    esriJSON = /** @type {EsriJSONPoint} */ ({\r\n      x: coordinates[0],\r\n      y: coordinates[1],\r\n      m: coordinates[2]\r\n    });\r\n  } else if (layout === GeometryLayout.XYZM) {\r\n    esriJSON = /** @type {EsriJSONPoint} */ ({\r\n      x: coordinates[0],\r\n      y: coordinates[1],\r\n      z: coordinates[2],\r\n      m: coordinates[3]\r\n    });\r\n  } else if (layout === GeometryLayout.XY) {\r\n    esriJSON = /** @type {EsriJSONPoint} */ ({\r\n      x: coordinates[0],\r\n      y: coordinates[1]\r\n    });\r\n  } else {\r\n    assert(false, 34); // Invalid geometry layout\r\n  }\r\n  return /** @type {EsriJSONGeometry} */ (esriJSON);\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\r\n * @return {Object} Object with boolean hasZ and hasM keys.\r\n */\r\nfunction getHasZM(geometry) {\r\n  var layout = geometry.getLayout();\r\n  return {\r\n    hasZ: (layout === GeometryLayout.XYZ ||\r\n      layout === GeometryLayout.XYZM),\r\n    hasM: (layout === GeometryLayout.XYM ||\r\n      layout === GeometryLayout.XYZM)\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {EsriJSONPolyline} EsriJSON geometry.\r\n */\r\nfunction writeLineStringGeometry(geometry, opt_options) {\r\n  var lineString = /** @type {import(\"../geom/LineString.js\").default} */ (geometry);\r\n  var hasZM = getHasZM(lineString);\r\n  return (\r\n    /** @type {EsriJSONPolyline} */ {\r\n      hasZ: hasZM.hasZ,\r\n      hasM: hasZM.hasM,\r\n      paths: [\r\n        /** @type {Array<EsriJSONPosition>} */ (lineString.getCoordinates())\r\n      ]\r\n    }\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {EsriJSONPolygon} EsriJSON geometry.\r\n */\r\nfunction writePolygonGeometry(geometry, opt_options) {\r\n  var polygon = /** @type {import(\"../geom/Polygon.js\").default} */ (geometry);\r\n  // Esri geometries use the left-hand rule\r\n  var hasZM = getHasZM(polygon);\r\n  return (\r\n    /** @type {EsriJSONPolygon} */ {\r\n      hasZ: hasZM.hasZ,\r\n      hasM: hasZM.hasM,\r\n      rings: /** @type {Array<Array<EsriJSONPosition>>} */ (polygon.getCoordinates(false))\r\n    }\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {EsriJSONPolyline} EsriJSON geometry.\r\n */\r\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\r\n  var multiLineString = /** @type {import(\"../geom/MultiLineString.js\").default} */ (geometry);\r\n  var hasZM = getHasZM(multiLineString);\r\n  return (\r\n    /** @type {EsriJSONPolyline} */ {\r\n      hasZ: hasZM.hasZ,\r\n      hasM: hasZM.hasM,\r\n      paths: /** @type {Array<Array<EsriJSONPosition>>} */ (multiLineString.getCoordinates())\r\n    }\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {EsriJSONMultipoint} EsriJSON geometry.\r\n */\r\nfunction writeMultiPointGeometry(geometry, opt_options) {\r\n  var multiPoint = /** @type {import(\"../geom/MultiPoint.js\").default} */ (geometry);\r\n  var hasZM = getHasZM(multiPoint);\r\n  return (\r\n    /** @type {EsriJSONMultipoint} */ {\r\n      hasZ: hasZM.hasZ,\r\n      hasM: hasZM.hasM,\r\n      points: /** @type {Array<EsriJSONPosition>} */ (multiPoint.getCoordinates())\r\n    }\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {EsriJSONPolygon} EsriJSON geometry.\r\n */\r\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\r\n  var hasZM = getHasZM(/** @type {import(\"../geom/MultiPolygon.js\").default} */(geometry));\r\n  var coordinates = /** @type {import(\"../geom/MultiPolygon.js\").default} */ (geometry).getCoordinates(false);\r\n  var output = [];\r\n  for (var i = 0; i < coordinates.length; i++) {\r\n    for (var x = coordinates[i].length - 1; x >= 0; x--) {\r\n      output.push(coordinates[i][x]);\r\n    }\r\n  }\r\n  return /** @type {EsriJSONPolygon} */ ({\r\n    hasZ: hasZM.hasZ,\r\n    hasM: hasZM.hasM,\r\n    rings: output\r\n  });\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {EsriJSONGeometry} EsriJSON geometry.\r\n */\r\nfunction writeGeometry(geometry, opt_options) {\r\n  var geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\r\n  return geometryWriter(/** @type {import(\"../geom/Geometry.js\").default} */(\r\n    transformWithOptions(geometry, true, opt_options)), opt_options);\r\n}\r\n\r\n\r\nexport default EsriJSON;\r\n\r\n//# sourceMappingURL=EsriJSON.js.map","/**\r\n * @module ol/format/filter/Filter\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\r\n * Base class for WFS GetFeature filters.\r\n *\r\n * @abstract\r\n */\r\nvar Filter = function Filter(tagName) {\r\n\r\n  /**\r\n   * @private\r\n   * @type {!string}\r\n   */\r\n  this.tagName_ = tagName;\r\n};\r\n\r\n/**\r\n * The XML tag name for a filter.\r\n * @returns {!string} Name.\r\n */\r\nFilter.prototype.getTagName = function getTagName () {\r\n  return this.tagName_;\r\n};\r\n\r\nexport default Filter;\r\n\r\n//# sourceMappingURL=Filter.js.map","/**\r\n * @module ol/format/filter/Bbox\r\n */\r\nimport Filter from './Filter.js';\r\n\r\n/**\r\n * @classdesc\r\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\r\n * intersects a fixed bounding box\r\n *\r\n * @api\r\n */\r\nvar Bbox = /*@__PURE__*/(function (Filter) {\n  function Bbox(geometryName, extent, opt_srsName) {\r\n\r\n    Filter.call(this, 'BBOX');\r\n\r\n    /**\r\n     * @type {!string}\r\n     */\r\n    this.geometryName = geometryName;\r\n\r\n    /**\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.extent = extent;\r\n\r\n    /**\r\n     * @type {string|undefined}\r\n     */\r\n    this.srsName = opt_srsName;\r\n  }\n\n  if ( Filter ) Bbox.__proto__ = Filter;\n  Bbox.prototype = Object.create( Filter && Filter.prototype );\n  Bbox.prototype.constructor = Bbox;\n\n  return Bbox;\n}(Filter));\r\n\r\nexport default Bbox;\r\n\r\n//# sourceMappingURL=Bbox.js.map","/**\r\n * @module ol/format/filter/Spatial\r\n */\r\nimport Filter from './Filter.js';\r\n\r\n/**\r\n * @classdesc\r\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\r\n * Represents a spatial operator to test whether a geometry-valued property\r\n * relates to a given geometry.\r\n *\r\n * @abstract\r\n */\r\nvar Spatial = /*@__PURE__*/(function (Filter) {\n  function Spatial(tagName, geometryName, geometry, opt_srsName) {\r\n\r\n    Filter.call(this, tagName);\r\n\r\n    /**\r\n     * @type {!string}\r\n     */\r\n    this.geometryName = geometryName || 'the_geom';\r\n\r\n    /**\r\n     * @type {import(\"../../geom/Geometry.js\").default}\r\n     */\r\n    this.geometry = geometry;\r\n\r\n    /**\r\n     * @type {string|undefined}\r\n     */\r\n    this.srsName = opt_srsName;\r\n  }\n\n  if ( Filter ) Spatial.__proto__ = Filter;\n  Spatial.prototype = Object.create( Filter && Filter.prototype );\n  Spatial.prototype.constructor = Spatial;\n\n  return Spatial;\n}(Filter));\r\n\r\nexport default Spatial;\r\n\r\n//# sourceMappingURL=Spatial.js.map","/**\r\n * @module ol/format/filter/Contains\r\n */\r\nimport Spatial from './Spatial.js';\r\n\r\n/**\r\n * @classdesc\r\n * Represents a `<Contains>` operator to test whether a geometry-valued property\r\n * contains a given geometry.\r\n * @api\r\n */\r\nvar Contains = /*@__PURE__*/(function (Spatial) {\n  function Contains(geometryName, geometry, opt_srsName) {\r\n\r\n    Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\r\n\r\n  }\n\n  if ( Spatial ) Contains.__proto__ = Spatial;\n  Contains.prototype = Object.create( Spatial && Spatial.prototype );\n  Contains.prototype.constructor = Contains;\n\n  return Contains;\n}(Spatial));\r\n\r\nexport default Contains;\r\n\r\n//# sourceMappingURL=Contains.js.map","/**\r\n * @module ol/format/filter/Comparison\r\n */\r\nimport Filter from './Filter.js';\r\n\r\n/**\r\n * @classdesc\r\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\r\n * Base class for WFS GetFeature property comparison filters.\r\n *\r\n * @abstract\r\n */\r\nvar Comparison = /*@__PURE__*/(function (Filter) {\n  function Comparison(tagName, propertyName) {\r\n\r\n    Filter.call(this, tagName);\r\n\r\n    /**\r\n     * @type {!string}\r\n     */\r\n    this.propertyName = propertyName;\r\n  }\n\n  if ( Filter ) Comparison.__proto__ = Filter;\n  Comparison.prototype = Object.create( Filter && Filter.prototype );\n  Comparison.prototype.constructor = Comparison;\n\n  return Comparison;\n}(Filter));\r\n\r\nexport default Comparison;\r\n\r\n//# sourceMappingURL=Comparison.js.map","/**\r\n * @module ol/format/filter/During\r\n */\r\nimport Comparison from './Comparison.js';\r\n\r\n/**\r\n * @classdesc\r\n * Represents a `<During>` comparison operator.\r\n * @api\r\n */\r\nvar During = /*@__PURE__*/(function (Comparison) {\n  function During(propertyName, begin, end) {\r\n    Comparison.call(this, 'During', propertyName);\r\n\r\n    /**\r\n     * @type {!string}\r\n     */\r\n    this.begin = begin;\r\n\r\n    /**\r\n     * @type {!string}\r\n     */\r\n    this.end = end;\r\n  }\n\n  if ( Comparison ) During.__proto__ = Comparison;\n  During.prototype = Object.create( Comparison && Comparison.prototype );\n  During.prototype.constructor = During;\n\n  return During;\n}(Comparison));\r\n\r\nexport default During;\r\n\r\n//# sourceMappingURL=During.js.map","/**\r\n * @module ol/format/filter/ComparisonBinary\r\n */\r\nimport Comparison from './Comparison.js';\r\n\r\n/**\r\n * @classdesc\r\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\r\n * Base class for WFS GetFeature property binary comparison filters.\r\n *\r\n * @abstract\r\n */\r\nvar ComparisonBinary = /*@__PURE__*/(function (Comparison) {\n  function ComparisonBinary(tagName, propertyName, expression, opt_matchCase) {\r\n\r\n    Comparison.call(this, tagName, propertyName);\r\n\r\n    /**\r\n     * @type {!(string|number)}\r\n     */\r\n    this.expression = expression;\r\n\r\n    /**\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.matchCase = opt_matchCase;\r\n  }\n\n  if ( Comparison ) ComparisonBinary.__proto__ = Comparison;\n  ComparisonBinary.prototype = Object.create( Comparison && Comparison.prototype );\n  ComparisonBinary.prototype.constructor = ComparisonBinary;\n\n  return ComparisonBinary;\n}(Comparison));\r\n\r\nexport default ComparisonBinary;\r\n\r\n//# sourceMappingURL=ComparisonBinary.js.map","/**\r\n * @module ol/format/filter/EqualTo\r\n */\r\nimport ComparisonBinary from './ComparisonBinary.js';\r\n\r\n/**\r\n * @classdesc\r\n * Represents a `<PropertyIsEqualTo>` comparison operator.\r\n * @api\r\n */\r\nvar EqualTo = /*@__PURE__*/(function (ComparisonBinary) {\n  function EqualTo(propertyName, expression, opt_matchCase) {\r\n    ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\r\n  }\n\n  if ( ComparisonBinary ) EqualTo.__proto__ = ComparisonBinary;\n  EqualTo.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  EqualTo.prototype.constructor = EqualTo;\n\n  return EqualTo;\n}(ComparisonBinary));\r\n\r\nexport default EqualTo;\r\n\r\n//# sourceMappingURL=EqualTo.js.map","/**\r\n * @module ol/format/filter/GreaterThan\r\n */\r\nimport ComparisonBinary from './ComparisonBinary.js';\r\n\r\n/**\r\n * @classdesc\r\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\r\n * @api\r\n */\r\nvar GreaterThan = /*@__PURE__*/(function (ComparisonBinary) {\n  function GreaterThan(propertyName, expression) {\r\n    ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\r\n  }\n\n  if ( ComparisonBinary ) GreaterThan.__proto__ = ComparisonBinary;\n  GreaterThan.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  GreaterThan.prototype.constructor = GreaterThan;\n\n  return GreaterThan;\n}(ComparisonBinary));\r\n\r\nexport default GreaterThan;\r\n\r\n//# sourceMappingURL=GreaterThan.js.map","/**\r\n * @module ol/format/filter/GreaterThanOrEqualTo\r\n */\r\nimport ComparisonBinary from './ComparisonBinary.js';\r\n\r\n/**\r\n * @classdesc\r\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\r\n * @api\r\n */\r\nvar GreaterThanOrEqualTo = /*@__PURE__*/(function (ComparisonBinary) {\n  function GreaterThanOrEqualTo(propertyName, expression) {\r\n    ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\r\n  }\n\n  if ( ComparisonBinary ) GreaterThanOrEqualTo.__proto__ = ComparisonBinary;\n  GreaterThanOrEqualTo.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  GreaterThanOrEqualTo.prototype.constructor = GreaterThanOrEqualTo;\n\n  return GreaterThanOrEqualTo;\n}(ComparisonBinary));\r\n\r\nexport default GreaterThanOrEqualTo;\r\n\r\n//# sourceMappingURL=GreaterThanOrEqualTo.js.map","/**\r\n * @module ol/format/filter/Intersects\r\n */\r\nimport Spatial from './Spatial.js';\r\n\r\n/**\r\n * @classdesc\r\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\r\n * intersects a given geometry.\r\n * @api\r\n */\r\nvar Intersects = /*@__PURE__*/(function (Spatial) {\n  function Intersects(geometryName, geometry, opt_srsName) {\r\n    Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\r\n  }\n\n  if ( Spatial ) Intersects.__proto__ = Spatial;\n  Intersects.prototype = Object.create( Spatial && Spatial.prototype );\n  Intersects.prototype.constructor = Intersects;\n\n  return Intersects;\n}(Spatial));\r\n\r\nexport default Intersects;\r\n\r\n//# sourceMappingURL=Intersects.js.map","/**\r\n * @module ol/format/filter/IsBetween\r\n */\r\nimport Comparison from './Comparison.js';\r\n\r\n/**\r\n * @classdesc\r\n * Represents a `<PropertyIsBetween>` comparison operator.\r\n * @api\r\n */\r\nvar IsBetween = /*@__PURE__*/(function (Comparison) {\n  function IsBetween(propertyName, lowerBoundary, upperBoundary) {\r\n    Comparison.call(this, 'PropertyIsBetween', propertyName);\r\n\r\n    /**\r\n     * @type {!number}\r\n     */\r\n    this.lowerBoundary = lowerBoundary;\r\n\r\n    /**\r\n     * @type {!number}\r\n     */\r\n    this.upperBoundary = upperBoundary;\r\n\r\n  }\n\n  if ( Comparison ) IsBetween.__proto__ = Comparison;\n  IsBetween.prototype = Object.create( Comparison && Comparison.prototype );\n  IsBetween.prototype.constructor = IsBetween;\n\n  return IsBetween;\n}(Comparison));\r\n\r\nexport default IsBetween;\r\n\r\n//# sourceMappingURL=IsBetween.js.map","/**\r\n * @module ol/format/filter/IsLike\r\n */\r\nimport Comparison from './Comparison.js';\r\n\r\n/**\r\n * @classdesc\r\n * Represents a `<PropertyIsLike>` comparison operator.\r\n * @api\r\n */\r\nvar IsLike = /*@__PURE__*/(function (Comparison) {\n  function IsLike(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\r\n    Comparison.call(this, 'PropertyIsLike', propertyName);\r\n\r\n    /**\r\n     * @type {!string}\r\n     */\r\n    this.pattern = pattern;\r\n\r\n    /**\r\n     * @type {!string}\r\n     */\r\n    this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\r\n\r\n    /**\r\n     * @type {!string}\r\n     */\r\n    this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\r\n\r\n    /**\r\n     * @type {!string}\r\n     */\r\n    this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\r\n\r\n    /**\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.matchCase = opt_matchCase;\r\n\r\n  }\n\n  if ( Comparison ) IsLike.__proto__ = Comparison;\n  IsLike.prototype = Object.create( Comparison && Comparison.prototype );\n  IsLike.prototype.constructor = IsLike;\n\n  return IsLike;\n}(Comparison));\r\n\r\nexport default IsLike;\r\n\r\n//# sourceMappingURL=IsLike.js.map","/**\r\n * @module ol/format/filter/IsNull\r\n */\r\nimport Comparison from './Comparison.js';\r\n\r\n/**\r\n * @classdesc\r\n * Represents a `<PropertyIsNull>` comparison operator.\r\n * @api\r\n */\r\nvar IsNull = /*@__PURE__*/(function (Comparison) {\n  function IsNull(propertyName) {\r\n    Comparison.call(this, 'PropertyIsNull', propertyName);\r\n  }\n\n  if ( Comparison ) IsNull.__proto__ = Comparison;\n  IsNull.prototype = Object.create( Comparison && Comparison.prototype );\n  IsNull.prototype.constructor = IsNull;\n\n  return IsNull;\n}(Comparison));\r\n\r\nexport default IsNull;\r\n\r\n//# sourceMappingURL=IsNull.js.map","/**\r\n * @module ol/format/filter/LessThan\r\n */\r\nimport ComparisonBinary from './ComparisonBinary.js';\r\n\r\n/**\r\n * @classdesc\r\n * Represents a `<PropertyIsLessThan>` comparison operator.\r\n * @api\r\n */\r\nvar LessThan = /*@__PURE__*/(function (ComparisonBinary) {\n  function LessThan(propertyName, expression) {\r\n    ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\r\n  }\n\n  if ( ComparisonBinary ) LessThan.__proto__ = ComparisonBinary;\n  LessThan.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  LessThan.prototype.constructor = LessThan;\n\n  return LessThan;\n}(ComparisonBinary));\r\n\r\nexport default LessThan;\r\n\r\n//# sourceMappingURL=LessThan.js.map","/**\r\n * @module ol/format/filter/LessThanOrEqualTo\r\n */\r\nimport ComparisonBinary from './ComparisonBinary.js';\r\n\r\n/**\r\n * @classdesc\r\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\r\n * @api\r\n */\r\nvar LessThanOrEqualTo = /*@__PURE__*/(function (ComparisonBinary) {\n  function LessThanOrEqualTo(propertyName, expression) {\r\n    ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\r\n  }\n\n  if ( ComparisonBinary ) LessThanOrEqualTo.__proto__ = ComparisonBinary;\n  LessThanOrEqualTo.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  LessThanOrEqualTo.prototype.constructor = LessThanOrEqualTo;\n\n  return LessThanOrEqualTo;\n}(ComparisonBinary));\r\n\r\nexport default LessThanOrEqualTo;\r\n\r\n//# sourceMappingURL=LessThanOrEqualTo.js.map","/**\r\n * @module ol/format/filter/Not\r\n */\r\nimport Filter from './Filter.js';\r\n\r\n/**\r\n * @classdesc\r\n * Represents a logical `<Not>` operator for a filter condition.\r\n * @api\r\n */\r\nvar Not = /*@__PURE__*/(function (Filter) {\n  function Not(condition) {\r\n\r\n    Filter.call(this, 'Not');\r\n\r\n    /**\r\n     * @type {!import(\"./Filter.js\").default}\r\n     */\r\n    this.condition = condition;\r\n\r\n  }\n\n  if ( Filter ) Not.__proto__ = Filter;\n  Not.prototype = Object.create( Filter && Filter.prototype );\n  Not.prototype.constructor = Not;\n\n  return Not;\n}(Filter));\r\n\r\nexport default Not;\r\n\r\n//# sourceMappingURL=Not.js.map","/**\r\n * @module ol/format/filter/NotEqualTo\r\n */\r\nimport ComparisonBinary from './ComparisonBinary.js';\r\n\r\n/**\r\n * @classdesc\r\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\r\n * @api\r\n */\r\nvar NotEqualTo = /*@__PURE__*/(function (ComparisonBinary) {\n  function NotEqualTo(propertyName, expression, opt_matchCase) {\r\n    ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\r\n  }\n\n  if ( ComparisonBinary ) NotEqualTo.__proto__ = ComparisonBinary;\n  NotEqualTo.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  NotEqualTo.prototype.constructor = NotEqualTo;\n\n  return NotEqualTo;\n}(ComparisonBinary));\r\n\r\nexport default NotEqualTo;\r\n\r\n//# sourceMappingURL=NotEqualTo.js.map","/**\r\n * @module ol/format/filter/LogicalNary\r\n */\r\nimport {assert} from '../../asserts.js';\r\nimport Filter from './Filter.js';\r\n\r\n/**\r\n * @classdesc\r\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\r\n * Base class for WFS GetFeature n-ary logical filters.\r\n *\r\n * @abstract\r\n */\r\nvar LogicalNary = /*@__PURE__*/(function (Filter) {\n  function LogicalNary(tagName, conditions) {\r\n\r\n    Filter.call(this, tagName);\r\n\r\n    /**\r\n     * @type {Array<import(\"./Filter.js\").default>}\r\n     */\r\n    this.conditions = conditions;\r\n    assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\r\n  }\n\n  if ( Filter ) LogicalNary.__proto__ = Filter;\n  LogicalNary.prototype = Object.create( Filter && Filter.prototype );\n  LogicalNary.prototype.constructor = LogicalNary;\n\n  return LogicalNary;\n}(Filter));\r\n\r\nexport default LogicalNary;\r\n\r\n//# sourceMappingURL=LogicalNary.js.map","/**\r\n * @module ol/format/filter/Or\r\n */\r\nimport LogicalNary from './LogicalNary.js';\r\n\r\n/**\r\n * @classdesc\r\n * Represents a logical `<Or>` operator between two ore more filter conditions.\r\n * @api\r\n */\r\nvar Or = /*@__PURE__*/(function (LogicalNary) {\n  function Or(conditions) {\r\n    LogicalNary.call(this, 'Or', Array.prototype.slice.call(arguments));\r\n  }\n\n  if ( LogicalNary ) Or.__proto__ = LogicalNary;\n  Or.prototype = Object.create( LogicalNary && LogicalNary.prototype );\n  Or.prototype.constructor = Or;\n\n  return Or;\n}(LogicalNary));\r\n\r\nexport default Or;\r\n\r\n//# sourceMappingURL=Or.js.map","/**\r\n * @module ol/format/filter/Within\r\n */\r\nimport Spatial from './Spatial.js';\r\n\r\n/**\r\n * @classdesc\r\n * Represents a `<Within>` operator to test whether a geometry-valued property\r\n * is within a given geometry.\r\n * @api\r\n */\r\nvar Within = /*@__PURE__*/(function (Spatial) {\n  function Within(geometryName, geometry, opt_srsName) {\r\n    Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\r\n  }\n\n  if ( Spatial ) Within.__proto__ = Spatial;\n  Within.prototype = Object.create( Spatial && Spatial.prototype );\n  Within.prototype.constructor = Within;\n\n  return Within;\n}(Spatial));\r\n\r\nexport default Within;\r\n\r\n//# sourceMappingURL=Within.js.map","/**\r\n * @module ol/format/filter/And\r\n */\r\nimport LogicalNary from './LogicalNary.js';\r\n\r\n/**\r\n * @classdesc\r\n * Represents a logical `<And>` operator between two or more filter conditions.\r\n *\r\n * @abstract\r\n */\r\nvar And = /*@__PURE__*/(function (LogicalNary) {\n  function And(conditions) {\r\n    LogicalNary.call(this, 'And', Array.prototype.slice.call(arguments));\r\n  }\n\n  if ( LogicalNary ) And.__proto__ = LogicalNary;\n  And.prototype = Object.create( LogicalNary && LogicalNary.prototype );\n  And.prototype.constructor = And;\n\n  return And;\n}(LogicalNary));\r\n\r\nexport default And;\r\n\r\n//# sourceMappingURL=And.js.map","/**\r\n * @module ol/format/filter\r\n */\r\nimport And from './filter/And.js';\r\nimport Bbox from './filter/Bbox.js';\r\nimport Contains from './filter/Contains.js';\r\nimport During from './filter/During.js';\r\nimport EqualTo from './filter/EqualTo.js';\r\nimport GreaterThan from './filter/GreaterThan.js';\r\nimport GreaterThanOrEqualTo from './filter/GreaterThanOrEqualTo.js';\r\nimport Intersects from './filter/Intersects.js';\r\nimport IsBetween from './filter/IsBetween.js';\r\nimport IsLike from './filter/IsLike.js';\r\nimport IsNull from './filter/IsNull.js';\r\nimport LessThan from './filter/LessThan.js';\r\nimport LessThanOrEqualTo from './filter/LessThanOrEqualTo.js';\r\nimport Not from './filter/Not.js';\r\nimport NotEqualTo from './filter/NotEqualTo.js';\r\nimport Or from './filter/Or.js';\r\nimport Within from './filter/Within.js';\r\n\r\n\r\n/**\r\n * Create a logical `<And>` operator between two or more filter conditions.\r\n *\r\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\r\n * @returns {!And} `<And>` operator.\r\n * @api\r\n */\r\nexport function and(conditions) {\r\n  var params = [null].concat(Array.prototype.slice.call(arguments));\r\n  return new (Function.prototype.bind.apply(And, params));\r\n}\r\n\r\n\r\n/**\r\n * Create a logical `<Or>` operator between two or more filter conditions.\r\n *\r\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\r\n * @returns {!Or} `<Or>` operator.\r\n * @api\r\n */\r\nexport function or(conditions) {\r\n  var params = [null].concat(Array.prototype.slice.call(arguments));\r\n  return new (Function.prototype.bind.apply(Or, params));\r\n}\r\n\r\n\r\n/**\r\n * Represents a logical `<Not>` operator for a filter condition.\r\n *\r\n * @param {!import(\"./filter/Filter.js\").default} condition Filter condition.\r\n * @returns {!Not} `<Not>` operator.\r\n * @api\r\n */\r\nexport function not(condition) {\r\n  return new Not(condition);\r\n}\r\n\r\n\r\n/**\r\n * Create a `<BBOX>` operator to test whether a geometry-valued property\r\n * intersects a fixed bounding box\r\n *\r\n * @param {!string} geometryName Geometry name to use.\r\n * @param {!import(\"../extent.js\").Extent} extent Extent.\r\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\r\n *    set on geometries when this is not provided.\r\n * @returns {!Bbox} `<BBOX>` operator.\r\n * @api\r\n */\r\nexport function bbox(geometryName, extent, opt_srsName) {\r\n  return new Bbox(geometryName, extent, opt_srsName);\r\n}\r\n\r\n/**\r\n * Create a `<Contains>` operator to test whether a geometry-valued property\r\n * contains a given geometry.\r\n *\r\n * @param {!string} geometryName Geometry name to use.\r\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\r\n *    set on geometries when this is not provided.\r\n * @returns {!Contains} `<Contains>` operator.\r\n * @api\r\n */\r\nexport function contains(geometryName, geometry, opt_srsName) {\r\n  return new Contains(geometryName, geometry, opt_srsName);\r\n}\r\n\r\n/**\r\n * Create a `<Intersects>` operator to test whether a geometry-valued property\r\n * intersects a given geometry.\r\n *\r\n * @param {!string} geometryName Geometry name to use.\r\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\r\n *    set on geometries when this is not provided.\r\n * @returns {!Intersects} `<Intersects>` operator.\r\n * @api\r\n */\r\nexport function intersects(geometryName, geometry, opt_srsName) {\r\n  return new Intersects(geometryName, geometry, opt_srsName);\r\n}\r\n\r\n/**\r\n * Create a `<Within>` operator to test whether a geometry-valued property\r\n * is within a given geometry.\r\n *\r\n * @param {!string} geometryName Geometry name to use.\r\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\r\n *    set on geometries when this is not provided.\r\n * @returns {!Within} `<Within>` operator.\r\n * @api\r\n */\r\nexport function within(geometryName, geometry, opt_srsName) {\r\n  return new Within(geometryName, geometry, opt_srsName);\r\n}\r\n\r\n\r\n/**\r\n * Creates a `<PropertyIsEqualTo>` comparison operator.\r\n *\r\n * @param {!string} propertyName Name of the context property to compare.\r\n * @param {!(string|number)} expression The value to compare.\r\n * @param {boolean=} opt_matchCase Case-sensitive?\r\n * @returns {!EqualTo} `<PropertyIsEqualTo>` operator.\r\n * @api\r\n */\r\nexport function equalTo(propertyName, expression, opt_matchCase) {\r\n  return new EqualTo(propertyName, expression, opt_matchCase);\r\n}\r\n\r\n\r\n/**\r\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\r\n *\r\n * @param {!string} propertyName Name of the context property to compare.\r\n * @param {!(string|number)} expression The value to compare.\r\n * @param {boolean=} opt_matchCase Case-sensitive?\r\n * @returns {!NotEqualTo} `<PropertyIsNotEqualTo>` operator.\r\n * @api\r\n */\r\nexport function notEqualTo(propertyName, expression, opt_matchCase) {\r\n  return new NotEqualTo(propertyName, expression, opt_matchCase);\r\n}\r\n\r\n\r\n/**\r\n * Creates a `<PropertyIsLessThan>` comparison operator.\r\n *\r\n * @param {!string} propertyName Name of the context property to compare.\r\n * @param {!number} expression The value to compare.\r\n * @returns {!LessThan} `<PropertyIsLessThan>` operator.\r\n * @api\r\n */\r\nexport function lessThan(propertyName, expression) {\r\n  return new LessThan(propertyName, expression);\r\n}\r\n\r\n\r\n/**\r\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\r\n *\r\n * @param {!string} propertyName Name of the context property to compare.\r\n * @param {!number} expression The value to compare.\r\n * @returns {!LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\r\n * @api\r\n */\r\nexport function lessThanOrEqualTo(propertyName, expression) {\r\n  return new LessThanOrEqualTo(propertyName, expression);\r\n}\r\n\r\n\r\n/**\r\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\r\n *\r\n * @param {!string} propertyName Name of the context property to compare.\r\n * @param {!number} expression The value to compare.\r\n * @returns {!GreaterThan} `<PropertyIsGreaterThan>` operator.\r\n * @api\r\n */\r\nexport function greaterThan(propertyName, expression) {\r\n  return new GreaterThan(propertyName, expression);\r\n}\r\n\r\n\r\n/**\r\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\r\n *\r\n * @param {!string} propertyName Name of the context property to compare.\r\n * @param {!number} expression The value to compare.\r\n * @returns {!GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\r\n * @api\r\n */\r\nexport function greaterThanOrEqualTo(propertyName, expression) {\r\n  return new GreaterThanOrEqualTo(propertyName, expression);\r\n}\r\n\r\n\r\n/**\r\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\r\n * is null.\r\n *\r\n * @param {!string} propertyName Name of the context property to compare.\r\n * @returns {!IsNull} `<PropertyIsNull>` operator.\r\n * @api\r\n */\r\nexport function isNull(propertyName) {\r\n  return new IsNull(propertyName);\r\n}\r\n\r\n\r\n/**\r\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\r\n * value lies within a range given by a lower and upper bound (inclusive).\r\n *\r\n * @param {!string} propertyName Name of the context property to compare.\r\n * @param {!number} lowerBoundary The lower bound of the range.\r\n * @param {!number} upperBoundary The upper bound of the range.\r\n * @returns {!IsBetween} `<PropertyIsBetween>` operator.\r\n * @api\r\n */\r\nexport function between(propertyName, lowerBoundary, upperBoundary) {\r\n  return new IsBetween(propertyName, lowerBoundary, upperBoundary);\r\n}\r\n\r\n\r\n/**\r\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\r\n * value against a text pattern.\r\n *\r\n * @param {!string} propertyName Name of the context property to compare.\r\n * @param {!string} pattern Text pattern.\r\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\r\n *    zero or more string characters. Default is '*'.\r\n * @param {string=} opt_singleChar pattern character which matches any single\r\n *    string character. Default is '.'.\r\n * @param {string=} opt_escapeChar Escape character which can be used to escape\r\n *    the pattern characters. Default is '!'.\r\n * @param {boolean=} opt_matchCase Case-sensitive?\r\n * @returns {!IsLike} `<PropertyIsLike>` operator.\r\n * @api\r\n */\r\nexport function like(propertyName, pattern,\r\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\r\n  return new IsLike(propertyName, pattern,\r\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\r\n}\r\n\r\n\r\n/**\r\n * Create a `<During>` temporal operator.\r\n *\r\n * @param {!string} propertyName Name of the context property to compare.\r\n * @param {!string} begin The begin date in ISO-8601 format.\r\n * @param {!string} end The end date in ISO-8601 format.\r\n * @returns {!During} `<During>` operator.\r\n * @api\r\n */\r\nexport function during(propertyName, begin, end) {\r\n  return new During(propertyName, begin, end);\r\n}\r\n\r\n//# sourceMappingURL=filter.js.map","/**\r\n * @module ol/geom/GeometryCollection\r\n */\r\nimport {listen, unlisten} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\r\nimport Geometry from './Geometry.js';\r\nimport GeometryType from './GeometryType.js';\r\nimport {clear} from '../obj.js';\r\n\r\n/**\r\n * @classdesc\r\n * An array of {@link module:ol/geom/Geometry} objects.\r\n *\r\n * @api\r\n */\r\nvar GeometryCollection = /*@__PURE__*/(function (Geometry) {\n  function GeometryCollection(opt_geometries) {\r\n\r\n    Geometry.call(this);\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<Geometry>}\r\n     */\r\n    this.geometries_ = opt_geometries ? opt_geometries : null;\r\n\r\n    this.listenGeometriesChange_();\r\n  }\n\n  if ( Geometry ) GeometryCollection.__proto__ = Geometry;\n  GeometryCollection.prototype = Object.create( Geometry && Geometry.prototype );\n  GeometryCollection.prototype.constructor = GeometryCollection;\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  GeometryCollection.prototype.unlistenGeometriesChange_ = function unlistenGeometriesChange_ () {\r\n    if (!this.geometries_) {\r\n      return;\r\n    }\r\n    for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\r\n      unlisten(\r\n        this.geometries_[i], EventType.CHANGE,\r\n        this.changed, this);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  GeometryCollection.prototype.listenGeometriesChange_ = function listenGeometriesChange_ () {\r\n    if (!this.geometries_) {\r\n      return;\r\n    }\r\n    for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\r\n      listen(\r\n        this.geometries_[i], EventType.CHANGE,\r\n        this.changed, this);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Make a complete copy of the geometry.\r\n   * @return {!GeometryCollection} Clone.\r\n   * @override\r\n   * @api\r\n   */\r\n  GeometryCollection.prototype.clone = function clone () {\r\n    var geometryCollection = new GeometryCollection(null);\r\n    geometryCollection.setGeometries(this.geometries_);\r\n    return geometryCollection;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  GeometryCollection.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\r\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\r\n      return minSquaredDistance;\r\n    }\r\n    var geometries = this.geometries_;\r\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\r\n      minSquaredDistance = geometries[i].closestPointXY(\r\n        x, y, closestPoint, minSquaredDistance);\r\n    }\r\n    return minSquaredDistance;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  GeometryCollection.prototype.containsXY = function containsXY (x, y) {\r\n    var geometries = this.geometries_;\r\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\r\n      if (geometries[i].containsXY(x, y)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  GeometryCollection.prototype.computeExtent = function computeExtent (extent) {\r\n    createOrUpdateEmpty(extent);\r\n    var geometries = this.geometries_;\r\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\r\n      extend(extent, geometries[i].getExtent());\r\n    }\r\n    return extent;\r\n  };\r\n\r\n  /**\r\n   * Return the geometries that make up this geometry collection.\r\n   * @return {Array<Geometry>} Geometries.\r\n   * @api\r\n   */\r\n  GeometryCollection.prototype.getGeometries = function getGeometries () {\r\n    return cloneGeometries(this.geometries_);\r\n  };\r\n\r\n  /**\r\n   * @return {Array<Geometry>} Geometries.\r\n   */\r\n  GeometryCollection.prototype.getGeometriesArray = function getGeometriesArray () {\r\n    return this.geometries_;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  GeometryCollection.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\r\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\r\n      clear(this.simplifiedGeometryCache);\r\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\r\n      this.simplifiedGeometryRevision = this.getRevision();\r\n    }\r\n    if (squaredTolerance < 0 ||\r\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\r\n         squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\r\n      return this;\r\n    }\r\n    var key = squaredTolerance.toString();\r\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\r\n      return this.simplifiedGeometryCache[key];\r\n    } else {\r\n      var simplifiedGeometries = [];\r\n      var geometries = this.geometries_;\r\n      var simplified = false;\r\n      for (var i = 0, ii = geometries.length; i < ii; ++i) {\r\n        var geometry = geometries[i];\r\n        var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\r\n        simplifiedGeometries.push(simplifiedGeometry);\r\n        if (simplifiedGeometry !== geometry) {\r\n          simplified = true;\r\n        }\r\n      }\r\n      if (simplified) {\r\n        var simplifiedGeometryCollection = new GeometryCollection(null);\r\n        simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\r\n        this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\r\n        return simplifiedGeometryCollection;\r\n      } else {\r\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\r\n        return this;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  GeometryCollection.prototype.getType = function getType () {\r\n    return GeometryType.GEOMETRY_COLLECTION;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  GeometryCollection.prototype.intersectsExtent = function intersectsExtent (extent) {\r\n    var geometries = this.geometries_;\r\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\r\n      if (geometries[i].intersectsExtent(extent)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * @return {boolean} Is empty.\r\n   */\r\n  GeometryCollection.prototype.isEmpty = function isEmpty () {\r\n    return this.geometries_.length === 0;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  GeometryCollection.prototype.rotate = function rotate (angle, anchor) {\r\n    var geometries = this.geometries_;\r\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\r\n      geometries[i].rotate(angle, anchor);\r\n    }\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  GeometryCollection.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\r\n    var anchor = opt_anchor;\r\n    if (!anchor) {\r\n      anchor = getCenter(this.getExtent());\r\n    }\r\n    var geometries = this.geometries_;\r\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\r\n      geometries[i].scale(sx, opt_sy, anchor);\r\n    }\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * Set the geometries that make up this geometry collection.\r\n   * @param {Array<Geometry>} geometries Geometries.\r\n   * @api\r\n   */\r\n  GeometryCollection.prototype.setGeometries = function setGeometries (geometries) {\r\n    this.setGeometriesArray(cloneGeometries(geometries));\r\n  };\r\n\r\n  /**\r\n   * @param {Array<Geometry>} geometries Geometries.\r\n   */\r\n  GeometryCollection.prototype.setGeometriesArray = function setGeometriesArray (geometries) {\r\n    this.unlistenGeometriesChange_();\r\n    this.geometries_ = geometries;\r\n    this.listenGeometriesChange_();\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  GeometryCollection.prototype.applyTransform = function applyTransform (transformFn) {\r\n    var geometries = this.geometries_;\r\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\r\n      geometries[i].applyTransform(transformFn);\r\n    }\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  GeometryCollection.prototype.translate = function translate (deltaX, deltaY) {\r\n    var geometries = this.geometries_;\r\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\r\n      geometries[i].translate(deltaX, deltaY);\r\n    }\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  GeometryCollection.prototype.disposeInternal = function disposeInternal () {\r\n    this.unlistenGeometriesChange_();\r\n    Geometry.prototype.disposeInternal.call(this);\r\n  };\n\n  return GeometryCollection;\n}(Geometry));\r\n\r\n\r\n/**\r\n * @param {Array<Geometry>} geometries Geometries.\r\n * @return {Array<Geometry>} Cloned geometries.\r\n */\r\nfunction cloneGeometries(geometries) {\r\n  var clonedGeometries = [];\r\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\r\n    clonedGeometries.push(geometries[i].clone());\r\n  }\r\n  return clonedGeometries;\r\n}\r\n\r\n\r\nexport default GeometryCollection;\r\n\r\n//# sourceMappingURL=GeometryCollection.js.map","/**\r\n * @module ol/format/GeoJSON\r\n */\r\n\r\nimport {assert} from '../asserts.js';\r\nimport Feature from '../Feature.js';\r\nimport {transformWithOptions} from './Feature.js';\r\nimport JSONFeature from './JSONFeature.js';\r\nimport GeometryCollection from '../geom/GeometryCollection.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport MultiLineString from '../geom/MultiLineString.js';\r\nimport MultiPoint from '../geom/MultiPoint.js';\r\nimport MultiPolygon from '../geom/MultiPolygon.js';\r\nimport Point from '../geom/Point.js';\r\nimport Polygon from '../geom/Polygon.js';\r\nimport {assign, isEmpty} from '../obj.js';\r\nimport {get as getProjection} from '../proj.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\n\r\n/**\r\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\r\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\r\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\r\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\r\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\r\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\r\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\r\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\r\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\r\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\r\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\r\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\r\n * written by the format.  Options passed to read or write methods will take precedence.\r\n * @property {string} [geometryName] Geometry name to use when creating features.\r\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\r\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\r\n * will look for that field to set the geometry name. If both this field is set to `true`\r\n * and a `geometryName` is provided, the `geometryName` will take precedence.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Feature format for reading and writing data in the GeoJSON format.\r\n *\r\n  * @api\r\n */\r\nvar GeoJSON = /*@__PURE__*/(function (JSONFeature) {\n  function GeoJSON(opt_options) {\r\n\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    JSONFeature.call(this);\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    this.dataProjection = getProjection(\r\n      options.dataProjection ?\r\n        options.dataProjection : 'EPSG:4326');\r\n\r\n    if (options.featureProjection) {\r\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\r\n    }\r\n\r\n    /**\r\n     * Name of the geometry attribute for features.\r\n     * @type {string|undefined}\r\n     * @private\r\n     */\r\n    this.geometryName_ = options.geometryName;\r\n\r\n    /**\r\n     * Look for the geometry name in the feature GeoJSON\r\n     * @type {boolean|undefined}\r\n     * @private\r\n     */\r\n    this.extractGeometryName_ = options.extractGeometryName;\r\n\r\n  }\n\n  if ( JSONFeature ) GeoJSON.__proto__ = JSONFeature;\n  GeoJSON.prototype = Object.create( JSONFeature && JSONFeature.prototype );\n  GeoJSON.prototype.constructor = GeoJSON;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  GeoJSON.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\r\n    /**\r\n     * @type {GeoJSONFeature}\r\n     */\r\n    var geoJSONFeature = null;\r\n    if (object['type'] === 'Feature') {\r\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\r\n    } else {\r\n      geoJSONFeature = {\r\n        'type': 'Feature',\r\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\r\n        'properties': null\r\n      };\r\n    }\r\n\r\n    var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\r\n    var feature = new Feature();\r\n    if (this.geometryName_) {\r\n      feature.setGeometryName(this.geometryName_);\r\n    } else if (this.extractGeometryName_ && 'geometry_name' in geoJSONFeature !== undefined) {\r\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\r\n    }\r\n    feature.setGeometry(geometry);\r\n\r\n    if ('id' in geoJSONFeature) {\r\n      feature.setId(geoJSONFeature['id']);\r\n    }\r\n\r\n    if (geoJSONFeature['properties']) {\r\n      feature.setProperties(geoJSONFeature['properties']);\r\n    }\r\n    return feature;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  GeoJSON.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\r\n    var geoJSONObject = /** @type {GeoJSONObject} */ (object);\r\n    /** @type {Array<import(\"../Feature.js\").default>} */\r\n    var features = null;\r\n    if (geoJSONObject['type'] === 'FeatureCollection') {\r\n      var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\r\n      features = [];\r\n      var geoJSONFeatures = geoJSONFeatureCollection['features'];\r\n      for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\r\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\r\n      }\r\n    } else {\r\n      features = [this.readFeatureFromObject(object, opt_options)];\r\n    }\r\n    return features;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  GeoJSON.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\r\n    return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  GeoJSON.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\r\n    var crs = object['crs'];\r\n    var projection;\r\n    if (crs) {\r\n      if (crs['type'] == 'name') {\r\n        projection = getProjection(crs['properties']['name']);\r\n      } else {\r\n        assert(false, 36); // Unknown SRS type\r\n      }\r\n    } else {\r\n      projection = this.dataProjection;\r\n    }\r\n    return (\r\n      /** @type {import(\"../proj/Projection.js\").default} */ (projection)\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Encode a feature as a GeoJSON Feature object.\r\n   *\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n   * @return {GeoJSONFeature} Object.\r\n   * @override\r\n   * @api\r\n   */\r\n  GeoJSON.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\r\n    opt_options = this.adaptOptions(opt_options);\r\n\r\n    /** @type {GeoJSONFeature} */\r\n    var object = {\r\n      'type': 'Feature',\r\n      geometry: null,\r\n      properties: null\r\n    };\r\n\r\n    var id = feature.getId();\r\n    if (id !== undefined) {\r\n      object.id = id;\r\n    }\r\n\r\n    var geometry = feature.getGeometry();\r\n    if (geometry) {\r\n      object.geometry = writeGeometry(geometry, opt_options);\r\n    }\r\n\r\n    var properties = feature.getProperties();\r\n    delete properties[feature.getGeometryName()];\r\n    if (!isEmpty(properties)) {\r\n      object.properties = properties;\r\n    }\r\n    return object;\r\n  };\r\n\r\n  /**\r\n   * Encode an array of features as a GeoJSON object.\r\n   *\r\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\r\n   * @override\r\n   * @api\r\n   */\r\n  GeoJSON.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\r\n    opt_options = this.adaptOptions(opt_options);\r\n    var objects = [];\r\n    for (var i = 0, ii = features.length; i < ii; ++i) {\r\n      objects.push(this.writeFeatureObject(features[i], opt_options));\r\n    }\r\n    return {\r\n      type: 'FeatureCollection',\r\n      features: objects\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Encode a geometry as a GeoJSON object.\r\n   *\r\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\r\n   * @override\r\n   * @api\r\n   */\r\n  GeoJSON.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\r\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\r\n  };\n\n  return GeoJSON;\n}(JSONFeature));\r\n\r\n\r\n/**\r\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\r\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\r\n */\r\nfunction readGeometry(object, opt_options) {\r\n  if (!object) {\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * @type {import(\"../geom/Geometry.js\").default}\r\n   */\r\n  var geometry;\r\n  switch (object['type']) {\r\n    case GeometryType.POINT: {\r\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\r\n      break;\r\n    }\r\n    case GeometryType.LINE_STRING: {\r\n      geometry = readLineStringGeometry(/** @type {GeoJSONLineString} */ (object));\r\n      break;\r\n    }\r\n    case GeometryType.POLYGON: {\r\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\r\n      break;\r\n    }\r\n    case GeometryType.MULTI_POINT: {\r\n      geometry = readMultiPointGeometry(/** @type {GeoJSONMultiPoint} */ (object));\r\n      break;\r\n    }\r\n    case GeometryType.MULTI_LINE_STRING: {\r\n      geometry = readMultiLineStringGeometry(/** @type {GeoJSONMultiLineString} */ (object));\r\n      break;\r\n    }\r\n    case GeometryType.MULTI_POLYGON: {\r\n      geometry = readMultiPolygonGeometry(/** @type {GeoJSONMultiPolygon} */ (object));\r\n      break;\r\n    }\r\n    case GeometryType.GEOMETRY_COLLECTION: {\r\n      geometry = readGeometryCollectionGeometry(/** @type {GeoJSONGeometryCollection} */ (object));\r\n      break;\r\n    }\r\n    default: {\r\n      throw new Error('Unsupported GeoJSON type: ' + object.type);\r\n    }\r\n  }\r\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, false, opt_options));\r\n}\r\n\r\n\r\n/**\r\n * @param {GeoJSONGeometryCollection} object Object.\r\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n * @return {GeometryCollection} Geometry collection.\r\n */\r\nfunction readGeometryCollectionGeometry(object, opt_options) {\r\n  var geometries = object['geometries'].map(\r\n    /**\r\n     * @param {GeoJSONGeometry} geometry Geometry.\r\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n     */\r\n    function(geometry) {\r\n      return readGeometry(geometry, opt_options);\r\n    });\r\n  return new GeometryCollection(geometries);\r\n}\r\n\r\n\r\n/**\r\n * @param {GeoJSONPoint} object Object.\r\n * @return {Point} Point.\r\n */\r\nfunction readPointGeometry(object) {\r\n  return new Point(object['coordinates']);\r\n}\r\n\r\n\r\n/**\r\n * @param {GeoJSONLineString} object Object.\r\n * @return {LineString} LineString.\r\n */\r\nfunction readLineStringGeometry(object) {\r\n  return new LineString(object['coordinates']);\r\n}\r\n\r\n\r\n/**\r\n * @param {GeoJSONMultiLineString} object Object.\r\n * @return {MultiLineString} MultiLineString.\r\n */\r\nfunction readMultiLineStringGeometry(object) {\r\n  return new MultiLineString(object['coordinates']);\r\n}\r\n\r\n\r\n/**\r\n * @param {GeoJSONMultiPoint} object Object.\r\n * @return {MultiPoint} MultiPoint.\r\n */\r\nfunction readMultiPointGeometry(object) {\r\n  return new MultiPoint(object['coordinates']);\r\n}\r\n\r\n\r\n/**\r\n * @param {GeoJSONMultiPolygon} object Object.\r\n * @return {MultiPolygon} MultiPolygon.\r\n */\r\nfunction readMultiPolygonGeometry(object) {\r\n  return new MultiPolygon(object['coordinates']);\r\n}\r\n\r\n\r\n/**\r\n * @param {GeoJSONPolygon} object Object.\r\n * @return {Polygon} Polygon.\r\n */\r\nfunction readPolygonGeometry(object) {\r\n  return new Polygon(object['coordinates']);\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {GeoJSONGeometry} GeoJSON geometry.\r\n */\r\nfunction writeGeometry(geometry, opt_options) {\r\n  geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, true, opt_options));\r\n  var type = geometry.getType();\r\n\r\n  /** @type {GeoJSONGeometry} */\r\n  var geoJSON;\r\n  switch (type) {\r\n    case GeometryType.POINT: {\r\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), opt_options);\r\n      break;\r\n    }\r\n    case GeometryType.LINE_STRING: {\r\n      geoJSON = writeLineStringGeometry(/** @type {LineString} */ (geometry), opt_options);\r\n      break;\r\n    }\r\n    case GeometryType.POLYGON: {\r\n      geoJSON = writePolygonGeometry(/** @type {Polygon} */ (geometry), opt_options);\r\n      break;\r\n    }\r\n    case GeometryType.MULTI_POINT: {\r\n      geoJSON = writeMultiPointGeometry(/** @type {MultiPoint} */ (geometry), opt_options);\r\n      break;\r\n    }\r\n    case GeometryType.MULTI_LINE_STRING: {\r\n      geoJSON = writeMultiLineStringGeometry(/** @type {MultiLineString} */ (geometry), opt_options);\r\n      break;\r\n    }\r\n    case GeometryType.MULTI_POLYGON: {\r\n      geoJSON = writeMultiPolygonGeometry(/** @type {MultiPolygon} */ (geometry), opt_options);\r\n      break;\r\n    }\r\n    case GeometryType.GEOMETRY_COLLECTION: {\r\n      geoJSON = writeGeometryCollectionGeometry(/** @type {GeometryCollection} */ (geometry), opt_options);\r\n      break;\r\n    }\r\n    case GeometryType.CIRCLE: {\r\n      geoJSON = {\r\n        type: 'GeometryCollection',\r\n        geometries: []\r\n      };\r\n      break;\r\n    }\r\n    default: {\r\n      throw new Error('Unsupported geometry type: ' + type);\r\n    }\r\n  }\r\n  return geoJSON;\r\n}\r\n\r\n\r\n/**\r\n * @param {GeometryCollection} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\r\n */\r\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\r\n  var geometries = geometry.getGeometriesArray().map(function(geometry) {\r\n    var options = assign({}, opt_options);\r\n    delete options.featureProjection;\r\n    return writeGeometry(geometry, options);\r\n  });\r\n  return {\r\n    type: 'GeometryCollection',\r\n    geometries: geometries\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * @param {LineString} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {GeoJSONGeometry} GeoJSON geometry.\r\n */\r\nfunction writeLineStringGeometry(geometry, opt_options) {\r\n  return {\r\n    type: 'LineString',\r\n    coordinates: geometry.getCoordinates()\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * @param {MultiLineString} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {GeoJSONGeometry} GeoJSON geometry.\r\n */\r\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\r\n  return {\r\n    type: 'MultiLineString',\r\n    coordinates: geometry.getCoordinates()\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * @param {MultiPoint} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {GeoJSONGeometry} GeoJSON geometry.\r\n */\r\nfunction writeMultiPointGeometry(geometry, opt_options) {\r\n  return {\r\n    type: 'MultiPoint',\r\n    coordinates: geometry.getCoordinates()\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * @param {MultiPolygon} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {GeoJSONGeometry} GeoJSON geometry.\r\n */\r\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\r\n  var right;\r\n  if (opt_options) {\r\n    right = opt_options.rightHanded;\r\n  }\r\n  return {\r\n    type: 'MultiPolygon',\r\n    coordinates: geometry.getCoordinates(right)\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * @param {Point} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {GeoJSONGeometry} GeoJSON geometry.\r\n */\r\nfunction writePointGeometry(geometry, opt_options) {\r\n  return {\r\n    type: 'Point',\r\n    coordinates: geometry.getCoordinates()\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * @param {Polygon} geometry Geometry.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n * @return {GeoJSONGeometry} GeoJSON geometry.\r\n */\r\nfunction writePolygonGeometry(geometry, opt_options) {\r\n  var right;\r\n  if (opt_options) {\r\n    right = opt_options.rightHanded;\r\n  }\r\n  return {\r\n    type: 'Polygon',\r\n    coordinates: geometry.getCoordinates(right)\r\n  };\r\n}\r\n\r\n\r\nexport default GeoJSON;\r\n\r\n//# sourceMappingURL=GeoJSON.js.map","/**\r\n * @module ol/xml\r\n */\r\nimport {extend} from './array.js';\r\n\r\n\r\n/**\r\n * When using {@link module:ol/xml~makeChildAppender} or\r\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\r\n * to have this structure.\r\n * @typedef {Object} NodeStackItem\r\n * @property {Node} node\r\n */\r\n\r\n\r\n/**\r\n * @typedef {function(Element, Array<*>)} Parser\r\n */\r\n\r\n\r\n/**\r\n * @typedef {function(Element, *, Array<*>)} Serializer\r\n */\r\n\r\n\r\n/**\r\n * This document should be used when creating nodes for XML serializations. This\r\n * document is also used by {@link module:ol/xml~createElementNS}\r\n * @const\r\n * @type {Document}\r\n */\r\nexport var DOCUMENT = document.implementation.createDocument('', '', null);\r\n\r\n\r\n/**\r\n * @type {string}\r\n */\r\nexport var XML_SCHEMA_INSTANCE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\r\n\r\n\r\n/**\r\n * @param {string} namespaceURI Namespace URI.\r\n * @param {string} qualifiedName Qualified name.\r\n * @return {Element} Node.\r\n */\r\nexport function createElementNS(namespaceURI, qualifiedName) {\r\n  return DOCUMENT.createElementNS(namespaceURI, qualifiedName);\r\n}\r\n\r\n\r\n/**\r\n * Recursively grab all text content of child nodes into a single string.\r\n * @param {Node} node Node.\r\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\r\n * breaks.\r\n * @return {string} All text content.\r\n * @api\r\n */\r\nexport function getAllTextContent(node, normalizeWhitespace) {\r\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\r\n}\r\n\r\n\r\n/**\r\n * Recursively grab all text content of child nodes into a single string.\r\n * @param {Node} node Node.\r\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\r\n * breaks.\r\n * @param {Array<string>} accumulator Accumulator.\r\n * @private\r\n * @return {Array<string>} Accumulator.\r\n */\r\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\r\n  if (node.nodeType == Node.CDATA_SECTION_NODE ||\r\n      node.nodeType == Node.TEXT_NODE) {\r\n    if (normalizeWhitespace) {\r\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\r\n    } else {\r\n      accumulator.push(node.nodeValue);\r\n    }\r\n  } else {\r\n    var n;\r\n    for (n = node.firstChild; n; n = n.nextSibling) {\r\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\r\n    }\r\n  }\r\n  return accumulator;\r\n}\r\n\r\n\r\n/**\r\n * @param {Object} object Object.\r\n * @return {boolean} Is a document.\r\n */\r\nexport function isDocument(object) {\r\n  return 'documentElement' in object;\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {?string} namespaceURI Namespace URI.\r\n * @param {string} name Attribute name.\r\n * @return {string} Value\r\n */\r\nexport function getAttributeNS(node, namespaceURI, name) {\r\n  return node.getAttributeNS(namespaceURI, name) || '';\r\n}\r\n\r\n\r\n/**\r\n * Parse an XML string to an XML Document.\r\n * @param {string} xml XML.\r\n * @return {Document} Document.\r\n * @api\r\n */\r\nexport function parse(xml) {\r\n  return new DOMParser().parseFromString(xml, 'application/xml');\r\n}\r\n\r\n\r\n/**\r\n * Make an array extender function for extending the array at the top of the\r\n * object stack.\r\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\r\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\r\n * @return {Parser} Parser.\r\n * @template T\r\n */\r\nexport function makeArrayExtender(valueReader, opt_this) {\r\n  return (\r\n    /**\r\n     * @param {Node} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     */\r\n    function(node, objectStack) {\r\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\r\n      if (value !== undefined) {\r\n        var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\r\n        extend(array, value);\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * Make an array pusher function for pushing to the array at the top of the\r\n * object stack.\r\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\r\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\r\n * @return {Parser} Parser.\r\n * @template T\r\n */\r\nexport function makeArrayPusher(valueReader, opt_this) {\r\n  return (\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     */\r\n    function(node, objectStack) {\r\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\r\n      if (value !== undefined) {\r\n        var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\r\n        array.push(value);\r\n      }\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * Make an object stack replacer function for replacing the object at the\r\n * top of the stack.\r\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\r\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\r\n * @return {Parser} Parser.\r\n * @template T\r\n */\r\nexport function makeReplacer(valueReader, opt_this) {\r\n  return (\r\n    /**\r\n     * @param {Node} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     */\r\n    function(node, objectStack) {\r\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\r\n      if (value !== undefined) {\r\n        objectStack[objectStack.length - 1] = value;\r\n      }\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * Make an object property pusher function for adding a property to the\r\n * object at the top of the stack.\r\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\r\n * @param {string=} opt_property Property.\r\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\r\n * @return {Parser} Parser.\r\n * @template T\r\n */\r\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\r\n  return (\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     */\r\n    function(node, objectStack) {\r\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\r\n      if (value !== undefined) {\r\n        var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\r\n        var property = opt_property !== undefined ? opt_property : node.localName;\r\n        var array;\r\n        if (property in object) {\r\n          array = object[property];\r\n        } else {\r\n          array = object[property] = [];\r\n        }\r\n        array.push(value);\r\n      }\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * Make an object property setter function.\r\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\r\n * @param {string=} opt_property Property.\r\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\r\n * @return {Parser} Parser.\r\n * @template T\r\n */\r\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\r\n  return (\r\n    /**\r\n     * @param {Element} node Node.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     */\r\n    function(node, objectStack) {\r\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\r\n      if (value !== undefined) {\r\n        var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\r\n        var property = opt_property !== undefined ? opt_property : node.localName;\r\n        object[property] = value;\r\n      }\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * Create a serializer that appends nodes written by its `nodeWriter` to its\r\n * designated parent. The parent is the `node` of the\r\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\r\n * @param {function(this: T, Node, V, Array<*>)} nodeWriter Node writer.\r\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\r\n * @return {Serializer} Serializer.\r\n * @template T, V\r\n */\r\nexport function makeChildAppender(nodeWriter, opt_this) {\r\n  return function(node, value, objectStack) {\r\n    nodeWriter.call(opt_this !== undefined ? opt_this : this, node, value, objectStack);\r\n    var parent = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\r\n    var parentNode = parent.node;\r\n    parentNode.appendChild(node);\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Create a serializer that calls the provided `nodeWriter` from\r\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\r\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\r\n * designed to serialize a single item. An example would be a LineString\r\n * geometry writer, which could be reused for writing MultiLineString\r\n * geometries.\r\n * @param {function(this: T, Element, V, Array<*>)} nodeWriter Node writer.\r\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\r\n * @return {Serializer} Serializer.\r\n * @template T, V\r\n */\r\nexport function makeArraySerializer(nodeWriter, opt_this) {\r\n  var serializersNS, nodeFactory;\r\n  return function(node, value, objectStack) {\r\n    if (serializersNS === undefined) {\r\n      serializersNS = {};\r\n      var serializers = {};\r\n      serializers[node.localName] = nodeWriter;\r\n      serializersNS[node.namespaceURI] = serializers;\r\n      nodeFactory = makeSimpleNodeFactory(node.localName);\r\n    }\r\n    serialize(serializersNS, nodeFactory, value, objectStack);\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Create a node factory which can use the `opt_keys` passed to\r\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\r\n * or a fixed node name. The namespace of the created nodes can either be fixed,\r\n * or the parent namespace will be used.\r\n * @param {string=} opt_nodeName Fixed node name which will be used for all\r\n *     created nodes. If not provided, the 3rd argument to the resulting node\r\n *     factory needs to be provided and will be the nodeName.\r\n * @param {string=} opt_namespaceURI Fixed namespace URI which will be used for\r\n *     all created nodes. If not provided, the namespace of the parent node will\r\n *     be used.\r\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\r\n */\r\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\r\n  var fixedNodeName = opt_nodeName;\r\n  return (\r\n    /**\r\n     * @param {*} value Value.\r\n     * @param {Array<*>} objectStack Object stack.\r\n     * @param {string=} opt_nodeName Node name.\r\n     * @return {Node} Node.\r\n     */\r\n    function(value, objectStack, opt_nodeName) {\r\n      var context = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\r\n      var node = context.node;\r\n      var nodeName = fixedNodeName;\r\n      if (nodeName === undefined) {\r\n        nodeName = opt_nodeName;\r\n      }\r\n\r\n      var namespaceURI = opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\r\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\r\n    }\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * A node factory that creates a node using the parent's `namespaceURI` and the\r\n * `nodeName` passed by {@link module:ol/xml~serialize} or\r\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\r\n * @const\r\n * @type {function(*, Array<*>, string=): (Node|undefined)}\r\n */\r\nexport var OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\r\n\r\n\r\n/**\r\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\r\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\r\n * `opt_key` argument.\r\n * @param {Object<string, V>} object Key-value pairs for the sequence. Keys can\r\n *     be a subset of the `orderedKeys`.\r\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\r\n * @return {Array<V>} Values in the order of the sequence. The resulting array\r\n *     has the same length as the `orderedKeys` array. Values that are not\r\n *     present in `object` will be `undefined` in the resulting array.\r\n * @template V\r\n */\r\nexport function makeSequence(object, orderedKeys) {\r\n  var length = orderedKeys.length;\r\n  var sequence = new Array(length);\r\n  for (var i = 0; i < length; ++i) {\r\n    sequence[i] = object[orderedKeys[i]];\r\n  }\r\n  return sequence;\r\n}\r\n\r\n\r\n/**\r\n * Create a namespaced structure, using the same values for each namespace.\r\n * This can be used as a starting point for versioned parsers, when only a few\r\n * values are version specific.\r\n * @param {Array<string>} namespaceURIs Namespace URIs.\r\n * @param {T} structure Structure.\r\n * @param {Object<string, T>=} opt_structureNS Namespaced structure to add to.\r\n * @return {Object<string, T>} Namespaced structure.\r\n * @template T\r\n */\r\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\r\n  /**\r\n   * @type {Object<string, T>}\r\n   */\r\n  var structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\r\n  var i, ii;\r\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\r\n    structureNS[namespaceURIs[i]] = structure;\r\n  }\r\n  return structureNS;\r\n}\r\n\r\n\r\n/**\r\n * Parse a node using the parsers and object stack.\r\n * @param {Object<string, Object<string, Parser>>} parsersNS\r\n *     Parsers by namespace.\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @param {*=} opt_this The object to use as `this`.\r\n */\r\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\r\n  var n;\r\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\r\n    var parsers = parsersNS[n.namespaceURI];\r\n    if (parsers !== undefined) {\r\n      var parser = parsers[n.localName];\r\n      if (parser !== undefined) {\r\n        parser.call(opt_this, n, objectStack);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Push an object on top of the stack, parse and return the popped object.\r\n * @param {T} object Object.\r\n * @param {Object<string, Object<string, Parser>>} parsersNS\r\n *     Parsers by namespace.\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @param {*=} opt_this The object to use as `this`.\r\n * @return {T} Object.\r\n * @template T\r\n */\r\nexport function pushParseAndPop(object, parsersNS, node, objectStack, opt_this) {\r\n  objectStack.push(object);\r\n  parseNode(parsersNS, node, objectStack, opt_this);\r\n  return /** @type {T} */ (objectStack.pop());\r\n}\r\n\r\n\r\n/**\r\n * Walk through an array of `values` and call a serializer for each value.\r\n * @param {Object<string, Object<string, Serializer>>} serializersNS\r\n *     Namespaced serializers.\r\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\r\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\r\n *     will be used to choose a node writer from `serializersNS`. This\r\n *     separation allows us to decide what kind of node to create, depending on\r\n *     the value we want to serialize. An example for this would be different\r\n *     geometry writers based on the geometry type.\r\n * @param {Array<*>} values Values to serialize. An example would be an array\r\n *     of {@link module:ol/Feature~Feature} instances.\r\n * @param {Array<*>} objectStack Node stack.\r\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\r\n *     `nodeFactory`. This is used for serializing object literals where the\r\n *     node name relates to the property key. The array length of `opt_keys` has\r\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\r\n *     determines the order of the sequence.\r\n * @param {T=} opt_this The object to use as `this` for the node factory and\r\n *     serializers.\r\n * @template T\r\n */\r\nexport function serialize(\r\n  serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\r\n  var length = (opt_keys !== undefined ? opt_keys : values).length;\r\n  var value, node;\r\n  for (var i = 0; i < length; ++i) {\r\n    value = values[i];\r\n    if (value !== undefined) {\r\n      node = nodeFactory.call(opt_this !== undefined ? opt_this : this, value, objectStack,\r\n        opt_keys !== undefined ? opt_keys[i] : undefined);\r\n      if (node !== undefined) {\r\n        serializersNS[node.namespaceURI][node.localName]\r\n          .call(opt_this, node, value, objectStack);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {O} object Object.\r\n * @param {Object<string, Object<string, Serializer>>} serializersNS\r\n *     Namespaced serializers.\r\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\r\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\r\n *     will be used to choose a node writer from `serializersNS`. This\r\n *     separation allows us to decide what kind of node to create, depending on\r\n *     the value we want to serialize. An example for this would be different\r\n *     geometry writers based on the geometry type.\r\n * @param {Array<*>} values Values to serialize. An example would be an array\r\n *     of {@link module:ol/Feature~Feature} instances.\r\n * @param {Array<*>} objectStack Node stack.\r\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\r\n *     `nodeFactory`. This is used for serializing object literals where the\r\n *     node name relates to the property key. The array length of `opt_keys` has\r\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\r\n *     determines the order of the sequence.\r\n * @param {T=} opt_this The object to use as `this` for the node factory and\r\n *     serializers.\r\n * @return {O|undefined} Object.\r\n * @template O, T\r\n */\r\nexport function pushSerializeAndPop(object, serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\r\n  objectStack.push(object);\r\n  serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\r\n  return /** @type {O|undefined} */ (objectStack.pop());\r\n}\r\n\r\n//# sourceMappingURL=xml.js.map","/**\r\n * @module ol/format/XMLFeature\r\n */\r\nimport {abstract} from '../util.js';\r\nimport {extend} from '../array.js';\r\nimport FeatureFormat from '../format/Feature.js';\r\nimport FormatType from '../format/FormatType.js';\r\nimport {isDocument, parse} from '../xml.js';\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Base class for XML feature formats.\r\n *\r\n * @abstract\r\n */\r\nvar XMLFeature = /*@__PURE__*/(function (FeatureFormat) {\n  function XMLFeature() {\r\n    FeatureFormat.call(this);\r\n\r\n    /**\r\n     * @type {XMLSerializer}\r\n     * @private\r\n     */\r\n    this.xmlSerializer_ = new XMLSerializer();\r\n  }\n\n  if ( FeatureFormat ) XMLFeature.__proto__ = FeatureFormat;\n  XMLFeature.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  XMLFeature.prototype.constructor = XMLFeature;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  XMLFeature.prototype.getType = function getType () {\r\n    return FormatType.XML;\r\n  };\r\n\r\n  /**\r\n   * Read a single feature.\r\n   *\r\n   * @param {Document|Node|Object|string} source Source.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n   * @return {import(\"../Feature.js\").default} Feature.\r\n   * @api\r\n   */\r\n  XMLFeature.prototype.readFeature = function readFeature (source, opt_options) {\r\n    if (!source) {\r\n      return null;\r\n    } else if (typeof source === 'string') {\r\n      var doc = parse(source);\r\n      return this.readFeatureFromDocument(doc, opt_options);\r\n    } else if (isDocument(source)) {\r\n      return this.readFeatureFromDocument(/** @type {Document} */ (source), opt_options);\r\n    } else {\r\n      return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Document} doc Document.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\r\n   * @return {import(\"../Feature.js\").default} Feature.\r\n   */\r\n  XMLFeature.prototype.readFeatureFromDocument = function readFeatureFromDocument (doc, opt_options) {\r\n    var features = this.readFeaturesFromDocument(doc, opt_options);\r\n    if (features.length > 0) {\r\n      return features[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\r\n   * @return {import(\"../Feature.js\").default} Feature.\r\n   */\r\n  XMLFeature.prototype.readFeatureFromNode = function readFeatureFromNode (node, opt_options) {\r\n    return null; // not implemented\r\n  };\r\n\r\n  /**\r\n   * Read all features from a feature collection.\r\n   *\r\n   * @param {Document|Node|Object|string} source Source.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\r\n   * @return {Array<import(\"../Feature.js\").default>} Features.\r\n   * @api\r\n   */\r\n  XMLFeature.prototype.readFeatures = function readFeatures (source, opt_options) {\r\n    if (!source) {\r\n      return [];\r\n    } else if (typeof source === 'string') {\r\n      var doc = parse(source);\r\n      return this.readFeaturesFromDocument(doc, opt_options);\r\n    } else if (isDocument(source)) {\r\n      return this.readFeaturesFromDocument(\r\n        /** @type {Document} */ (source), opt_options);\r\n    } else {\r\n      return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Document} doc Document.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\r\n   * @protected\r\n   * @return {Array<import(\"../Feature.js\").default>} Features.\r\n   */\r\n  XMLFeature.prototype.readFeaturesFromDocument = function readFeaturesFromDocument (doc, opt_options) {\r\n    /** @type {Array<import(\"../Feature.js\").default>} */\r\n    var features = [];\r\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\r\n      if (n.nodeType == Node.ELEMENT_NODE) {\r\n        extend(features, this.readFeaturesFromNode(n, opt_options));\r\n      }\r\n    }\r\n    return features;\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {Node} node Node.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\r\n   * @protected\r\n   * @return {Array<import(\"../Feature.js\").default>} Features.\r\n   */\r\n  XMLFeature.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\r\n    return abstract();\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  XMLFeature.prototype.readGeometry = function readGeometry (source, opt_options) {\r\n    if (!source) {\r\n      return null;\r\n    } else if (typeof source === 'string') {\r\n      var doc = parse(source);\r\n      return this.readGeometryFromDocument(doc, opt_options);\r\n    } else if (isDocument(source)) {\r\n      return this.readGeometryFromDocument(\r\n        /** @type {Document} */ (source), opt_options);\r\n    } else {\r\n      return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Document} doc Document.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\r\n   * @protected\r\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\r\n   */\r\n  XMLFeature.prototype.readGeometryFromDocument = function readGeometryFromDocument (doc, opt_options) {\r\n    return null; // not implemented\r\n  };\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\r\n   * @protected\r\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\r\n   */\r\n  XMLFeature.prototype.readGeometryFromNode = function readGeometryFromNode (node, opt_options) {\r\n    return null; // not implemented\r\n  };\r\n\r\n  /**\r\n   * Read the projection from the source.\r\n   *\r\n   * @param {Document|Node|Object|string} source Source.\r\n   * @return {import(\"../proj/Projection.js\").default} Projection.\r\n   * @api\r\n   */\r\n  XMLFeature.prototype.readProjection = function readProjection (source) {\r\n    if (!source) {\r\n      return null;\r\n    } else if (typeof source === 'string') {\r\n      var doc = parse(source);\r\n      return this.readProjectionFromDocument(doc);\r\n    } else if (isDocument(source)) {\r\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\r\n    } else {\r\n      return this.readProjectionFromNode(/** @type {Node} */ (source));\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Document} doc Document.\r\n   * @protected\r\n   * @return {import(\"../proj/Projection.js\").default} Projection.\r\n   */\r\n  XMLFeature.prototype.readProjectionFromDocument = function readProjectionFromDocument (doc) {\r\n    return this.dataProjection;\r\n  };\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @protected\r\n   * @return {import(\"../proj/Projection.js\").default} Projection.\r\n   */\r\n  XMLFeature.prototype.readProjectionFromNode = function readProjectionFromNode (node) {\r\n    return this.dataProjection;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  XMLFeature.prototype.writeFeature = function writeFeature (feature, opt_options) {\r\n    var node = this.writeFeatureNode(feature, opt_options);\r\n    return this.xmlSerializer_.serializeToString(node);\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\r\n   * @protected\r\n   * @return {Node} Node.\r\n   */\r\n  XMLFeature.prototype.writeFeatureNode = function writeFeatureNode (feature, opt_options) {\r\n    return null; // not implemented\r\n  };\r\n\r\n  /**\r\n   * Encode an array of features as string.\r\n   *\r\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n   * @return {string} Result.\r\n   * @api\r\n   */\r\n  XMLFeature.prototype.writeFeatures = function writeFeatures (features, opt_options) {\r\n    var node = this.writeFeaturesNode(features, opt_options);\r\n    return this.xmlSerializer_.serializeToString(node);\r\n  };\r\n\r\n  /**\r\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\r\n   * @return {Node} Node.\r\n   */\r\n  XMLFeature.prototype.writeFeaturesNode = function writeFeaturesNode (features, opt_options) {\r\n    return null; // not implemented\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  XMLFeature.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\r\n    var node = this.writeGeometryNode(geometry, opt_options);\r\n    return this.xmlSerializer_.serializeToString(node);\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\r\n   * @return {Node} Node.\r\n   */\r\n  XMLFeature.prototype.writeGeometryNode = function writeGeometryNode (geometry, opt_options) {\r\n    return null; // not implemented\r\n  };\n\n  return XMLFeature;\n}(FeatureFormat));\r\n\r\n\r\nexport default XMLFeature;\r\n\r\n//# sourceMappingURL=XMLFeature.js.map","/**\r\n * @module ol/format/GMLBase\r\n */\r\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\r\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\r\n// envelopes/extents, only geometries!\r\nimport {extend} from '../array.js';\r\nimport Feature from '../Feature.js';\r\nimport {transformWithOptions} from './Feature.js';\r\nimport XMLFeature from './XMLFeature.js';\r\nimport GeometryLayout from '../geom/GeometryLayout.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport LinearRing from '../geom/LinearRing.js';\r\nimport MultiLineString from '../geom/MultiLineString.js';\r\nimport MultiPoint from '../geom/MultiPoint.js';\r\nimport MultiPolygon from '../geom/MultiPolygon.js';\r\nimport Point from '../geom/Point.js';\r\nimport Polygon from '../geom/Polygon.js';\r\nimport {assign} from '../obj.js';\r\nimport {get as getProjection} from '../proj.js';\r\nimport {getAllTextContent, getAttributeNS, makeArrayPusher, makeReplacer, parseNode, pushParseAndPop} from '../xml.js';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nexport var GMLNS = 'http://www.opengis.net/gml';\r\n\r\n\r\n/**\r\n * A regular expression that matches if a string only contains whitespace\r\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\r\n * space (0xa0) is explicitly included as IE doesn't include it in its\r\n * definition of `\\s`.\r\n *\r\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\r\n *\r\n * @const\r\n * @type {RegExp}\r\n */\r\nvar ONLY_WHITESPACE_RE = /^[\\s\\xa0]*$/;\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {Object<string, string>|string} [featureNS] Feature\r\n * namespace. If not defined will be derived from GML. If multiple\r\n * feature types have been configured which come from different feature\r\n * namespaces, this will be an object with the keys being the prefixes used\r\n * in the entries of featureType array. The values of the object will be the\r\n * feature namespaces themselves. So for instance there might be a featureType\r\n * item `topp:states` in the `featureType` array and then there will be a key\r\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\r\n * @property {Array<string>|string} [featureType] Feature type(s) to parse.\r\n * If multiple feature types need to be configured\r\n * which come from different feature namespaces, `featureNS` will be an object\r\n * with the keys being the prefixes used in the entries of featureType array.\r\n * The values of the object will be the feature namespaces themselves.\r\n * So for instance there might be a featureType item `topp:states` and then\r\n * there will be a key named `topp` in the featureNS object with value\r\n * `http://www.openplans.org/topp`.\r\n * @property {string} srsName srsName to use when writing geometries.\r\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\r\n * elements. This also affects the elements in multi-part geometries.\r\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\r\n * elements. This also affects the elements in multi-part geometries.\r\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\r\n * Since the latter is deprecated in GML 3.\r\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\r\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\r\n * @property {string} [schemaLocation] Optional schemaLocation to use when\r\n * writing out the GML, this will override the default provided.\r\n * @property {boolean} [hasZ=false] If coordinates have a Z value.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Feature base format for reading and writing data in the GML format.\r\n * This class cannot be instantiated, it contains only base content that\r\n * is shared with versioned format classes GML2 and GML3.\r\n *\r\n * @abstract\r\n */\r\nvar GMLBase = /*@__PURE__*/(function (XMLFeature) {\n  function GMLBase(opt_options) {\r\n    XMLFeature.call(this);\r\n\r\n    var options = /** @type {Options} */ (opt_options ? opt_options : {});\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array<string>|string|undefined}\r\n     */\r\n    this.featureType = options.featureType;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Object<string, string>|string|undefined}\r\n     */\r\n    this.featureNS = options.featureNS;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {string}\r\n     */\r\n    this.srsName = options.srsName;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {string}\r\n     */\r\n    this.schemaLocation = '';\r\n\r\n    /**\r\n     * @type {Object<string, Object<string, Object>>}\r\n     */\r\n    this.FEATURE_COLLECTION_PARSERS = {};\r\n    this.FEATURE_COLLECTION_PARSERS[this.namespace] = {\r\n      'featureMember': makeArrayPusher(this.readFeaturesInternal),\r\n      'featureMembers': makeReplacer(this.readFeaturesInternal)\r\n    };\r\n  }\n\n  if ( XMLFeature ) GMLBase.__proto__ = XMLFeature;\n  GMLBase.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  GMLBase.prototype.constructor = GMLBase;\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @return {Array<Feature> | undefined} Features.\r\n   */\r\n  GMLBase.prototype.readFeaturesInternal = function readFeaturesInternal (node, objectStack) {\r\n    var localName = node.localName;\r\n    var features = null;\r\n    if (localName == 'FeatureCollection') {\r\n      features = pushParseAndPop([],\r\n        this.FEATURE_COLLECTION_PARSERS, node,\r\n        objectStack, this);\r\n    } else if (localName == 'featureMembers' || localName == 'featureMember') {\r\n      var context = objectStack[0];\r\n      var featureType = context['featureType'];\r\n      var featureNS = context['featureNS'];\r\n      var prefix = 'p';\r\n      var defaultPrefix = 'p0';\r\n      if (!featureType && node.childNodes) {\r\n        featureType = [], featureNS = {};\r\n        for (var i = 0, ii = node.childNodes.length; i < ii; ++i) {\r\n          var child = node.childNodes[i];\r\n          if (child.nodeType === 1) {\r\n            var ft = child.nodeName.split(':').pop();\r\n            if (featureType.indexOf(ft) === -1) {\r\n              var key = '';\r\n              var count = 0;\r\n              var uri = child.namespaceURI;\r\n              for (var candidate in featureNS) {\r\n                if (featureNS[candidate] === uri) {\r\n                  key = candidate;\r\n                  break;\r\n                }\r\n                ++count;\r\n              }\r\n              if (!key) {\r\n                key = prefix + count;\r\n                featureNS[key] = uri;\r\n              }\r\n              featureType.push(key + ':' + ft);\r\n            }\r\n          }\r\n        }\r\n        if (localName != 'featureMember') {\r\n          // recheck featureType for each featureMember\r\n          context['featureType'] = featureType;\r\n          context['featureNS'] = featureNS;\r\n        }\r\n      }\r\n      if (typeof featureNS === 'string') {\r\n        var ns = featureNS;\r\n        featureNS = {};\r\n        featureNS[defaultPrefix] = ns;\r\n      }\r\n      /** @type {Object<string, Object<string, import(\"../xml.js\").Parser>>} */\r\n      var parsersNS = {};\r\n      var featureTypes = Array.isArray(featureType) ? featureType : [featureType];\r\n      for (var p in featureNS) {\r\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\r\n        var parsers = {};\r\n        for (var i$1 = 0, ii$1 = featureTypes.length; i$1 < ii$1; ++i$1) {\r\n          var featurePrefix = featureTypes[i$1].indexOf(':') === -1 ?\r\n            defaultPrefix : featureTypes[i$1].split(':')[0];\r\n          if (featurePrefix === p) {\r\n            parsers[featureTypes[i$1].split(':').pop()] =\r\n                (localName == 'featureMembers') ?\r\n                  makeArrayPusher(this.readFeatureElement, this) :\r\n                  makeReplacer(this.readFeatureElement, this);\r\n          }\r\n        }\r\n        parsersNS[featureNS[p]] = parsers;\r\n      }\r\n      if (localName == 'featureMember') {\r\n        features = pushParseAndPop(undefined, parsersNS, node, objectStack);\r\n      } else {\r\n        features = pushParseAndPop([], parsersNS, node, objectStack);\r\n      }\r\n    }\r\n    if (features === null) {\r\n      features = [];\r\n    }\r\n    return features;\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @return {import(\"../geom/Geometry.js\").default|undefined} Geometry.\r\n   */\r\n  GMLBase.prototype.readGeometryElement = function readGeometryElement (node, objectStack) {\r\n    var context = /** @type {Object} */ (objectStack[0]);\r\n    context['srsName'] = node.firstElementChild.getAttribute('srsName');\r\n    context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\r\n    /** @type {import(\"../geom/Geometry.js\").default} */\r\n    var geometry = pushParseAndPop(null, this.GEOMETRY_PARSERS, node, objectStack, this);\r\n    if (geometry) {\r\n      return (\r\n        /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, false, context))\r\n      );\r\n    } else {\r\n      return undefined;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @param {boolean} asFeature whether result should be wrapped as a feature.\r\n   * @return {Feature|Object} Feature\r\n   */\r\n  GMLBase.prototype.readFeatureElementInternal = function readFeatureElementInternal (node, objectStack, asFeature) {\r\n    var geometryName;\r\n    var values = {};\r\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\r\n      var value = (void 0);\r\n      var localName = n.localName;\r\n      // first, check if it is simple attribute\r\n      if (n.childNodes.length === 0\r\n              || (n.childNodes.length === 1 && (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\r\n        value = getAllTextContent(n, false);\r\n        if (ONLY_WHITESPACE_RE.test(value)) {\r\n          value = undefined;\r\n        }\r\n      } else {\r\n        if (asFeature) {\r\n          //if feature, try it as a geometry\r\n          value = this.readGeometryElement(n, objectStack);\r\n        }\r\n        if (!value) { //if not a geometry or not a feature, treat it as a complex attribute\r\n          value = this.readFeatureElementInternal(n, objectStack, false);\r\n        } else if (localName !== 'boundedBy') {\r\n          // boundedBy is an extent and must not be considered as a geometry\r\n          geometryName = localName;\r\n        }\r\n      }\r\n\r\n      if (values[localName]) {\r\n        if (!(values[localName] instanceof Array)) {\r\n          values[localName] = [values[localName]];\r\n        }\r\n        values[localName].push(value);\r\n      } else {\r\n        values[localName] = value;\r\n      }\r\n\r\n      var len = n.attributes.length;\r\n      if (len > 0) {\r\n        values[localName] = {_content_: values[localName]};\r\n        for (var i = 0; i < len; i++) {\r\n          var attName = n.attributes[i].name;\r\n          values[localName][attName] = n.attributes[i].value;\r\n        }\r\n      }\r\n    }\r\n    if (!asFeature) {\r\n      return values;\r\n    } else {\r\n      var feature = new Feature(values);\r\n      if (geometryName) {\r\n        feature.setGeometryName(geometryName);\r\n      }\r\n      var fid = node.getAttribute('fid') ||\r\n           getAttributeNS(node, this.namespace, 'id');\r\n      if (fid) {\r\n        feature.setId(fid);\r\n      }\r\n      return feature;\r\n    }\r\n  };\r\n\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @return {Feature} Feature.\r\n   */\r\n  GMLBase.prototype.readFeatureElement = function readFeatureElement (node, objectStack) {\r\n    return this.readFeatureElementInternal(node, objectStack, true);\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @return {Point|undefined} Point.\r\n   */\r\n  GMLBase.prototype.readPoint = function readPoint (node, objectStack) {\r\n    var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\r\n    if (flatCoordinates) {\r\n      return new Point(flatCoordinates, GeometryLayout.XYZ);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @return {MultiPoint|undefined} MultiPoint.\r\n   */\r\n  GMLBase.prototype.readMultiPoint = function readMultiPoint (node, objectStack) {\r\n    /** @type {Array<Array<number>>} */\r\n    var coordinates = pushParseAndPop([],\r\n      this.MULTIPOINT_PARSERS_, node, objectStack, this);\r\n    if (coordinates) {\r\n      return new MultiPoint(coordinates);\r\n    } else {\r\n      return undefined;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @return {MultiLineString|undefined} MultiLineString.\r\n   */\r\n  GMLBase.prototype.readMultiLineString = function readMultiLineString (node, objectStack) {\r\n    /** @type {Array<LineString>} */\r\n    var lineStrings = pushParseAndPop([],\r\n      this.MULTILINESTRING_PARSERS_, node, objectStack, this);\r\n    if (lineStrings) {\r\n      return new MultiLineString(lineStrings);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @return {MultiPolygon|undefined} MultiPolygon.\r\n   */\r\n  GMLBase.prototype.readMultiPolygon = function readMultiPolygon (node, objectStack) {\r\n    /** @type {Array<Polygon>} */\r\n    var polygons = pushParseAndPop([], this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\r\n    if (polygons) {\r\n      return new MultiPolygon(polygons);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   */\r\n  GMLBase.prototype.pointMemberParser_ = function pointMemberParser_ (node, objectStack) {\r\n    parseNode(this.POINTMEMBER_PARSERS_, node, objectStack, this);\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   */\r\n  GMLBase.prototype.lineStringMemberParser_ = function lineStringMemberParser_ (node, objectStack) {\r\n    parseNode(this.LINESTRINGMEMBER_PARSERS_, node, objectStack, this);\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   */\r\n  GMLBase.prototype.polygonMemberParser_ = function polygonMemberParser_ (node, objectStack) {\r\n    parseNode(this.POLYGONMEMBER_PARSERS_, node, objectStack, this);\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @return {LineString|undefined} LineString.\r\n   */\r\n  GMLBase.prototype.readLineString = function readLineString (node, objectStack) {\r\n    var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\r\n    if (flatCoordinates) {\r\n      var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\r\n      return lineString;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {Array<number>|undefined} LinearRing flat coordinates.\r\n   */\r\n  GMLBase.prototype.readFlatLinearRing_ = function readFlatLinearRing_ (node, objectStack) {\r\n    var ring = pushParseAndPop(null,\r\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS, node,\r\n      objectStack, this);\r\n    if (ring) {\r\n      return ring;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @return {LinearRing|undefined} LinearRing.\r\n   */\r\n  GMLBase.prototype.readLinearRing = function readLinearRing (node, objectStack) {\r\n    var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\r\n    if (flatCoordinates) {\r\n      return new LinearRing(flatCoordinates, GeometryLayout.XYZ);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @return {Polygon|undefined} Polygon.\r\n   */\r\n  GMLBase.prototype.readPolygon = function readPolygon (node, objectStack) {\r\n    /** @type {Array<Array<number>>} */\r\n    var flatLinearRings = pushParseAndPop([null],\r\n      this.FLAT_LINEAR_RINGS_PARSERS, node, objectStack, this);\r\n    if (flatLinearRings && flatLinearRings[0]) {\r\n      var flatCoordinates = flatLinearRings[0];\r\n      var ends = [flatCoordinates.length];\r\n      var i, ii;\r\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\r\n        extend(flatCoordinates, flatLinearRings[i]);\r\n        ends.push(flatCoordinates.length);\r\n      }\r\n      return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\r\n    } else {\r\n      return undefined;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {Array<number>} Flat coordinates.\r\n   */\r\n  GMLBase.prototype.readFlatCoordinatesFromNode_ = function readFlatCoordinatesFromNode_ (node, objectStack) {\r\n    return pushParseAndPop(null, this.GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack, this);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  GMLBase.prototype.readGeometryFromNode = function readGeometryFromNode (node, opt_options) {\r\n    var geometry = this.readGeometryElement(node,\r\n      [this.getReadOptions(node, opt_options ? opt_options : {})]);\r\n    return geometry ? geometry : null;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  GMLBase.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\r\n    var options = {\r\n      featureType: this.featureType,\r\n      featureNS: this.featureNS\r\n    };\r\n    if (opt_options) {\r\n      assign(options, this.getReadOptions(node, opt_options));\r\n    }\r\n    var features = this.readFeaturesInternal(node, [options]);\r\n    return features || [];\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  GMLBase.prototype.readProjectionFromNode = function readProjectionFromNode (node) {\r\n    return getProjection(this.srsName ? this.srsName : node.firstElementChild.getAttribute('srsName'));\r\n  };\n\n  return GMLBase;\n}(XMLFeature));\r\n\r\n\r\nGMLBase.prototype.namespace = GMLNS;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGMLBase.prototype.FLAT_LINEAR_RINGS_PARSERS = {\r\n  'http://www.opengis.net/gml': {}\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGMLBase.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\r\n  'http://www.opengis.net/gml': {}\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGMLBase.prototype.GEOMETRY_PARSERS = {\r\n  'http://www.opengis.net/gml': {}\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser_),\r\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'lineStringMember': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_),\r\n    'lineStringMembers': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser_),\r\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGMLBase.prototype.RING_PARSERS = {\r\n  'http://www.opengis.net/gml': {\r\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing_)\r\n  }\r\n};\r\n\r\nexport default GMLBase;\r\n\r\n//# sourceMappingURL=GMLBase.js.map","/**\r\n * @module ol/format/xsd\r\n */\r\nimport {getAllTextContent, DOCUMENT} from '../xml.js';\r\nimport {padNumber} from '../string.js';\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @return {boolean|undefined} Boolean.\r\n */\r\nexport function readBoolean(node) {\r\n  var s = getAllTextContent(node, false);\r\n  return readBooleanString(s);\r\n}\r\n\r\n\r\n/**\r\n * @param {string} string String.\r\n * @return {boolean|undefined} Boolean.\r\n */\r\nexport function readBooleanString(string) {\r\n  var m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\r\n  if (m) {\r\n    return m[1] !== undefined || false;\r\n  } else {\r\n    return undefined;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @return {number|undefined} DateTime in seconds.\r\n */\r\nexport function readDateTime(node) {\r\n  var s = getAllTextContent(node, false);\r\n  var dateTime = Date.parse(s);\r\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @return {number|undefined} Decimal.\r\n */\r\nexport function readDecimal(node) {\r\n  var s = getAllTextContent(node, false);\r\n  return readDecimalString(s);\r\n}\r\n\r\n\r\n/**\r\n * @param {string} string String.\r\n * @return {number|undefined} Decimal.\r\n */\r\nexport function readDecimalString(string) {\r\n  // FIXME check spec\r\n  var m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\r\n  if (m) {\r\n    return parseFloat(m[1]);\r\n  } else {\r\n    return undefined;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @return {number|undefined} Non negative integer.\r\n */\r\nexport function readNonNegativeInteger(node) {\r\n  var s = getAllTextContent(node, false);\r\n  return readNonNegativeIntegerString(s);\r\n}\r\n\r\n\r\n/**\r\n * @param {string} string String.\r\n * @return {number|undefined} Non negative integer.\r\n */\r\nexport function readNonNegativeIntegerString(string) {\r\n  var m = /^\\s*(\\d+)\\s*$/.exec(string);\r\n  if (m) {\r\n    return parseInt(m[1], 10);\r\n  } else {\r\n    return undefined;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @return {string|undefined} String.\r\n */\r\nexport function readString(node) {\r\n  return getAllTextContent(node, false).trim();\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node to append a TextNode with the boolean to.\r\n * @param {boolean} bool Boolean.\r\n */\r\nexport function writeBooleanTextNode(node, bool) {\r\n  writeStringTextNode(node, (bool) ? '1' : '0');\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node to append a CDATA Section with the string to.\r\n * @param {string} string String.\r\n */\r\nexport function writeCDATASection(node, string) {\r\n  node.appendChild(DOCUMENT.createCDATASection(string));\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node to append a TextNode with the dateTime to.\r\n * @param {number} dateTime DateTime in seconds.\r\n */\r\nexport function writeDateTimeTextNode(node, dateTime) {\r\n  var date = new Date(dateTime * 1000);\r\n  var string = date.getUTCFullYear() + '-' +\r\n      padNumber(date.getUTCMonth() + 1, 2) + '-' +\r\n      padNumber(date.getUTCDate(), 2) + 'T' +\r\n      padNumber(date.getUTCHours(), 2) + ':' +\r\n      padNumber(date.getUTCMinutes(), 2) + ':' +\r\n      padNumber(date.getUTCSeconds(), 2) + 'Z';\r\n  node.appendChild(DOCUMENT.createTextNode(string));\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node to append a TextNode with the decimal to.\r\n * @param {number} decimal Decimal.\r\n */\r\nexport function writeDecimalTextNode(node, decimal) {\r\n  var string = decimal.toPrecision();\r\n  node.appendChild(DOCUMENT.createTextNode(string));\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node to append a TextNode with the decimal to.\r\n * @param {number} nonNegativeInteger Non negative integer.\r\n */\r\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\r\n  var string = nonNegativeInteger.toString();\r\n  node.appendChild(DOCUMENT.createTextNode(string));\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node to append a TextNode with the string to.\r\n * @param {string} string String.\r\n */\r\nexport function writeStringTextNode(node, string) {\r\n  node.appendChild(DOCUMENT.createTextNode(string));\r\n}\r\n\r\n//# sourceMappingURL=xsd.js.map","/**\r\n * @module ol/format/GML3\r\n */\r\nimport {extend} from '../array.js';\r\nimport {createOrUpdate} from '../extent.js';\r\nimport {transformWithOptions} from './Feature.js';\r\nimport GMLBase, {GMLNS} from './GMLBase.js';\r\nimport {readNonNegativeIntegerString, writeStringTextNode} from './xsd.js';\r\nimport GeometryLayout from '../geom/GeometryLayout.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport MultiLineString from '../geom/MultiLineString.js';\r\nimport MultiPolygon from '../geom/MultiPolygon.js';\r\nimport Polygon from '../geom/Polygon.js';\r\nimport {assign} from '../obj.js';\r\nimport {get as getProjection, transformExtent} from '../proj.js';\r\nimport {createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender,\r\n  makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, parseNode,\r\n  pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n * @private\r\n */\r\nvar schemaLocation = GMLNS +\r\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\r\n    '1.0.0/gmlsf.xsd';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, string>}\r\n */\r\nvar MULTIGEOMETRY_TO_MEMBER_NODENAME = {\r\n  'MultiLineString': 'lineStringMember',\r\n  'MultiCurve': 'curveMember',\r\n  'MultiPolygon': 'polygonMember',\r\n  'MultiSurface': 'surfaceMember'\r\n};\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Feature format for reading and writing data in the GML format\r\n * version 3.1.1.\r\n * Currently only supports GML 3.1.1 Simple Features profile.\r\n *\r\n * @api\r\n */\r\nvar GML3 = /*@__PURE__*/(function (GMLBase) {\n  function GML3(opt_options) {\r\n    var options = /** @type {import(\"./GMLBase.js\").Options} */\r\n        (opt_options ? opt_options : {});\r\n\r\n    GMLBase.call(this, options);\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.surface_ = options.surface !== undefined ? options.surface : false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.curve_ = options.curve !== undefined ? options.curve : false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.multiCurve_ = options.multiCurve !== undefined ?\r\n      options.multiCurve : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.multiSurface_ = options.multiSurface !== undefined ?\r\n      options.multiSurface : true;\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    this.schemaLocation = options.schemaLocation ?\r\n      options.schemaLocation : schemaLocation;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.hasZ = options.hasZ !== undefined ?\r\n      options.hasZ : false;\r\n\r\n  }\n\n  if ( GMLBase ) GML3.__proto__ = GMLBase;\n  GML3.prototype = Object.create( GMLBase && GMLBase.prototype );\n  GML3.prototype.constructor = GML3;\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {MultiLineString|undefined} MultiLineString.\r\n   */\r\n  GML3.prototype.readMultiCurve_ = function readMultiCurve_ (node, objectStack) {\r\n    /** @type {Array<LineString>} */\r\n    var lineStrings = pushParseAndPop([],\r\n      this.MULTICURVE_PARSERS_, node, objectStack, this);\r\n    if (lineStrings) {\r\n      var multiLineString = new MultiLineString(lineStrings);\r\n      return multiLineString;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {MultiPolygon|undefined} MultiPolygon.\r\n   */\r\n  GML3.prototype.readMultiSurface_ = function readMultiSurface_ (node, objectStack) {\r\n    /** @type {Array<Polygon>} */\r\n    var polygons = pushParseAndPop([],\r\n      this.MULTISURFACE_PARSERS_, node, objectStack, this);\r\n    if (polygons) {\r\n      return new MultiPolygon(polygons);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   */\r\n  GML3.prototype.curveMemberParser_ = function curveMemberParser_ (node, objectStack) {\r\n    parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   */\r\n  GML3.prototype.surfaceMemberParser_ = function surfaceMemberParser_ (node, objectStack) {\r\n    parseNode(this.SURFACEMEMBER_PARSERS_,\r\n      node, objectStack, this);\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\r\n   */\r\n  GML3.prototype.readPatch_ = function readPatch_ (node, objectStack) {\r\n    return pushParseAndPop([null],\r\n      this.PATCHES_PARSERS_, node, objectStack, this);\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {Array<number>|undefined} flat coordinates.\r\n   */\r\n  GML3.prototype.readSegment_ = function readSegment_ (node, objectStack) {\r\n    return pushParseAndPop([null],\r\n      this.SEGMENTS_PARSERS_, node, objectStack, this);\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\r\n   */\r\n  GML3.prototype.readPolygonPatch_ = function readPolygonPatch_ (node, objectStack) {\r\n    return pushParseAndPop([null],\r\n      this.FLAT_LINEAR_RINGS_PARSERS, node, objectStack, this);\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {Array<number>|undefined} flat coordinates.\r\n   */\r\n  GML3.prototype.readLineStringSegment_ = function readLineStringSegment_ (node, objectStack) {\r\n    return pushParseAndPop([null],\r\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\r\n      node, objectStack, this);\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   */\r\n  GML3.prototype.interiorParser_ = function interiorParser_ (node, objectStack) {\r\n    /** @type {Array<number>|undefined} */\r\n    var flatLinearRing = pushParseAndPop(undefined,\r\n      this.RING_PARSERS, node, objectStack, this);\r\n    if (flatLinearRing) {\r\n      var flatLinearRings = /** @type {Array<Array<number>>} */\r\n          (objectStack[objectStack.length - 1]);\r\n      flatLinearRings.push(flatLinearRing);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   */\r\n  GML3.prototype.exteriorParser_ = function exteriorParser_ (node, objectStack) {\r\n    /** @type {Array<number>|undefined} */\r\n    var flatLinearRing = pushParseAndPop(undefined,\r\n      this.RING_PARSERS, node, objectStack, this);\r\n    if (flatLinearRing) {\r\n      var flatLinearRings = /** @type {Array<Array<number>>} */\r\n          (objectStack[objectStack.length - 1]);\r\n      flatLinearRings[0] = flatLinearRing;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {Polygon|undefined} Polygon.\r\n   */\r\n  GML3.prototype.readSurface_ = function readSurface_ (node, objectStack) {\r\n    /** @type {Array<Array<number>>} */\r\n    var flatLinearRings = pushParseAndPop([null],\r\n      this.SURFACE_PARSERS_, node, objectStack, this);\r\n    if (flatLinearRings && flatLinearRings[0]) {\r\n      var flatCoordinates = flatLinearRings[0];\r\n      var ends = [flatCoordinates.length];\r\n      var i, ii;\r\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\r\n        extend(flatCoordinates, flatLinearRings[i]);\r\n        ends.push(flatCoordinates.length);\r\n      }\r\n      return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\r\n    } else {\r\n      return undefined;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {LineString|undefined} LineString.\r\n   */\r\n  GML3.prototype.readCurve_ = function readCurve_ (node, objectStack) {\r\n    /** @type {Array<number>} */\r\n    var flatCoordinates = pushParseAndPop([null],\r\n      this.CURVE_PARSERS_, node, objectStack, this);\r\n    if (flatCoordinates) {\r\n      var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\r\n      return lineString;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\r\n   */\r\n  GML3.prototype.readEnvelope_ = function readEnvelope_ (node, objectStack) {\r\n    /** @type {Array<number>} */\r\n    var flatCoordinates = pushParseAndPop([null],\r\n      this.ENVELOPE_PARSERS_, node, objectStack, this);\r\n    return createOrUpdate(flatCoordinates[1][0],\r\n      flatCoordinates[1][1], flatCoordinates[2][0],\r\n      flatCoordinates[2][1]);\r\n  };\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {Array<number>|undefined} Flat coordinates.\r\n   */\r\n  GML3.prototype.readFlatPos_ = function readFlatPos_ (node, objectStack) {\r\n    var s = getAllTextContent(node, false);\r\n    var re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\r\n    /** @type {Array<number>} */\r\n    var flatCoordinates = [];\r\n    var m;\r\n    while ((m = re.exec(s))) {\r\n      flatCoordinates.push(parseFloat(m[1]));\r\n      s = s.substr(m[0].length);\r\n    }\r\n    if (s !== '') {\r\n      return undefined;\r\n    }\r\n    var context = objectStack[0];\r\n    var containerSrs = context['srsName'];\r\n    var axisOrientation = 'enu';\r\n    if (containerSrs) {\r\n      var proj = getProjection(containerSrs);\r\n      axisOrientation = proj.getAxisOrientation();\r\n    }\r\n    if (axisOrientation === 'neu') {\r\n      var i, ii;\r\n      for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\r\n        var y = flatCoordinates[i];\r\n        var x = flatCoordinates[i + 1];\r\n        flatCoordinates[i] = x;\r\n        flatCoordinates[i + 1] = y;\r\n      }\r\n    }\r\n    var len = flatCoordinates.length;\r\n    if (len == 2) {\r\n      flatCoordinates.push(0);\r\n    }\r\n    if (len === 0) {\r\n      return undefined;\r\n    }\r\n    return flatCoordinates;\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {Array<number>|undefined} Flat coordinates.\r\n   */\r\n  GML3.prototype.readFlatPosList_ = function readFlatPosList_ (node, objectStack) {\r\n    var s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\r\n    var context = objectStack[0];\r\n    var containerSrs = context['srsName'];\r\n    var contextDimension = context['srsDimension'];\r\n    var axisOrientation = 'enu';\r\n    if (containerSrs) {\r\n      var proj = getProjection(containerSrs);\r\n      axisOrientation = proj.getAxisOrientation();\r\n    }\r\n    var coords = s.split(/\\s+/);\r\n    // The \"dimension\" attribute is from the GML 3.0.1 spec.\r\n    var dim = 2;\r\n    if (node.getAttribute('srsDimension')) {\r\n      dim = readNonNegativeIntegerString(\r\n        node.getAttribute('srsDimension'));\r\n    } else if (node.getAttribute('dimension')) {\r\n      dim = readNonNegativeIntegerString(\r\n        node.getAttribute('dimension'));\r\n    } else if (/** @type {Element} */ (node.parentNode).getAttribute('srsDimension')) {\r\n      dim = readNonNegativeIntegerString(\r\n        /** @type {Element} */ (node.parentNode).getAttribute('srsDimension'));\r\n    } else if (contextDimension) {\r\n      dim = readNonNegativeIntegerString(contextDimension);\r\n    }\r\n    var x, y, z;\r\n    var flatCoordinates = [];\r\n    for (var i = 0, ii = coords.length; i < ii; i += dim) {\r\n      x = parseFloat(coords[i]);\r\n      y = parseFloat(coords[i + 1]);\r\n      z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\r\n      if (axisOrientation.substr(0, 2) === 'en') {\r\n        flatCoordinates.push(x, y, z);\r\n      } else {\r\n        flatCoordinates.push(y, x, z);\r\n      }\r\n    }\r\n    return flatCoordinates;\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {import(\"../geom/Point.js\").default} value Point geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  GML3.prototype.writePos_ = function writePos_ (node, value, objectStack) {\r\n    var context = objectStack[objectStack.length - 1];\r\n    var hasZ = context['hasZ'];\r\n    var srsDimension = hasZ ? '3' : '2';\r\n    node.setAttribute('srsDimension', srsDimension);\r\n    var srsName = context['srsName'];\r\n    var axisOrientation = 'enu';\r\n    if (srsName) {\r\n      axisOrientation = getProjection(srsName).getAxisOrientation();\r\n    }\r\n    var point = value.getCoordinates();\r\n    var coords;\r\n    // only 2d for simple features profile\r\n    if (axisOrientation.substr(0, 2) === 'en') {\r\n      coords = (point[0] + ' ' + point[1]);\r\n    } else {\r\n      coords = (point[1] + ' ' + point[0]);\r\n    }\r\n    if (hasZ) {\r\n      // For newly created points, Z can be undefined.\r\n      var z = point[2] || 0;\r\n      coords += ' ' + z;\r\n    }\r\n    writeStringTextNode(node, coords);\r\n  };\r\n\r\n  /**\r\n   * @param {Array<number>} point Point geometry.\r\n   * @param {string=} opt_srsName Optional srsName\r\n   * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\r\n   * @return {string} The coords string.\r\n   * @private\r\n   */\r\n  GML3.prototype.getCoords_ = function getCoords_ (point, opt_srsName, opt_hasZ) {\r\n    var axisOrientation = 'enu';\r\n    if (opt_srsName) {\r\n      axisOrientation = getProjection(opt_srsName).getAxisOrientation();\r\n    }\r\n    var coords = ((axisOrientation.substr(0, 2) === 'en') ?\r\n      point[0] + ' ' + point[1] :\r\n      point[1] + ' ' + point[0]);\r\n    if (opt_hasZ) {\r\n      // For newly created points, Z can be undefined.\r\n      var z = point[2] || 0;\r\n      coords += ' ' + z;\r\n    }\r\n\r\n    return coords;\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {LineString|import(\"../geom/LinearRing.js\").default} value Geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  GML3.prototype.writePosList_ = function writePosList_ (node, value, objectStack) {\r\n    var context = objectStack[objectStack.length - 1];\r\n    var hasZ = context['hasZ'];\r\n    var srsDimension = hasZ ? '3' : '2';\r\n    node.setAttribute('srsDimension', srsDimension);\r\n    var srsName = context['srsName'];\r\n    // only 2d for simple features profile\r\n    var points = value.getCoordinates();\r\n    var len = points.length;\r\n    var parts = new Array(len);\r\n    var point;\r\n    for (var i = 0; i < len; ++i) {\r\n      point = points[i];\r\n      parts[i] = this.getCoords_(point, srsName, hasZ);\r\n    }\r\n    writeStringTextNode(node, parts.join(' '));\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  GML3.prototype.writePoint_ = function writePoint_ (node, geometry, objectStack) {\r\n    var context = objectStack[objectStack.length - 1];\r\n    var srsName = context['srsName'];\r\n    if (srsName) {\r\n      node.setAttribute('srsName', srsName);\r\n    }\r\n    var pos = createElementNS(node.namespaceURI, 'pos');\r\n    node.appendChild(pos);\r\n    this.writePos_(pos, geometry, objectStack);\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   */\r\n  GML3.prototype.writeEnvelope = function writeEnvelope (node, extent, objectStack) {\r\n    var context = objectStack[objectStack.length - 1];\r\n    var srsName = context['srsName'];\r\n    if (srsName) {\r\n      node.setAttribute('srsName', srsName);\r\n    }\r\n    var keys = ['lowerCorner', 'upperCorner'];\r\n    var values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\r\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\r\n      ({node: node}), this.ENVELOPE_SERIALIZERS_,\r\n      OBJECT_PROPERTY_NODE_FACTORY,\r\n      values,\r\n      objectStack, keys, this);\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  GML3.prototype.writeLinearRing_ = function writeLinearRing_ (node, geometry, objectStack) {\r\n    var context = objectStack[objectStack.length - 1];\r\n    var srsName = context['srsName'];\r\n    if (srsName) {\r\n      node.setAttribute('srsName', srsName);\r\n    }\r\n    var posList = createElementNS(node.namespaceURI, 'posList');\r\n    node.appendChild(posList);\r\n    this.writePosList_(posList, geometry, objectStack);\r\n  };\r\n\r\n  /**\r\n   * @param {*} value Value.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @param {string=} opt_nodeName Node name.\r\n   * @return {Node} Node.\r\n   * @private\r\n   */\r\n  GML3.prototype.RING_NODE_FACTORY_ = function RING_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\r\n    var context = objectStack[objectStack.length - 1];\r\n    var parentNode = context.node;\r\n    var exteriorWritten = context['exteriorWritten'];\r\n    if (exteriorWritten === undefined) {\r\n      context['exteriorWritten'] = true;\r\n    }\r\n    return createElementNS(parentNode.namespaceURI,\r\n      exteriorWritten !== undefined ? 'interior' : 'exterior');\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Polygon} geometry Polygon geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  GML3.prototype.writeSurfaceOrPolygon_ = function writeSurfaceOrPolygon_ (node, geometry, objectStack) {\r\n    var context = objectStack[objectStack.length - 1];\r\n    var hasZ = context['hasZ'];\r\n    var srsName = context['srsName'];\r\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\r\n      node.setAttribute('srsName', srsName);\r\n    }\r\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\r\n      var rings = geometry.getLinearRings();\r\n      pushSerializeAndPop(\r\n        {node: node, hasZ: hasZ, srsName: srsName},\r\n        this.RING_SERIALIZERS_,\r\n        this.RING_NODE_FACTORY_,\r\n        rings, objectStack, undefined, this);\r\n    } else if (node.nodeName === 'Surface') {\r\n      var patches = createElementNS(node.namespaceURI, 'patches');\r\n      node.appendChild(patches);\r\n      this.writeSurfacePatches_(\r\n        patches, geometry, objectStack);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {LineString} geometry LineString geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  GML3.prototype.writeCurveOrLineString_ = function writeCurveOrLineString_ (node, geometry, objectStack) {\r\n    var context = objectStack[objectStack.length - 1];\r\n    var srsName = context['srsName'];\r\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\r\n      node.setAttribute('srsName', srsName);\r\n    }\r\n    if (node.nodeName === 'LineString' ||\r\n        node.nodeName === 'LineStringSegment') {\r\n      var posList = createElementNS(node.namespaceURI, 'posList');\r\n      node.appendChild(posList);\r\n      this.writePosList_(posList, geometry, objectStack);\r\n    } else if (node.nodeName === 'Curve') {\r\n      var segments = createElementNS(node.namespaceURI, 'segments');\r\n      node.appendChild(segments);\r\n      this.writeCurveSegments_(segments,\r\n        geometry, objectStack);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {MultiPolygon} geometry MultiPolygon geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  GML3.prototype.writeMultiSurfaceOrPolygon_ = function writeMultiSurfaceOrPolygon_ (node, geometry, objectStack) {\r\n    var context = objectStack[objectStack.length - 1];\r\n    var hasZ = context['hasZ'];\r\n    var srsName = context['srsName'];\r\n    var surface = context['surface'];\r\n    if (srsName) {\r\n      node.setAttribute('srsName', srsName);\r\n    }\r\n    var polygons = geometry.getPolygons();\r\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\r\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\r\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\r\n      objectStack, undefined, this);\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  GML3.prototype.writeMultiPoint_ = function writeMultiPoint_ (node, geometry, objectStack) {\r\n    var context = objectStack[objectStack.length - 1];\r\n    var srsName = context['srsName'];\r\n    var hasZ = context['hasZ'];\r\n    if (srsName) {\r\n      node.setAttribute('srsName', srsName);\r\n    }\r\n    var points = geometry.getPoints();\r\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\r\n      this.POINTMEMBER_SERIALIZERS_,\r\n      makeSimpleNodeFactory('pointMember'), points,\r\n      objectStack, undefined, this);\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {MultiLineString} geometry MultiLineString geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  GML3.prototype.writeMultiCurveOrLineString_ = function writeMultiCurveOrLineString_ (node, geometry, objectStack) {\r\n    var context = objectStack[objectStack.length - 1];\r\n    var hasZ = context['hasZ'];\r\n    var srsName = context['srsName'];\r\n    var curve = context['curve'];\r\n    if (srsName) {\r\n      node.setAttribute('srsName', srsName);\r\n    }\r\n    var lines = geometry.getLineStrings();\r\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\r\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\r\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\r\n      objectStack, undefined, this);\r\n  };\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  GML3.prototype.writeRing_ = function writeRing_ (node, ring, objectStack) {\r\n    var linearRing = createElementNS(node.namespaceURI, 'LinearRing');\r\n    node.appendChild(linearRing);\r\n    this.writeLinearRing_(linearRing, ring, objectStack);\r\n  };\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Polygon} polygon Polygon geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  GML3.prototype.writeSurfaceOrPolygonMember_ = function writeSurfaceOrPolygonMember_ (node, polygon, objectStack) {\r\n    var child = this.GEOMETRY_NODE_FACTORY_(\r\n      polygon, objectStack);\r\n    if (child) {\r\n      node.appendChild(child);\r\n      this.writeSurfaceOrPolygon_(child, polygon, objectStack);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  GML3.prototype.writePointMember_ = function writePointMember_ (node, point, objectStack) {\r\n    var child = createElementNS(node.namespaceURI, 'Point');\r\n    node.appendChild(child);\r\n    this.writePoint_(child, point, objectStack);\r\n  };\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {LineString} line LineString geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  GML3.prototype.writeLineStringOrCurveMember_ = function writeLineStringOrCurveMember_ (node, line, objectStack) {\r\n    var child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\r\n    if (child) {\r\n      node.appendChild(child);\r\n      this.writeCurveOrLineString_(child, line, objectStack);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Polygon} polygon Polygon geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  GML3.prototype.writeSurfacePatches_ = function writeSurfacePatches_ (node, polygon, objectStack) {\r\n    var child = createElementNS(node.namespaceURI, 'PolygonPatch');\r\n    node.appendChild(child);\r\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\r\n  };\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {LineString} line LineString geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  GML3.prototype.writeCurveSegments_ = function writeCurveSegments_ (node, line, objectStack) {\r\n    var child = createElementNS(node.namespaceURI,\r\n      'LineStringSegment');\r\n    node.appendChild(child);\r\n    this.writeCurveOrLineString_(child, line, objectStack);\r\n  };\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   */\r\n  GML3.prototype.writeGeometryElement = function writeGeometryElement (node, geometry, objectStack) {\r\n    var context = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[objectStack.length - 1]);\r\n    var item = assign({}, context);\r\n    item['node'] = node;\r\n    var value;\r\n    if (Array.isArray(geometry)) {\r\n      if (context.dataProjection) {\r\n        value = transformExtent(\r\n          geometry, context.featureProjection, context.dataProjection);\r\n      } else {\r\n        value = geometry;\r\n      }\r\n    } else {\r\n      value = transformWithOptions(/** @type {import(\"../geom/Geometry.js\").default} */ (geometry), true, context);\r\n    }\r\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\r\n      (item), this.GEOMETRY_SERIALIZERS_,\r\n      this.GEOMETRY_NODE_FACTORY_, [value],\r\n      objectStack, undefined, this);\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   */\r\n  GML3.prototype.writeFeatureElement = function writeFeatureElement (node, feature, objectStack) {\r\n    var fid = feature.getId();\r\n    if (fid) {\r\n      node.setAttribute('fid', /** @type {string} */ (fid));\r\n    }\r\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n    var featureNS = context['featureNS'];\r\n    var geometryName = feature.getGeometryName();\r\n    if (!context.serializers) {\r\n      context.serializers = {};\r\n      context.serializers[featureNS] = {};\r\n    }\r\n    var properties = feature.getProperties();\r\n    var keys = [];\r\n    var values = [];\r\n    for (var key in properties) {\r\n      var value = properties[key];\r\n      if (value !== null) {\r\n        keys.push(key);\r\n        values.push(value);\r\n        if (key == geometryName || typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\r\n          if (!(key in context.serializers[featureNS])) {\r\n            context.serializers[featureNS][key] = makeChildAppender(\r\n              this.writeGeometryElement, this);\r\n          }\r\n        } else {\r\n          if (!(key in context.serializers[featureNS])) {\r\n            context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    var item = assign({}, context);\r\n    item.node = node;\r\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\r\n      (item), context.serializers,\r\n      makeSimpleNodeFactory(undefined, featureNS),\r\n      values,\r\n      objectStack, keys);\r\n  };\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  GML3.prototype.writeFeatureMembers_ = function writeFeatureMembers_ (node, features, objectStack) {\r\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n    var featureType = context['featureType'];\r\n    var featureNS = context['featureNS'];\r\n    /** @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>} */\r\n    var serializers = {};\r\n    serializers[featureNS] = {};\r\n    serializers[featureNS][featureType] = makeChildAppender(\r\n      this.writeFeatureElement, this);\r\n    var item = assign({}, context);\r\n    item.node = node;\r\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\r\n      (item),\r\n      serializers,\r\n      makeSimpleNodeFactory(featureType, featureNS), features,\r\n      objectStack);\r\n  };\r\n\r\n  /**\r\n   * @const\r\n   * @param {*} value Value.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @param {string=} opt_nodeName Node name.\r\n   * @return {Node|undefined} Node.\r\n   * @private\r\n   */\r\n  GML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function MULTIGEOMETRY_MEMBER_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\r\n    var parentNode = objectStack[objectStack.length - 1].node;\r\n    return createElementNS(this.namespace,\r\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\r\n  };\r\n\r\n  /**\r\n   * @const\r\n   * @param {*} value Value.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @param {string=} opt_nodeName Node name.\r\n   * @return {Element|undefined} Node.\r\n   * @private\r\n   */\r\n  GML3.prototype.GEOMETRY_NODE_FACTORY_ = function GEOMETRY_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\r\n    var context = objectStack[objectStack.length - 1];\r\n    var multiSurface = context['multiSurface'];\r\n    var surface = context['surface'];\r\n    var curve = context['curve'];\r\n    var multiCurve = context['multiCurve'];\r\n    var nodeName;\r\n    if (!Array.isArray(value)) {\r\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType();\r\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\r\n        nodeName = 'MultiSurface';\r\n      } else if (nodeName === 'Polygon' && surface === true) {\r\n        nodeName = 'Surface';\r\n      } else if (nodeName === 'LineString' && curve === true) {\r\n        nodeName = 'Curve';\r\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\r\n        nodeName = 'MultiCurve';\r\n      }\r\n    } else {\r\n      nodeName = 'Envelope';\r\n    }\r\n    return createElementNS(this.namespace,\r\n      nodeName);\r\n  };\r\n\r\n  /**\r\n   * Encode a geometry in GML 3.1.1 Simple Features.\r\n   *\r\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\r\n   * @return {Node} Node.\r\n   * @override\r\n   * @api\r\n   */\r\n  GML3.prototype.writeGeometryNode = function writeGeometryNode (geometry, opt_options) {\r\n    opt_options = this.adaptOptions(opt_options);\r\n    var geom = createElementNS(this.namespace, 'geom');\r\n    var context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\r\n      curve: this.curve_, surface: this.surface_,\r\n      multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\r\n    if (opt_options) {\r\n      assign(context, opt_options);\r\n    }\r\n    this.writeGeometryElement(geom, geometry, [context]);\r\n    return geom;\r\n  };\r\n\r\n  /**\r\n   * Encode an array of features in the GML 3.1.1 format as an XML node.\r\n   *\r\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\r\n   * @return {Element} Node.\r\n   * @override\r\n   * @api\r\n   */\r\n  GML3.prototype.writeFeaturesNode = function writeFeaturesNode (features, opt_options) {\r\n    opt_options = this.adaptOptions(opt_options);\r\n    var node = createElementNS(this.namespace, 'featureMembers');\r\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation);\r\n    var context = {\r\n      srsName: this.srsName,\r\n      hasZ: this.hasZ,\r\n      curve: this.curve_,\r\n      surface: this.surface_,\r\n      multiSurface: this.multiSurface_,\r\n      multiCurve: this.multiCurve_,\r\n      featureNS: this.featureNS,\r\n      featureType: this.featureType\r\n    };\r\n    if (opt_options) {\r\n      assign(context, opt_options);\r\n    }\r\n    this.writeFeatureMembers_(node, features, [context]);\r\n    return node;\r\n  };\n\n  return GML3;\n}(GMLBase));\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\r\n  'http://www.opengis.net/gml': {\r\n    'pos': makeReplacer(GML3.prototype.readFlatPos_),\r\n    'posList': makeReplacer(GML3.prototype.readFlatPosList_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS = {\r\n  'http://www.opengis.net/gml': {\r\n    'interior': GML3.prototype.interiorParser_,\r\n    'exterior': GML3.prototype.exteriorParser_\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGML3.prototype.GEOMETRY_PARSERS = {\r\n  'http://www.opengis.net/gml': {\r\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\r\n    'MultiPoint': makeReplacer(\r\n      GMLBase.prototype.readMultiPoint),\r\n    'LineString': makeReplacer(\r\n      GMLBase.prototype.readLineString),\r\n    'MultiLineString': makeReplacer(\r\n      GMLBase.prototype.readMultiLineString),\r\n    'LinearRing': makeReplacer(\r\n      GMLBase.prototype.readLinearRing),\r\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\r\n    'MultiPolygon': makeReplacer(\r\n      GMLBase.prototype.readMultiPolygon),\r\n    'Surface': makeReplacer(GML3.prototype.readSurface_),\r\n    'MultiSurface': makeReplacer(\r\n      GML3.prototype.readMultiSurface_),\r\n    'Curve': makeReplacer(GML3.prototype.readCurve_),\r\n    'MultiCurve': makeReplacer(\r\n      GML3.prototype.readMultiCurve_),\r\n    'Envelope': makeReplacer(GML3.prototype.readEnvelope_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML3.prototype.MULTICURVE_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'curveMember': makeArrayPusher(\r\n      GML3.prototype.curveMemberParser_),\r\n    'curveMembers': makeArrayPusher(\r\n      GML3.prototype.curveMemberParser_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML3.prototype.MULTISURFACE_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'surfaceMember': makeArrayPusher(\r\n      GML3.prototype.surfaceMemberParser_),\r\n    'surfaceMembers': makeArrayPusher(\r\n      GML3.prototype.surfaceMemberParser_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'LineString': makeArrayPusher(\r\n      GMLBase.prototype.readLineString),\r\n    'Curve': makeArrayPusher(GML3.prototype.readCurve_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\r\n    'Surface': makeArrayPusher(GML3.prototype.readSurface_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML3.prototype.SURFACE_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'patches': makeReplacer(GML3.prototype.readPatch_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML3.prototype.CURVE_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'segments': makeReplacer(GML3.prototype.readSegment_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML3.prototype.ENVELOPE_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'lowerCorner': makeArrayPusher(\r\n      GML3.prototype.readFlatPosList_),\r\n    'upperCorner': makeArrayPusher(\r\n      GML3.prototype.readFlatPosList_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML3.prototype.PATCHES_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'PolygonPatch': makeReplacer(\r\n      GML3.prototype.readPolygonPatch_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML3.prototype.SEGMENTS_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'LineStringSegment': makeReplacer(\r\n      GML3.prototype.readLineStringSegment_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Encode an array of features in GML 3.1.1 Simple Features.\r\n *\r\n * @function\r\n * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\r\n * @return {string} Result.\r\n * @api\r\n */\r\nGML3.prototype.writeFeatures;\r\n\r\n\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML3.prototype.RING_SERIALIZERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'exterior': makeChildAppender(GML3.prototype.writeRing_),\r\n    'interior': makeChildAppender(GML3.prototype.writeRing_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML3.prototype.ENVELOPE_SERIALIZERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'lowerCorner': makeChildAppender(writeStringTextNode),\r\n    'upperCorner': makeChildAppender(writeStringTextNode)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'surfaceMember': makeChildAppender(\r\n      GML3.prototype.writeSurfaceOrPolygonMember_),\r\n    'polygonMember': makeChildAppender(\r\n      GML3.prototype.writeSurfaceOrPolygonMember_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML3.prototype.POINTMEMBER_SERIALIZERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'pointMember': makeChildAppender(\r\n      GML3.prototype.writePointMember_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'lineStringMember': makeChildAppender(\r\n      GML3.prototype.writeLineStringOrCurveMember_),\r\n    'curveMember': makeChildAppender(\r\n      GML3.prototype.writeLineStringOrCurveMember_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML3.prototype.GEOMETRY_SERIALIZERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'Curve': makeChildAppender(\r\n      GML3.prototype.writeCurveOrLineString_),\r\n    'MultiCurve': makeChildAppender(\r\n      GML3.prototype.writeMultiCurveOrLineString_),\r\n    'Point': makeChildAppender(GML3.prototype.writePoint_),\r\n    'MultiPoint': makeChildAppender(\r\n      GML3.prototype.writeMultiPoint_),\r\n    'LineString': makeChildAppender(\r\n      GML3.prototype.writeCurveOrLineString_),\r\n    'MultiLineString': makeChildAppender(\r\n      GML3.prototype.writeMultiCurveOrLineString_),\r\n    'LinearRing': makeChildAppender(\r\n      GML3.prototype.writeLinearRing_),\r\n    'Polygon': makeChildAppender(\r\n      GML3.prototype.writeSurfaceOrPolygon_),\r\n    'MultiPolygon': makeChildAppender(\r\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\r\n    'Surface': makeChildAppender(\r\n      GML3.prototype.writeSurfaceOrPolygon_),\r\n    'MultiSurface': makeChildAppender(\r\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\r\n    'Envelope': makeChildAppender(\r\n      GML3.prototype.writeEnvelope)\r\n  }\r\n};\r\n\r\nexport default GML3;\r\n\r\n//# sourceMappingURL=GML3.js.map","/**\r\n * @module ol/format/GML\r\n */\r\nimport GML3 from './GML3.js';\r\n\r\n/**\r\n * @classdesc\r\n * Feature format for reading and writing data in the GML format\r\n * version 3.1.1.\r\n * Currently only supports GML 3.1.1 Simple Features profile.\r\n *\r\n * @param {import(\"./GMLBase.js\").Options=} opt_options\r\n *     Optional configuration object.\r\n * @api\r\n */\r\nvar GML = GML3;\r\n\r\n\r\n/**\r\n * Encode an array of features in GML 3.1.1 Simple Features.\r\n *\r\n * @function\r\n * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\r\n * @return {string} Result.\r\n * @api\r\n */\r\nGML.prototype.writeFeatures;\r\n\r\n\r\n/**\r\n * Encode an array of features in the GML 3.1.1 format as an XML node.\r\n *\r\n * @function\r\n * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\r\n * @return {Node} Node.\r\n * @api\r\n */\r\nGML.prototype.writeFeaturesNode;\r\n\r\nexport default GML;\r\n\r\n//# sourceMappingURL=GML.js.map","/**\r\n * @module ol/format/GML2\r\n */\r\nimport {createOrUpdate} from '../extent.js';\r\nimport {transformWithOptions} from './Feature.js';\r\nimport GMLBase, {GMLNS} from './GMLBase.js';\r\nimport {writeStringTextNode} from './xsd.js';\r\nimport {assign} from '../obj.js';\r\nimport {get as getProjection, transformExtent} from '../proj.js';\r\nimport {createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender,\r\n  makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, pushParseAndPop, pushSerializeAndPop} from '../xml.js';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nvar schemaLocation = GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, string>}\r\n */\r\nvar MULTIGEOMETRY_TO_MEMBER_NODENAME = {\r\n  'MultiLineString': 'lineStringMember',\r\n  'MultiCurve': 'curveMember',\r\n  'MultiPolygon': 'polygonMember',\r\n  'MultiSurface': 'surfaceMember'\r\n};\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Feature format for reading and writing data in the GML format,\r\n * version 2.1.2.\r\n *\r\n * @api\r\n */\r\nvar GML2 = /*@__PURE__*/(function (GMLBase) {\n  function GML2(opt_options) {\r\n    var options = /** @type {import(\"./GMLBase.js\").Options} */\r\n        (opt_options ? opt_options : {});\r\n\r\n    GMLBase.call(this, options);\r\n\r\n    this.FEATURE_COLLECTION_PARSERS[GMLNS][\r\n      'featureMember'] =\r\n        makeArrayPusher(this.readFeaturesInternal);\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    this.schemaLocation = options.schemaLocation ?\r\n      options.schemaLocation : schemaLocation;\r\n\r\n  }\n\n  if ( GMLBase ) GML2.__proto__ = GMLBase;\n  GML2.prototype = Object.create( GMLBase && GMLBase.prototype );\n  GML2.prototype.constructor = GML2;\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {Array<number>|undefined} Flat coordinates.\r\n   */\r\n  GML2.prototype.readFlatCoordinates_ = function readFlatCoordinates_ (node, objectStack) {\r\n    var s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\r\n    var context = /** @type {import(\"../xml.js\").NodeStackItem} */ (objectStack[0]);\r\n    var containerSrs = context['srsName'];\r\n    var axisOrientation = 'enu';\r\n    if (containerSrs) {\r\n      var proj = getProjection(containerSrs);\r\n      if (proj) {\r\n        axisOrientation = proj.getAxisOrientation();\r\n      }\r\n    }\r\n    var coordsGroups = s.trim().split(/\\s+/);\r\n    var flatCoordinates = [];\r\n    for (var i = 0, ii = coordsGroups.length; i < ii; i++) {\r\n      var coords = coordsGroups[i].split(/,+/);\r\n      var x = parseFloat(coords[0]);\r\n      var y = parseFloat(coords[1]);\r\n      var z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\r\n      if (axisOrientation.substr(0, 2) === 'en') {\r\n        flatCoordinates.push(x, y, z);\r\n      } else {\r\n        flatCoordinates.push(y, x, z);\r\n      }\r\n    }\r\n    return flatCoordinates;\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\r\n   */\r\n  GML2.prototype.readBox_ = function readBox_ (node, objectStack) {\r\n    /** @type {Array<number>} */\r\n    var flatCoordinates = pushParseAndPop([null],\r\n      this.BOX_PARSERS_, node, objectStack, this);\r\n    return createOrUpdate(flatCoordinates[1][0],\r\n      flatCoordinates[1][1], flatCoordinates[1][3],\r\n      flatCoordinates[1][4]);\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   */\r\n  GML2.prototype.innerBoundaryIsParser_ = function innerBoundaryIsParser_ (node, objectStack) {\r\n    /** @type {Array<number>|undefined} */\r\n    var flatLinearRing = pushParseAndPop(undefined,\r\n      this.RING_PARSERS, node, objectStack, this);\r\n    if (flatLinearRing) {\r\n      var flatLinearRings = /** @type {Array<Array<number>>} */\r\n          (objectStack[objectStack.length - 1]);\r\n      flatLinearRings.push(flatLinearRing);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   */\r\n  GML2.prototype.outerBoundaryIsParser_ = function outerBoundaryIsParser_ (node, objectStack) {\r\n    /** @type {Array<number>|undefined} */\r\n    var flatLinearRing = pushParseAndPop(undefined,\r\n      this.RING_PARSERS, node, objectStack, this);\r\n    if (flatLinearRing) {\r\n      var flatLinearRings = /** @type {Array<Array<number>>} */\r\n          (objectStack[objectStack.length - 1]);\r\n      flatLinearRings[0] = flatLinearRing;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @const\r\n   * @param {*} value Value.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @param {string=} opt_nodeName Node name.\r\n   * @return {Element|undefined} Node.\r\n   * @private\r\n   */\r\n  GML2.prototype.GEOMETRY_NODE_FACTORY_ = function GEOMETRY_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\r\n    var context = objectStack[objectStack.length - 1];\r\n    var multiSurface = context['multiSurface'];\r\n    var surface = context['surface'];\r\n    var multiCurve = context['multiCurve'];\r\n    var nodeName;\r\n    if (!Array.isArray(value)) {\r\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType();\r\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\r\n        nodeName = 'MultiSurface';\r\n      } else if (nodeName === 'Polygon' && surface === true) {\r\n        nodeName = 'Surface';\r\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\r\n        nodeName = 'MultiCurve';\r\n      }\r\n    } else {\r\n      nodeName = 'Envelope';\r\n    }\r\n    return createElementNS('http://www.opengis.net/gml',\r\n      nodeName);\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   */\r\n  GML2.prototype.writeFeatureElement = function writeFeatureElement (node, feature, objectStack) {\r\n    var fid = feature.getId();\r\n    if (fid) {\r\n      node.setAttribute('fid', /** @type {string} */ (fid));\r\n    }\r\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n    var featureNS = context['featureNS'];\r\n    var geometryName = feature.getGeometryName();\r\n    if (!context.serializers) {\r\n      context.serializers = {};\r\n      context.serializers[featureNS] = {};\r\n    }\r\n    var properties = feature.getProperties();\r\n    var keys = [];\r\n    var values = [];\r\n    for (var key in properties) {\r\n      var value = properties[key];\r\n      if (value !== null) {\r\n        keys.push(key);\r\n        values.push(value);\r\n        if (key == geometryName || typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\r\n          if (!(key in context.serializers[featureNS])) {\r\n            context.serializers[featureNS][key] = makeChildAppender(\r\n              this.writeGeometryElement, this);\r\n          }\r\n        } else {\r\n          if (!(key in context.serializers[featureNS])) {\r\n            context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    var item = assign({}, context);\r\n    item.node = node;\r\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\r\n      (item), context.serializers,\r\n      makeSimpleNodeFactory(undefined, featureNS),\r\n      values,\r\n      objectStack, keys);\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {import(\"../geom/LineString.js\").default} geometry LineString geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  GML2.prototype.writeCurveOrLineString_ = function writeCurveOrLineString_ (node, geometry, objectStack) {\r\n    var context = objectStack[objectStack.length - 1];\r\n    var srsName = context['srsName'];\r\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\r\n      node.setAttribute('srsName', srsName);\r\n    }\r\n    if (node.nodeName === 'LineString' ||\r\n        node.nodeName === 'LineStringSegment') {\r\n      var coordinates = this.createCoordinatesNode_(node.namespaceURI);\r\n      node.appendChild(coordinates);\r\n      this.writeCoordinates_(coordinates, geometry, objectStack);\r\n    } else if (node.nodeName === 'Curve') {\r\n      var segments = createElementNS(node.namespaceURI, 'segments');\r\n      node.appendChild(segments);\r\n      this.writeCurveSegments_(segments,\r\n        geometry, objectStack);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  GML2.prototype.writeLineStringOrCurveMember_ = function writeLineStringOrCurveMember_ (node, line, objectStack) {\r\n    var child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\r\n    if (child) {\r\n      node.appendChild(child);\r\n      this.writeCurveOrLineString_(child, line, objectStack);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry MultiLineString geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  GML2.prototype.writeMultiCurveOrLineString_ = function writeMultiCurveOrLineString_ (node, geometry, objectStack) {\r\n    var context = objectStack[objectStack.length - 1];\r\n    var hasZ = context['hasZ'];\r\n    var srsName = context['srsName'];\r\n    var curve = context['curve'];\r\n    if (srsName) {\r\n      node.setAttribute('srsName', srsName);\r\n    }\r\n    var lines = geometry.getLineStrings();\r\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\r\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\r\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\r\n      objectStack, undefined, this);\r\n  };\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   */\r\n  GML2.prototype.writeGeometryElement = function writeGeometryElement (node, geometry, objectStack) {\r\n    var context = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[objectStack.length - 1]);\r\n    var item = assign({}, context);\r\n    item['node'] = node;\r\n    var value;\r\n    if (Array.isArray(geometry)) {\r\n      if (context.dataProjection) {\r\n        value = transformExtent(\r\n          geometry, context.featureProjection, context.dataProjection);\r\n      } else {\r\n        value = geometry;\r\n      }\r\n    } else {\r\n      value = transformWithOptions(/** @type {import(\"../geom/Geometry.js\").default} */ (geometry), true, context);\r\n    }\r\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\r\n      (item), this.GEOMETRY_SERIALIZERS_,\r\n      this.GEOMETRY_NODE_FACTORY_, [value],\r\n      objectStack, undefined, this);\r\n  };\r\n\r\n  /**\r\n   * @param {string} namespaceURI XML namespace.\r\n   * @returns {Element} coordinates node.\r\n   * @private\r\n   */\r\n  GML2.prototype.createCoordinatesNode_ = function createCoordinatesNode_ (namespaceURI) {\r\n    var coordinates = createElementNS(namespaceURI, 'coordinates');\r\n    coordinates.setAttribute('decimal', '.');\r\n    coordinates.setAttribute('cs', ',');\r\n    coordinates.setAttribute('ts', ' ');\r\n\r\n    return coordinates;\r\n  };\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {import(\"../geom/LineString.js\").default|import(\"../geom/LinearRing.js\").default} value Geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  GML2.prototype.writeCoordinates_ = function writeCoordinates_ (node, value, objectStack) {\r\n    var context = objectStack[objectStack.length - 1];\r\n    var hasZ = context['hasZ'];\r\n    var srsName = context['srsName'];\r\n    // only 2d for simple features profile\r\n    var points = value.getCoordinates();\r\n    var len = points.length;\r\n    var parts = new Array(len);\r\n    for (var i = 0; i < len; ++i) {\r\n      var point = points[i];\r\n      parts[i] = this.getCoords_(point, srsName, hasZ);\r\n    }\r\n    writeStringTextNode(node, parts.join(' '));\r\n  };\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  GML2.prototype.writeCurveSegments_ = function writeCurveSegments_ (node, line, objectStack) {\r\n    var child = createElementNS(node.namespaceURI, 'LineStringSegment');\r\n    node.appendChild(child);\r\n    this.writeCurveOrLineString_(child, line, objectStack);\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  GML2.prototype.writeSurfaceOrPolygon_ = function writeSurfaceOrPolygon_ (node, geometry, objectStack) {\r\n    var context = objectStack[objectStack.length - 1];\r\n    var hasZ = context['hasZ'];\r\n    var srsName = context['srsName'];\r\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\r\n      node.setAttribute('srsName', srsName);\r\n    }\r\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\r\n      var rings = geometry.getLinearRings();\r\n      pushSerializeAndPop(\r\n        {node: node, hasZ: hasZ, srsName: srsName},\r\n        this.RING_SERIALIZERS_,\r\n        this.RING_NODE_FACTORY_,\r\n        rings, objectStack, undefined, this);\r\n    } else if (node.nodeName === 'Surface') {\r\n      var patches = createElementNS(node.namespaceURI, 'patches');\r\n      node.appendChild(patches);\r\n      this.writeSurfacePatches_(\r\n        patches, geometry, objectStack);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {*} value Value.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @param {string=} opt_nodeName Node name.\r\n   * @return {Node} Node.\r\n   * @private\r\n   */\r\n  GML2.prototype.RING_NODE_FACTORY_ = function RING_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\r\n    var context = objectStack[objectStack.length - 1];\r\n    var parentNode = context.node;\r\n    var exteriorWritten = context['exteriorWritten'];\r\n    if (exteriorWritten === undefined) {\r\n      context['exteriorWritten'] = true;\r\n    }\r\n    return createElementNS(parentNode.namespaceURI,\r\n      exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\r\n  };\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  GML2.prototype.writeSurfacePatches_ = function writeSurfacePatches_ (node, polygon, objectStack) {\r\n    var child = createElementNS(node.namespaceURI, 'PolygonPatch');\r\n    node.appendChild(child);\r\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\r\n  };\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  GML2.prototype.writeRing_ = function writeRing_ (node, ring, objectStack) {\r\n    var linearRing = createElementNS(node.namespaceURI, 'LinearRing');\r\n    node.appendChild(linearRing);\r\n    this.writeLinearRing_(linearRing, ring, objectStack);\r\n  };\r\n\r\n  /**\r\n   * @param {Array<number>} point Point geometry.\r\n   * @param {string=} opt_srsName Optional srsName\r\n   * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\r\n   * @return {string} The coords string.\r\n   * @private\r\n   */\r\n  GML2.prototype.getCoords_ = function getCoords_ (point, opt_srsName, opt_hasZ) {\r\n    var axisOrientation = 'enu';\r\n    if (opt_srsName) {\r\n      axisOrientation = getProjection(opt_srsName).getAxisOrientation();\r\n    }\r\n    var coords = ((axisOrientation.substr(0, 2) === 'en') ?\r\n      point[0] + ',' + point[1] :\r\n      point[1] + ',' + point[0]);\r\n    if (opt_hasZ) {\r\n      // For newly created points, Z can be undefined.\r\n      var z = point[2] || 0;\r\n      coords += ',' + z;\r\n    }\r\n\r\n    return coords;\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  GML2.prototype.writePoint_ = function writePoint_ (node, geometry, objectStack) {\r\n    var context = objectStack[objectStack.length - 1];\r\n    var hasZ = context['hasZ'];\r\n    var srsName = context['srsName'];\r\n    if (srsName) {\r\n      node.setAttribute('srsName', srsName);\r\n    }\r\n    var coordinates = this.createCoordinatesNode_(node.namespaceURI);\r\n    node.appendChild(coordinates);\r\n    var point = geometry.getCoordinates();\r\n    var coord = this.getCoords_(point, srsName, hasZ);\r\n    writeStringTextNode(coordinates, coord);\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  GML2.prototype.writeMultiPoint_ = function writeMultiPoint_ (node, geometry, objectStack) {\r\n    var context = objectStack[objectStack.length - 1];\r\n    var hasZ = context['hasZ'];\r\n    var srsName = context['srsName'];\r\n    if (srsName) {\r\n      node.setAttribute('srsName', srsName);\r\n    }\r\n    var points = geometry.getPoints();\r\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\r\n      this.POINTMEMBER_SERIALIZERS_,\r\n      makeSimpleNodeFactory('pointMember'), points,\r\n      objectStack, undefined, this);\r\n  };\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  GML2.prototype.writePointMember_ = function writePointMember_ (node, point, objectStack) {\r\n    var child = createElementNS(node.namespaceURI, 'Point');\r\n    node.appendChild(child);\r\n    this.writePoint_(child, point, objectStack);\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  GML2.prototype.writeLinearRing_ = function writeLinearRing_ (node, geometry, objectStack) {\r\n    var context = objectStack[objectStack.length - 1];\r\n    var srsName = context['srsName'];\r\n    if (srsName) {\r\n      node.setAttribute('srsName', srsName);\r\n    }\r\n    var coordinates = this.createCoordinatesNode_(node.namespaceURI);\r\n    node.appendChild(coordinates);\r\n    this.writeCoordinates_(coordinates, geometry, objectStack);\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  GML2.prototype.writeMultiSurfaceOrPolygon_ = function writeMultiSurfaceOrPolygon_ (node, geometry, objectStack) {\r\n    var context = objectStack[objectStack.length - 1];\r\n    var hasZ = context['hasZ'];\r\n    var srsName = context['srsName'];\r\n    var surface = context['surface'];\r\n    if (srsName) {\r\n      node.setAttribute('srsName', srsName);\r\n    }\r\n    var polygons = geometry.getPolygons();\r\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\r\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\r\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\r\n      objectStack, undefined, this);\r\n  };\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  GML2.prototype.writeSurfaceOrPolygonMember_ = function writeSurfaceOrPolygonMember_ (node, polygon, objectStack) {\r\n    var child = this.GEOMETRY_NODE_FACTORY_(\r\n      polygon, objectStack);\r\n    if (child) {\r\n      node.appendChild(child);\r\n      this.writeSurfaceOrPolygon_(child, polygon, objectStack);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {Array<*>} objectStack Node stack.\r\n   * @private\r\n   */\r\n  GML2.prototype.writeEnvelope = function writeEnvelope (node, extent, objectStack) {\r\n    var context = objectStack[objectStack.length - 1];\r\n    var srsName = context['srsName'];\r\n    if (srsName) {\r\n      node.setAttribute('srsName', srsName);\r\n    }\r\n    var keys = ['lowerCorner', 'upperCorner'];\r\n    var values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\r\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\r\n      ({node: node}), this.ENVELOPE_SERIALIZERS_,\r\n      OBJECT_PROPERTY_NODE_FACTORY,\r\n      values,\r\n      objectStack, keys, this);\r\n  };\r\n\r\n  /**\r\n   * @const\r\n   * @param {*} value Value.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @param {string=} opt_nodeName Node name.\r\n   * @return {Node|undefined} Node.\r\n   * @private\r\n   */\r\n  GML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function MULTIGEOMETRY_MEMBER_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\r\n    var parentNode = objectStack[objectStack.length - 1].node;\r\n    return createElementNS('http://www.opengis.net/gml',\r\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\r\n  };\n\n  return GML2;\n}(GMLBase));\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\r\n  'http://www.opengis.net/gml': {\r\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates_)\r\n  }\r\n};\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS = {\r\n  'http://www.opengis.net/gml': {\r\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\r\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\r\n  }\r\n};\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML2.prototype.BOX_PARSERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'coordinates': makeArrayPusher(\r\n      GML2.prototype.readFlatCoordinates_)\r\n  }\r\n};\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGML2.prototype.GEOMETRY_PARSERS = {\r\n  'http://www.opengis.net/gml': {\r\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\r\n    'MultiPoint': makeReplacer(\r\n      GMLBase.prototype.readMultiPoint),\r\n    'LineString': makeReplacer(\r\n      GMLBase.prototype.readLineString),\r\n    'MultiLineString': makeReplacer(\r\n      GMLBase.prototype.readMultiLineString),\r\n    'LinearRing': makeReplacer(\r\n      GMLBase.prototype.readLinearRing),\r\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\r\n    'MultiPolygon': makeReplacer(\r\n      GMLBase.prototype.readMultiPolygon),\r\n    'Box': makeReplacer(GML2.prototype.readBox_)\r\n  }\r\n};\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML2.prototype.GEOMETRY_SERIALIZERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'Curve': makeChildAppender(\r\n      GML2.prototype.writeCurveOrLineString_),\r\n    'MultiCurve': makeChildAppender(\r\n      GML2.prototype.writeMultiCurveOrLineString_),\r\n    'Point': makeChildAppender(GML2.prototype.writePoint_),\r\n    'MultiPoint': makeChildAppender(\r\n      GML2.prototype.writeMultiPoint_),\r\n    'LineString': makeChildAppender(\r\n      GML2.prototype.writeCurveOrLineString_),\r\n    'MultiLineString': makeChildAppender(\r\n      GML2.prototype.writeMultiCurveOrLineString_),\r\n    'LinearRing': makeChildAppender(\r\n      GML2.prototype.writeLinearRing_),\r\n    'Polygon': makeChildAppender(\r\n      GML2.prototype.writeSurfaceOrPolygon_),\r\n    'MultiPolygon': makeChildAppender(\r\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\r\n    'Surface': makeChildAppender(\r\n      GML2.prototype.writeSurfaceOrPolygon_),\r\n    'MultiSurface': makeChildAppender(\r\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\r\n    'Envelope': makeChildAppender(\r\n      GML2.prototype.writeEnvelope)\r\n  }\r\n};\r\n\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'lineStringMember': makeChildAppender(\r\n      GML2.prototype.writeLineStringOrCurveMember_),\r\n    'curveMember': makeChildAppender(\r\n      GML2.prototype.writeLineStringOrCurveMember_)\r\n  }\r\n};\r\n\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML2.prototype.RING_SERIALIZERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_),\r\n    'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_)\r\n  }\r\n};\r\n\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML2.prototype.POINTMEMBER_SERIALIZERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'pointMember': makeChildAppender(\r\n      GML2.prototype.writePointMember_)\r\n  }\r\n};\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'surfaceMember': makeChildAppender(\r\n      GML2.prototype.writeSurfaceOrPolygonMember_),\r\n    'polygonMember': makeChildAppender(\r\n      GML2.prototype.writeSurfaceOrPolygonMember_)\r\n  }\r\n};\r\n\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML2.prototype.ENVELOPE_SERIALIZERS_ = {\r\n  'http://www.opengis.net/gml': {\r\n    'lowerCorner': makeChildAppender(writeStringTextNode),\r\n    'upperCorner': makeChildAppender(writeStringTextNode)\r\n  }\r\n};\r\n\r\nexport default GML2;\r\n\r\n//# sourceMappingURL=GML2.js.map","/**\r\n * @module ol/format/GML32\r\n */\r\nimport GML3 from './GML3.js';\r\nimport GMLBase from './GMLBase.js';\r\nimport {makeArrayPusher, makeReplacer, makeChildAppender} from '../xml.js';\r\nimport {writeStringTextNode} from '../format/xsd.js';\r\n\r\n/**\r\n * @classdesc Feature format for reading and writing data in the GML format\r\n *            version 3.2.1.\r\n * @api\r\n */\r\nvar GML32 = /*@__PURE__*/(function (GML3) {\n  function GML32(opt_options) {\r\n    var options = /** @type {import(\"./GMLBase.js\").Options} */ (opt_options ? opt_options : {});\r\n\r\n    GML3.call(this, options);\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    this.schemaLocation = options.schemaLocation ?\r\n      options.schemaLocation : this.namespace + ' http://schemas.opengis.net/gml/3.2.1/gml.xsd';\r\n\r\n  }\n\n  if ( GML3 ) GML32.__proto__ = GML3;\n  GML32.prototype = Object.create( GML3 && GML3.prototype );\n  GML32.prototype.constructor = GML32;\n\n  return GML32;\n}(GML3));\r\n\r\nGML32.prototype.namespace = 'http://www.opengis.net/gml/3.2';\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGML32.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\r\n  'http://www.opengis.net/gml/3.2': {\r\n    'pos': makeReplacer(GML3.prototype.readFlatPos_),\r\n    'posList': makeReplacer(GML3.prototype.readFlatPosList_)\r\n  }\r\n};\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGML32.prototype.FLAT_LINEAR_RINGS_PARSERS = {\r\n  'http://www.opengis.net/gml/3.2': {\r\n    'interior': GML3.prototype.interiorParser_,\r\n    'exterior': GML3.prototype.exteriorParser_\r\n  }\r\n};\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGML32.prototype.GEOMETRY_PARSERS = {\r\n  'http://www.opengis.net/gml/3.2': {\r\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\r\n    'MultiPoint': makeReplacer(\r\n      GMLBase.prototype.readMultiPoint),\r\n    'LineString': makeReplacer(\r\n      GMLBase.prototype.readLineString),\r\n    'MultiLineString': makeReplacer(\r\n      GMLBase.prototype.readMultiLineString),\r\n    'LinearRing': makeReplacer(\r\n      GMLBase.prototype.readLinearRing),\r\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\r\n    'MultiPolygon': makeReplacer(\r\n      GMLBase.prototype.readMultiPolygon),\r\n    'Surface': makeReplacer(GML32.prototype.readSurface_),\r\n    'MultiSurface': makeReplacer(\r\n      GML3.prototype.readMultiSurface_),\r\n    'Curve': makeReplacer(GML32.prototype.readCurve_),\r\n    'MultiCurve': makeReplacer(\r\n      GML3.prototype.readMultiCurve_),\r\n    'Envelope': makeReplacer(GML32.prototype.readEnvelope_)\r\n  }\r\n};\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML32.prototype.MULTICURVE_PARSERS_ = {\r\n  'http://www.opengis.net/gml/3.2': {\r\n    'curveMember': makeArrayPusher(\r\n      GML3.prototype.curveMemberParser_),\r\n    'curveMembers': makeArrayPusher(\r\n      GML3.prototype.curveMemberParser_)\r\n  }\r\n};\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML32.prototype.MULTISURFACE_PARSERS_ = {\r\n  'http://www.opengis.net/gml/3.2': {\r\n    'surfaceMember': makeArrayPusher(\r\n      GML3.prototype.surfaceMemberParser_),\r\n    'surfaceMembers': makeArrayPusher(\r\n      GML3.prototype.surfaceMemberParser_)\r\n  }\r\n};\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML32.prototype.CURVEMEMBER_PARSERS_ = {\r\n  'http://www.opengis.net/gml/3.2': {\r\n    'LineString': makeArrayPusher(\r\n      GMLBase.prototype.readLineString),\r\n    'Curve': makeArrayPusher(GML3.prototype.readCurve_)\r\n  }\r\n};\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML32.prototype.SURFACEMEMBER_PARSERS_ = {\r\n  'http://www.opengis.net/gml/3.2': {\r\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\r\n    'Surface': makeArrayPusher(GML3.prototype.readSurface_)\r\n  }\r\n};\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML32.prototype.SURFACE_PARSERS_ = {\r\n  'http://www.opengis.net/gml/3.2': {\r\n    'patches': makeReplacer(GML3.prototype.readPatch_)\r\n  }\r\n};\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML32.prototype.CURVE_PARSERS_ = {\r\n  'http://www.opengis.net/gml/3.2': {\r\n    'segments': makeReplacer(GML3.prototype.readSegment_)\r\n  }\r\n};\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML32.prototype.ENVELOPE_PARSERS_ = {\r\n  'http://www.opengis.net/gml/3.2': {\r\n    'lowerCorner': makeArrayPusher(\r\n      GML3.prototype.readFlatPosList_),\r\n    'upperCorner': makeArrayPusher(\r\n      GML3.prototype.readFlatPosList_)\r\n  }\r\n};\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML32.prototype.PATCHES_PARSERS_ = {\r\n  'http://www.opengis.net/gml/3.2': {\r\n    'PolygonPatch': makeReplacer(\r\n      GML3.prototype.readPolygonPatch_)\r\n  }\r\n};\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML32.prototype.SEGMENTS_PARSERS_ = {\r\n  'http://www.opengis.net/gml/3.2': {\r\n    'LineStringSegment': makeReplacer(\r\n      GML3.prototype.readLineStringSegment_)\r\n  }\r\n};\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML32.prototype.MULTIPOINT_PARSERS_ = {\r\n  'http://www.opengis.net/gml/3.2': {\r\n    'pointMember': makeArrayPusher(\r\n      GMLBase.prototype.pointMemberParser_),\r\n    'pointMembers': makeArrayPusher(\r\n      GMLBase.prototype.pointMemberParser_)\r\n  }\r\n};\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML32.prototype.MULTILINESTRING_PARSERS_ = {\r\n  'http://www.opengis.net/gml/3.2': {\r\n    'lineStringMember': makeArrayPusher(\r\n      GMLBase.prototype.lineStringMemberParser_),\r\n    'lineStringMembers': makeArrayPusher(\r\n      GMLBase.prototype.lineStringMemberParser_)\r\n  }\r\n};\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML32.prototype.MULTIPOLYGON_PARSERS_ = {\r\n  'http://www.opengis.net/gml/3.2': {\r\n    'polygonMember': makeArrayPusher(\r\n      GMLBase.prototype.polygonMemberParser_),\r\n    'polygonMembers': makeArrayPusher(\r\n      GMLBase.prototype.polygonMemberParser_)\r\n  }\r\n};\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML32.prototype.POINTMEMBER_PARSERS_ = {\r\n  'http://www.opengis.net/gml/3.2': {\r\n    'Point': makeArrayPusher(\r\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\r\n  }\r\n};\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML32.prototype.LINESTRINGMEMBER_PARSERS_ = {\r\n  'http://www.opengis.net/gml/3.2': {\r\n    'LineString': makeArrayPusher(\r\n      GMLBase.prototype.readLineString)\r\n  }\r\n};\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @private\r\n */\r\nGML32.prototype.POLYGONMEMBER_PARSERS_ = {\r\n  'http://www.opengis.net/gml/3.2': {\r\n    'Polygon': makeArrayPusher(\r\n      GMLBase.prototype.readPolygon)\r\n  }\r\n};\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n * @protected\r\n */\r\nGML32.prototype.RING_PARSERS = {\r\n  'http://www.opengis.net/gml/3.2': {\r\n    'LinearRing': makeReplacer(\r\n      GMLBase.prototype.readFlatLinearRing_)\r\n  }\r\n};\r\n\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML32.prototype.RING_SERIALIZERS_ = {\r\n  'http://www.opengis.net/gml/3.2': {\r\n    'exterior': makeChildAppender(GML3.prototype.writeRing_),\r\n    'interior': makeChildAppender(GML3.prototype.writeRing_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML32.prototype.ENVELOPE_SERIALIZERS_ = {\r\n  'http://www.opengis.net/gml/3.2': {\r\n    'lowerCorner': makeChildAppender(writeStringTextNode),\r\n    'upperCorner': makeChildAppender(writeStringTextNode)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML32.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\r\n  'http://www.opengis.net/gml/3.2': {\r\n    'surfaceMember': makeChildAppender(\r\n      GML3.prototype.writeSurfaceOrPolygonMember_),\r\n    'polygonMember': makeChildAppender(\r\n      GML3.prototype.writeSurfaceOrPolygonMember_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML32.prototype.POINTMEMBER_SERIALIZERS_ = {\r\n  'http://www.opengis.net/gml/3.2': {\r\n    'pointMember': makeChildAppender(\r\n      GML3.prototype.writePointMember_)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML32.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\r\n  'http://www.opengis.net/gml/3.2': {\r\n    'lineStringMember': makeChildAppender(\r\n      GML3.prototype.writeLineStringOrCurveMember_),\r\n    'curveMember': makeChildAppender(\r\n      GML3.prototype.writeLineStringOrCurveMember_)\r\n  }\r\n};\r\n\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n * @private\r\n */\r\nGML32.prototype.GEOMETRY_SERIALIZERS_ = {\r\n  'http://www.opengis.net/gml/3.2': {\r\n    'Curve': makeChildAppender(\r\n      GML3.prototype.writeCurveOrLineString_),\r\n    'MultiCurve': makeChildAppender(\r\n      GML3.prototype.writeMultiCurveOrLineString_),\r\n    'Point': makeChildAppender(GML32.prototype.writePoint_),\r\n    'MultiPoint': makeChildAppender(\r\n      GML3.prototype.writeMultiPoint_),\r\n    'LineString': makeChildAppender(\r\n      GML3.prototype.writeCurveOrLineString_),\r\n    'MultiLineString': makeChildAppender(\r\n      GML3.prototype.writeMultiCurveOrLineString_),\r\n    'LinearRing': makeChildAppender(\r\n      GML3.prototype.writeLinearRing_),\r\n    'Polygon': makeChildAppender(\r\n      GML3.prototype.writeSurfaceOrPolygon_),\r\n    'MultiPolygon': makeChildAppender(\r\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\r\n    'Surface': makeChildAppender(\r\n      GML3.prototype.writeSurfaceOrPolygon_),\r\n    'MultiSurface': makeChildAppender(\r\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\r\n    'Envelope': makeChildAppender(\r\n      GML3.prototype.writeEnvelope)\r\n  }\r\n};\r\n\r\nexport default GML32;\r\n\r\n//# sourceMappingURL=GML32.js.map","/**\r\n * @module ol/format/GPX\r\n */\r\nimport Feature from '../Feature.js';\r\nimport {includes} from '../array.js';\r\nimport {transformWithOptions} from './Feature.js';\r\nimport XMLFeature from './XMLFeature.js';\r\nimport {readString, readDecimal, readNonNegativeInteger, readDateTime, writeStringTextNode, writeNonNegativeIntegerTextNode, writeDecimalTextNode, writeDateTimeTextNode} from './xsd.js';\r\nimport GeometryLayout from '../geom/GeometryLayout.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport MultiLineString from '../geom/MultiLineString.js';\r\nimport Point from '../geom/Point.js';\r\nimport {get as getProjection} from '../proj.js';\r\nimport {createElementNS, makeArrayPusher, makeArraySerializer, makeChildAppender,\r\n  makeObjectPropertySetter, makeSequence, makeSimpleNodeFactory, makeStructureNS,\r\n  OBJECT_PROPERTY_NODE_FACTORY, parseNode, pushParseAndPop, pushSerializeAndPop,\r\n  XML_SCHEMA_INSTANCE_URI} from '../xml.js';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Array<null|string>}\r\n */\r\nvar NAMESPACE_URIS = [\r\n  null,\r\n  'http://www.topografix.com/GPX/1/0',\r\n  'http://www.topografix.com/GPX/1/1'\r\n];\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nvar SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\r\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\r\n */\r\nvar FEATURE_READER = {\r\n  'rte': readRte,\r\n  'trk': readTrk,\r\n  'wpt': readWpt\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar GPX_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'rte': makeArrayPusher(readRte),\r\n    'trk': makeArrayPusher(readTrk),\r\n    'wpt': makeArrayPusher(readWpt)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar LINK_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'text': makeObjectPropertySetter(readString, 'linkText'),\r\n    'type': makeObjectPropertySetter(readString, 'linkType')\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar GPX_SERIALIZERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'rte': makeChildAppender(writeRte),\r\n    'trk': makeChildAppender(writeTrk),\r\n    'wpt': makeChildAppender(writeWpt)\r\n  });\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {function(Feature, Node)} [readExtensions] Callback function\r\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\r\n * not store any references to the node. Note that the `extensions`\r\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\r\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\r\n * directly mapped to a feature.\r\n */\r\n\r\n/**\r\n * @typedef {Object} LayoutOptions\r\n * @property {boolean} [hasZ]\r\n * @property {boolean} [hasM]\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Feature format for reading and writing data in the GPX format.\r\n *\r\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\r\n * feature of the source.\r\n *\r\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\r\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\r\n * waypoints are ignored.\r\n *\r\n * When writing, LineString geometries are output as routes (`<rte>`), and\r\n * MultiLineString as tracks (`<trk>`).\r\n *\r\n * @api\r\n */\r\nvar GPX = /*@__PURE__*/(function (XMLFeature) {\n  function GPX(opt_options) {\r\n    XMLFeature.call(this);\r\n\r\n    var options = opt_options ? opt_options : {};\r\n\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    this.dataProjection = getProjection('EPSG:4326');\r\n\r\n    /**\r\n     * @type {function(Feature, Node)|undefined}\r\n     * @private\r\n     */\r\n    this.readExtensions_ = options.readExtensions;\r\n  }\n\n  if ( XMLFeature ) GPX.__proto__ = XMLFeature;\n  GPX.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  GPX.prototype.constructor = GPX;\r\n\r\n  /**\r\n   * @param {Array<Feature>} features List of features.\r\n   * @private\r\n   */\r\n  GPX.prototype.handleReadExtensions_ = function handleReadExtensions_ (features) {\r\n    if (!features) {\r\n      features = [];\r\n    }\r\n    for (var i = 0, ii = features.length; i < ii; ++i) {\r\n      var feature = features[i];\r\n      if (this.readExtensions_) {\r\n        var extensionsNode = feature.get('extensionsNode_') || null;\r\n        this.readExtensions_(feature, extensionsNode);\r\n      }\r\n      feature.set('extensionsNode_', undefined);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  GPX.prototype.readFeatureFromNode = function readFeatureFromNode (node, opt_options) {\r\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\r\n      return null;\r\n    }\r\n    var featureReader = FEATURE_READER[node.localName];\r\n    if (!featureReader) {\r\n      return null;\r\n    }\r\n    var feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\r\n    if (!feature) {\r\n      return null;\r\n    }\r\n    this.handleReadExtensions_([feature]);\r\n    return feature;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  GPX.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\r\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\r\n      return [];\r\n    }\r\n    if (node.localName == 'gpx') {\r\n      /** @type {Array<Feature>} */\r\n      var features = pushParseAndPop([], GPX_PARSERS,\r\n        node, [this.getReadOptions(node, opt_options)]);\r\n      if (features) {\r\n        this.handleReadExtensions_(features);\r\n        return features;\r\n      } else {\r\n        return [];\r\n      }\r\n    }\r\n    return [];\r\n  };\r\n\r\n  /**\r\n   * Encode an array of features in the GPX format as an XML node.\r\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\r\n   * as tracks (`<trk>`).\r\n   *\r\n   * @param {Array<Feature>} features Features.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\r\n   * @return {Node} Node.\r\n   * @override\r\n   * @api\r\n   */\r\n  GPX.prototype.writeFeaturesNode = function writeFeaturesNode (features, opt_options) {\r\n    opt_options = this.adaptOptions(opt_options);\r\n    //FIXME Serialize metadata\r\n    var gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\r\n    var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\r\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\r\n    gpx.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\r\n    gpx.setAttribute('version', '1.1');\r\n    gpx.setAttribute('creator', 'OpenLayers');\r\n\r\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\r\n      ({node: gpx}), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\r\n    return gpx;\r\n  };\n\n  return GPX;\n}(XMLFeature));\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar RTE_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'name': makeObjectPropertySetter(readString),\r\n    'cmt': makeObjectPropertySetter(readString),\r\n    'desc': makeObjectPropertySetter(readString),\r\n    'src': makeObjectPropertySetter(readString),\r\n    'link': parseLink,\r\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\r\n    'extensions': parseExtensions,\r\n    'type': makeObjectPropertySetter(readString),\r\n    'rtept': parseRtePt\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar RTEPT_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'ele': makeObjectPropertySetter(readDecimal),\r\n    'time': makeObjectPropertySetter(readDateTime)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar TRK_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'name': makeObjectPropertySetter(readString),\r\n    'cmt': makeObjectPropertySetter(readString),\r\n    'desc': makeObjectPropertySetter(readString),\r\n    'src': makeObjectPropertySetter(readString),\r\n    'link': parseLink,\r\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\r\n    'type': makeObjectPropertySetter(readString),\r\n    'extensions': parseExtensions,\r\n    'trkseg': parseTrkSeg\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar TRKSEG_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'trkpt': parseTrkPt\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar TRKPT_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'ele': makeObjectPropertySetter(readDecimal),\r\n    'time': makeObjectPropertySetter(readDateTime)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar WPT_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'ele': makeObjectPropertySetter(readDecimal),\r\n    'time': makeObjectPropertySetter(readDateTime),\r\n    'magvar': makeObjectPropertySetter(readDecimal),\r\n    'geoidheight': makeObjectPropertySetter(readDecimal),\r\n    'name': makeObjectPropertySetter(readString),\r\n    'cmt': makeObjectPropertySetter(readString),\r\n    'desc': makeObjectPropertySetter(readString),\r\n    'src': makeObjectPropertySetter(readString),\r\n    'link': parseLink,\r\n    'sym': makeObjectPropertySetter(readString),\r\n    'type': makeObjectPropertySetter(readString),\r\n    'fix': makeObjectPropertySetter(readString),\r\n    'sat': makeObjectPropertySetter(readNonNegativeInteger),\r\n    'hdop': makeObjectPropertySetter(readDecimal),\r\n    'vdop': makeObjectPropertySetter(readDecimal),\r\n    'pdop': makeObjectPropertySetter(readDecimal),\r\n    'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\r\n    'dgpsid': makeObjectPropertySetter(readNonNegativeInteger),\r\n    'extensions': parseExtensions\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Array<string>}\r\n */\r\nvar LINK_SEQUENCE = ['text', 'type'];\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar LINK_SERIALIZERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'text': makeChildAppender(writeStringTextNode),\r\n    'type': makeChildAppender(writeStringTextNode)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Array<string>>}\r\n */\r\nvar RTE_SEQUENCE = makeStructureNS(\r\n  NAMESPACE_URIS, [\r\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\r\n  ]);\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar RTE_SERIALIZERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'name': makeChildAppender(writeStringTextNode),\r\n    'cmt': makeChildAppender(writeStringTextNode),\r\n    'desc': makeChildAppender(writeStringTextNode),\r\n    'src': makeChildAppender(writeStringTextNode),\r\n    'link': makeChildAppender(writeLink),\r\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\r\n    'type': makeChildAppender(writeStringTextNode),\r\n    'rtept': makeArraySerializer(makeChildAppender(writeWptType))\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Array<string>>}\r\n */\r\nvar RTEPT_TYPE_SEQUENCE = makeStructureNS(\r\n  NAMESPACE_URIS, [\r\n    'ele', 'time'\r\n  ]);\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Array<string>>}\r\n */\r\nvar TRK_SEQUENCE = makeStructureNS(\r\n  NAMESPACE_URIS, [\r\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\r\n  ]);\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar TRK_SERIALIZERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'name': makeChildAppender(writeStringTextNode),\r\n    'cmt': makeChildAppender(writeStringTextNode),\r\n    'desc': makeChildAppender(writeStringTextNode),\r\n    'src': makeChildAppender(writeStringTextNode),\r\n    'link': makeChildAppender(writeLink),\r\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\r\n    'type': makeChildAppender(writeStringTextNode),\r\n    'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg))\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {function(*, Array<*>, string=): (Node|undefined)}\r\n */\r\nvar TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar TRKSEG_SERIALIZERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'trkpt': makeChildAppender(writeWptType)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Array<string>>}\r\n */\r\nvar WPT_TYPE_SEQUENCE = makeStructureNS(\r\n  NAMESPACE_URIS, [\r\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\r\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\r\n    'ageofdgpsdata', 'dgpsid'\r\n  ]);\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar WPT_TYPE_SERIALIZERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'ele': makeChildAppender(writeDecimalTextNode),\r\n    'time': makeChildAppender(writeDateTimeTextNode),\r\n    'magvar': makeChildAppender(writeDecimalTextNode),\r\n    'geoidheight': makeChildAppender(writeDecimalTextNode),\r\n    'name': makeChildAppender(writeStringTextNode),\r\n    'cmt': makeChildAppender(writeStringTextNode),\r\n    'desc': makeChildAppender(writeStringTextNode),\r\n    'src': makeChildAppender(writeStringTextNode),\r\n    'link': makeChildAppender(writeLink),\r\n    'sym': makeChildAppender(writeStringTextNode),\r\n    'type': makeChildAppender(writeStringTextNode),\r\n    'fix': makeChildAppender(writeStringTextNode),\r\n    'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\r\n    'hdop': makeChildAppender(writeDecimalTextNode),\r\n    'vdop': makeChildAppender(writeDecimalTextNode),\r\n    'pdop': makeChildAppender(writeDecimalTextNode),\r\n    'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\r\n    'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, string>}\r\n */\r\nvar GEOMETRY_TYPE_TO_NODENAME = {\r\n  'Point': 'wpt',\r\n  'LineString': 'rte',\r\n  'MultiLineString': 'trk'\r\n};\r\n\r\n\r\n/**\r\n * @param {*} value Value.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @param {string=} opt_nodeName Node name.\r\n * @return {Node|undefined} Node.\r\n */\r\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\r\n  var geometry = /** @type {Feature} */ (value).getGeometry();\r\n  if (geometry) {\r\n    var nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\r\n    if (nodeName) {\r\n      var parentNode = objectStack[objectStack.length - 1].node;\r\n      return createElementNS(parentNode.namespaceURI, nodeName);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {LayoutOptions} layoutOptions Layout options.\r\n * @param {Element} node Node.\r\n * @param {!Object} values Values.\r\n * @return {Array<number>} Flat coordinates.\r\n */\r\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\r\n  flatCoordinates.push(\r\n    parseFloat(node.getAttribute('lon')),\r\n    parseFloat(node.getAttribute('lat')));\r\n  if ('ele' in values) {\r\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\r\n    delete values['ele'];\r\n    layoutOptions.hasZ = true;\r\n  } else {\r\n    flatCoordinates.push(0);\r\n  }\r\n  if ('time' in values) {\r\n    flatCoordinates.push(/** @type {number} */ (values['time']));\r\n    delete values['time'];\r\n    layoutOptions.hasM = true;\r\n  } else {\r\n    flatCoordinates.push(0);\r\n  }\r\n  return flatCoordinates;\r\n}\r\n\r\n\r\n/**\r\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\r\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\r\n *\r\n * @param {LayoutOptions} layoutOptions Layout options.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {Array<number>=} ends Ends.\r\n * @return {GeometryLayout} Layout.\r\n */\r\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\r\n  var layout = GeometryLayout.XY;\r\n  var stride = 2;\r\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\r\n    layout = GeometryLayout.XYZM;\r\n    stride = 4;\r\n  } else if (layoutOptions.hasZ) {\r\n    layout = GeometryLayout.XYZ;\r\n    stride = 3;\r\n  } else if (layoutOptions.hasM) {\r\n    layout = GeometryLayout.XYM;\r\n    stride = 3;\r\n  }\r\n  if (stride !== 4) {\r\n    for (var i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\r\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\r\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\r\n      if (layoutOptions.hasZ) {\r\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\r\n      }\r\n      if (layoutOptions.hasM) {\r\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\r\n      }\r\n    }\r\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\r\n    if (ends) {\r\n      for (var i$1 = 0, ii$1 = ends.length; i$1 < ii$1; i$1++) {\r\n        ends[i$1] = ends[i$1] / 4 * stride;\r\n      }\r\n    }\r\n  }\r\n  return layout;\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction parseLink(node, objectStack) {\r\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n  var href = node.getAttribute('href');\r\n  if (href !== null) {\r\n    values['link'] = href;\r\n  }\r\n  parseNode(LINK_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction parseExtensions(node, objectStack) {\r\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n  values['extensionsNode_'] = node;\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction parseRtePt(node, objectStack) {\r\n  var values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\r\n  if (values) {\r\n    var rteValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\r\n    var flatCoordinates = /** @type {Array<number>} */ (rteValues['flatCoordinates']);\r\n    var layoutOptions = /** @type {LayoutOptions} */ (rteValues['layoutOptions']);\r\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction parseTrkPt(node, objectStack) {\r\n  var values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\r\n  if (values) {\r\n    var trkValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\r\n    var flatCoordinates = /** @type {Array<number>} */ (trkValues['flatCoordinates']);\r\n    var layoutOptions = /** @type {LayoutOptions} */ (trkValues['layoutOptions']);\r\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction parseTrkSeg(node, objectStack) {\r\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n  parseNode(TRKSEG_PARSERS, node, objectStack);\r\n  var flatCoordinates = /** @type {Array<number>} */\r\n      (values['flatCoordinates']);\r\n  var ends = /** @type {Array<number>} */ (values['ends']);\r\n  ends.push(flatCoordinates.length);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Feature|undefined} Track.\r\n */\r\nfunction readRte(node, objectStack) {\r\n  var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\r\n  var values = pushParseAndPop({\r\n    'flatCoordinates': [],\r\n    'layoutOptions': {}\r\n  }, RTE_PARSERS, node, objectStack);\r\n  if (!values) {\r\n    return undefined;\r\n  }\r\n  var flatCoordinates = /** @type {Array<number>} */\r\n      (values['flatCoordinates']);\r\n  delete values['flatCoordinates'];\r\n  var layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\r\n  delete values['layoutOptions'];\r\n  var layout = applyLayoutOptions(layoutOptions, flatCoordinates);\r\n  var geometry = new LineString(flatCoordinates, layout);\r\n  transformWithOptions(geometry, false, options);\r\n  var feature = new Feature(geometry);\r\n  feature.setProperties(values);\r\n  return feature;\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Feature|undefined} Track.\r\n */\r\nfunction readTrk(node, objectStack) {\r\n  var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\r\n  var values = pushParseAndPop({\r\n    'flatCoordinates': [],\r\n    'ends': [],\r\n    'layoutOptions': {}\r\n  }, TRK_PARSERS, node, objectStack);\r\n  if (!values) {\r\n    return undefined;\r\n  }\r\n  var flatCoordinates = /** @type {Array<number>} */\r\n      (values['flatCoordinates']);\r\n  delete values['flatCoordinates'];\r\n  var ends = /** @type {Array<number>} */ (values['ends']);\r\n  delete values['ends'];\r\n  var layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\r\n  delete values['layoutOptions'];\r\n  var layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\r\n  var geometry = new MultiLineString(flatCoordinates, layout, ends);\r\n  transformWithOptions(geometry, false, options);\r\n  var feature = new Feature(geometry);\r\n  feature.setProperties(values);\r\n  return feature;\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Feature|undefined} Waypoint.\r\n */\r\nfunction readWpt(node, objectStack) {\r\n  var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\r\n  var values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\r\n  if (!values) {\r\n    return undefined;\r\n  }\r\n  var layoutOptions = /** @type {LayoutOptions} */ ({});\r\n  var coordinates = appendCoordinate([], layoutOptions, node, values);\r\n  var layout = applyLayoutOptions(layoutOptions, coordinates);\r\n  var geometry = new Point(coordinates, layout);\r\n  transformWithOptions(geometry, false, options);\r\n  var feature = new Feature(geometry);\r\n  feature.setProperties(values);\r\n  return feature;\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {string} value Value for the link's `href` attribute.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeLink(node, value, objectStack) {\r\n  node.setAttribute('href', value);\r\n  var context = objectStack[objectStack.length - 1];\r\n  var properties = context['properties'];\r\n  var link = [\r\n    properties['linkText'],\r\n    properties['linkType']\r\n  ];\r\n  pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({node: node}),\r\n    LINK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\r\n    link, objectStack, LINK_SEQUENCE);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeWptType(node, coordinate, objectStack) {\r\n  var context = objectStack[objectStack.length - 1];\r\n  var parentNode = context.node;\r\n  var namespaceURI = parentNode.namespaceURI;\r\n  var properties = context['properties'];\r\n  //FIXME Projection handling\r\n  node.setAttributeNS(null, 'lat', String(coordinate[1]));\r\n  node.setAttributeNS(null, 'lon', String(coordinate[0]));\r\n  var geometryLayout = context['geometryLayout'];\r\n  switch (geometryLayout) {\r\n    case GeometryLayout.XYZM:\r\n      if (coordinate[3] !== 0) {\r\n        properties['time'] = coordinate[3];\r\n      }\r\n      // fall through\r\n    case GeometryLayout.XYZ:\r\n      if (coordinate[2] !== 0) {\r\n        properties['ele'] = coordinate[2];\r\n      }\r\n      break;\r\n    case GeometryLayout.XYM:\r\n      if (coordinate[2] !== 0) {\r\n        properties['time'] = coordinate[2];\r\n      }\r\n      break;\r\n    default:\r\n      // pass\r\n  }\r\n  var orderedKeys = (node.nodeName == 'rtept') ?\r\n    RTEPT_TYPE_SEQUENCE[namespaceURI] :\r\n    WPT_TYPE_SEQUENCE[namespaceURI];\r\n  var values = makeSequence(properties, orderedKeys);\r\n  pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\r\n    ({node: node, 'properties': properties}),\r\n    WPT_TYPE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\r\n    values, objectStack, orderedKeys);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Feature} feature Feature.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeRte(node, feature, objectStack) {\r\n  var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\r\n  var properties = feature.getProperties();\r\n  var context = {node: node};\r\n  context['properties'] = properties;\r\n  var geometry = feature.getGeometry();\r\n  if (geometry.getType() == GeometryType.LINE_STRING) {\r\n    var lineString = /** @type {LineString} */ (transformWithOptions(geometry, true, options));\r\n    context['geometryLayout'] = lineString.getLayout();\r\n    properties['rtept'] = lineString.getCoordinates();\r\n  }\r\n  var parentNode = objectStack[objectStack.length - 1].node;\r\n  var orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\r\n  var values = makeSequence(properties, orderedKeys);\r\n  pushSerializeAndPop(context,\r\n    RTE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\r\n    values, objectStack, orderedKeys);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Feature} feature Feature.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeTrk(node, feature, objectStack) {\r\n  var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\r\n  var properties = feature.getProperties();\r\n  /** @type {import(\"../xml.js\").NodeStackItem} */\r\n  var context = {node: node};\r\n  context['properties'] = properties;\r\n  var geometry = feature.getGeometry();\r\n  if (geometry.getType() == GeometryType.MULTI_LINE_STRING) {\r\n    var multiLineString = /** @type {MultiLineString} */ (transformWithOptions(geometry, true, options));\r\n    properties['trkseg'] = multiLineString.getLineStrings();\r\n  }\r\n  var parentNode = objectStack[objectStack.length - 1].node;\r\n  var orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\r\n  var values = makeSequence(properties, orderedKeys);\r\n  pushSerializeAndPop(context,\r\n    TRK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\r\n    values, objectStack, orderedKeys);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {LineString} lineString LineString.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeTrkSeg(node, lineString, objectStack) {\r\n  /** @type {import(\"../xml.js\").NodeStackItem} */\r\n  var context = {node: node};\r\n  context['geometryLayout'] = lineString.getLayout();\r\n  context['properties'] = {};\r\n  pushSerializeAndPop(context,\r\n    TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY,\r\n    lineString.getCoordinates(), objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Feature} feature Feature.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeWpt(node, feature, objectStack) {\r\n  var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\r\n  var context = objectStack[objectStack.length - 1];\r\n  context['properties'] = feature.getProperties();\r\n  var geometry = feature.getGeometry();\r\n  if (geometry.getType() == GeometryType.POINT) {\r\n    var point = /** @type {Point} */ (transformWithOptions(geometry, true, options));\r\n    context['geometryLayout'] = point.getLayout();\r\n    writeWptType(node, point.getCoordinates(), objectStack);\r\n  }\r\n}\r\n\r\n\r\nexport default GPX;\r\n\r\n//# sourceMappingURL=GPX.js.map","/**\r\n * @module ol/format/TextFeature\r\n */\r\nimport {abstract} from '../util.js';\r\nimport FeatureFormat from '../format/Feature.js';\r\nimport FormatType from '../format/FormatType.js';\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Base class for text feature formats.\r\n *\r\n * @abstract\r\n */\r\nvar TextFeature = /*@__PURE__*/(function (FeatureFormat) {\n  function TextFeature() {\r\n    FeatureFormat.call(this);\r\n  }\n\n  if ( FeatureFormat ) TextFeature.__proto__ = FeatureFormat;\n  TextFeature.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  TextFeature.prototype.constructor = TextFeature;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  TextFeature.prototype.getType = function getType () {\r\n    return FormatType.TEXT;\r\n  };\r\n\r\n  /**\r\n   * Read the feature from the source.\r\n   *\r\n   * @param {Document|Node|Object|string} source Source.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n   * @return {import(\"../Feature.js\").default} Feature.\r\n   * @api\r\n   */\r\n  TextFeature.prototype.readFeature = function readFeature (source, opt_options) {\r\n    return this.readFeatureFromText(getText(source), this.adaptOptions(opt_options));\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {string} text Text.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n   * @protected\r\n   * @return {import(\"../Feature.js\").default} Feature.\r\n   */\r\n  TextFeature.prototype.readFeatureFromText = function readFeatureFromText (text, opt_options) {\r\n    return abstract();\r\n  };\r\n\r\n  /**\r\n   * Read the features from the source.\r\n   *\r\n   * @param {Document|Node|Object|string} source Source.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n   * @return {Array<import(\"../Feature.js\").default>} Features.\r\n   * @api\r\n   */\r\n  TextFeature.prototype.readFeatures = function readFeatures (source, opt_options) {\r\n    return this.readFeaturesFromText(getText(source), this.adaptOptions(opt_options));\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {string} text Text.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n   * @protected\r\n   * @return {Array<import(\"../Feature.js\").default>} Features.\r\n   */\r\n  TextFeature.prototype.readFeaturesFromText = function readFeaturesFromText (text, opt_options) {\r\n    return abstract();\r\n  };\r\n\r\n  /**\r\n   * Read the geometry from the source.\r\n   *\r\n   * @param {Document|Node|Object|string} source Source.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\r\n   * @api\r\n   */\r\n  TextFeature.prototype.readGeometry = function readGeometry (source, opt_options) {\r\n    return this.readGeometryFromText(getText(source), this.adaptOptions(opt_options));\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {string} text Text.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n   * @protected\r\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\r\n   */\r\n  TextFeature.prototype.readGeometryFromText = function readGeometryFromText (text, opt_options) {\r\n    return abstract();\r\n  };\r\n\r\n  /**\r\n   * Read the projection from the source.\r\n   *\r\n   * @param {Document|Node|Object|string} source Source.\r\n   * @return {import(\"../proj/Projection.js\").default} Projection.\r\n   * @api\r\n   */\r\n  TextFeature.prototype.readProjection = function readProjection (source) {\r\n    return this.readProjectionFromText(getText(source));\r\n  };\r\n\r\n  /**\r\n   * @param {string} text Text.\r\n   * @protected\r\n   * @return {import(\"../proj/Projection.js\").default} Projection.\r\n   */\r\n  TextFeature.prototype.readProjectionFromText = function readProjectionFromText (text) {\r\n    return this.dataProjection;\r\n  };\r\n\r\n  /**\r\n   * Encode a feature as a string.\r\n   *\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n   * @return {string} Encoded feature.\r\n   * @api\r\n   */\r\n  TextFeature.prototype.writeFeature = function writeFeature (feature, opt_options) {\r\n    return this.writeFeatureText(feature, this.adaptOptions(opt_options));\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {import(\"../Feature.js\").default} feature Features.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n   * @protected\r\n   * @return {string} Text.\r\n   */\r\n  TextFeature.prototype.writeFeatureText = function writeFeatureText (feature, opt_options) {\r\n    return abstract();\r\n  };\r\n\r\n  /**\r\n   * Encode an array of features as string.\r\n   *\r\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n   * @return {string} Encoded features.\r\n   * @api\r\n   */\r\n  TextFeature.prototype.writeFeatures = function writeFeatures (features, opt_options) {\r\n    return this.writeFeaturesText(features, this.adaptOptions(opt_options));\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n   * @protected\r\n   * @return {string} Text.\r\n   */\r\n  TextFeature.prototype.writeFeaturesText = function writeFeaturesText (features, opt_options) {\r\n    return abstract();\r\n  };\r\n\r\n  /**\r\n   * Write a single geometry.\r\n   *\r\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n   * @return {string} Geometry.\r\n   * @api\r\n   */\r\n  TextFeature.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\r\n    return this.writeGeometryText(geometry, this.adaptOptions(opt_options));\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\r\n   * @protected\r\n   * @return {string} Text.\r\n   */\r\n  TextFeature.prototype.writeGeometryText = function writeGeometryText (geometry, opt_options) {\r\n    return abstract();\r\n  };\n\n  return TextFeature;\n}(FeatureFormat));\r\n\r\n\r\n/**\r\n * @param {Document|Node|Object|string} source Source.\r\n * @return {string} Text.\r\n */\r\nfunction getText(source) {\r\n  if (typeof source === 'string') {\r\n    return source;\r\n  } else {\r\n    return '';\r\n  }\r\n}\r\n\r\n\r\nexport default TextFeature;\r\n\r\n//# sourceMappingURL=TextFeature.js.map","/**\r\n * @module ol/format/IGC\r\n */\r\nimport Feature from '../Feature.js';\r\nimport {transformWithOptions} from './Feature.js';\r\nimport TextFeature from './TextFeature.js';\r\nimport GeometryLayout from '../geom/GeometryLayout.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport {get as getProjection} from '../proj.js';\r\n\r\n/**\r\n * IGC altitude/z. One of 'barometric', 'gps', 'none'.\r\n * @enum {string}\r\n */\r\nvar IGCZ = {\r\n  BAROMETRIC: 'barometric',\r\n  GPS: 'gps',\r\n  NONE: 'none'\r\n};\r\n\r\n/**\r\n * @const\r\n * @type {RegExp}\r\n */\r\nvar B_RECORD_RE =\r\n    /^B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})/;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {RegExp}\r\n */\r\nvar H_RECORD_RE = /^H.([A-Z]{3}).*?:(.*)/;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {RegExp}\r\n */\r\nvar HFDTE_RECORD_RE = /^HFDTE(\\d{2})(\\d{2})(\\d{2})/;\r\n\r\n\r\n/**\r\n * A regular expression matching the newline characters `\\r\\n`, `\\r` and `\\n`.\r\n *\r\n * @const\r\n * @type {RegExp}\r\n */\r\nvar NEWLINE_RE = /\\r\\n|\\r|\\n/;\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {IGCZ|string} [altitudeMode='none'] Altitude mode. Possible\r\n * values are `'barometric'`, `'gps'`, and `'none'`.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Feature format for `*.igc` flight recording files.\r\n *\r\n * As IGC sources contain a single feature,\r\n * {@link module:ol/format/IGC~IGC#readFeatures} will return the feature in an\r\n * array\r\n *\r\n * @api\r\n */\r\nvar IGC = /*@__PURE__*/(function (TextFeature) {\n  function IGC(opt_options) {\r\n    TextFeature.call(this);\r\n\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    this.dataProjection = getProjection('EPSG:4326');\r\n\r\n    /**\r\n     * @private\r\n     * @type {IGCZ}\r\n     */\r\n    this.altitudeMode_ = options.altitudeMode ? options.altitudeMode : IGCZ.NONE;\r\n  }\n\n  if ( TextFeature ) IGC.__proto__ = TextFeature;\n  IGC.prototype = Object.create( TextFeature && TextFeature.prototype );\n  IGC.prototype.constructor = IGC;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  IGC.prototype.readFeatureFromText = function readFeatureFromText (text, opt_options) {\r\n    var altitudeMode = this.altitudeMode_;\r\n    var lines = text.split(NEWLINE_RE);\r\n    /** @type {Object<string, string>} */\r\n    var properties = {};\r\n    var flatCoordinates = [];\r\n    var year = 2000;\r\n    var month = 0;\r\n    var day = 1;\r\n    var lastDateTime = -1;\r\n    var i, ii;\r\n    for (i = 0, ii = lines.length; i < ii; ++i) {\r\n      var line = lines[i];\r\n      var m = (void 0);\r\n      if (line.charAt(0) == 'B') {\r\n        m = B_RECORD_RE.exec(line);\r\n        if (m) {\r\n          var hour = parseInt(m[1], 10);\r\n          var minute = parseInt(m[2], 10);\r\n          var second = parseInt(m[3], 10);\r\n          var y = parseInt(m[4], 10) + parseInt(m[5], 10) / 60000;\r\n          if (m[6] == 'S') {\r\n            y = -y;\r\n          }\r\n          var x = parseInt(m[7], 10) + parseInt(m[8], 10) / 60000;\r\n          if (m[9] == 'W') {\r\n            x = -x;\r\n          }\r\n          flatCoordinates.push(x, y);\r\n          if (altitudeMode != IGCZ.NONE) {\r\n            var z = (void 0);\r\n            if (altitudeMode == IGCZ.GPS) {\r\n              z = parseInt(m[11], 10);\r\n            } else if (altitudeMode == IGCZ.BAROMETRIC) {\r\n              z = parseInt(m[12], 10);\r\n            } else {\r\n              z = 0;\r\n            }\r\n            flatCoordinates.push(z);\r\n          }\r\n          var dateTime = Date.UTC(year, month, day, hour, minute, second);\r\n          // Detect UTC midnight wrap around.\r\n          if (dateTime < lastDateTime) {\r\n            dateTime = Date.UTC(year, month, day + 1, hour, minute, second);\r\n          }\r\n          flatCoordinates.push(dateTime / 1000);\r\n          lastDateTime = dateTime;\r\n        }\r\n      } else if (line.charAt(0) == 'H') {\r\n        m = HFDTE_RECORD_RE.exec(line);\r\n        if (m) {\r\n          day = parseInt(m[1], 10);\r\n          month = parseInt(m[2], 10) - 1;\r\n          year = 2000 + parseInt(m[3], 10);\r\n        } else {\r\n          m = H_RECORD_RE.exec(line);\r\n          if (m) {\r\n            properties[m[1]] = m[2].trim();\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (flatCoordinates.length === 0) {\r\n      return null;\r\n    }\r\n    var layout = altitudeMode == IGCZ.NONE ? GeometryLayout.XYM : GeometryLayout.XYZM;\r\n    var lineString = new LineString(flatCoordinates, layout);\r\n    var feature = new Feature(transformWithOptions(lineString, false, opt_options));\r\n    feature.setProperties(properties);\r\n    return feature;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  IGC.prototype.readFeaturesFromText = function readFeaturesFromText (text, opt_options) {\r\n    var feature = this.readFeatureFromText(text, opt_options);\r\n    if (feature) {\r\n      return [feature];\r\n    } else {\r\n      return [];\r\n    }\r\n  };\n\n  return IGC;\n}(TextFeature));\r\n\r\nexport default IGC;\r\n\r\n//# sourceMappingURL=IGC.js.map","/**\r\n * @module ol/style/Fill\r\n */\r\nimport {getUid} from '../util.js';\r\nimport {asString} from '../color.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\r\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\r\n * Default null; if null, the Canvas/renderer default black will be used.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Set fill style for vector features.\r\n * @api\r\n */\r\nvar Fill = function Fill(opt_options) {\r\n\r\n  var options = opt_options || {};\r\n\r\n  /**\r\n   * @private\r\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\r\n   */\r\n  this.color_ = options.color !== undefined ? options.color : null;\r\n\r\n  /**\r\n   * @private\r\n   * @type {string|undefined}\r\n   */\r\n  this.checksum_ = undefined;\r\n};\r\n\r\n/**\r\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\r\n * @return {Fill} The cloned style.\r\n * @api\r\n */\r\nFill.prototype.clone = function clone () {\r\n  var color = this.getColor();\r\n  return new Fill({\r\n    color: Array.isArray(color) ? color.slice() : color || undefined\r\n  });\r\n};\r\n\r\n/**\r\n * Get the fill color.\r\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\r\n * @api\r\n */\r\nFill.prototype.getColor = function getColor () {\r\n  return this.color_;\r\n};\r\n\r\n/**\r\n * Set the color.\r\n *\r\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\r\n * @api\r\n */\r\nFill.prototype.setColor = function setColor (color) {\r\n  this.color_ = color;\r\n  this.checksum_ = undefined;\r\n};\r\n\r\n/**\r\n * @return {string} The checksum.\r\n */\r\nFill.prototype.getChecksum = function getChecksum () {\r\n  if (this.checksum_ === undefined) {\r\n    var color = this.color_;\r\n    if (color) {\r\n      if (Array.isArray(color) || typeof color == 'string') {\r\n        this.checksum_ = 'f' + asString(/** @type {import(\"../color.js\").Color|string} */ (color));\r\n      } else {\r\n        this.checksum_ = getUid(this.color_);\r\n      }\r\n    } else {\r\n      this.checksum_ = 'f-';\r\n    }\r\n  }\r\n\r\n  return this.checksum_;\r\n};\r\n\r\nexport default Fill;\r\n\r\n//# sourceMappingURL=Fill.js.map","/**\r\n * @module ol/style/IconAnchorUnits\r\n */\r\n\r\n/**\r\n * Icon anchor units. One of 'fraction', 'pixels'.\r\n * @enum {string}\r\n */\r\nexport default {\r\n  FRACTION: 'fraction',\r\n  PIXELS: 'pixels'\r\n};\r\n\r\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\r\n * @module ol/style/IconImage\r\n */\r\n\r\nimport {createCanvasContext2D} from '../dom.js';\r\nimport {listenOnce, unlistenByKey} from '../events.js';\r\nimport EventTarget from '../events/Target.js';\r\nimport EventType from '../events/EventType.js';\r\nimport ImageState from '../ImageState.js';\r\nimport {shared as iconImageCache} from './IconImageCache.js';\r\n\r\nvar IconImage = /*@__PURE__*/(function (EventTarget) {\n  function IconImage(image, src, size, crossOrigin, imageState, color) {\r\n\r\n    EventTarget.call(this);\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLImageElement|HTMLCanvasElement}\r\n     */\r\n    this.hitDetectionImage_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLImageElement|HTMLCanvasElement}\r\n     */\r\n    this.image_ = !image ? new Image() : image;\r\n\r\n    if (crossOrigin !== null) {\r\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement}\r\n     */\r\n    this.canvas_ = color ?\r\n      /** @type {HTMLCanvasElement} */ (document.createElement('canvas')) :\r\n      null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../color.js\").Color}\r\n     */\r\n    this.color_ = color;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<import(\"../events.js\").EventsKey>}\r\n     */\r\n    this.imageListenerKeys_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../ImageState.js\").default}\r\n     */\r\n    this.imageState_ = imageState;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../size.js\").Size}\r\n     */\r\n    this.size_ = size;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|undefined}\r\n     */\r\n    this.src_ = src;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.tainted_;\r\n\r\n  }\n\n  if ( EventTarget ) IconImage.__proto__ = EventTarget;\n  IconImage.prototype = Object.create( EventTarget && EventTarget.prototype );\n  IconImage.prototype.constructor = IconImage;\r\n\r\n  /**\r\n   * @private\r\n   * @return {boolean} The image canvas is tainted.\r\n   */\r\n  IconImage.prototype.isTainted_ = function isTainted_ () {\r\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\r\n      this.tainted_ = false;\r\n      var context = createCanvasContext2D(1, 1);\r\n      try {\r\n        context.drawImage(this.image_, 0, 0);\r\n        context.getImageData(0, 0, 1, 1);\r\n      } catch (e) {\r\n        this.tainted_ = true;\r\n      }\r\n    }\r\n    return this.tainted_ === true;\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  IconImage.prototype.dispatchChangeEvent_ = function dispatchChangeEvent_ () {\r\n    this.dispatchEvent(EventType.CHANGE);\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  IconImage.prototype.handleImageError_ = function handleImageError_ () {\r\n    this.imageState_ = ImageState.ERROR;\r\n    this.unlistenImage_();\r\n    this.dispatchChangeEvent_();\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  IconImage.prototype.handleImageLoad_ = function handleImageLoad_ () {\r\n    this.imageState_ = ImageState.LOADED;\r\n    if (this.size_) {\r\n      this.image_.width = this.size_[0];\r\n      this.image_.height = this.size_[1];\r\n    }\r\n    this.size_ = [this.image_.width, this.image_.height];\r\n    this.unlistenImage_();\r\n    this.replaceColor_();\r\n    this.dispatchChangeEvent_();\r\n  };\r\n\r\n  /**\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\r\n   */\r\n  IconImage.prototype.getImage = function getImage (pixelRatio) {\r\n    return this.canvas_ ? this.canvas_ : this.image_;\r\n  };\r\n\r\n  /**\r\n   * @return {import(\"../ImageState.js\").default} Image state.\r\n   */\r\n  IconImage.prototype.getImageState = function getImageState () {\r\n    return this.imageState_;\r\n  };\r\n\r\n  /**\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\r\n   */\r\n  IconImage.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\r\n    if (!this.hitDetectionImage_) {\r\n      if (this.isTainted_()) {\r\n        var width = this.size_[0];\r\n        var height = this.size_[1];\r\n        var context = createCanvasContext2D(width, height);\r\n        context.fillRect(0, 0, width, height);\r\n        this.hitDetectionImage_ = context.canvas;\r\n      } else {\r\n        this.hitDetectionImage_ = this.image_;\r\n      }\r\n    }\r\n    return this.hitDetectionImage_;\r\n  };\r\n\r\n  /**\r\n   * @return {import(\"../size.js\").Size} Image size.\r\n   */\r\n  IconImage.prototype.getSize = function getSize () {\r\n    return this.size_;\r\n  };\r\n\r\n  /**\r\n   * @return {string|undefined} Image src.\r\n   */\r\n  IconImage.prototype.getSrc = function getSrc () {\r\n    return this.src_;\r\n  };\r\n\r\n  /**\r\n   * Load not yet loaded URI.\r\n   */\r\n  IconImage.prototype.load = function load () {\r\n    if (this.imageState_ == ImageState.IDLE) {\r\n      this.imageState_ = ImageState.LOADING;\r\n      this.imageListenerKeys_ = [\r\n        listenOnce(this.image_, EventType.ERROR,\r\n          this.handleImageError_, this),\r\n        listenOnce(this.image_, EventType.LOAD,\r\n          this.handleImageLoad_, this)\r\n      ];\r\n      try {\r\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\r\n      } catch (e) {\r\n        this.handleImageError_();\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  IconImage.prototype.replaceColor_ = function replaceColor_ () {\r\n    if (!this.color_ || this.isTainted_()) {\r\n      return;\r\n    }\r\n\r\n    this.canvas_.width = this.image_.width;\r\n    this.canvas_.height = this.image_.height;\r\n\r\n    var ctx = this.canvas_.getContext('2d');\r\n    ctx.drawImage(this.image_, 0, 0);\r\n\r\n    var imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\r\n    var data = imgData.data;\r\n    var r = this.color_[0] / 255.0;\r\n    var g = this.color_[1] / 255.0;\r\n    var b = this.color_[2] / 255.0;\r\n\r\n    for (var i = 0, ii = data.length; i < ii; i += 4) {\r\n      data[i] *= r;\r\n      data[i + 1] *= g;\r\n      data[i + 2] *= b;\r\n    }\r\n    ctx.putImageData(imgData, 0, 0);\r\n  };\r\n\r\n  /**\r\n   * Discards event handlers which listen for load completion or errors.\r\n   *\r\n   * @private\r\n   */\r\n  IconImage.prototype.unlistenImage_ = function unlistenImage_ () {\r\n    this.imageListenerKeys_.forEach(unlistenByKey);\r\n    this.imageListenerKeys_ = null;\r\n  };\n\n  return IconImage;\n}(EventTarget));\r\n\r\n\r\n/**\r\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\r\n * @param {string} src Src.\r\n * @param {import(\"../size.js\").Size} size Size.\r\n * @param {?string} crossOrigin Cross origin.\r\n * @param {import(\"../ImageState.js\").default} imageState Image state.\r\n * @param {import(\"../color.js\").Color} color Color.\r\n * @return {IconImage} Icon image.\r\n */\r\nexport function get(image, src, size, crossOrigin, imageState, color) {\r\n  var iconImage = iconImageCache.get(src, crossOrigin, color);\r\n  if (!iconImage) {\r\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\r\n    iconImageCache.set(src, crossOrigin, color, iconImage);\r\n  }\r\n  return iconImage;\r\n}\r\n\r\n\r\nexport default IconImage;\r\n\r\n//# sourceMappingURL=IconImage.js.map","/**\r\n * @module ol/style/IconOrigin\r\n */\r\n\r\n/**\r\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\r\n * @enum {string}\r\n */\r\nexport default {\r\n  BOTTOM_LEFT: 'bottom-left',\r\n  BOTTOM_RIGHT: 'bottom-right',\r\n  TOP_LEFT: 'top-left',\r\n  TOP_RIGHT: 'top-right'\r\n};\r\n\r\n//# sourceMappingURL=IconOrigin.js.map","/**\r\n * @module ol/style/Image\r\n */\r\nimport {abstract} from '../util.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} opacity\r\n * @property {boolean} rotateWithView\r\n * @property {number} rotation\r\n * @property {number} scale\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * A base class used for creating subclasses and not instantiated in\r\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\r\n * {@link module:ol/style/RegularShape~RegularShape}.\r\n * @abstract\r\n * @api\r\n */\r\nvar ImageStyle = function ImageStyle(options) {\r\n\r\n  /**\r\n   * @private\r\n   * @type {number}\r\n   */\r\n  this.opacity_ = options.opacity;\r\n\r\n  /**\r\n   * @private\r\n   * @type {boolean}\r\n   */\r\n  this.rotateWithView_ = options.rotateWithView;\r\n\r\n  /**\r\n   * @private\r\n   * @type {number}\r\n   */\r\n  this.rotation_ = options.rotation;\r\n\r\n  /**\r\n   * @private\r\n   * @type {number}\r\n   */\r\n  this.scale_ = options.scale;\r\n\r\n};\r\n\r\n/**\r\n * Clones the style.\r\n * @return {ImageStyle} The cloned style.\r\n * @api\r\n */\r\nImageStyle.prototype.clone = function clone () {\r\n  return new ImageStyle({\r\n    opacity: this.getOpacity(),\r\n    scale: this.getScale(),\r\n    rotation: this.getRotation(),\r\n    rotateWithView: this.getRotateWithView()\r\n  });\r\n};\r\n\r\n/**\r\n * Get the symbolizer opacity.\r\n * @return {number} Opacity.\r\n * @api\r\n */\r\nImageStyle.prototype.getOpacity = function getOpacity () {\r\n  return this.opacity_;\r\n};\r\n\r\n/**\r\n * Determine whether the symbolizer rotates with the map.\r\n * @return {boolean} Rotate with map.\r\n * @api\r\n */\r\nImageStyle.prototype.getRotateWithView = function getRotateWithView () {\r\n  return this.rotateWithView_;\r\n};\r\n\r\n/**\r\n * Get the symoblizer rotation.\r\n * @return {number} Rotation.\r\n * @api\r\n */\r\nImageStyle.prototype.getRotation = function getRotation () {\r\n  return this.rotation_;\r\n};\r\n\r\n/**\r\n * Get the symbolizer scale.\r\n * @return {number} Scale.\r\n * @api\r\n */\r\nImageStyle.prototype.getScale = function getScale () {\r\n  return this.scale_;\r\n};\r\n\r\n/**\r\n * This method is deprecated and always returns false.\r\n * @return {boolean} false.\r\n * @deprecated\r\n * @api\r\n */\r\nImageStyle.prototype.getSnapToPixel = function getSnapToPixel () {\r\n  return false;\r\n};\r\n\r\n/**\r\n * Get the anchor point in pixels. The anchor determines the center point for the\r\n * symbolizer.\r\n * @abstract\r\n * @return {Array<number>} Anchor.\r\n */\r\nImageStyle.prototype.getAnchor = function getAnchor () {\r\n  return abstract();\r\n};\r\n\r\n/**\r\n * Get the image element for the symbolizer.\r\n * @abstract\r\n * @param {number} pixelRatio Pixel ratio.\r\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\r\n */\r\nImageStyle.prototype.getImage = function getImage (pixelRatio) {\r\n  return abstract();\r\n};\r\n\r\n/**\r\n * @abstract\r\n * @param {number} pixelRatio Pixel ratio.\r\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\r\n */\r\nImageStyle.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\r\n  return abstract();\r\n};\r\n\r\n/**\r\n * @abstract\r\n * @return {import(\"../ImageState.js\").default} Image state.\r\n */\r\nImageStyle.prototype.getImageState = function getImageState () {\r\n  return abstract();\r\n};\r\n\r\n/**\r\n * @abstract\r\n * @return {import(\"../size.js\").Size} Image size.\r\n */\r\nImageStyle.prototype.getImageSize = function getImageSize () {\r\n  return abstract();\r\n};\r\n\r\n/**\r\n * @abstract\r\n * @return {import(\"../size.js\").Size} Size of the hit-detection image.\r\n */\r\nImageStyle.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\r\n  return abstract();\r\n};\r\n\r\n/**\r\n * Get the origin of the symbolizer.\r\n * @abstract\r\n * @return {Array<number>} Origin.\r\n */\r\nImageStyle.prototype.getOrigin = function getOrigin () {\r\n  return abstract();\r\n};\r\n\r\n/**\r\n * Get the size of the symbolizer (in pixels).\r\n * @abstract\r\n * @return {import(\"../size.js\").Size} Size.\r\n */\r\nImageStyle.prototype.getSize = function getSize () {\r\n  return abstract();\r\n};\r\n\r\n/**\r\n * Set the opacity.\r\n *\r\n * @param {number} opacity Opacity.\r\n * @api\r\n */\r\nImageStyle.prototype.setOpacity = function setOpacity (opacity) {\r\n  this.opacity_ = opacity;\r\n};\r\n\r\n/**\r\n * Set whether to rotate the style with the view.\r\n *\r\n * @param {boolean} rotateWithView Rotate with map.\r\n * @api\r\n */\r\nImageStyle.prototype.setRotateWithView = function setRotateWithView (rotateWithView) {\r\n  this.rotateWithView_ = rotateWithView;\r\n};\r\n\r\n/**\r\n * Set the rotation.\r\n *\r\n * @param {number} rotation Rotation.\r\n * @api\r\n */\r\nImageStyle.prototype.setRotation = function setRotation (rotation) {\r\n  this.rotation_ = rotation;\r\n};\r\n/**\r\n * Set the scale.\r\n *\r\n * @param {number} scale Scale.\r\n * @api\r\n */\r\nImageStyle.prototype.setScale = function setScale (scale) {\r\n  this.scale_ = scale;\r\n};\r\n\r\n/**\r\n * This method is deprecated and does nothing.\r\n * @param {boolean} snapToPixel Snap to pixel?\r\n * @deprecated\r\n * @api\r\n */\r\nImageStyle.prototype.setSnapToPixel = function setSnapToPixel (snapToPixel) {};\r\n\r\n/**\r\n * @abstract\r\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\r\n * @param {T} thisArg Value to use as `this` when executing `listener`.\r\n * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\r\n * @template T\r\n */\r\nImageStyle.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\r\n  return abstract();\r\n};\r\n\r\n/**\r\n * Load not yet loaded URI.\r\n * @abstract\r\n */\r\nImageStyle.prototype.load = function load () {\r\n  abstract();\r\n};\r\n\r\n/**\r\n * @abstract\r\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\r\n * @param {T} thisArg Value to use as `this` when executing `listener`.\r\n * @template T\r\n */\r\nImageStyle.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\r\n  abstract();\r\n};\r\n\r\nexport default ImageStyle;\r\n\r\n//# sourceMappingURL=Image.js.map","/**\r\n * @module ol/style/Icon\r\n */\r\nimport {getUid} from '../util.js';\r\nimport ImageState from '../ImageState.js';\r\nimport {assert} from '../asserts.js';\r\nimport {asArray} from '../color.js';\r\nimport {listen, unlisten} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport IconAnchorUnits from './IconAnchorUnits.js';\r\nimport {get as getIconImage} from './IconImage.js';\r\nimport IconOrigin from './IconOrigin.js';\r\nimport ImageStyle from './Image.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\r\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin] Origin of the anchor: `bottom-left`, `bottom-right`,\r\n * `top-left` or `top-right`. Default is `top-left`.\r\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits] Units in which the anchor x value is\r\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\r\n * the x value in pixels. Default is `'fraction'`.\r\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits] Units in which the anchor y value is\r\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\r\n * the y value in pixels. Default is `'fraction'`.\r\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\r\n * the icon will be left as is.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\r\n * `crossOrigin` value if you are using the WebGL renderer or if you want to access pixel data with the Canvas renderer.\r\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\r\n * provided image must already be loaded. And in that case, it is required\r\n * to provide the size of the image, with the `imgSize` option.\r\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\r\n * sub-rectangle to use from the original icon image.\r\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin] Origin of the offset: `bottom-left`, `bottom-right`,\r\n * `top-left` or `top-right`. Default is `top-left`.\r\n * @property {number} [opacity=1] Opacity of the icon.\r\n * @property {number} [scale=1] Scale.\r\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\r\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\r\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\r\n * sub-rectangle to use from the origin (sprite) icon image.\r\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\r\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\r\n * @property {string} [src] Image source URI.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Set icon style for vector features.\r\n * @api\r\n */\r\nvar Icon = /*@__PURE__*/(function (ImageStyle) {\n  function Icon(opt_options) {\r\n    var options = opt_options || {};\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    var opacity = options.opacity !== undefined ? options.opacity : 1;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    var rotation = options.rotation !== undefined ? options.rotation : 0;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    var scale = options.scale !== undefined ? options.scale : 1;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    var rotateWithView = options.rotateWithView !== undefined ?\r\n      options.rotateWithView : false;\r\n\r\n    ImageStyle.call(this, {\r\n      opacity: opacity,\r\n      rotation: rotation,\r\n      scale: scale,\r\n      rotateWithView: rotateWithView\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.normalizedAnchor_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./IconOrigin.js\").default}\r\n     */\r\n    this.anchorOrigin_ = options.anchorOrigin !== undefined ?\r\n      options.anchorOrigin : IconOrigin.TOP_LEFT;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./IconAnchorUnits.js\").default}\r\n     */\r\n    this.anchorXUnits_ = options.anchorXUnits !== undefined ?\r\n      options.anchorXUnits : IconAnchorUnits.FRACTION;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./IconAnchorUnits.js\").default}\r\n     */\r\n    this.anchorYUnits_ = options.anchorYUnits !== undefined ?\r\n      options.anchorYUnits : IconAnchorUnits.FRACTION;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?string}\r\n     */\r\n    this.crossOrigin_ =\r\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\r\n\r\n    /**\r\n     * @type {HTMLImageElement|HTMLCanvasElement}\r\n     */\r\n    var image = options.img !== undefined ? options.img : null;\r\n\r\n    /**\r\n     * @type {import(\"../size.js\").Size}\r\n     */\r\n    var imgSize = options.imgSize !== undefined ? options.imgSize : null;\r\n\r\n    /**\r\n     * @type {string|undefined}\r\n     */\r\n    var src = options.src;\r\n\r\n    assert(!(src !== undefined && image),\r\n      4); // `image` and `src` cannot be provided at the same time\r\n    assert(!image || (image && imgSize),\r\n      5); // `imgSize` must be set when `image` is provided\r\n\r\n    if ((src === undefined || src.length === 0) && image) {\r\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\r\n    }\r\n    assert(src !== undefined && src.length > 0,\r\n      6); // A defined and non-empty `src` or `image` must be provided\r\n\r\n    /**\r\n     * @type {import(\"../ImageState.js\").default}\r\n     */\r\n    var imageState = options.src !== undefined ?\r\n      ImageState.IDLE : ImageState.LOADED;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../color.js\").Color}\r\n     */\r\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./IconImage.js\").default}\r\n     */\r\n    this.iconImage_ = getIconImage(\r\n      image, /** @type {string} */ (src), imgSize, this.crossOrigin_, imageState, this.color_);\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./IconOrigin.js\").default}\r\n     */\r\n    this.offsetOrigin_ = options.offsetOrigin !== undefined ?\r\n      options.offsetOrigin : IconOrigin.TOP_LEFT;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.origin_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../size.js\").Size}\r\n     */\r\n    this.size_ = options.size !== undefined ? options.size : null;\r\n\r\n  }\n\n  if ( ImageStyle ) Icon.__proto__ = ImageStyle;\n  Icon.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  Icon.prototype.constructor = Icon;\r\n\r\n  /**\r\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\r\n   * @return {Icon} The cloned style.\r\n   * @api\r\n   */\r\n  Icon.prototype.clone = function clone () {\r\n    return new Icon({\r\n      anchor: this.anchor_.slice(),\r\n      anchorOrigin: this.anchorOrigin_,\r\n      anchorXUnits: this.anchorXUnits_,\r\n      anchorYUnits: this.anchorYUnits_,\r\n      crossOrigin: this.crossOrigin_,\r\n      color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\r\n      src: this.getSrc(),\r\n      offset: this.offset_.slice(),\r\n      offsetOrigin: this.offsetOrigin_,\r\n      size: this.size_ !== null ? this.size_.slice() : undefined,\r\n      opacity: this.getOpacity(),\r\n      scale: this.getScale(),\r\n      rotation: this.getRotation(),\r\n      rotateWithView: this.getRotateWithView()\r\n    });\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  Icon.prototype.getAnchor = function getAnchor () {\r\n    if (this.normalizedAnchor_) {\r\n      return this.normalizedAnchor_;\r\n    }\r\n    var anchor = this.anchor_;\r\n    var size = this.getSize();\r\n    if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\r\n        this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\r\n      if (!size) {\r\n        return null;\r\n      }\r\n      anchor = this.anchor_.slice();\r\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\r\n        anchor[0] *= size[0];\r\n      }\r\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\r\n        anchor[1] *= size[1];\r\n      }\r\n    }\r\n\r\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\r\n      if (!size) {\r\n        return null;\r\n      }\r\n      if (anchor === this.anchor_) {\r\n        anchor = this.anchor_.slice();\r\n      }\r\n      if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\r\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\r\n        anchor[0] = -anchor[0] + size[0];\r\n      }\r\n      if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\r\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\r\n        anchor[1] = -anchor[1] + size[1];\r\n      }\r\n    }\r\n    this.normalizedAnchor_ = anchor;\r\n    return this.normalizedAnchor_;\r\n  };\r\n\r\n  /**\r\n   * Set the anchor point. The anchor determines the center point for the\r\n   * symbolizer.\r\n   *\r\n   * @param {Array<number>} anchor Anchor.\r\n   * @api\r\n   */\r\n  Icon.prototype.setAnchor = function setAnchor (anchor) {\r\n    this.anchor_ = anchor;\r\n    this.normalizedAnchor_ = null;\r\n  };\r\n\r\n  /**\r\n   * Get the icon color.\r\n   * @return {import(\"../color.js\").Color} Color.\r\n   * @api\r\n   */\r\n  Icon.prototype.getColor = function getColor () {\r\n    return this.color_;\r\n  };\r\n\r\n  /**\r\n   * Get the image icon.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\r\n   * @override\r\n   * @api\r\n   */\r\n  Icon.prototype.getImage = function getImage (pixelRatio) {\r\n    return this.iconImage_.getImage(pixelRatio);\r\n  };\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  Icon.prototype.getImageSize = function getImageSize () {\r\n    return this.iconImage_.getSize();\r\n  };\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  Icon.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\r\n    return this.getImageSize();\r\n  };\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  Icon.prototype.getImageState = function getImageState () {\r\n    return this.iconImage_.getImageState();\r\n  };\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  Icon.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\r\n    return this.iconImage_.getHitDetectionImage(pixelRatio);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  Icon.prototype.getOrigin = function getOrigin () {\r\n    if (this.origin_) {\r\n      return this.origin_;\r\n    }\r\n    var offset = this.offset_;\r\n\r\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\r\n      var size = this.getSize();\r\n      var iconImageSize = this.iconImage_.getSize();\r\n      if (!size || !iconImageSize) {\r\n        return null;\r\n      }\r\n      offset = offset.slice();\r\n      if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\r\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\r\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\r\n      }\r\n      if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\r\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\r\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\r\n      }\r\n    }\r\n    this.origin_ = offset;\r\n    return this.origin_;\r\n  };\r\n\r\n  /**\r\n   * Get the image URL.\r\n   * @return {string|undefined} Image src.\r\n   * @api\r\n   */\r\n  Icon.prototype.getSrc = function getSrc () {\r\n    return this.iconImage_.getSrc();\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  Icon.prototype.getSize = function getSize () {\r\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\r\n  };\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  Icon.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\r\n    return listen(this.iconImage_, EventType.CHANGE,\r\n      listener, thisArg);\r\n  };\r\n\r\n  /**\r\n   * Load not yet loaded URI.\r\n   * When rendering a feature with an icon style, the vector renderer will\r\n   * automatically call this method. However, you might want to call this\r\n   * method yourself for preloading or other purposes.\r\n   * @override\r\n   * @api\r\n   */\r\n  Icon.prototype.load = function load () {\r\n    this.iconImage_.load();\r\n  };\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  Icon.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\r\n    unlisten(this.iconImage_, EventType.CHANGE,\r\n      listener, thisArg);\r\n  };\n\n  return Icon;\n}(ImageStyle));\r\n\r\n\r\nexport default Icon;\r\n\r\n//# sourceMappingURL=Icon.js.map","/**\r\n * @module ol/style/Stroke\r\n */\r\nimport {getUid} from '../util.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\r\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\r\n * Default null; if null, the Canvas/renderer default black will be used.\r\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\r\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\r\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\r\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\r\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\r\n * @property {number} [lineDashOffset=0] Line dash offset.\r\n * @property {number} [miterLimit=10] Miter limit.\r\n * @property {number} [width] Width.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Set stroke style for vector features.\r\n * Note that the defaults given are the Canvas defaults, which will be used if\r\n * option is not defined. The `get` functions return whatever was entered in\r\n * the options; they will not return the default.\r\n * @api\r\n */\r\nvar Stroke = function Stroke(opt_options) {\r\n\r\n  var options = opt_options || {};\r\n\r\n  /**\r\n   * @private\r\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\r\n   */\r\n  this.color_ = options.color !== undefined ? options.color : null;\r\n\r\n  /**\r\n   * @private\r\n   * @type {string|undefined}\r\n   */\r\n  this.lineCap_ = options.lineCap;\r\n\r\n  /**\r\n   * @private\r\n   * @type {Array<number>}\r\n   */\r\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\r\n\r\n  /**\r\n   * @private\r\n   * @type {number|undefined}\r\n   */\r\n  this.lineDashOffset_ = options.lineDashOffset;\r\n\r\n  /**\r\n   * @private\r\n   * @type {string|undefined}\r\n   */\r\n  this.lineJoin_ = options.lineJoin;\r\n\r\n  /**\r\n   * @private\r\n   * @type {number|undefined}\r\n   */\r\n  this.miterLimit_ = options.miterLimit;\r\n\r\n  /**\r\n   * @private\r\n   * @type {number|undefined}\r\n   */\r\n  this.width_ = options.width;\r\n\r\n  /**\r\n   * @private\r\n   * @type {string|undefined}\r\n   */\r\n  this.checksum_ = undefined;\r\n};\r\n\r\n/**\r\n * Clones the style.\r\n * @return {Stroke} The cloned style.\r\n * @api\r\n */\r\nStroke.prototype.clone = function clone () {\r\n  var color = this.getColor();\r\n  return new Stroke({\r\n    color: Array.isArray(color) ? color.slice() : color || undefined,\r\n    lineCap: this.getLineCap(),\r\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\r\n    lineDashOffset: this.getLineDashOffset(),\r\n    lineJoin: this.getLineJoin(),\r\n    miterLimit: this.getMiterLimit(),\r\n    width: this.getWidth()\r\n  });\r\n};\r\n\r\n/**\r\n * Get the stroke color.\r\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\r\n * @api\r\n */\r\nStroke.prototype.getColor = function getColor () {\r\n  return this.color_;\r\n};\r\n\r\n/**\r\n * Get the line cap type for the stroke.\r\n * @return {string|undefined} Line cap.\r\n * @api\r\n */\r\nStroke.prototype.getLineCap = function getLineCap () {\r\n  return this.lineCap_;\r\n};\r\n\r\n/**\r\n * Get the line dash style for the stroke.\r\n * @return {Array<number>} Line dash.\r\n * @api\r\n */\r\nStroke.prototype.getLineDash = function getLineDash () {\r\n  return this.lineDash_;\r\n};\r\n\r\n/**\r\n * Get the line dash offset for the stroke.\r\n * @return {number|undefined} Line dash offset.\r\n * @api\r\n */\r\nStroke.prototype.getLineDashOffset = function getLineDashOffset () {\r\n  return this.lineDashOffset_;\r\n};\r\n\r\n/**\r\n * Get the line join type for the stroke.\r\n * @return {string|undefined} Line join.\r\n * @api\r\n */\r\nStroke.prototype.getLineJoin = function getLineJoin () {\r\n  return this.lineJoin_;\r\n};\r\n\r\n/**\r\n * Get the miter limit for the stroke.\r\n * @return {number|undefined} Miter limit.\r\n * @api\r\n */\r\nStroke.prototype.getMiterLimit = function getMiterLimit () {\r\n  return this.miterLimit_;\r\n};\r\n\r\n/**\r\n * Get the stroke width.\r\n * @return {number|undefined} Width.\r\n * @api\r\n */\r\nStroke.prototype.getWidth = function getWidth () {\r\n  return this.width_;\r\n};\r\n\r\n/**\r\n * Set the color.\r\n *\r\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\r\n * @api\r\n */\r\nStroke.prototype.setColor = function setColor (color) {\r\n  this.color_ = color;\r\n  this.checksum_ = undefined;\r\n};\r\n\r\n/**\r\n * Set the line cap.\r\n *\r\n * @param {string|undefined} lineCap Line cap.\r\n * @api\r\n */\r\nStroke.prototype.setLineCap = function setLineCap (lineCap) {\r\n  this.lineCap_ = lineCap;\r\n  this.checksum_ = undefined;\r\n};\r\n\r\n/**\r\n * Set the line dash.\r\n *\r\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\r\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\r\n * property will have no visual effect in these browsers.\r\n *\r\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\r\n *\r\n * @param {Array<number>} lineDash Line dash.\r\n * @api\r\n */\r\nStroke.prototype.setLineDash = function setLineDash (lineDash) {\r\n  this.lineDash_ = lineDash;\r\n  this.checksum_ = undefined;\r\n};\r\n\r\n/**\r\n * Set the line dash offset.\r\n *\r\n * @param {number|undefined} lineDashOffset Line dash offset.\r\n * @api\r\n */\r\nStroke.prototype.setLineDashOffset = function setLineDashOffset (lineDashOffset) {\r\n  this.lineDashOffset_ = lineDashOffset;\r\n  this.checksum_ = undefined;\r\n};\r\n\r\n/**\r\n * Set the line join.\r\n *\r\n * @param {string|undefined} lineJoin Line join.\r\n * @api\r\n */\r\nStroke.prototype.setLineJoin = function setLineJoin (lineJoin) {\r\n  this.lineJoin_ = lineJoin;\r\n  this.checksum_ = undefined;\r\n};\r\n\r\n/**\r\n * Set the miter limit.\r\n *\r\n * @param {number|undefined} miterLimit Miter limit.\r\n * @api\r\n */\r\nStroke.prototype.setMiterLimit = function setMiterLimit (miterLimit) {\r\n  this.miterLimit_ = miterLimit;\r\n  this.checksum_ = undefined;\r\n};\r\n\r\n/**\r\n * Set the width.\r\n *\r\n * @param {number|undefined} width Width.\r\n * @api\r\n */\r\nStroke.prototype.setWidth = function setWidth (width) {\r\n  this.width_ = width;\r\n  this.checksum_ = undefined;\r\n};\r\n\r\n/**\r\n * @return {string} The checksum.\r\n */\r\nStroke.prototype.getChecksum = function getChecksum () {\r\n  if (this.checksum_ === undefined) {\r\n    this.checksum_ = 's';\r\n    if (this.color_) {\r\n      if (typeof this.color_ === 'string') {\r\n        this.checksum_ += this.color_;\r\n      } else {\r\n        this.checksum_ += getUid(this.color_);\r\n      }\r\n    } else {\r\n      this.checksum_ += '-';\r\n    }\r\n    this.checksum_ += ',' +\r\n        (this.lineCap_ !== undefined ?\r\n          this.lineCap_.toString() : '-') + ',' +\r\n        (this.lineDash_ ?\r\n          this.lineDash_.toString() : '-') + ',' +\r\n        (this.lineDashOffset_ !== undefined ?\r\n          this.lineDashOffset_ : '-') + ',' +\r\n        (this.lineJoin_ !== undefined ?\r\n          this.lineJoin_ : '-') + ',' +\r\n        (this.miterLimit_ !== undefined ?\r\n          this.miterLimit_.toString() : '-') + ',' +\r\n        (this.width_ !== undefined ?\r\n          this.width_.toString() : '-');\r\n  }\r\n\r\n  return this.checksum_;\r\n};\r\n\r\nexport default Stroke;\r\n\r\n//# sourceMappingURL=Stroke.js.map","/**\r\n * @module ol/style/RegularShape\r\n */\r\n\r\nimport {asString} from '../color.js';\r\nimport {asColorLike} from '../colorlike.js';\r\nimport {createCanvasContext2D} from '../dom.js';\r\nimport {CANVAS_LINE_DASH} from '../has.js';\r\nimport ImageState from '../ImageState.js';\r\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\r\nimport ImageStyle from './Image.js';\r\n\r\n\r\n/**\r\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\r\n * @typedef {Object} Options\r\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\r\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\r\n * is the number of sides.\r\n * @property {number} [radius] Radius of a regular polygon.\r\n * @property {number} [radius1] Outer radius of a star.\r\n * @property {number} [radius2] Inner radius of a star.\r\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\r\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\r\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\r\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\r\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this symbol. When\r\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\r\n * symbol is added to an atlas. By default no atlas manager is used.\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} RenderOptions\r\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\r\n * @property {number} strokeWidth\r\n * @property {number} size\r\n * @property {string} lineCap\r\n * @property {Array<number>} lineDash\r\n * @property {number} lineDashOffset\r\n * @property {string} lineJoin\r\n * @property {number} miterLimit\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Set regular shape style for vector features. The resulting shape will be\r\n * a regular polygon when `radius` is provided, or a star when `radius1` and\r\n * `radius2` are provided.\r\n * @api\r\n */\r\nvar RegularShape = /*@__PURE__*/(function (ImageStyle) {\n  function RegularShape(options) {\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    var rotateWithView = options.rotateWithView !== undefined ?\r\n      options.rotateWithView : false;\r\n\r\n    ImageStyle.call(this, {\r\n      opacity: 1,\r\n      rotateWithView: rotateWithView,\r\n      rotation: options.rotation !== undefined ? options.rotation : 0,\r\n      scale: 1\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<string|number>}\r\n     */\r\n    this.checksums_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement}\r\n     */\r\n    this.canvas_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement}\r\n     */\r\n    this.hitDetectionCanvas_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./Fill.js\").default}\r\n     */\r\n    this.fill_ = options.fill !== undefined ? options.fill : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.origin_ = [0, 0];\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.points_ = options.points;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.radius_ = /** @type {number} */ (options.radius !== undefined ?\r\n      options.radius : options.radius1);\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.radius2_ = options.radius2;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./Stroke.js\").default}\r\n     */\r\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.anchor_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../size.js\").Size}\r\n     */\r\n    this.size_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../size.js\").Size}\r\n     */\r\n    this.imageSize_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../size.js\").Size}\r\n     */\r\n    this.hitDetectionImageSize_ = null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"./AtlasManager.js\").default|undefined}\r\n     */\r\n    this.atlasManager_ = options.atlasManager;\r\n\r\n    this.render_(this.atlasManager_);\r\n\r\n  }\n\n  if ( ImageStyle ) RegularShape.__proto__ = ImageStyle;\n  RegularShape.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  RegularShape.prototype.constructor = RegularShape;\r\n\r\n  /**\r\n   * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\r\n   * @return {RegularShape} The cloned style.\r\n   * @api\r\n   */\r\n  RegularShape.prototype.clone = function clone () {\r\n    var style = new RegularShape({\r\n      fill: this.getFill() ? this.getFill().clone() : undefined,\r\n      points: this.getPoints(),\r\n      radius: this.getRadius(),\r\n      radius2: this.getRadius2(),\r\n      angle: this.getAngle(),\r\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\r\n      rotation: this.getRotation(),\r\n      rotateWithView: this.getRotateWithView(),\r\n      atlasManager: this.atlasManager_\r\n    });\r\n    style.setOpacity(this.getOpacity());\r\n    style.setScale(this.getScale());\r\n    return style;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  RegularShape.prototype.getAnchor = function getAnchor () {\r\n    return this.anchor_;\r\n  };\r\n\r\n  /**\r\n   * Get the angle used in generating the shape.\r\n   * @return {number} Shape's rotation in radians.\r\n   * @api\r\n   */\r\n  RegularShape.prototype.getAngle = function getAngle () {\r\n    return this.angle_;\r\n  };\r\n\r\n  /**\r\n   * Get the fill style for the shape.\r\n   * @return {import(\"./Fill.js\").default} Fill style.\r\n   * @api\r\n   */\r\n  RegularShape.prototype.getFill = function getFill () {\r\n    return this.fill_;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  RegularShape.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\r\n    return this.hitDetectionCanvas_;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  RegularShape.prototype.getImage = function getImage (pixelRatio) {\r\n    return this.canvas_;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  RegularShape.prototype.getImageSize = function getImageSize () {\r\n    return this.imageSize_;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  RegularShape.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\r\n    return this.hitDetectionImageSize_;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  RegularShape.prototype.getImageState = function getImageState () {\r\n    return ImageState.LOADED;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  RegularShape.prototype.getOrigin = function getOrigin () {\r\n    return this.origin_;\r\n  };\r\n\r\n  /**\r\n   * Get the number of points for generating the shape.\r\n   * @return {number} Number of points for stars and regular polygons.\r\n   * @api\r\n   */\r\n  RegularShape.prototype.getPoints = function getPoints () {\r\n    return this.points_;\r\n  };\r\n\r\n  /**\r\n   * Get the (primary) radius for the shape.\r\n   * @return {number} Radius.\r\n   * @api\r\n   */\r\n  RegularShape.prototype.getRadius = function getRadius () {\r\n    return this.radius_;\r\n  };\r\n\r\n  /**\r\n   * Get the secondary radius for the shape.\r\n   * @return {number|undefined} Radius2.\r\n   * @api\r\n   */\r\n  RegularShape.prototype.getRadius2 = function getRadius2 () {\r\n    return this.radius2_;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  RegularShape.prototype.getSize = function getSize () {\r\n    return this.size_;\r\n  };\r\n\r\n  /**\r\n   * Get the stroke style for the shape.\r\n   * @return {import(\"./Stroke.js\").default} Stroke style.\r\n   * @api\r\n   */\r\n  RegularShape.prototype.getStroke = function getStroke () {\r\n    return this.stroke_;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  RegularShape.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\r\n    return undefined;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  RegularShape.prototype.load = function load () {};\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  RegularShape.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {};\r\n\r\n  /**\r\n   * @protected\r\n   * @param {import(\"./AtlasManager.js\").default|undefined} atlasManager An atlas manager.\r\n   */\r\n  RegularShape.prototype.render_ = function render_ (atlasManager) {\r\n    var imageSize;\r\n    var lineCap = '';\r\n    var lineJoin = '';\r\n    var miterLimit = 0;\r\n    var lineDash = null;\r\n    var lineDashOffset = 0;\r\n    var strokeStyle;\r\n    var strokeWidth = 0;\r\n\r\n    if (this.stroke_) {\r\n      strokeStyle = this.stroke_.getColor();\r\n      if (strokeStyle === null) {\r\n        strokeStyle = defaultStrokeStyle;\r\n      }\r\n      strokeStyle = asColorLike(strokeStyle);\r\n      strokeWidth = this.stroke_.getWidth();\r\n      if (strokeWidth === undefined) {\r\n        strokeWidth = defaultLineWidth;\r\n      }\r\n      lineDash = this.stroke_.getLineDash();\r\n      lineDashOffset = this.stroke_.getLineDashOffset();\r\n      if (!CANVAS_LINE_DASH) {\r\n        lineDash = null;\r\n        lineDashOffset = 0;\r\n      }\r\n      lineJoin = this.stroke_.getLineJoin();\r\n      if (lineJoin === undefined) {\r\n        lineJoin = defaultLineJoin;\r\n      }\r\n      lineCap = this.stroke_.getLineCap();\r\n      if (lineCap === undefined) {\r\n        lineCap = defaultLineCap;\r\n      }\r\n      miterLimit = this.stroke_.getMiterLimit();\r\n      if (miterLimit === undefined) {\r\n        miterLimit = defaultMiterLimit;\r\n      }\r\n    }\r\n\r\n    var size = 2 * (this.radius_ + strokeWidth) + 1;\r\n\r\n    /** @type {RenderOptions} */\r\n    var renderOptions = {\r\n      strokeStyle: strokeStyle,\r\n      strokeWidth: strokeWidth,\r\n      size: size,\r\n      lineCap: lineCap,\r\n      lineDash: lineDash,\r\n      lineDashOffset: lineDashOffset,\r\n      lineJoin: lineJoin,\r\n      miterLimit: miterLimit\r\n    };\r\n\r\n    if (atlasManager === undefined) {\r\n      // no atlas manager is used, create a new canvas\r\n      var context = createCanvasContext2D(size, size);\r\n      this.canvas_ = context.canvas;\r\n\r\n      // canvas.width and height are rounded to the closest integer\r\n      size = this.canvas_.width;\r\n      imageSize = size;\r\n\r\n      this.draw_(renderOptions, context, 0, 0);\r\n\r\n      this.createHitDetectionCanvas_(renderOptions);\r\n    } else {\r\n      // an atlas manager is used, add the symbol to an atlas\r\n      size = Math.round(size);\r\n\r\n      var hasCustomHitDetectionImage = !this.fill_;\r\n      var renderHitDetectionCallback;\r\n      if (hasCustomHitDetectionImage) {\r\n        // render the hit-detection image into a separate atlas image\r\n        renderHitDetectionCallback =\r\n            this.drawHitDetectionCanvas_.bind(this, renderOptions);\r\n      }\r\n\r\n      var id = this.getChecksum();\r\n      var info = atlasManager.add(\r\n        id, size, size, this.draw_.bind(this, renderOptions),\r\n        renderHitDetectionCallback);\r\n\r\n      this.canvas_ = info.image;\r\n      this.origin_ = [info.offsetX, info.offsetY];\r\n      imageSize = info.image.width;\r\n\r\n      if (hasCustomHitDetectionImage) {\r\n        this.hitDetectionCanvas_ = info.hitImage;\r\n        this.hitDetectionImageSize_ =\r\n            [info.hitImage.width, info.hitImage.height];\r\n      } else {\r\n        this.hitDetectionCanvas_ = this.canvas_;\r\n        this.hitDetectionImageSize_ = [imageSize, imageSize];\r\n      }\r\n    }\r\n\r\n    this.anchor_ = [size / 2, size / 2];\r\n    this.size_ = [size, size];\r\n    this.imageSize_ = [imageSize, imageSize];\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {RenderOptions} renderOptions Render options.\r\n   * @param {CanvasRenderingContext2D} context The rendering context.\r\n   * @param {number} x The origin for the symbol (x).\r\n   * @param {number} y The origin for the symbol (y).\r\n   */\r\n  RegularShape.prototype.draw_ = function draw_ (renderOptions, context, x, y) {\r\n    var i, angle0, radiusC;\r\n    // reset transform\r\n    context.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n    // then move to (x, y)\r\n    context.translate(x, y);\r\n\r\n    context.beginPath();\r\n\r\n    var points = this.points_;\r\n    if (points === Infinity) {\r\n      context.arc(\r\n        renderOptions.size / 2, renderOptions.size / 2,\r\n        this.radius_, 0, 2 * Math.PI, true);\r\n    } else {\r\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\r\n        : this.radius_;\r\n      if (radius2 !== this.radius_) {\r\n        points = 2 * points;\r\n      }\r\n      for (i = 0; i <= points; i++) {\r\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\r\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\r\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\r\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\r\n      }\r\n    }\r\n\r\n\r\n    if (this.fill_) {\r\n      var color = this.fill_.getColor();\r\n      if (color === null) {\r\n        color = defaultFillStyle;\r\n      }\r\n      context.fillStyle = asColorLike(color);\r\n      context.fill();\r\n    }\r\n    if (this.stroke_) {\r\n      context.strokeStyle = renderOptions.strokeStyle;\r\n      context.lineWidth = renderOptions.strokeWidth;\r\n      if (renderOptions.lineDash) {\r\n        context.setLineDash(renderOptions.lineDash);\r\n        context.lineDashOffset = renderOptions.lineDashOffset;\r\n      }\r\n      context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\r\n      context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\r\n      context.miterLimit = renderOptions.miterLimit;\r\n      context.stroke();\r\n    }\r\n    context.closePath();\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {RenderOptions} renderOptions Render options.\r\n   */\r\n  RegularShape.prototype.createHitDetectionCanvas_ = function createHitDetectionCanvas_ (renderOptions) {\r\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\r\n    if (this.fill_) {\r\n      this.hitDetectionCanvas_ = this.canvas_;\r\n      return;\r\n    }\r\n\r\n    // if no fill style is set, create an extra hit-detection image with a\r\n    // default fill style\r\n    var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\r\n    this.hitDetectionCanvas_ = context.canvas;\r\n\r\n    this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {RenderOptions} renderOptions Render options.\r\n   * @param {CanvasRenderingContext2D} context The context.\r\n   * @param {number} x The origin for the symbol (x).\r\n   * @param {number} y The origin for the symbol (y).\r\n   */\r\n  RegularShape.prototype.drawHitDetectionCanvas_ = function drawHitDetectionCanvas_ (renderOptions, context, x, y) {\r\n    // reset transform\r\n    context.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n    // then move to (x, y)\r\n    context.translate(x, y);\r\n\r\n    context.beginPath();\r\n\r\n    var points = this.points_;\r\n    if (points === Infinity) {\r\n      context.arc(\r\n        renderOptions.size / 2, renderOptions.size / 2,\r\n        this.radius_, 0, 2 * Math.PI, true);\r\n    } else {\r\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\r\n        : this.radius_;\r\n      if (radius2 !== this.radius_) {\r\n        points = 2 * points;\r\n      }\r\n      var i, radiusC, angle0;\r\n      for (i = 0; i <= points; i++) {\r\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\r\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\r\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\r\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\r\n      }\r\n    }\r\n\r\n    context.fillStyle = asString(defaultFillStyle);\r\n    context.fill();\r\n    if (this.stroke_) {\r\n      context.strokeStyle = renderOptions.strokeStyle;\r\n      context.lineWidth = renderOptions.strokeWidth;\r\n      if (renderOptions.lineDash) {\r\n        context.setLineDash(renderOptions.lineDash);\r\n        context.lineDashOffset = renderOptions.lineDashOffset;\r\n      }\r\n      context.stroke();\r\n    }\r\n    context.closePath();\r\n  };\r\n\r\n  /**\r\n   * @return {string} The checksum.\r\n   */\r\n  RegularShape.prototype.getChecksum = function getChecksum () {\r\n    var strokeChecksum = this.stroke_ ?\r\n      this.stroke_.getChecksum() : '-';\r\n    var fillChecksum = this.fill_ ?\r\n      this.fill_.getChecksum() : '-';\r\n\r\n    var recalculate = !this.checksums_ ||\r\n        (strokeChecksum != this.checksums_[1] ||\r\n        fillChecksum != this.checksums_[2] ||\r\n        this.radius_ != this.checksums_[3] ||\r\n        this.radius2_ != this.checksums_[4] ||\r\n        this.angle_ != this.checksums_[5] ||\r\n        this.points_ != this.checksums_[6]);\r\n\r\n    if (recalculate) {\r\n      var checksum = 'r' + strokeChecksum + fillChecksum +\r\n          (this.radius_ !== undefined ? this.radius_.toString() : '-') +\r\n          (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\r\n          (this.angle_ !== undefined ? this.angle_.toString() : '-') +\r\n          (this.points_ !== undefined ? this.points_.toString() : '-');\r\n      this.checksums_ = [checksum, strokeChecksum, fillChecksum,\r\n        this.radius_, this.radius2_, this.angle_, this.points_];\r\n    }\r\n\r\n    return /** @type {string} */ (this.checksums_[0]);\r\n  };\n\n  return RegularShape;\n}(ImageStyle));\r\n\r\n\r\nexport default RegularShape;\r\n\r\n//# sourceMappingURL=RegularShape.js.map","/**\r\n * @module ol/style/Circle\r\n */\r\n\r\nimport RegularShape from './RegularShape.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\r\n * @property {number} radius Circle radius.\r\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\r\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this circle.\r\n * When using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given,\r\n * the circle is added to an atlas. By default no atlas manager is used.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Set circle style for vector features.\r\n * @api\r\n */\r\nvar CircleStyle = /*@__PURE__*/(function (RegularShape) {\n  function CircleStyle(opt_options) {\r\n\r\n    var options = opt_options || /** @type {Options} */ ({});\r\n\r\n    RegularShape.call(this, {\r\n      points: Infinity,\r\n      fill: options.fill,\r\n      radius: options.radius,\r\n      stroke: options.stroke,\r\n      atlasManager: options.atlasManager\r\n    });\r\n\r\n  }\n\n  if ( RegularShape ) CircleStyle.__proto__ = RegularShape;\n  CircleStyle.prototype = Object.create( RegularShape && RegularShape.prototype );\n  CircleStyle.prototype.constructor = CircleStyle;\r\n\r\n  /**\r\n  * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\r\n  * @return {CircleStyle} The cloned style.\r\n  * @override\r\n  * @api\r\n  */\r\n  CircleStyle.prototype.clone = function clone () {\r\n    var style = new CircleStyle({\r\n      fill: this.getFill() ? this.getFill().clone() : undefined,\r\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\r\n      radius: this.getRadius(),\r\n      atlasManager: this.atlasManager_\r\n    });\r\n    style.setOpacity(this.getOpacity());\r\n    style.setScale(this.getScale());\r\n    return style;\r\n  };\r\n\r\n  /**\r\n  * Set the circle radius.\r\n  *\r\n  * @param {number} radius Circle radius.\r\n  * @api\r\n  */\r\n  CircleStyle.prototype.setRadius = function setRadius (radius) {\r\n    this.radius_ = radius;\r\n    this.render_(this.atlasManager_);\r\n  };\n\n  return CircleStyle;\n}(RegularShape));\r\n\r\n\r\nexport default CircleStyle;\r\n\r\n//# sourceMappingURL=Circle.js.map","/**\r\n * @module ol/style/Style\r\n */\r\n\r\n/**\r\n * Feature styles.\r\n *\r\n * If no style is defined, the following default style is used:\r\n * ```js\r\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\r\n *\r\n *  var fill = new Fill({\r\n *    color: 'rgba(255,255,255,0.4)'\r\n *  });\r\n *  var stroke = new Stroke({\r\n *    color: '#3399CC',\r\n *    width: 1.25\r\n *  });\r\n *  var styles = [\r\n *    new Style({\r\n *      image: new Circle({\r\n *        fill: fill,\r\n *        stroke: stroke,\r\n *        radius: 5\r\n *      }),\r\n *      fill: fill,\r\n *      stroke: stroke\r\n *    })\r\n *  ];\r\n * ```\r\n *\r\n * A separate editing style has the following defaults:\r\n * ```js\r\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\r\n *  import GeometryType from 'ol/geom/GeometryType';\r\n *\r\n *  var white = [255, 255, 255, 1];\r\n *  var blue = [0, 153, 255, 1];\r\n *  var width = 3;\r\n *  styles[GeometryType.POLYGON] = [\r\n *    new Style({\r\n *      fill: new Fill({\r\n *        color: [255, 255, 255, 0.5]\r\n *      })\r\n *    })\r\n *  ];\r\n *  styles[GeometryType.MULTI_POLYGON] =\r\n *      styles[GeometryType.POLYGON];\r\n *  styles[GeometryType.LINE_STRING] = [\r\n *    new Style({\r\n *      stroke: new Stroke({\r\n *        color: white,\r\n *        width: width + 2\r\n *      })\r\n *    }),\r\n *    new Style({\r\n *      stroke: new Stroke({\r\n *        color: blue,\r\n *        width: width\r\n *      })\r\n *    })\r\n *  ];\r\n *  styles[GeometryType.MULTI_LINE_STRING] =\r\n *      styles[GeometryType.LINE_STRING];\r\n *  styles[GeometryType.POINT] = [\r\n *    new Style({\r\n *      image: new Circle({\r\n *        radius: width * 2,\r\n *        fill: new Fill({\r\n *          color: blue\r\n *        }),\r\n *        stroke: new Stroke({\r\n *          color: white,\r\n *          width: width / 2\r\n *        })\r\n *      }),\r\n *      zIndex: Infinity\r\n *    })\r\n *  ];\r\n *  styles[GeometryType.MULTI_POINT] =\r\n *      styles[GeometryType.POINT];\r\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\r\n *      styles[GeometryType.POLYGON].concat(\r\n *          styles[GeometryType.LINE_STRING],\r\n *          styles[GeometryType.POINT]\r\n *      );\r\n * ```\r\n */\r\nimport {assert} from '../asserts.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport CircleStyle from './Circle.js';\r\nimport Fill from './Fill.js';\r\nimport Stroke from './Stroke.js';\r\n\r\n\r\n/**\r\n * A function that takes an {@link module:ol/Feature} and a `{number}`\r\n * representing the view's resolution. The function should return a\r\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\r\n * vector layer can be styled.\r\n *\r\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\r\n */\r\n\r\n/**\r\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\r\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\r\n */\r\n\r\n/**\r\n * A function that takes an {@link module:ol/Feature} as argument and returns an\r\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\r\n *\r\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\r\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\r\n */\r\n\r\n\r\n/**\r\n * Custom renderer function. Takes two arguments:\r\n *\r\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\r\n * 2. The {@link module:ol/render~State} of the layer renderer.\r\n *\r\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State)}\r\n * RenderFunction\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\r\n * or function returning a geometry to render for this style.\r\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\r\n * @property {import(\"./Image.js\").default} [image] Image style.\r\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\r\n * ignored, and the provided function will be called with each render frame for each geometry.\r\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\r\n * @property {import(\"./Text.js\").default} [text] Text style.\r\n * @property {number} [zIndex] Z index.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Container for vector feature rendering styles. Any changes made to the style\r\n * or its children through `set*()` methods will not take effect until the\r\n * feature or layer that uses the style is re-rendered.\r\n * @api\r\n */\r\nvar Style = function Style(opt_options) {\r\n\r\n  var options = opt_options || {};\r\n\r\n  /**\r\n   * @private\r\n   * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\r\n   */\r\n  this.geometry_ = null;\r\n\r\n  /**\r\n   * @private\r\n   * @type {!GeometryFunction}\r\n   */\r\n  this.geometryFunction_ = defaultGeometryFunction;\r\n\r\n  if (options.geometry !== undefined) {\r\n    this.setGeometry(options.geometry);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @type {import(\"./Fill.js\").default}\r\n   */\r\n  this.fill_ = options.fill !== undefined ? options.fill : null;\r\n\r\n  /**\r\n     * @private\r\n     * @type {import(\"./Image.js\").default}\r\n     */\r\n  this.image_ = options.image !== undefined ? options.image : null;\r\n\r\n  /**\r\n   * @private\r\n   * @type {RenderFunction|null}\r\n   */\r\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\r\n\r\n  /**\r\n   * @private\r\n   * @type {import(\"./Stroke.js\").default}\r\n   */\r\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\r\n\r\n  /**\r\n   * @private\r\n   * @type {import(\"./Text.js\").default}\r\n   */\r\n  this.text_ = options.text !== undefined ? options.text : null;\r\n\r\n  /**\r\n   * @private\r\n   * @type {number|undefined}\r\n   */\r\n  this.zIndex_ = options.zIndex;\r\n\r\n};\r\n\r\n/**\r\n * Clones the style.\r\n * @return {Style} The cloned style.\r\n * @api\r\n */\r\nStyle.prototype.clone = function clone () {\r\n  var geometry = this.getGeometry();\r\n  if (geometry && typeof geometry === 'object') {\r\n    geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\r\n  }\r\n  return new Style({\r\n    geometry: geometry,\r\n    fill: this.getFill() ? this.getFill().clone() : undefined,\r\n    image: this.getImage() ? this.getImage().clone() : undefined,\r\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\r\n    text: this.getText() ? this.getText().clone() : undefined,\r\n    zIndex: this.getZIndex()\r\n  });\r\n};\r\n\r\n/**\r\n * Get the custom renderer function that was configured with\r\n * {@link #setRenderer} or the `renderer` constructor option.\r\n * @return {RenderFunction|null} Custom renderer function.\r\n * @api\r\n */\r\nStyle.prototype.getRenderer = function getRenderer () {\r\n  return this.renderer_;\r\n};\r\n\r\n/**\r\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\r\n * and `image` options of the style will be ignored.\r\n * @param {RenderFunction|null} renderer Custom renderer function.\r\n * @api\r\n */\r\nStyle.prototype.setRenderer = function setRenderer (renderer) {\r\n  this.renderer_ = renderer;\r\n};\r\n\r\n/**\r\n * Get the geometry to be rendered.\r\n * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\r\n * Feature property or geometry or function that returns the geometry that will\r\n * be rendered with this style.\r\n * @api\r\n */\r\nStyle.prototype.getGeometry = function getGeometry () {\r\n  return this.geometry_;\r\n};\r\n\r\n/**\r\n * Get the function used to generate a geometry for rendering.\r\n * @return {!GeometryFunction} Function that is called with a feature\r\n * and returns the geometry to render instead of the feature's geometry.\r\n * @api\r\n */\r\nStyle.prototype.getGeometryFunction = function getGeometryFunction () {\r\n  return this.geometryFunction_;\r\n};\r\n\r\n/**\r\n * Get the fill style.\r\n * @return {import(\"./Fill.js\").default} Fill style.\r\n * @api\r\n */\r\nStyle.prototype.getFill = function getFill () {\r\n  return this.fill_;\r\n};\r\n\r\n/**\r\n * Set the fill style.\r\n * @param {import(\"./Fill.js\").default} fill Fill style.\r\n * @api\r\n */\r\nStyle.prototype.setFill = function setFill (fill) {\r\n  this.fill_ = fill;\r\n};\r\n\r\n/**\r\n * Get the image style.\r\n * @return {import(\"./Image.js\").default} Image style.\r\n * @api\r\n */\r\nStyle.prototype.getImage = function getImage () {\r\n  return this.image_;\r\n};\r\n\r\n/**\r\n * Set the image style.\r\n * @param {import(\"./Image.js\").default} image Image style.\r\n * @api\r\n */\r\nStyle.prototype.setImage = function setImage (image) {\r\n  this.image_ = image;\r\n};\r\n\r\n/**\r\n * Get the stroke style.\r\n * @return {import(\"./Stroke.js\").default} Stroke style.\r\n * @api\r\n */\r\nStyle.prototype.getStroke = function getStroke () {\r\n  return this.stroke_;\r\n};\r\n\r\n/**\r\n * Set the stroke style.\r\n * @param {import(\"./Stroke.js\").default} stroke Stroke style.\r\n * @api\r\n */\r\nStyle.prototype.setStroke = function setStroke (stroke) {\r\n  this.stroke_ = stroke;\r\n};\r\n\r\n/**\r\n * Get the text style.\r\n * @return {import(\"./Text.js\").default} Text style.\r\n * @api\r\n */\r\nStyle.prototype.getText = function getText () {\r\n  return this.text_;\r\n};\r\n\r\n/**\r\n * Set the text style.\r\n * @param {import(\"./Text.js\").default} text Text style.\r\n * @api\r\n */\r\nStyle.prototype.setText = function setText (text) {\r\n  this.text_ = text;\r\n};\r\n\r\n/**\r\n * Get the z-index for the style.\r\n * @return {number|undefined} ZIndex.\r\n * @api\r\n */\r\nStyle.prototype.getZIndex = function getZIndex () {\r\n  return this.zIndex_;\r\n};\r\n\r\n/**\r\n * Set a geometry that is rendered instead of the feature's geometry.\r\n *\r\n * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\r\n *   Feature property or geometry or function returning a geometry to render\r\n *   for this style.\r\n * @api\r\n */\r\nStyle.prototype.setGeometry = function setGeometry (geometry) {\r\n  if (typeof geometry === 'function') {\r\n    this.geometryFunction_ = geometry;\r\n  } else if (typeof geometry === 'string') {\r\n    this.geometryFunction_ = function(feature) {\r\n      return (\r\n        /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry))\r\n      );\r\n    };\r\n  } else if (!geometry) {\r\n    this.geometryFunction_ = defaultGeometryFunction;\r\n  } else if (geometry !== undefined) {\r\n    this.geometryFunction_ = function() {\r\n      return (\r\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry)\r\n      );\r\n    };\r\n  }\r\n  this.geometry_ = geometry;\r\n};\r\n\r\n/**\r\n * Set the z-index.\r\n *\r\n * @param {number|undefined} zIndex ZIndex.\r\n * @api\r\n */\r\nStyle.prototype.setZIndex = function setZIndex (zIndex) {\r\n  this.zIndex_ = zIndex;\r\n};\r\n\r\n\r\n/**\r\n * Convert the provided object into a style function.  Functions passed through\r\n * unchanged.  Arrays of Style or single style objects wrapped in a\r\n * new style function.\r\n * @param {StyleFunction|Array<Style>|Style} obj\r\n *     A style function, a single style, or an array of styles.\r\n * @return {StyleFunction} A style function.\r\n */\r\nexport function toFunction(obj) {\r\n  var styleFunction;\r\n\r\n  if (typeof obj === 'function') {\r\n    styleFunction = obj;\r\n  } else {\r\n    /**\r\n     * @type {Array<Style>}\r\n     */\r\n    var styles;\r\n    if (Array.isArray(obj)) {\r\n      styles = obj;\r\n    } else {\r\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\r\n        41); // Expected an `Style` or an array of `Style`\r\n      var style = /** @type {Style} */ (obj);\r\n      styles = [style];\r\n    }\r\n    styleFunction = function() {\r\n      return styles;\r\n    };\r\n  }\r\n  return styleFunction;\r\n}\r\n\r\n\r\n/**\r\n * @type {Array<Style>}\r\n */\r\nvar defaultStyles = null;\r\n\r\n\r\n/**\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @param {number} resolution Resolution.\r\n * @return {Array<Style>} Style.\r\n */\r\nexport function createDefaultStyle(feature, resolution) {\r\n  // We don't use an immediately-invoked function\r\n  // and a closure so we don't get an error at script evaluation time in\r\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\r\n  // canvas.getContext('2d') at construction time, which will cause an.error\r\n  // in such browsers.)\r\n  if (!defaultStyles) {\r\n    var fill = new Fill({\r\n      color: 'rgba(255,255,255,0.4)'\r\n    });\r\n    var stroke = new Stroke({\r\n      color: '#3399CC',\r\n      width: 1.25\r\n    });\r\n    defaultStyles = [\r\n      new Style({\r\n        image: new CircleStyle({\r\n          fill: fill,\r\n          stroke: stroke,\r\n          radius: 5\r\n        }),\r\n        fill: fill,\r\n        stroke: stroke\r\n      })\r\n    ];\r\n  }\r\n  return defaultStyles;\r\n}\r\n\r\n\r\n/**\r\n * Default styles for editing features.\r\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\r\n */\r\nexport function createEditingStyle() {\r\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\r\n  var styles = {};\r\n  var white = [255, 255, 255, 1];\r\n  var blue = [0, 153, 255, 1];\r\n  var width = 3;\r\n  styles[GeometryType.POLYGON] = [\r\n    new Style({\r\n      fill: new Fill({\r\n        color: [255, 255, 255, 0.5]\r\n      })\r\n    })\r\n  ];\r\n  styles[GeometryType.MULTI_POLYGON] =\r\n      styles[GeometryType.POLYGON];\r\n\r\n  styles[GeometryType.LINE_STRING] = [\r\n    new Style({\r\n      stroke: new Stroke({\r\n        color: white,\r\n        width: width + 2\r\n      })\r\n    }),\r\n    new Style({\r\n      stroke: new Stroke({\r\n        color: blue,\r\n        width: width\r\n      })\r\n    })\r\n  ];\r\n  styles[GeometryType.MULTI_LINE_STRING] =\r\n      styles[GeometryType.LINE_STRING];\r\n\r\n  styles[GeometryType.CIRCLE] =\r\n      styles[GeometryType.POLYGON].concat(\r\n        styles[GeometryType.LINE_STRING]\r\n      );\r\n\r\n\r\n  styles[GeometryType.POINT] = [\r\n    new Style({\r\n      image: new CircleStyle({\r\n        radius: width * 2,\r\n        fill: new Fill({\r\n          color: blue\r\n        }),\r\n        stroke: new Stroke({\r\n          color: white,\r\n          width: width / 2\r\n        })\r\n      }),\r\n      zIndex: Infinity\r\n    })\r\n  ];\r\n  styles[GeometryType.MULTI_POINT] =\r\n      styles[GeometryType.POINT];\r\n\r\n  styles[GeometryType.GEOMETRY_COLLECTION] =\r\n      styles[GeometryType.POLYGON].concat(\r\n        styles[GeometryType.LINE_STRING],\r\n        styles[GeometryType.POINT]\r\n      );\r\n\r\n  return styles;\r\n}\r\n\r\n\r\n/**\r\n * Function that is called with a feature and returns its default geometry.\r\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\r\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\r\n */\r\nfunction defaultGeometryFunction(feature) {\r\n  return feature.getGeometry();\r\n}\r\n\r\nexport default Style;\r\n\r\n//# sourceMappingURL=Style.js.map","/**\r\n * @module ol/style/Text\r\n */\r\nimport Fill from './Fill.js';\r\nimport TextPlacement from './TextPlacement.js';\r\n\r\n\r\n/**\r\n * The default fill color to use if no fill was set at construction time; a\r\n * blackish `#333`.\r\n *\r\n * @const {string}\r\n */\r\nvar DEFAULT_FILL_COLOR = '#333';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [font] Font style as CSS 'font' value, see:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\r\n * @property {number} [maxAngle] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\r\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\r\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\r\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\r\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\r\n * the width of the polygon at the label position or the length of the path that it follows.\r\n * @property {import(\"./TextPlacement.js\").default|string} [placement] Text placement.\r\n * @property {number} [scale] Scale.\r\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\r\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\r\n * @property {string} [text] Text content.\r\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\r\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\r\n * placement where `maxAngle` is not exceeded.\r\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\r\n * 'hanging', 'ideographic'.\r\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\r\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\r\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\r\n * `'point'`. Default is no fill.\r\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\r\n * is `'point'`. Default is no stroke.\r\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\r\n * values in the array is `[top, right, bottom, left]`.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Set text style for vector features.\r\n * @api\r\n */\r\nvar Text = function Text(opt_options) {\r\n\r\n  var options = opt_options || {};\r\n\r\n  /**\r\n  * @private\r\n  * @type {string|undefined}\r\n  */\r\n  this.font_ = options.font;\r\n\r\n  /**\r\n  * @private\r\n  * @type {number|undefined}\r\n  */\r\n  this.rotation_ = options.rotation;\r\n\r\n  /**\r\n  * @private\r\n  * @type {boolean|undefined}\r\n  */\r\n  this.rotateWithView_ = options.rotateWithView;\r\n\r\n  /**\r\n  * @private\r\n  * @type {number|undefined}\r\n  */\r\n  this.scale_ = options.scale;\r\n\r\n  /**\r\n  * @private\r\n  * @type {string|undefined}\r\n  */\r\n  this.text_ = options.text;\r\n\r\n  /**\r\n  * @private\r\n  * @type {string|undefined}\r\n  */\r\n  this.textAlign_ = options.textAlign;\r\n\r\n  /**\r\n  * @private\r\n  * @type {string|undefined}\r\n  */\r\n  this.textBaseline_ = options.textBaseline;\r\n\r\n  /**\r\n  * @private\r\n  * @type {import(\"./Fill.js\").default}\r\n  */\r\n  this.fill_ = options.fill !== undefined ? options.fill :\r\n    new Fill({color: DEFAULT_FILL_COLOR});\r\n\r\n  /**\r\n  * @private\r\n  * @type {number}\r\n  */\r\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\r\n\r\n  /**\r\n  * @private\r\n  * @type {import(\"./TextPlacement.js\").default|string}\r\n  */\r\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\r\n\r\n  /**\r\n  * @private\r\n  * @type {boolean}\r\n  */\r\n  this.overflow_ = !!options.overflow;\r\n\r\n  /**\r\n  * @private\r\n  * @type {import(\"./Stroke.js\").default}\r\n  */\r\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\r\n\r\n  /**\r\n  * @private\r\n  * @type {number}\r\n  */\r\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\r\n\r\n  /**\r\n  * @private\r\n  * @type {number}\r\n  */\r\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\r\n\r\n  /**\r\n  * @private\r\n  * @type {import(\"./Fill.js\").default}\r\n  */\r\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\r\n\r\n  /**\r\n  * @private\r\n  * @type {import(\"./Stroke.js\").default}\r\n  */\r\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\r\n\r\n  /**\r\n  * @private\r\n  * @type {Array<number>}\r\n  */\r\n  this.padding_ = options.padding === undefined ? null : options.padding;\r\n};\r\n\r\n/**\r\n* Clones the style.\r\n* @return {Text} The cloned style.\r\n* @api\r\n*/\r\nText.prototype.clone = function clone () {\r\n  return new Text({\r\n    font: this.getFont(),\r\n    placement: this.getPlacement(),\r\n    maxAngle: this.getMaxAngle(),\r\n    overflow: this.getOverflow(),\r\n    rotation: this.getRotation(),\r\n    rotateWithView: this.getRotateWithView(),\r\n    scale: this.getScale(),\r\n    text: this.getText(),\r\n    textAlign: this.getTextAlign(),\r\n    textBaseline: this.getTextBaseline(),\r\n    fill: this.getFill() ? this.getFill().clone() : undefined,\r\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\r\n    offsetX: this.getOffsetX(),\r\n    offsetY: this.getOffsetY(),\r\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\r\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\r\n  });\r\n};\r\n\r\n/**\r\n* Get the `overflow` configuration.\r\n* @return {boolean} Let text overflow the length of the path they follow.\r\n* @api\r\n*/\r\nText.prototype.getOverflow = function getOverflow () {\r\n  return this.overflow_;\r\n};\r\n\r\n/**\r\n* Get the font name.\r\n* @return {string|undefined} Font.\r\n* @api\r\n*/\r\nText.prototype.getFont = function getFont () {\r\n  return this.font_;\r\n};\r\n\r\n/**\r\n* Get the maximum angle between adjacent characters.\r\n* @return {number} Angle in radians.\r\n* @api\r\n*/\r\nText.prototype.getMaxAngle = function getMaxAngle () {\r\n  return this.maxAngle_;\r\n};\r\n\r\n/**\r\n* Get the label placement.\r\n* @return {import(\"./TextPlacement.js\").default|string} Text placement.\r\n* @api\r\n*/\r\nText.prototype.getPlacement = function getPlacement () {\r\n  return this.placement_;\r\n};\r\n\r\n/**\r\n* Get the x-offset for the text.\r\n* @return {number} Horizontal text offset.\r\n* @api\r\n*/\r\nText.prototype.getOffsetX = function getOffsetX () {\r\n  return this.offsetX_;\r\n};\r\n\r\n/**\r\n* Get the y-offset for the text.\r\n* @return {number} Vertical text offset.\r\n* @api\r\n*/\r\nText.prototype.getOffsetY = function getOffsetY () {\r\n  return this.offsetY_;\r\n};\r\n\r\n/**\r\n* Get the fill style for the text.\r\n* @return {import(\"./Fill.js\").default} Fill style.\r\n* @api\r\n*/\r\nText.prototype.getFill = function getFill () {\r\n  return this.fill_;\r\n};\r\n\r\n/**\r\n* Determine whether the text rotates with the map.\r\n* @return {boolean|undefined} Rotate with map.\r\n* @api\r\n*/\r\nText.prototype.getRotateWithView = function getRotateWithView () {\r\n  return this.rotateWithView_;\r\n};\r\n\r\n/**\r\n* Get the text rotation.\r\n* @return {number|undefined} Rotation.\r\n* @api\r\n*/\r\nText.prototype.getRotation = function getRotation () {\r\n  return this.rotation_;\r\n};\r\n\r\n/**\r\n* Get the text scale.\r\n* @return {number|undefined} Scale.\r\n* @api\r\n*/\r\nText.prototype.getScale = function getScale () {\r\n  return this.scale_;\r\n};\r\n\r\n/**\r\n* Get the stroke style for the text.\r\n* @return {import(\"./Stroke.js\").default} Stroke style.\r\n* @api\r\n*/\r\nText.prototype.getStroke = function getStroke () {\r\n  return this.stroke_;\r\n};\r\n\r\n/**\r\n* Get the text to be rendered.\r\n* @return {string|undefined} Text.\r\n* @api\r\n*/\r\nText.prototype.getText = function getText () {\r\n  return this.text_;\r\n};\r\n\r\n/**\r\n* Get the text alignment.\r\n* @return {string|undefined} Text align.\r\n* @api\r\n*/\r\nText.prototype.getTextAlign = function getTextAlign () {\r\n  return this.textAlign_;\r\n};\r\n\r\n/**\r\n* Get the text baseline.\r\n* @return {string|undefined} Text baseline.\r\n* @api\r\n*/\r\nText.prototype.getTextBaseline = function getTextBaseline () {\r\n  return this.textBaseline_;\r\n};\r\n\r\n/**\r\n* Get the background fill style for the text.\r\n* @return {import(\"./Fill.js\").default} Fill style.\r\n* @api\r\n*/\r\nText.prototype.getBackgroundFill = function getBackgroundFill () {\r\n  return this.backgroundFill_;\r\n};\r\n\r\n/**\r\n* Get the background stroke style for the text.\r\n* @return {import(\"./Stroke.js\").default} Stroke style.\r\n* @api\r\n*/\r\nText.prototype.getBackgroundStroke = function getBackgroundStroke () {\r\n  return this.backgroundStroke_;\r\n};\r\n\r\n/**\r\n* Get the padding for the text.\r\n* @return {Array<number>} Padding.\r\n* @api\r\n*/\r\nText.prototype.getPadding = function getPadding () {\r\n  return this.padding_;\r\n};\r\n\r\n/**\r\n* Set the `overflow` property.\r\n*\r\n* @param {boolean} overflow Let text overflow the path that it follows.\r\n* @api\r\n*/\r\nText.prototype.setOverflow = function setOverflow (overflow) {\r\n  this.overflow_ = overflow;\r\n};\r\n\r\n/**\r\n* Set the font.\r\n*\r\n* @param {string|undefined} font Font.\r\n* @api\r\n*/\r\nText.prototype.setFont = function setFont (font) {\r\n  this.font_ = font;\r\n};\r\n\r\n/**\r\n* Set the maximum angle between adjacent characters.\r\n*\r\n* @param {number} maxAngle Angle in radians.\r\n* @api\r\n*/\r\nText.prototype.setMaxAngle = function setMaxAngle (maxAngle) {\r\n  this.maxAngle_ = maxAngle;\r\n};\r\n\r\n/**\r\n* Set the x offset.\r\n*\r\n* @param {number} offsetX Horizontal text offset.\r\n* @api\r\n*/\r\nText.prototype.setOffsetX = function setOffsetX (offsetX) {\r\n  this.offsetX_ = offsetX;\r\n};\r\n\r\n/**\r\n* Set the y offset.\r\n*\r\n* @param {number} offsetY Vertical text offset.\r\n* @api\r\n*/\r\nText.prototype.setOffsetY = function setOffsetY (offsetY) {\r\n  this.offsetY_ = offsetY;\r\n};\r\n\r\n/**\r\n* Set the text placement.\r\n*\r\n* @param {import(\"./TextPlacement.js\").default|string} placement Placement.\r\n* @api\r\n*/\r\nText.prototype.setPlacement = function setPlacement (placement) {\r\n  this.placement_ = placement;\r\n};\r\n\r\n/**\r\n* Set the fill.\r\n*\r\n* @param {import(\"./Fill.js\").default} fill Fill style.\r\n* @api\r\n*/\r\nText.prototype.setFill = function setFill (fill) {\r\n  this.fill_ = fill;\r\n};\r\n\r\n/**\r\n* Set the rotation.\r\n*\r\n* @param {number|undefined} rotation Rotation.\r\n* @api\r\n*/\r\nText.prototype.setRotation = function setRotation (rotation) {\r\n  this.rotation_ = rotation;\r\n};\r\n\r\n/**\r\n* Set the scale.\r\n*\r\n* @param {number|undefined} scale Scale.\r\n* @api\r\n*/\r\nText.prototype.setScale = function setScale (scale) {\r\n  this.scale_ = scale;\r\n};\r\n\r\n/**\r\n* Set the stroke.\r\n*\r\n* @param {import(\"./Stroke.js\").default} stroke Stroke style.\r\n* @api\r\n*/\r\nText.prototype.setStroke = function setStroke (stroke) {\r\n  this.stroke_ = stroke;\r\n};\r\n\r\n/**\r\n* Set the text.\r\n*\r\n* @param {string|undefined} text Text.\r\n* @api\r\n*/\r\nText.prototype.setText = function setText (text) {\r\n  this.text_ = text;\r\n};\r\n\r\n/**\r\n* Set the text alignment.\r\n*\r\n* @param {string|undefined} textAlign Text align.\r\n* @api\r\n*/\r\nText.prototype.setTextAlign = function setTextAlign (textAlign) {\r\n  this.textAlign_ = textAlign;\r\n};\r\n\r\n/**\r\n* Set the text baseline.\r\n*\r\n* @param {string|undefined} textBaseline Text baseline.\r\n* @api\r\n*/\r\nText.prototype.setTextBaseline = function setTextBaseline (textBaseline) {\r\n  this.textBaseline_ = textBaseline;\r\n};\r\n\r\n/**\r\n* Set the background fill.\r\n*\r\n* @param {import(\"./Fill.js\").default} fill Fill style.\r\n* @api\r\n*/\r\nText.prototype.setBackgroundFill = function setBackgroundFill (fill) {\r\n  this.backgroundFill_ = fill;\r\n};\r\n\r\n/**\r\n* Set the background stroke.\r\n*\r\n* @param {import(\"./Stroke.js\").default} stroke Stroke style.\r\n* @api\r\n*/\r\nText.prototype.setBackgroundStroke = function setBackgroundStroke (stroke) {\r\n  this.backgroundStroke_ = stroke;\r\n};\r\n\r\n/**\r\n* Set the padding (`[top, right, bottom, left]`).\r\n*\r\n* @param {!Array<number>} padding Padding.\r\n* @api\r\n*/\r\nText.prototype.setPadding = function setPadding (padding) {\r\n  this.padding_ = padding;\r\n};\r\n\r\nexport default Text;\r\n\r\n//# sourceMappingURL=Text.js.map","/**\r\n * @module ol/format/KML\r\n */\r\nimport Feature from '../Feature.js';\r\nimport {extend, includes} from '../array.js';\r\nimport {assert} from '../asserts.js';\r\nimport {asArray} from '../color.js';\r\nimport {transformWithOptions} from './Feature.js';\r\nimport XMLFeature from './XMLFeature.js';\r\nimport {readDecimal, readBoolean, readString, writeStringTextNode, writeCDATASection, writeDecimalTextNode, writeBooleanTextNode} from './xsd.js';\r\nimport GeometryCollection from '../geom/GeometryCollection.js';\r\nimport GeometryLayout from '../geom/GeometryLayout.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport MultiLineString from '../geom/MultiLineString.js';\r\nimport MultiPoint from '../geom/MultiPoint.js';\r\nimport MultiPolygon from '../geom/MultiPolygon.js';\r\nimport Point from '../geom/Point.js';\r\nimport Polygon from '../geom/Polygon.js';\r\nimport {toRadians} from '../math.js';\r\nimport {get as getProjection} from '../proj.js';\r\nimport Fill from '../style/Fill.js';\r\nimport Icon from '../style/Icon.js';\r\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\r\nimport IconOrigin from '../style/IconOrigin.js';\r\nimport Stroke from '../style/Stroke.js';\r\nimport Style from '../style/Style.js';\r\nimport Text from '../style/Text.js';\r\nimport {createElementNS, getAllTextContent, isDocument, makeArrayExtender,\r\n  makeArrayPusher, makeChildAppender, makeObjectPropertySetter,\r\n  makeReplacer, makeSequence, makeSimpleNodeFactory, makeStructureNS,\r\n  OBJECT_PROPERTY_NODE_FACTORY, parse, parseNode, pushParseAndPop,\r\n  pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\r\n\r\n/**\r\n * @typedef {Object} Vec2\r\n * @property {number} x\r\n * @property {IconAnchorUnits} xunits\r\n * @property {number} y\r\n * @property {IconAnchorUnits} yunits\r\n * @property {IconOrigin} origin\r\n */\r\n\r\n/**\r\n * @typedef {Object} GxTrackObject\r\n * @property {Array<number>} flatCoordinates\r\n * @property {Array<number>} whens\r\n */\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Array<string>}\r\n */\r\nvar GX_NAMESPACE_URIS = [\r\n  'http://www.google.com/kml/ext/2.2'\r\n];\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Array<null|string>}\r\n */\r\nvar NAMESPACE_URIS = [\r\n  null,\r\n  'http://earth.google.com/kml/2.0',\r\n  'http://earth.google.com/kml/2.1',\r\n  'http://earth.google.com/kml/2.2',\r\n  'http://www.opengis.net/kml/2.2'\r\n];\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nvar SCHEMA_LOCATION = 'http://www.opengis.net/kml/2.2 ' +\r\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\r\n\r\n\r\n/**\r\n * @type {Object<string, IconAnchorUnits>}\r\n */\r\nvar ICON_ANCHOR_UNITS_MAP = {\r\n  'fraction': IconAnchorUnits.FRACTION,\r\n  'pixels': IconAnchorUnits.PIXELS,\r\n  'insetPixels': IconAnchorUnits.PIXELS\r\n};\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar PLACEMARK_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'ExtendedData': extendedDataParser,\r\n    'Region': regionParser,\r\n    'MultiGeometry': makeObjectPropertySetter(\r\n      readMultiGeometry, 'geometry'),\r\n    'LineString': makeObjectPropertySetter(\r\n      readLineString, 'geometry'),\r\n    'LinearRing': makeObjectPropertySetter(\r\n      readLinearRing, 'geometry'),\r\n    'Point': makeObjectPropertySetter(\r\n      readPoint, 'geometry'),\r\n    'Polygon': makeObjectPropertySetter(\r\n      readPolygon, 'geometry'),\r\n    'Style': makeObjectPropertySetter(readStyle),\r\n    'StyleMap': placemarkStyleMapParser,\r\n    'address': makeObjectPropertySetter(readString),\r\n    'description': makeObjectPropertySetter(readString),\r\n    'name': makeObjectPropertySetter(readString),\r\n    'open': makeObjectPropertySetter(readBoolean),\r\n    'phoneNumber': makeObjectPropertySetter(readString),\r\n    'styleUrl': makeObjectPropertySetter(readURI),\r\n    'visibility': makeObjectPropertySetter(readBoolean)\r\n  }, makeStructureNS(\r\n    GX_NAMESPACE_URIS, {\r\n      'MultiTrack': makeObjectPropertySetter(\r\n        readGxMultiTrack, 'geometry'),\r\n      'Track': makeObjectPropertySetter(\r\n        readGxTrack, 'geometry')\r\n    }\r\n  ));\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar NETWORK_LINK_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'ExtendedData': extendedDataParser,\r\n    'Region': regionParser,\r\n    'Link': linkParser,\r\n    'address': makeObjectPropertySetter(readString),\r\n    'description': makeObjectPropertySetter(readString),\r\n    'name': makeObjectPropertySetter(readString),\r\n    'open': makeObjectPropertySetter(readBoolean),\r\n    'phoneNumber': makeObjectPropertySetter(readString),\r\n    'visibility': makeObjectPropertySetter(readBoolean)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar LINK_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'href': makeObjectPropertySetter(readURI)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar REGION_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'LatLonAltBox': latLonAltBoxParser,\r\n    'Lod': lodParser\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Array<string>>}\r\n */\r\nvar KML_SEQUENCE = makeStructureNS(\r\n  NAMESPACE_URIS, [\r\n    'Document', 'Placemark'\r\n  ]);\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar KML_SERIALIZERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Document': makeChildAppender(writeDocument),\r\n    'Placemark': makeChildAppender(writePlacemark)\r\n  });\r\n\r\n\r\n/**\r\n * @type {import(\"../color.js\").Color}\r\n */\r\nvar DEFAULT_COLOR;\r\n\r\n/**\r\n * @type {Fill}\r\n */\r\nvar DEFAULT_FILL_STYLE = null;\r\n\r\n/**\r\n * Get the default fill style (or null if not yet set).\r\n * @return {Fill} The default fill style.\r\n */\r\nexport function getDefaultFillStyle() {\r\n  return DEFAULT_FILL_STYLE;\r\n}\r\n\r\n/**\r\n * @type {import(\"../size.js\").Size}\r\n */\r\nvar DEFAULT_IMAGE_STYLE_ANCHOR;\r\n\r\n/**\r\n * @type {IconAnchorUnits}\r\n */\r\nvar DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\r\n\r\n/**\r\n * @type {IconAnchorUnits}\r\n */\r\nvar DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\r\n\r\n/**\r\n * @type {import(\"../size.js\").Size}\r\n */\r\nvar DEFAULT_IMAGE_STYLE_SIZE;\r\n\r\n/**\r\n * @type {string}\r\n */\r\nvar DEFAULT_IMAGE_STYLE_SRC;\r\n\r\n/**\r\n * @type {number}\r\n */\r\nvar DEFAULT_IMAGE_SCALE_MULTIPLIER;\r\n\r\n/**\r\n * @type {import(\"../style/Image.js\").default}\r\n */\r\nvar DEFAULT_IMAGE_STYLE = null;\r\n\r\n/**\r\n * Get the default image style (or null if not yet set).\r\n * @return {import(\"../style/Image.js\").default} The default image style.\r\n */\r\nexport function getDefaultImageStyle() {\r\n  return DEFAULT_IMAGE_STYLE;\r\n}\r\n\r\n/**\r\n * @type {string}\r\n */\r\nvar DEFAULT_NO_IMAGE_STYLE;\r\n\r\n/**\r\n * @type {Stroke}\r\n */\r\nvar DEFAULT_STROKE_STYLE = null;\r\n\r\n/**\r\n * Get the default stroke style (or null if not yet set).\r\n * @return {Stroke} The default stroke style.\r\n */\r\nexport function getDefaultStrokeStyle() {\r\n  return DEFAULT_STROKE_STYLE;\r\n}\r\n\r\n/**\r\n * @type {Stroke}\r\n */\r\nvar DEFAULT_TEXT_STROKE_STYLE;\r\n\r\n/**\r\n * @type {Text}\r\n */\r\nvar DEFAULT_TEXT_STYLE = null;\r\n\r\n/**\r\n * Get the default text style (or null if not yet set).\r\n * @return {Text} The default text style.\r\n */\r\nexport function getDefaultTextStyle() {\r\n  return DEFAULT_TEXT_STYLE;\r\n}\r\n\r\n/**\r\n * @type {Style}\r\n */\r\nvar DEFAULT_STYLE = null;\r\n\r\n/**\r\n * Get the default style (or null if not yet set).\r\n * @return {Style} The default style.\r\n */\r\nexport function getDefaultStyle() {\r\n  return DEFAULT_STYLE;\r\n}\r\n\r\n/**\r\n * @type {Array<Style>}\r\n */\r\nvar DEFAULT_STYLE_ARRAY = null;\r\n\r\n/**\r\n * Get the default style array (or null if not yet set).\r\n * @return {Array<Style>} The default style.\r\n */\r\nexport function getDefaultStyleArray() {\r\n  return DEFAULT_STYLE_ARRAY;\r\n}\r\n\r\n\r\nfunction createStyleDefaults() {\r\n\r\n  DEFAULT_COLOR = [255, 255, 255, 1];\r\n\r\n  DEFAULT_FILL_STYLE = new Fill({\r\n    color: DEFAULT_COLOR\r\n  });\r\n\r\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\r\n\r\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\r\n\r\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\r\n\r\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\r\n\r\n  DEFAULT_IMAGE_STYLE_SRC =\r\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\r\n\r\n  DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\r\n\r\n  DEFAULT_IMAGE_STYLE = new Icon({\r\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\r\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\r\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\r\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\r\n    crossOrigin: 'anonymous',\r\n    rotation: 0,\r\n    scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\r\n    size: DEFAULT_IMAGE_STYLE_SIZE,\r\n    src: DEFAULT_IMAGE_STYLE_SRC\r\n  });\r\n\r\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\r\n\r\n  DEFAULT_STROKE_STYLE = new Stroke({\r\n    color: DEFAULT_COLOR,\r\n    width: 1\r\n  });\r\n\r\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\r\n    color: [51, 51, 51, 1],\r\n    width: 2\r\n  });\r\n\r\n  DEFAULT_TEXT_STYLE = new Text({\r\n    font: 'bold 16px Helvetica',\r\n    fill: DEFAULT_FILL_STYLE,\r\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\r\n    scale: 0.8\r\n  });\r\n\r\n  DEFAULT_STYLE = new Style({\r\n    fill: DEFAULT_FILL_STYLE,\r\n    image: DEFAULT_IMAGE_STYLE,\r\n    text: DEFAULT_TEXT_STYLE,\r\n    stroke: DEFAULT_STROKE_STYLE,\r\n    zIndex: 0\r\n  });\r\n\r\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\r\n\r\n}\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\r\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\r\n * @property {Array<Style>} [defaultStyle] Default style. The\r\n * default default style is the same as Google Earth.\r\n * @property {boolean} [writeStyles=true] Write styles into KML.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Feature format for reading and writing data in the KML format.\r\n *\r\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\r\n * a KML source.\r\n *\r\n * MultiGeometries are converted into GeometryCollections if they are a mix of\r\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\r\n * all of the same type.\r\n *\r\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\r\n * which do not support this will need a URL polyfill to be loaded before use.\r\n *\r\n * @api\r\n */\r\nvar KML = /*@__PURE__*/(function (XMLFeature) {\n  function KML(opt_options) {\r\n    XMLFeature.call(this);\r\n\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    if (!DEFAULT_STYLE_ARRAY) {\r\n      createStyleDefaults();\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    this.dataProjection = getProjection('EPSG:4326');\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<Style>}\r\n     */\r\n    this.defaultStyle_ = options.defaultStyle ?\r\n      options.defaultStyle : DEFAULT_STYLE_ARRAY;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.extractStyles_ = options.extractStyles !== undefined ?\r\n      options.extractStyles : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.writeStyles_ = options.writeStyles !== undefined ?\r\n      options.writeStyles : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, (Array<Style>|string)>}\r\n     */\r\n    this.sharedStyles_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.showPointNames_ = options.showPointNames !== undefined ?\r\n      options.showPointNames : true;\r\n\r\n  }\n\n  if ( XMLFeature ) KML.__proto__ = XMLFeature;\n  KML.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  KML.prototype.constructor = KML;\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {Array<Feature>|undefined} Features.\r\n   */\r\n  KML.prototype.readDocumentOrFolder_ = function readDocumentOrFolder_ (node, objectStack) {\r\n    // FIXME use scope somehow\r\n    var parsersNS = makeStructureNS(\r\n      NAMESPACE_URIS, {\r\n        'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\r\n        'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\r\n        'Placemark': makeArrayPusher(this.readPlacemark_, this),\r\n        'Style': this.readSharedStyle_.bind(this),\r\n        'StyleMap': this.readSharedStyleMap_.bind(this)\r\n      });\r\n    /** @type {Array<Feature>} */\r\n    var features = pushParseAndPop([], parsersNS, node, objectStack, this);\r\n    if (features) {\r\n      return features;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {Feature|undefined} Feature.\r\n   */\r\n  KML.prototype.readPlacemark_ = function readPlacemark_ (node, objectStack) {\r\n    var object = pushParseAndPop({'geometry': null},\r\n      PLACEMARK_PARSERS, node, objectStack);\r\n    if (!object) {\r\n      return undefined;\r\n    }\r\n    var feature = new Feature();\r\n    var id = node.getAttribute('id');\r\n    if (id !== null) {\r\n      feature.setId(id);\r\n    }\r\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\r\n\r\n    var geometry = object['geometry'];\r\n    if (geometry) {\r\n      transformWithOptions(geometry, false, options);\r\n    }\r\n    feature.setGeometry(geometry);\r\n    delete object['geometry'];\r\n\r\n    if (this.extractStyles_) {\r\n      var style = object['Style'];\r\n      var styleUrl = object['styleUrl'];\r\n      var styleFunction = createFeatureStyleFunction(\r\n        style, styleUrl, this.defaultStyle_, this.sharedStyles_,\r\n        this.showPointNames_);\r\n      feature.setStyle(styleFunction);\r\n    }\r\n    delete object['Style'];\r\n    // we do not remove the styleUrl property from the object, so it\r\n    // gets stored on feature when setProperties is called\r\n\r\n    feature.setProperties(object);\r\n\r\n    return feature;\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   */\r\n  KML.prototype.readSharedStyle_ = function readSharedStyle_ (node, objectStack) {\r\n    var id = node.getAttribute('id');\r\n    if (id !== null) {\r\n      var style = readStyle(node, objectStack);\r\n      if (style) {\r\n        var styleUri;\r\n        var baseURI = node.baseURI;\r\n        if (!baseURI || baseURI == 'about:blank') {\r\n          baseURI = window.location.href;\r\n        }\r\n        if (baseURI) {\r\n          var url = new URL('#' + id, baseURI);\r\n          styleUri = url.href;\r\n        } else {\r\n          styleUri = '#' + id;\r\n        }\r\n        this.sharedStyles_[styleUri] = style;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   */\r\n  KML.prototype.readSharedStyleMap_ = function readSharedStyleMap_ (node, objectStack) {\r\n    var id = node.getAttribute('id');\r\n    if (id === null) {\r\n      return;\r\n    }\r\n    var styleMapValue = readStyleMapValue(node, objectStack);\r\n    if (!styleMapValue) {\r\n      return;\r\n    }\r\n    var styleUri;\r\n    var baseURI = node.baseURI;\r\n    if (!baseURI || baseURI == 'about:blank') {\r\n      baseURI = window.location.href;\r\n    }\r\n    if (baseURI) {\r\n      var url = new URL('#' + id, baseURI);\r\n      styleUri = url.href;\r\n    } else {\r\n      styleUri = '#' + id;\r\n    }\r\n    this.sharedStyles_[styleUri] = styleMapValue;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  KML.prototype.readFeatureFromNode = function readFeatureFromNode (node, opt_options) {\r\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\r\n      return null;\r\n    }\r\n    var feature = this.readPlacemark_(\r\n      node, [this.getReadOptions(node, opt_options)]);\r\n    if (feature) {\r\n      return feature;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  KML.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\r\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\r\n      return [];\r\n    }\r\n    var features;\r\n    var localName = node.localName;\r\n    if (localName == 'Document' || localName == 'Folder') {\r\n      features = this.readDocumentOrFolder_(\r\n        node, [this.getReadOptions(node, opt_options)]);\r\n      if (features) {\r\n        return features;\r\n      } else {\r\n        return [];\r\n      }\r\n    } else if (localName == 'Placemark') {\r\n      var feature = this.readPlacemark_(\r\n        node, [this.getReadOptions(node, opt_options)]);\r\n      if (feature) {\r\n        return [feature];\r\n      } else {\r\n        return [];\r\n      }\r\n    } else if (localName == 'kml') {\r\n      features = [];\r\n      for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\r\n        var fs = this.readFeaturesFromNode(n, opt_options);\r\n        if (fs) {\r\n          extend(features, fs);\r\n        }\r\n      }\r\n      return features;\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Read the name of the KML.\r\n   *\r\n   * @param {Document|Element|string} source Source.\r\n   * @return {string|undefined} Name.\r\n   * @api\r\n   */\r\n  KML.prototype.readName = function readName (source) {\r\n    if (!source) {\r\n      return undefined;\r\n    } else if (typeof source === 'string') {\r\n      var doc = parse(source);\r\n      return this.readNameFromDocument(doc);\r\n    } else if (isDocument(source)) {\r\n      return this.readNameFromDocument(/** @type {Document} */ (source));\r\n    } else {\r\n      return this.readNameFromNode(/** @type {Element} */ (source));\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Document} doc Document.\r\n   * @return {string|undefined} Name.\r\n   */\r\n  KML.prototype.readNameFromDocument = function readNameFromDocument (doc) {\r\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\r\n      if (n.nodeType == Node.ELEMENT_NODE) {\r\n        var name = this.readNameFromNode(/** @type {Element} */ (n));\r\n        if (name) {\r\n          return name;\r\n        }\r\n      }\r\n    }\r\n    return undefined;\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @return {string|undefined} Name.\r\n   */\r\n  KML.prototype.readNameFromNode = function readNameFromNode (node) {\r\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\r\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\r\n          n.localName == 'name') {\r\n        return readString(n);\r\n      }\r\n    }\r\n    for (var n$1 = node.firstElementChild; n$1; n$1 = n$1.nextElementSibling) {\r\n      var localName = n$1.localName;\r\n      if (includes(NAMESPACE_URIS, n$1.namespaceURI) &&\r\n          (localName == 'Document' ||\r\n           localName == 'Folder' ||\r\n           localName == 'Placemark' ||\r\n           localName == 'kml')) {\r\n        var name = this.readNameFromNode(n$1);\r\n        if (name) {\r\n          return name;\r\n        }\r\n      }\r\n    }\r\n    return undefined;\r\n  };\r\n\r\n  /**\r\n   * Read the network links of the KML.\r\n   *\r\n   * @param {Document|Element|string} source Source.\r\n   * @return {Array<Object>} Network links.\r\n   * @api\r\n   */\r\n  KML.prototype.readNetworkLinks = function readNetworkLinks (source) {\r\n    var networkLinks = [];\r\n    if (typeof source === 'string') {\r\n      var doc = parse(source);\r\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\r\n    } else if (isDocument(source)) {\r\n      extend(networkLinks, this.readNetworkLinksFromDocument(\r\n        /** @type {Document} */ (source)));\r\n    } else {\r\n      extend(networkLinks, this.readNetworkLinksFromNode(\r\n        /** @type {Element} */ (source)));\r\n    }\r\n    return networkLinks;\r\n  };\r\n\r\n  /**\r\n   * @param {Document} doc Document.\r\n   * @return {Array<Object>} Network links.\r\n   */\r\n  KML.prototype.readNetworkLinksFromDocument = function readNetworkLinksFromDocument (doc) {\r\n    var networkLinks = [];\r\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\r\n      if (n.nodeType == Node.ELEMENT_NODE) {\r\n        extend(networkLinks, this.readNetworkLinksFromNode(/** @type {Element} */ (n)));\r\n      }\r\n    }\r\n    return networkLinks;\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @return {Array<Object>} Network links.\r\n   */\r\n  KML.prototype.readNetworkLinksFromNode = function readNetworkLinksFromNode (node) {\r\n    var networkLinks = [];\r\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\r\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\r\n          n.localName == 'NetworkLink') {\r\n        var obj = pushParseAndPop({}, NETWORK_LINK_PARSERS,\r\n          n, []);\r\n        networkLinks.push(obj);\r\n      }\r\n    }\r\n    for (var n$1 = node.firstElementChild; n$1; n$1 = n$1.nextElementSibling) {\r\n      var localName = n$1.localName;\r\n      if (includes(NAMESPACE_URIS, n$1.namespaceURI) &&\r\n          (localName == 'Document' ||\r\n           localName == 'Folder' ||\r\n           localName == 'kml')) {\r\n        extend(networkLinks, this.readNetworkLinksFromNode(n$1));\r\n      }\r\n    }\r\n    return networkLinks;\r\n  };\r\n\r\n  /**\r\n   * Read the regions of the KML.\r\n   *\r\n   * @param {Document|Element|string} source Source.\r\n   * @return {Array<Object>} Regions.\r\n   * @api\r\n   */\r\n  KML.prototype.readRegion = function readRegion (source) {\r\n    var regions = [];\r\n    if (typeof source === 'string') {\r\n      var doc = parse(source);\r\n      extend(regions, this.readRegionFromDocument(doc));\r\n    } else if (isDocument(source)) {\r\n      extend(regions, this.readRegionFromDocument(\r\n        /** @type {Document} */ (source)));\r\n    } else {\r\n      extend(regions, this.readRegionFromNode(\r\n        /** @type {Element} */ (source)));\r\n    }\r\n    return regions;\r\n  };\r\n\r\n  /**\r\n   * @param {Document} doc Document.\r\n   * @return {Array<Object>} Region.\r\n   */\r\n  KML.prototype.readRegionFromDocument = function readRegionFromDocument (doc) {\r\n    var regions = [];\r\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\r\n      if (n.nodeType == Node.ELEMENT_NODE) {\r\n        extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\r\n      }\r\n    }\r\n    return regions;\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @return {Array<Object>} Region.\r\n   * @api\r\n   */\r\n  KML.prototype.readRegionFromNode = function readRegionFromNode (node) {\r\n    var regions = [];\r\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\r\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\r\n          n.localName == 'Region') {\r\n        var obj = pushParseAndPop({}, REGION_PARSERS,\r\n          n, []);\r\n        regions.push(obj);\r\n      }\r\n    }\r\n    for (var n$1 = node.firstElementChild; n$1; n$1 = n$1.nextElementSibling) {\r\n      var localName = n$1.localName;\r\n      if (includes(NAMESPACE_URIS, n$1.namespaceURI) &&\r\n          (localName == 'Document' ||\r\n           localName == 'Folder' ||\r\n           localName == 'kml')) {\r\n        extend(regions, this.readRegionFromNode(n$1));\r\n      }\r\n    }\r\n    return regions;\r\n  };\r\n\r\n  /**\r\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\r\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\r\n   *\r\n   * @param {Array<Feature>} features Features.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\r\n   * @return {Node} Node.\r\n   * @override\r\n   * @api\r\n   */\r\n  KML.prototype.writeFeaturesNode = function writeFeaturesNode (features, opt_options) {\r\n    opt_options = this.adaptOptions(opt_options);\r\n    var kml = createElementNS(NAMESPACE_URIS[4], 'kml');\r\n    var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\r\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\r\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\r\n    kml.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\r\n\r\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: kml};\r\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\r\n    var properties = {};\r\n    if (features.length > 1) {\r\n      properties['Document'] = features;\r\n    } else if (features.length == 1) {\r\n      properties['Placemark'] = features[0];\r\n    }\r\n    var orderedKeys = KML_SEQUENCE[kml.namespaceURI];\r\n    var values = makeSequence(properties, orderedKeys);\r\n    pushSerializeAndPop(context, KML_SERIALIZERS,\r\n      OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\r\n      this);\r\n    return kml;\r\n  };\n\n  return KML;\n}(XMLFeature));\r\n\r\n\r\n/**\r\n * @param {Style|undefined} foundStyle Style.\r\n * @param {string} name Name.\r\n * @return {Style} style Style.\r\n */\r\nfunction createNameStyleFunction(foundStyle, name) {\r\n  var textStyle = null;\r\n  var textOffset = [0, 0];\r\n  var textAlign = 'start';\r\n  if (foundStyle.getImage()) {\r\n    var imageSize = foundStyle.getImage().getImageSize();\r\n    if (imageSize === null) {\r\n      imageSize = DEFAULT_IMAGE_STYLE_SIZE;\r\n    }\r\n    if (imageSize.length == 2) {\r\n      var imageScale = foundStyle.getImage().getScale();\r\n      // Offset the label to be centered to the right of the icon, if there is\r\n      // one.\r\n      textOffset[0] = imageScale * imageSize[0] / 2;\r\n      textOffset[1] = -imageScale * imageSize[1] / 2;\r\n      textAlign = 'left';\r\n    }\r\n  }\r\n  if (foundStyle.getText() !== null) {\r\n    // clone the text style, customizing it with name, alignments and offset.\r\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\r\n    var foundText = foundStyle.getText();\r\n    textStyle = foundText.clone();\r\n    textStyle.setFont(foundText.getFont() || DEFAULT_TEXT_STYLE.getFont());\r\n    textStyle.setScale(foundText.getScale() || DEFAULT_TEXT_STYLE.getScale());\r\n    textStyle.setFill(foundText.getFill() || DEFAULT_TEXT_STYLE.getFill());\r\n    textStyle.setStroke(foundText.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\r\n  } else {\r\n    textStyle = DEFAULT_TEXT_STYLE.clone();\r\n  }\r\n  textStyle.setText(name);\r\n  textStyle.setOffsetX(textOffset[0]);\r\n  textStyle.setOffsetY(textOffset[1]);\r\n  textStyle.setTextAlign(textAlign);\r\n\r\n  var nameStyle = new Style({\r\n    text: textStyle\r\n  });\r\n  return nameStyle;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<Style>|undefined} style Style.\r\n * @param {string} styleUrl Style URL.\r\n * @param {Array<Style>} defaultStyle Default style.\r\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\r\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\r\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\r\n */\r\nfunction createFeatureStyleFunction(style, styleUrl, defaultStyle, sharedStyles, showPointNames) {\r\n\r\n  return (\r\n    /**\r\n     * @param {Feature} feature feature.\r\n     * @param {number} resolution Resolution.\r\n     * @return {Array<Style>} Style.\r\n     */\r\n    function(feature, resolution) {\r\n      var drawName = showPointNames;\r\n      /** @type {Style|undefined} */\r\n      var nameStyle;\r\n      var name = '';\r\n      if (drawName) {\r\n        var geometry = feature.getGeometry();\r\n        if (geometry) {\r\n          drawName = geometry.getType() === GeometryType.POINT;\r\n        }\r\n      }\r\n\r\n      if (drawName) {\r\n        name = /** @type {string} */ (feature.get('name'));\r\n        drawName = drawName && !!name;\r\n      }\r\n\r\n      if (style) {\r\n        if (drawName) {\r\n          nameStyle = createNameStyleFunction(style[0], name);\r\n          return style.concat(nameStyle);\r\n        }\r\n        return style;\r\n      }\r\n      if (styleUrl) {\r\n        var foundStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\r\n        if (drawName) {\r\n          nameStyle = createNameStyleFunction(foundStyle[0], name);\r\n          return foundStyle.concat(nameStyle);\r\n        }\r\n        return foundStyle;\r\n      }\r\n      if (drawName) {\r\n        nameStyle = createNameStyleFunction(defaultStyle[0], name);\r\n        return defaultStyle.concat(nameStyle);\r\n      }\r\n      return defaultStyle;\r\n    }\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<Style>|string|undefined} styleValue Style value.\r\n * @param {Array<Style>} defaultStyle Default style.\r\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\r\n * Shared styles.\r\n * @return {Array<Style>} Style.\r\n */\r\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\r\n  if (Array.isArray(styleValue)) {\r\n    return styleValue;\r\n  } else if (typeof styleValue === 'string') {\r\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\r\n    // defined in the same document.  Add a leading `#` if it enables to find\r\n    // a style.\r\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\r\n      styleValue = '#' + styleValue;\r\n    }\r\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\r\n  } else {\r\n    return defaultStyle;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @return {import(\"../color.js\").Color|undefined} Color.\r\n */\r\nfunction readColor(node) {\r\n  var s = getAllTextContent(node, false);\r\n  // The KML specification states that colors should not include a leading `#`\r\n  // but we tolerate them.\r\n  var m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\r\n  if (m) {\r\n    var hexColor = m[1];\r\n    return [\r\n      parseInt(hexColor.substr(6, 2), 16),\r\n      parseInt(hexColor.substr(4, 2), 16),\r\n      parseInt(hexColor.substr(2, 2), 16),\r\n      parseInt(hexColor.substr(0, 2), 16) / 255\r\n    ];\r\n\r\n  } else {\r\n    return undefined;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @return {Array<number>|undefined} Flat coordinates.\r\n */\r\nexport function readFlatCoordinates(node) {\r\n  var s = getAllTextContent(node, false);\r\n  var flatCoordinates = [];\r\n  // The KML specification states that coordinate tuples should not include\r\n  // spaces, but we tolerate them.\r\n  var re =\r\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\r\n  var m;\r\n  while ((m = re.exec(s))) {\r\n    var x = parseFloat(m[1]);\r\n    var y = parseFloat(m[2]);\r\n    var z = m[3] ? parseFloat(m[3]) : 0;\r\n    flatCoordinates.push(x, y, z);\r\n    s = s.substr(m[0].length);\r\n  }\r\n  if (s !== '') {\r\n    return undefined;\r\n  }\r\n  return flatCoordinates;\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @return {string} URI.\r\n */\r\nfunction readURI(node) {\r\n  var s = getAllTextContent(node, false).trim();\r\n  var baseURI = node.baseURI;\r\n  if (!baseURI || baseURI == 'about:blank') {\r\n    baseURI = window.location.href;\r\n  }\r\n  if (baseURI) {\r\n    var url = new URL(s, baseURI);\r\n    return url.href;\r\n  } else {\r\n    return s;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @return {Vec2} Vec2.\r\n */\r\nfunction readVec2(node) {\r\n  var xunits = node.getAttribute('xunits');\r\n  var yunits = node.getAttribute('yunits');\r\n  var origin;\r\n  if (xunits !== 'insetPixels') {\r\n    if (yunits !== 'insetPixels') {\r\n      origin = IconOrigin.BOTTOM_LEFT;\r\n    } else {\r\n      origin = IconOrigin.TOP_LEFT;\r\n    }\r\n  } else {\r\n    if (yunits !== 'insetPixels') {\r\n      origin = IconOrigin.BOTTOM_RIGHT;\r\n    } else {\r\n      origin = IconOrigin.TOP_RIGHT;\r\n    }\r\n  }\r\n  return {\r\n    x: parseFloat(node.getAttribute('x')),\r\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\r\n    y: parseFloat(node.getAttribute('y')),\r\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\r\n    origin: origin\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @return {number|undefined} Scale.\r\n */\r\nfunction readScale(node) {\r\n  return readDecimal(node);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar STYLE_MAP_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Pair': pairDataParser\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Array<Style>|string|undefined} StyleMap.\r\n */\r\nfunction readStyleMapValue(node, objectStack) {\r\n  return pushParseAndPop(undefined,\r\n    STYLE_MAP_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar ICON_STYLE_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Icon': makeObjectPropertySetter(readIcon),\r\n    'heading': makeObjectPropertySetter(readDecimal),\r\n    'hotSpot': makeObjectPropertySetter(readVec2),\r\n    'scale': makeObjectPropertySetter(readScale)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction iconStyleParser(node, objectStack) {\r\n  // FIXME refreshMode\r\n  // FIXME refreshInterval\r\n  // FIXME viewRefreshTime\r\n  // FIXME viewBoundScale\r\n  // FIXME viewFormat\r\n  // FIXME httpQuery\r\n  var object = pushParseAndPop(\r\n    {}, ICON_STYLE_PARSERS, node, objectStack);\r\n  if (!object) {\r\n    return;\r\n  }\r\n  var styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n  var IconObject = 'Icon' in object ? object['Icon'] : {};\r\n  var drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\r\n  var src;\r\n  var href = /** @type {string|undefined} */\r\n      (IconObject['href']);\r\n  if (href) {\r\n    src = href;\r\n  } else if (drawIcon) {\r\n    src = DEFAULT_IMAGE_STYLE_SRC;\r\n  }\r\n  var anchor, anchorXUnits, anchorYUnits;\r\n  var anchorOrigin = IconOrigin.BOTTOM_LEFT;\r\n  var hotSpot = /** @type {Vec2|undefined} */\r\n      (object['hotSpot']);\r\n  if (hotSpot) {\r\n    anchor = [hotSpot.x, hotSpot.y];\r\n    anchorXUnits = hotSpot.xunits;\r\n    anchorYUnits = hotSpot.yunits;\r\n    anchorOrigin = hotSpot.origin;\r\n  } else if (src === DEFAULT_IMAGE_STYLE_SRC) {\r\n    anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\r\n    anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\r\n    anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\r\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\r\n    anchor = [0.5, 0];\r\n    anchorXUnits = IconAnchorUnits.FRACTION;\r\n    anchorYUnits = IconAnchorUnits.FRACTION;\r\n  }\r\n\r\n  var offset;\r\n  var x = /** @type {number|undefined} */\r\n      (IconObject['x']);\r\n  var y = /** @type {number|undefined} */\r\n      (IconObject['y']);\r\n  if (x !== undefined && y !== undefined) {\r\n    offset = [x, y];\r\n  }\r\n\r\n  var size;\r\n  var w = /** @type {number|undefined} */\r\n      (IconObject['w']);\r\n  var h = /** @type {number|undefined} */\r\n      (IconObject['h']);\r\n  if (w !== undefined && h !== undefined) {\r\n    size = [w, h];\r\n  }\r\n\r\n  var rotation;\r\n  var heading = /** @type {number} */\r\n      (object['heading']);\r\n  if (heading !== undefined) {\r\n    rotation = toRadians(heading);\r\n  }\r\n\r\n  var scale = /** @type {number|undefined} */\r\n      (object['scale']);\r\n\r\n  if (drawIcon) {\r\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\r\n      size = DEFAULT_IMAGE_STYLE_SIZE;\r\n      if (scale === undefined) {\r\n        scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\r\n      }\r\n    }\r\n\r\n    var imageStyle = new Icon({\r\n      anchor: anchor,\r\n      anchorOrigin: anchorOrigin,\r\n      anchorXUnits: anchorXUnits,\r\n      anchorYUnits: anchorYUnits,\r\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\r\n      offset: offset,\r\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\r\n      rotation: rotation,\r\n      scale: scale,\r\n      size: size,\r\n      src: src\r\n    });\r\n    styleObject['imageStyle'] = imageStyle;\r\n  } else {\r\n    // handle the case when we explicitly want to draw no icon.\r\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar LABEL_STYLE_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'color': makeObjectPropertySetter(readColor),\r\n    'scale': makeObjectPropertySetter(readScale)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction labelStyleParser(node, objectStack) {\r\n  // FIXME colorMode\r\n  var object = pushParseAndPop(\r\n    {}, LABEL_STYLE_PARSERS, node, objectStack);\r\n  if (!object) {\r\n    return;\r\n  }\r\n  var styleObject = objectStack[objectStack.length - 1];\r\n  var textStyle = new Text({\r\n    fill: new Fill({\r\n      color: /** @type {import(\"../color.js\").Color} */\r\n          ('color' in object ? object['color'] : DEFAULT_COLOR)\r\n    }),\r\n    scale: /** @type {number|undefined} */\r\n        (object['scale'])\r\n  });\r\n  styleObject['textStyle'] = textStyle;\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar LINE_STYLE_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'color': makeObjectPropertySetter(readColor),\r\n    'width': makeObjectPropertySetter(readDecimal)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction lineStyleParser(node, objectStack) {\r\n  // FIXME colorMode\r\n  // FIXME gx:outerColor\r\n  // FIXME gx:outerWidth\r\n  // FIXME gx:physicalWidth\r\n  // FIXME gx:labelVisibility\r\n  var object = pushParseAndPop(\r\n    {}, LINE_STYLE_PARSERS, node, objectStack);\r\n  if (!object) {\r\n    return;\r\n  }\r\n  var styleObject = objectStack[objectStack.length - 1];\r\n  var strokeStyle = new Stroke({\r\n    color: /** @type {import(\"../color.js\").Color} */\r\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\r\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\r\n  });\r\n  styleObject['strokeStyle'] = strokeStyle;\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar POLY_STYLE_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'color': makeObjectPropertySetter(readColor),\r\n    'fill': makeObjectPropertySetter(readBoolean),\r\n    'outline': makeObjectPropertySetter(readBoolean)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction polyStyleParser(node, objectStack) {\r\n  // FIXME colorMode\r\n  var object = pushParseAndPop(\r\n    {}, POLY_STYLE_PARSERS, node, objectStack);\r\n  if (!object) {\r\n    return;\r\n  }\r\n  var styleObject = objectStack[objectStack.length - 1];\r\n  var fillStyle = new Fill({\r\n    color: /** @type {import(\"../color.js\").Color} */\r\n        ('color' in object ? object['color'] : DEFAULT_COLOR)\r\n  });\r\n  styleObject['fillStyle'] = fillStyle;\r\n  var fill = /** @type {boolean|undefined} */ (object['fill']);\r\n  if (fill !== undefined) {\r\n    styleObject['fill'] = fill;\r\n  }\r\n  var outline = /** @type {boolean|undefined} */ (object['outline']);\r\n  if (outline !== undefined) {\r\n    styleObject['outline'] = outline;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar FLAT_LINEAR_RING_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'coordinates': makeReplacer(readFlatCoordinates)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Array<number>} LinearRing flat coordinates.\r\n */\r\nfunction readFlatLinearRing(node, objectStack) {\r\n  return pushParseAndPop(null,\r\n    FLAT_LINEAR_RING_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction gxCoordParser(node, objectStack) {\r\n  var gxTrackObject = /** @type {GxTrackObject} */\r\n      (objectStack[objectStack.length - 1]);\r\n  var flatCoordinates = gxTrackObject.flatCoordinates;\r\n  var s = getAllTextContent(node, false);\r\n  var re =\r\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\r\n  var m = re.exec(s);\r\n  if (m) {\r\n    var x = parseFloat(m[1]);\r\n    var y = parseFloat(m[2]);\r\n    var z = parseFloat(m[3]);\r\n    flatCoordinates.push(x, y, z, 0);\r\n  } else {\r\n    flatCoordinates.push(0, 0, 0, 0);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(\r\n  GX_NAMESPACE_URIS, {\r\n    'Track': makeArrayPusher(readGxTrack)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {MultiLineString|undefined} MultiLineString.\r\n */\r\nfunction readGxMultiTrack(node, objectStack) {\r\n  var lineStrings = pushParseAndPop([],\r\n    GX_MULTITRACK_GEOMETRY_PARSERS, node, objectStack);\r\n  if (!lineStrings) {\r\n    return undefined;\r\n  }\r\n  return new MultiLineString(lineStrings);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar GX_TRACK_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'when': whenParser\r\n  }, makeStructureNS(\r\n    GX_NAMESPACE_URIS, {\r\n      'coord': gxCoordParser\r\n    }));\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {LineString|undefined} LineString.\r\n */\r\nfunction readGxTrack(node, objectStack) {\r\n  var gxTrackObject = pushParseAndPop(\r\n    /** @type {GxTrackObject} */ ({\r\n      flatCoordinates: [],\r\n      whens: []\r\n    }), GX_TRACK_PARSERS, node, objectStack);\r\n  if (!gxTrackObject) {\r\n    return undefined;\r\n  }\r\n  var flatCoordinates = gxTrackObject.flatCoordinates;\r\n  var whens = gxTrackObject.whens;\r\n  for (var i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii; ++i) {\r\n    flatCoordinates[4 * i + 3] = whens[i];\r\n  }\r\n  return new LineString(flatCoordinates, GeometryLayout.XYZM);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar ICON_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'href': makeObjectPropertySetter(readURI)\r\n  }, makeStructureNS(\r\n    GX_NAMESPACE_URIS, {\r\n      'x': makeObjectPropertySetter(readDecimal),\r\n      'y': makeObjectPropertySetter(readDecimal),\r\n      'w': makeObjectPropertySetter(readDecimal),\r\n      'h': makeObjectPropertySetter(readDecimal)\r\n    }));\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object} Icon object.\r\n */\r\nfunction readIcon(node, objectStack) {\r\n  var iconObject = pushParseAndPop(\r\n    {}, ICON_PARSERS, node, objectStack);\r\n  if (iconObject) {\r\n    return iconObject;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'coordinates': makeReplacer(readFlatCoordinates)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Array<number>} Flat coordinates.\r\n */\r\nfunction readFlatCoordinatesFromNode(node, objectStack) {\r\n  return pushParseAndPop(null,\r\n    GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'extrude': makeObjectPropertySetter(readBoolean),\r\n    'tessellate': makeObjectPropertySetter(readBoolean),\r\n    'altitudeMode': makeObjectPropertySetter(readString)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {LineString|undefined} LineString.\r\n */\r\nfunction readLineString(node, objectStack) {\r\n  var properties = pushParseAndPop({},\r\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\r\n    objectStack);\r\n  var flatCoordinates =\r\n      readFlatCoordinatesFromNode(node, objectStack);\r\n  if (flatCoordinates) {\r\n    var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\r\n    lineString.setProperties(properties);\r\n    return lineString;\r\n  } else {\r\n    return undefined;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Polygon|undefined} Polygon.\r\n */\r\nfunction readLinearRing(node, objectStack) {\r\n  var properties = pushParseAndPop({},\r\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\r\n    objectStack);\r\n  var flatCoordinates =\r\n      readFlatCoordinatesFromNode(node, objectStack);\r\n  if (flatCoordinates) {\r\n    var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [flatCoordinates.length]);\r\n    polygon.setProperties(properties);\r\n    return polygon;\r\n  } else {\r\n    return undefined;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar MULTI_GEOMETRY_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'LineString': makeArrayPusher(readLineString),\r\n    'LinearRing': makeArrayPusher(readLinearRing),\r\n    'MultiGeometry': makeArrayPusher(readMultiGeometry),\r\n    'Point': makeArrayPusher(readPoint),\r\n    'Polygon': makeArrayPusher(readPolygon)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\r\n */\r\nfunction readMultiGeometry(node, objectStack) {\r\n  var geometries = pushParseAndPop([],\r\n    MULTI_GEOMETRY_PARSERS, node, objectStack);\r\n  if (!geometries) {\r\n    return null;\r\n  }\r\n  if (geometries.length === 0) {\r\n    return new GeometryCollection(geometries);\r\n  }\r\n  var multiGeometry;\r\n  var homogeneous = true;\r\n  var type = geometries[0].getType();\r\n  var geometry;\r\n  for (var i = 1, ii = geometries.length; i < ii; ++i) {\r\n    geometry = geometries[i];\r\n    if (geometry.getType() != type) {\r\n      homogeneous = false;\r\n      break;\r\n    }\r\n  }\r\n  if (homogeneous) {\r\n    var layout;\r\n    var flatCoordinates;\r\n    if (type == GeometryType.POINT) {\r\n      var point = geometries[0];\r\n      layout = point.getLayout();\r\n      flatCoordinates = point.getFlatCoordinates();\r\n      for (var i$1 = 1, ii$1 = geometries.length; i$1 < ii$1; ++i$1) {\r\n        geometry = geometries[i$1];\r\n        extend(flatCoordinates, geometry.getFlatCoordinates());\r\n      }\r\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\r\n      setCommonGeometryProperties(multiGeometry, geometries);\r\n    } else if (type == GeometryType.LINE_STRING) {\r\n      multiGeometry = new MultiLineString(geometries);\r\n      setCommonGeometryProperties(multiGeometry, geometries);\r\n    } else if (type == GeometryType.POLYGON) {\r\n      multiGeometry = new MultiPolygon(geometries);\r\n      setCommonGeometryProperties(multiGeometry, geometries);\r\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\r\n      multiGeometry = new GeometryCollection(geometries);\r\n    } else {\r\n      assert(false, 37); // Unknown geometry type found\r\n    }\r\n  } else {\r\n    multiGeometry = new GeometryCollection(geometries);\r\n  }\r\n  return (\r\n    /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry)\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Point|undefined} Point.\r\n */\r\nfunction readPoint(node, objectStack) {\r\n  var properties = pushParseAndPop({},\r\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\r\n    objectStack);\r\n  var flatCoordinates =\r\n      readFlatCoordinatesFromNode(node, objectStack);\r\n  if (flatCoordinates) {\r\n    var point = new Point(flatCoordinates, GeometryLayout.XYZ);\r\n    point.setProperties(properties);\r\n    return point;\r\n  } else {\r\n    return undefined;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'innerBoundaryIs': innerBoundaryIsParser,\r\n    'outerBoundaryIs': outerBoundaryIsParser\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Polygon|undefined} Polygon.\r\n */\r\nfunction readPolygon(node, objectStack) {\r\n  var properties = pushParseAndPop(/** @type {Object<string,*>} */ ({}),\r\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\r\n    objectStack);\r\n  var flatLinearRings = pushParseAndPop([null],\r\n    FLAT_LINEAR_RINGS_PARSERS, node, objectStack);\r\n  if (flatLinearRings && flatLinearRings[0]) {\r\n    var flatCoordinates = flatLinearRings[0];\r\n    var ends = [flatCoordinates.length];\r\n    for (var i = 1, ii = flatLinearRings.length; i < ii; ++i) {\r\n      extend(flatCoordinates, flatLinearRings[i]);\r\n      ends.push(flatCoordinates.length);\r\n    }\r\n    var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\r\n    polygon.setProperties(properties);\r\n    return polygon;\r\n  } else {\r\n    return undefined;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar STYLE_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'IconStyle': iconStyleParser,\r\n    'LabelStyle': labelStyleParser,\r\n    'LineStyle': lineStyleParser,\r\n    'PolyStyle': polyStyleParser\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Array<Style>} Style.\r\n */\r\nfunction readStyle(node, objectStack) {\r\n  var styleObject = pushParseAndPop(\r\n    {}, STYLE_PARSERS, node, objectStack);\r\n  if (!styleObject) {\r\n    return null;\r\n  }\r\n  var fillStyle = /** @type {Fill} */\r\n      ('fillStyle' in styleObject ?\r\n        styleObject['fillStyle'] : DEFAULT_FILL_STYLE);\r\n  var fill = /** @type {boolean|undefined} */ (styleObject['fill']);\r\n  if (fill !== undefined && !fill) {\r\n    fillStyle = null;\r\n  }\r\n  var imageStyle;\r\n  if ('imageStyle' in styleObject) {\r\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\r\n      imageStyle = styleObject['imageStyle'];\r\n    }\r\n  } else {\r\n    imageStyle = DEFAULT_IMAGE_STYLE;\r\n  }\r\n  var textStyle = /** @type {Text} */\r\n      ('textStyle' in styleObject ?\r\n        styleObject['textStyle'] : DEFAULT_TEXT_STYLE);\r\n  var strokeStyle = /** @type {Stroke} */\r\n      ('strokeStyle' in styleObject ?\r\n        styleObject['strokeStyle'] : DEFAULT_STROKE_STYLE);\r\n  var outline = /** @type {boolean|undefined} */\r\n      (styleObject['outline']);\r\n  if (outline !== undefined && !outline) {\r\n    strokeStyle = null;\r\n  }\r\n  return [new Style({\r\n    fill: fillStyle,\r\n    image: imageStyle,\r\n    stroke: strokeStyle,\r\n    text: textStyle,\r\n    zIndex: undefined // FIXME\r\n  })];\r\n}\r\n\r\n\r\n/**\r\n * Reads an array of geometries and creates arrays for common geometry\r\n * properties. Then sets them to the multi geometry.\r\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\r\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\r\n */\r\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\r\n  var ii = geometries.length;\r\n  var extrudes = new Array(geometries.length);\r\n  var tessellates = new Array(geometries.length);\r\n  var altitudeModes = new Array(geometries.length);\r\n  var hasExtrude, hasTessellate, hasAltitudeMode;\r\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\r\n  for (var i = 0; i < ii; ++i) {\r\n    var geometry = geometries[i];\r\n    extrudes[i] = geometry.get('extrude');\r\n    tessellates[i] = geometry.get('tessellate');\r\n    altitudeModes[i] = geometry.get('altitudeMode');\r\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\r\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\r\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\r\n  }\r\n  if (hasExtrude) {\r\n    multiGeometry.set('extrude', extrudes);\r\n  }\r\n  if (hasTessellate) {\r\n    multiGeometry.set('tessellate', tessellates);\r\n  }\r\n  if (hasAltitudeMode) {\r\n    multiGeometry.set('altitudeMode', altitudeModes);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar DATA_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'displayName': makeObjectPropertySetter(readString),\r\n    'value': makeObjectPropertySetter(readString)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction dataParser(node, objectStack) {\r\n  var name = node.getAttribute('name');\r\n  parseNode(DATA_PARSERS, node, objectStack);\r\n  var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n  if (name !== null) {\r\n    featureObject[name] = featureObject.value;\r\n  } else if (featureObject.displayName !== null) {\r\n    featureObject[featureObject.displayName] = featureObject.value;\r\n  }\r\n  delete featureObject['value'];\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar EXTENDED_DATA_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Data': dataParser,\r\n    'SchemaData': schemaDataParser\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction extendedDataParser(node, objectStack) {\r\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\r\n}\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction regionParser(node, objectStack) {\r\n  parseNode(REGION_PARSERS, node, objectStack);\r\n}\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar PAIR_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Style': makeObjectPropertySetter(readStyle),\r\n    'key': makeObjectPropertySetter(readString),\r\n    'styleUrl': makeObjectPropertySetter(readURI)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction pairDataParser(node, objectStack) {\r\n  var pairObject = pushParseAndPop(\r\n    {}, PAIR_PARSERS, node, objectStack);\r\n  if (!pairObject) {\r\n    return;\r\n  }\r\n  var key = /** @type {string|undefined} */\r\n      (pairObject['key']);\r\n  if (key && key == 'normal') {\r\n    var styleUrl = /** @type {string|undefined} */\r\n        (pairObject['styleUrl']);\r\n    if (styleUrl) {\r\n      objectStack[objectStack.length - 1] = styleUrl;\r\n    }\r\n    var style = /** @type {Style} */\r\n        (pairObject['Style']);\r\n    if (style) {\r\n      objectStack[objectStack.length - 1] = style;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction placemarkStyleMapParser(node, objectStack) {\r\n  var styleMapValue = readStyleMapValue(node, objectStack);\r\n  if (!styleMapValue) {\r\n    return;\r\n  }\r\n  var placemarkObject = objectStack[objectStack.length - 1];\r\n  if (Array.isArray(styleMapValue)) {\r\n    placemarkObject['Style'] = styleMapValue;\r\n  } else if (typeof styleMapValue === 'string') {\r\n    placemarkObject['styleUrl'] = styleMapValue;\r\n  } else {\r\n    assert(false, 38); // `styleMapValue` has an unknown type\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar SCHEMA_DATA_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'SimpleData': simpleDataParser\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction schemaDataParser(node, objectStack) {\r\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction simpleDataParser(node, objectStack) {\r\n  var name = node.getAttribute('name');\r\n  if (name !== null) {\r\n    var data = readString(node);\r\n    var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n    featureObject[name] = data;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar LAT_LON_ALT_BOX_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'altitudeMode': makeObjectPropertySetter(readString),\r\n    'minAltitude': makeObjectPropertySetter(readDecimal),\r\n    'maxAltitude': makeObjectPropertySetter(readDecimal),\r\n    'north': makeObjectPropertySetter(readDecimal),\r\n    'south': makeObjectPropertySetter(readDecimal),\r\n    'east': makeObjectPropertySetter(readDecimal),\r\n    'west': makeObjectPropertySetter(readDecimal)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction latLonAltBoxParser(node, objectStack) {\r\n  var object = pushParseAndPop({}, LAT_LON_ALT_BOX_PARSERS, node, objectStack);\r\n  if (!object) {\r\n    return;\r\n  }\r\n  var regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n  var extent = [\r\n    parseFloat(object['west']),\r\n    parseFloat(object['south']),\r\n    parseFloat(object['east']),\r\n    parseFloat(object['north'])\r\n  ];\r\n  regionObject['extent'] = extent;\r\n  regionObject['altitudeMode'] = object['altitudeMode'];\r\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\r\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar LOD_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'minLodPixels': makeObjectPropertySetter(readDecimal),\r\n    'maxLodPixels': makeObjectPropertySetter(readDecimal),\r\n    'minFadeExtent': makeObjectPropertySetter(readDecimal),\r\n    'maxFadeExtent': makeObjectPropertySetter(readDecimal)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction lodParser(node, objectStack) {\r\n  var object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\r\n  if (!object) {\r\n    return;\r\n  }\r\n  var lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\r\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\r\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\r\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar INNER_BOUNDARY_IS_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'LinearRing': makeReplacer(readFlatLinearRing)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction innerBoundaryIsParser(node, objectStack) {\r\n  /** @type {Array<number>|undefined} */\r\n  var flatLinearRing = pushParseAndPop(undefined,\r\n    INNER_BOUNDARY_IS_PARSERS, node, objectStack);\r\n  if (flatLinearRing) {\r\n    var flatLinearRings = /** @type {Array<Array<number>>} */\r\n        (objectStack[objectStack.length - 1]);\r\n    flatLinearRings.push(flatLinearRing);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'LinearRing': makeReplacer(readFlatLinearRing)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction outerBoundaryIsParser(node, objectStack) {\r\n  /** @type {Array<number>|undefined} */\r\n  var flatLinearRing = pushParseAndPop(undefined,\r\n    OUTER_BOUNDARY_IS_PARSERS, node, objectStack);\r\n  if (flatLinearRing) {\r\n    var flatLinearRings = /** @type {Array<Array<number>>} */\r\n        (objectStack[objectStack.length - 1]);\r\n    flatLinearRings[0] = flatLinearRing;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction linkParser(node, objectStack) {\r\n  parseNode(LINK_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction whenParser(node, objectStack) {\r\n  var gxTrackObject = /** @type {GxTrackObject} */\r\n      (objectStack[objectStack.length - 1]);\r\n  var whens = gxTrackObject.whens;\r\n  var s = getAllTextContent(node, false);\r\n  var when = Date.parse(s);\r\n  whens.push(isNaN(when) ? 0 : when);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node to append a TextNode with the color to.\r\n * @param {import(\"../color.js\").Color|string} color Color.\r\n */\r\nfunction writeColorTextNode(node, color) {\r\n  var rgba = asArray(color);\r\n  var opacity = (rgba.length == 4) ? rgba[3] : 1;\r\n  /** @type {Array<string|number>} */\r\n  var abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\r\n  for (var i = 0; i < 4; ++i) {\r\n    var hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\r\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\r\n  }\r\n  writeStringTextNode(node, abgr.join(''));\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node to append a TextNode with the coordinates to.\r\n * @param {Array<number>} coordinates Coordinates.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\r\n  var context = objectStack[objectStack.length - 1];\r\n\r\n  var layout = context['layout'];\r\n  var stride = context['stride'];\r\n\r\n  var dimension;\r\n  if (layout == GeometryLayout.XY ||\r\n      layout == GeometryLayout.XYM) {\r\n    dimension = 2;\r\n  } else if (layout == GeometryLayout.XYZ ||\r\n      layout == GeometryLayout.XYZM) {\r\n    dimension = 3;\r\n  } else {\r\n    assert(false, 34); // Invalid geometry layout\r\n  }\r\n\r\n  var ii = coordinates.length;\r\n  var text = '';\r\n  if (ii > 0) {\r\n    text += coordinates[0];\r\n    for (var d = 1; d < dimension; ++d) {\r\n      text += ',' + coordinates[d];\r\n    }\r\n    for (var i = stride; i < ii; i += stride) {\r\n      text += ' ' + coordinates[i];\r\n      for (var d$1 = 1; d$1 < dimension; ++d$1) {\r\n        text += ',' + coordinates[i + d$1];\r\n      }\r\n    }\r\n  }\r\n  writeStringTextNode(node, text);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Data': makeChildAppender(writeDataNode),\r\n    'value': makeChildAppender(writeDataNodeValue),\r\n    'displayName': makeChildAppender(writeDataNodeName)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {{name: *, value: *}} pair Name value pair.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeDataNode(node, pair, objectStack) {\r\n  node.setAttribute('name', pair.name);\r\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\r\n  var value = pair.value;\r\n\r\n  if (typeof value == 'object') {\r\n    if (value !== null && value.displayName) {\r\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\r\n        OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\r\n    }\r\n\r\n    if (value !== null && value.value) {\r\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\r\n        OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\r\n    }\r\n  } else {\r\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\r\n      OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node to append a TextNode with the name to.\r\n * @param {string} name DisplayName.\r\n */\r\nfunction writeDataNodeName(node, name) {\r\n  writeCDATASection(node, name);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node to append a CDATA Section with the value to.\r\n * @param {string} value Value.\r\n */\r\nfunction writeDataNodeValue(node, value) {\r\n  writeStringTextNode(node, value);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar DOCUMENT_SERIALIZERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Placemark': makeChildAppender(writePlacemark)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @param {*} value Value.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @param {string=} opt_nodeName Node name.\r\n * @return {Node|undefined} Node.\r\n */\r\nvar DOCUMENT_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\r\n  var parentNode = objectStack[objectStack.length - 1].node;\r\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\r\n};\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Array<Feature>} features Features.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @this {KML}\r\n */\r\nfunction writeDocument(node, features, objectStack) {\r\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\r\n  pushSerializeAndPop(context, DOCUMENT_SERIALIZERS,\r\n    DOCUMENT_NODE_FACTORY, features, objectStack, undefined,\r\n    this);\r\n}\r\n\r\n\r\n/**\r\n * A factory for creating Data nodes.\r\n * @const\r\n * @type {function(*, Array<*>): (Node|undefined)}\r\n */\r\nvar DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeExtendedData(node, namesAndValues, objectStack) {\r\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\r\n  var names = namesAndValues.names;\r\n  var values = namesAndValues.values;\r\n  var length = names.length;\r\n\r\n  for (var i = 0; i < length; i++) {\r\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\r\n      DATA_NODE_FACTORY, [{name: names[i], value: values[i]}], objectStack);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Array<string>>}\r\n */\r\nvar ICON_SEQUENCE = makeStructureNS(\r\n  NAMESPACE_URIS, [\r\n    'href'\r\n  ],\r\n  makeStructureNS(GX_NAMESPACE_URIS, [\r\n    'x', 'y', 'w', 'h'\r\n  ]));\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar ICON_SERIALIZERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'href': makeChildAppender(writeStringTextNode)\r\n  }, makeStructureNS(\r\n    GX_NAMESPACE_URIS, {\r\n      'x': makeChildAppender(writeDecimalTextNode),\r\n      'y': makeChildAppender(writeDecimalTextNode),\r\n      'w': makeChildAppender(writeDecimalTextNode),\r\n      'h': makeChildAppender(writeDecimalTextNode)\r\n    }));\r\n\r\n\r\n/**\r\n * @const\r\n * @param {*} value Value.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @param {string=} opt_nodeName Node name.\r\n * @return {Node|undefined} Node.\r\n */\r\nvar GX_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\r\n  return createElementNS(GX_NAMESPACE_URIS[0],\r\n    'gx:' + opt_nodeName);\r\n};\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Object} icon Icon object.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeIcon(node, icon, objectStack) {\r\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\r\n  var parentNode = objectStack[objectStack.length - 1].node;\r\n  var orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\r\n  var values = makeSequence(icon, orderedKeys);\r\n  pushSerializeAndPop(context,\r\n    ICON_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\r\n    values, objectStack, orderedKeys);\r\n  orderedKeys =\r\n      ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\r\n  values = makeSequence(icon, orderedKeys);\r\n  pushSerializeAndPop(context, ICON_SERIALIZERS,\r\n    GX_NODE_FACTORY, values, objectStack, orderedKeys);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Array<string>>}\r\n */\r\nvar ICON_STYLE_SEQUENCE = makeStructureNS(\r\n  NAMESPACE_URIS, [\r\n    'scale', 'heading', 'Icon', 'hotSpot'\r\n  ]);\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar ICON_STYLE_SERIALIZERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Icon': makeChildAppender(writeIcon),\r\n    'heading': makeChildAppender(writeDecimalTextNode),\r\n    'hotSpot': makeChildAppender(writeVec2),\r\n    'scale': makeChildAppender(writeScaleTextNode)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {import(\"../style/Icon.js\").default} style Icon style.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeIconStyle(node, style, objectStack) {\r\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\r\n  var properties = {};\r\n  var src = style.getSrc();\r\n  var size = style.getSize();\r\n  var iconImageSize = style.getImageSize();\r\n  var iconProperties = {\r\n    'href': src\r\n  };\r\n\r\n  if (size) {\r\n    iconProperties['w'] = size[0];\r\n    iconProperties['h'] = size[1];\r\n    var anchor = style.getAnchor(); // top-left\r\n    var origin = style.getOrigin(); // top-left\r\n\r\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\r\n      iconProperties['x'] = origin[0];\r\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\r\n    }\r\n\r\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\r\n      var /** @type {Vec2} */ hotSpot = {\r\n        x: anchor[0],\r\n        xunits: IconAnchorUnits.PIXELS,\r\n        y: size[1] - anchor[1],\r\n        yunits: IconAnchorUnits.PIXELS\r\n      };\r\n      properties['hotSpot'] = hotSpot;\r\n    }\r\n  }\r\n\r\n  properties['Icon'] = iconProperties;\r\n\r\n  var scale = style.getScale();\r\n  if (scale !== 1) {\r\n    properties['scale'] = scale;\r\n  }\r\n\r\n  var rotation = style.getRotation();\r\n  if (rotation !== 0) {\r\n    properties['heading'] = rotation; // 0-360\r\n  }\r\n\r\n  var parentNode = objectStack[objectStack.length - 1].node;\r\n  var orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\r\n  var values = makeSequence(properties, orderedKeys);\r\n  pushSerializeAndPop(context, ICON_STYLE_SERIALIZERS,\r\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Array<string>>}\r\n */\r\nvar LABEL_STYLE_SEQUENCE = makeStructureNS(\r\n  NAMESPACE_URIS, [\r\n    'color', 'scale'\r\n  ]);\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar LABEL_STYLE_SERIALIZERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'color': makeChildAppender(writeColorTextNode),\r\n    'scale': makeChildAppender(writeScaleTextNode)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Text} style style.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeLabelStyle(node, style, objectStack) {\r\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\r\n  var properties = {};\r\n  var fill = style.getFill();\r\n  if (fill) {\r\n    properties['color'] = fill.getColor();\r\n  }\r\n  var scale = style.getScale();\r\n  if (scale && scale !== 1) {\r\n    properties['scale'] = scale;\r\n  }\r\n  var parentNode = objectStack[objectStack.length - 1].node;\r\n  var orderedKeys =\r\n      LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\r\n  var values = makeSequence(properties, orderedKeys);\r\n  pushSerializeAndPop(context, LABEL_STYLE_SERIALIZERS,\r\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Array<string>>}\r\n */\r\nvar LINE_STYLE_SEQUENCE = makeStructureNS(\r\n  NAMESPACE_URIS, [\r\n    'color', 'width'\r\n  ]);\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar LINE_STYLE_SERIALIZERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'color': makeChildAppender(writeColorTextNode),\r\n    'width': makeChildAppender(writeDecimalTextNode)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Stroke} style style.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeLineStyle(node, style, objectStack) {\r\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\r\n  var properties = {\r\n    'color': style.getColor(),\r\n    'width': style.getWidth()\r\n  };\r\n  var parentNode = objectStack[objectStack.length - 1].node;\r\n  var orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\r\n  var values = makeSequence(properties, orderedKeys);\r\n  pushSerializeAndPop(context, LINE_STYLE_SERIALIZERS,\r\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, string>}\r\n */\r\nvar GEOMETRY_TYPE_TO_NODENAME = {\r\n  'Point': 'Point',\r\n  'LineString': 'LineString',\r\n  'LinearRing': 'LinearRing',\r\n  'Polygon': 'Polygon',\r\n  'MultiPoint': 'MultiGeometry',\r\n  'MultiLineString': 'MultiGeometry',\r\n  'MultiPolygon': 'MultiGeometry',\r\n  'GeometryCollection': 'MultiGeometry'\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @param {*} value Value.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @param {string=} opt_nodeName Node name.\r\n * @return {Node|undefined} Node.\r\n */\r\nvar GEOMETRY_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\r\n  if (value) {\r\n    var parentNode = objectStack[objectStack.length - 1].node;\r\n    return createElementNS(parentNode.namespaceURI,\r\n      GEOMETRY_TYPE_TO_NODENAME[/** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()]);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * A factory for creating Point nodes.\r\n * @const\r\n * @type {function(*, Array<*>, string=): (Node|undefined)}\r\n */\r\nvar POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\r\n\r\n\r\n/**\r\n * A factory for creating LineString nodes.\r\n * @const\r\n * @type {function(*, Array<*>, string=): (Node|undefined)}\r\n */\r\nvar LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\r\n\r\n\r\n/**\r\n * A factory for creating LinearRing nodes.\r\n * @const\r\n * @type {function(*, Array<*>, string=): (Node|undefined)}\r\n */\r\nvar LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\r\n\r\n\r\n/**\r\n * A factory for creating Polygon nodes.\r\n * @const\r\n * @type {function(*, Array<*>, string=): (Node|undefined)}\r\n */\r\nvar POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'LineString': makeChildAppender(\r\n      writePrimitiveGeometry),\r\n    'Point': makeChildAppender(\r\n      writePrimitiveGeometry),\r\n    'Polygon': makeChildAppender(writePolygon),\r\n    'GeometryCollection': makeChildAppender(\r\n      writeMultiGeometry)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeMultiGeometry(node, geometry, objectStack) {\r\n  /** @type {import(\"../xml.js\").NodeStackItem} */\r\n  var context = {node: node};\r\n  var type = geometry.getType();\r\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\r\n  var geometries;\r\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\r\n  var factory;\r\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\r\n    geometries = /** @type {GeometryCollection} */ (geometry).getGeometries();\r\n    factory = GEOMETRY_NODE_FACTORY;\r\n  } else if (type == GeometryType.MULTI_POINT) {\r\n    geometries = /** @type {MultiPoint} */ (geometry).getPoints();\r\n    factory = POINT_NODE_FACTORY;\r\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\r\n    geometries =\r\n        (/** @type {MultiLineString} */ (geometry)).getLineStrings();\r\n    factory = LINE_STRING_NODE_FACTORY;\r\n  } else if (type == GeometryType.MULTI_POLYGON) {\r\n    geometries =\r\n        (/** @type {MultiPolygon} */ (geometry)).getPolygons();\r\n    factory = POLYGON_NODE_FACTORY;\r\n  } else {\r\n    assert(false, 39); // Unknown geometry type\r\n  }\r\n  pushSerializeAndPop(context,\r\n    MULTI_GEOMETRY_SERIALIZERS, factory,\r\n    geometries, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar BOUNDARY_IS_SERIALIZERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'LinearRing': makeChildAppender(\r\n      writePrimitiveGeometry)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeBoundaryIs(node, linearRing, objectStack) {\r\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\r\n  pushSerializeAndPop(context,\r\n    BOUNDARY_IS_SERIALIZERS,\r\n    LINEAR_RING_NODE_FACTORY, [linearRing], objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar PLACEMARK_SERIALIZERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'ExtendedData': makeChildAppender(writeExtendedData),\r\n    'MultiGeometry': makeChildAppender(writeMultiGeometry),\r\n    'LineString': makeChildAppender(writePrimitiveGeometry),\r\n    'LinearRing': makeChildAppender(writePrimitiveGeometry),\r\n    'Point': makeChildAppender(writePrimitiveGeometry),\r\n    'Polygon': makeChildAppender(writePolygon),\r\n    'Style': makeChildAppender(writeStyle),\r\n    'address': makeChildAppender(writeStringTextNode),\r\n    'description': makeChildAppender(writeStringTextNode),\r\n    'name': makeChildAppender(writeStringTextNode),\r\n    'open': makeChildAppender(writeBooleanTextNode),\r\n    'phoneNumber': makeChildAppender(writeStringTextNode),\r\n    'styleUrl': makeChildAppender(writeStringTextNode),\r\n    'visibility': makeChildAppender(writeBooleanTextNode)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Array<string>>}\r\n */\r\nvar PLACEMARK_SEQUENCE = makeStructureNS(\r\n  NAMESPACE_URIS, [\r\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\r\n    'styleUrl', 'Style'\r\n  ]);\r\n\r\n\r\n/**\r\n * A factory for creating ExtendedData nodes.\r\n * @const\r\n * @type {function(*, Array<*>): (Node|undefined)}\r\n */\r\nvar EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\r\n\r\n\r\n/**\r\n * FIXME currently we do serialize arbitrary/custom feature properties\r\n * (ExtendedData).\r\n * @param {Element} node Node.\r\n * @param {Feature} feature Feature.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @this {KML}\r\n */\r\nfunction writePlacemark(node, feature, objectStack) {\r\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\r\n\r\n  // set id\r\n  if (feature.getId()) {\r\n    node.setAttribute('id', /** @type {string} */ (feature.getId()));\r\n  }\r\n\r\n  // serialize properties (properties unknown to KML are not serialized)\r\n  var properties = feature.getProperties();\r\n\r\n  // don't export these to ExtendedData\r\n  var filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\r\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\r\n  filter[feature.getGeometryName()] = 1;\r\n  var keys = Object.keys(properties || {}).sort().filter(function(v) {\r\n    return !filter[v];\r\n  });\r\n\r\n  if (keys.length > 0) {\r\n    var sequence = makeSequence(properties, keys);\r\n    var namesAndValues = {names: keys, values: sequence};\r\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\r\n      EXTENDEDDATA_NODE_FACTORY, [namesAndValues], objectStack);\r\n  }\r\n\r\n  var styleFunction = feature.getStyleFunction();\r\n  if (styleFunction) {\r\n    // FIXME the styles returned by the style function are supposed to be\r\n    // resolution-independent here\r\n    var styles = styleFunction(feature, 0);\r\n    if (styles) {\r\n      var style = Array.isArray(styles) ? styles[0] : styles;\r\n      if (this.writeStyles_) {\r\n        properties['Style'] = style;\r\n      }\r\n      var textStyle = style.getText();\r\n      if (textStyle) {\r\n        properties['name'] = textStyle.getText();\r\n      }\r\n    }\r\n  }\r\n  var parentNode = objectStack[objectStack.length - 1].node;\r\n  var orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\r\n  var values = makeSequence(properties, orderedKeys);\r\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\r\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\r\n\r\n  // serialize geometry\r\n  var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\r\n  var geometry = feature.getGeometry();\r\n  if (geometry) {\r\n    geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, true, options));\r\n  }\r\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\r\n    GEOMETRY_NODE_FACTORY, [geometry], objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Array<string>>}\r\n */\r\nvar PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(\r\n  NAMESPACE_URIS, [\r\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\r\n  ]);\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'extrude': makeChildAppender(writeBooleanTextNode),\r\n    'tessellate': makeChildAppender(writeBooleanTextNode),\r\n    'altitudeMode': makeChildAppender(writeStringTextNode),\r\n    'coordinates': makeChildAppender(writeCoordinatesTextNode)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\r\n  var flatCoordinates = geometry.getFlatCoordinates();\r\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\r\n  context['layout'] = geometry.getLayout();\r\n  context['stride'] = geometry.getStride();\r\n\r\n  // serialize properties (properties unknown to KML are not serialized)\r\n  var properties = geometry.getProperties();\r\n  properties.coordinates = flatCoordinates;\r\n\r\n  var parentNode = objectStack[objectStack.length - 1].node;\r\n  var orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\r\n  var values = makeSequence(properties, orderedKeys);\r\n  pushSerializeAndPop(context, PRIMITIVE_GEOMETRY_SERIALIZERS,\r\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar POLYGON_SERIALIZERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'outerBoundaryIs': makeChildAppender(\r\n      writeBoundaryIs),\r\n    'innerBoundaryIs': makeChildAppender(\r\n      writeBoundaryIs)\r\n  });\r\n\r\n\r\n/**\r\n * A factory for creating innerBoundaryIs nodes.\r\n * @const\r\n * @type {function(*, Array<*>, string=): (Node|undefined)}\r\n */\r\nvar INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\r\n\r\n\r\n/**\r\n * A factory for creating outerBoundaryIs nodes.\r\n * @const\r\n * @type {function(*, Array<*>, string=): (Node|undefined)}\r\n */\r\nvar OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Polygon} polygon Polygon.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writePolygon(node, polygon, objectStack) {\r\n  var linearRings = polygon.getLinearRings();\r\n  var outerRing = linearRings.shift();\r\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\r\n  // inner rings\r\n  pushSerializeAndPop(context,\r\n    POLYGON_SERIALIZERS,\r\n    INNER_BOUNDARY_NODE_FACTORY,\r\n    linearRings, objectStack);\r\n  // outer ring\r\n  pushSerializeAndPop(context,\r\n    POLYGON_SERIALIZERS,\r\n    OUTER_BOUNDARY_NODE_FACTORY,\r\n    [outerRing], objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar POLY_STYLE_SERIALIZERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'color': makeChildAppender(writeColorTextNode)\r\n  });\r\n\r\n\r\n/**\r\n * A factory for creating coordinates nodes.\r\n * @const\r\n * @type {function(*, Array<*>, string=): (Node|undefined)}\r\n */\r\nvar COLOR_NODE_FACTORY = makeSimpleNodeFactory('color');\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Fill} style Style.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writePolyStyle(node, style, objectStack) {\r\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\r\n  pushSerializeAndPop(context, POLY_STYLE_SERIALIZERS,\r\n    COLOR_NODE_FACTORY, [style.getColor()], objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node to append a TextNode with the scale to.\r\n * @param {number|undefined} scale Scale.\r\n */\r\nfunction writeScaleTextNode(node, scale) {\r\n  // the Math is to remove any excess decimals created by float arithmetic\r\n  writeDecimalTextNode(node,\r\n    Math.round(scale * 1e6) / 1e6);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Array<string>>}\r\n */\r\nvar STYLE_SEQUENCE = makeStructureNS(\r\n  NAMESPACE_URIS, [\r\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\r\n  ]);\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar STYLE_SERIALIZERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'IconStyle': makeChildAppender(writeIconStyle),\r\n    'LabelStyle': makeChildAppender(writeLabelStyle),\r\n    'LineStyle': makeChildAppender(writeLineStyle),\r\n    'PolyStyle': makeChildAppender(writePolyStyle)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Style} style Style.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeStyle(node, style, objectStack) {\r\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\r\n  var properties = {};\r\n  var fillStyle = style.getFill();\r\n  var strokeStyle = style.getStroke();\r\n  var imageStyle = style.getImage();\r\n  var textStyle = style.getText();\r\n  if (imageStyle && typeof /** @type {?} */ (imageStyle).getSrc === 'function') {\r\n    properties['IconStyle'] = imageStyle;\r\n  }\r\n  if (textStyle) {\r\n    properties['LabelStyle'] = textStyle;\r\n  }\r\n  if (strokeStyle) {\r\n    properties['LineStyle'] = strokeStyle;\r\n  }\r\n  if (fillStyle) {\r\n    properties['PolyStyle'] = fillStyle;\r\n  }\r\n  var parentNode = objectStack[objectStack.length - 1].node;\r\n  var orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\r\n  var values = makeSequence(properties, orderedKeys);\r\n  pushSerializeAndPop(context, STYLE_SERIALIZERS,\r\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node to append a TextNode with the Vec2 to.\r\n * @param {Vec2} vec2 Vec2.\r\n */\r\nfunction writeVec2(node, vec2) {\r\n  node.setAttribute('x', String(vec2.x));\r\n  node.setAttribute('y', String(vec2.y));\r\n  node.setAttribute('xunits', vec2.xunits);\r\n  node.setAttribute('yunits', vec2.yunits);\r\n}\r\n\r\n\r\nexport default KML;\r\n\r\n//# sourceMappingURL=KML.js.map","/**\r\n * @module ol/render/Feature\r\n */\r\nimport {extend} from '../array.js';\r\nimport {createOrUpdateFromCoordinate, createOrUpdateFromFlatCoordinates, getCenter, getHeight} from '../extent.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\r\nimport {getInteriorPointOfArray, getInteriorPointsOfMultiArray} from '../geom/flat/interiorpoint.js';\r\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\r\nimport {get as getProjection} from '../proj.js';\r\nimport {transform2D} from '../geom/flat/transform.js';\r\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\r\n\r\n\r\n/**\r\n * @type {import(\"../transform.js\").Transform}\r\n */\r\nvar tmpTransform = createTransform();\r\n\r\n\r\n/**\r\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\r\n * structure, optimized for vector tile rendering and styling. Geometry access\r\n * through the API is limited to getting the type and extent of the geometry.\r\n *\r\n * @param {GeometryType} type Geometry type.\r\n * @param {Array<number>} flatCoordinates Flat coordinates. These always need\r\n *     to be right-handed for polygons.\r\n * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\r\n * @param {Object<string, *>} properties Properties.\r\n * @param {number|string|undefined} id Feature id.\r\n */\r\nvar RenderFeature = function RenderFeature(type, flatCoordinates, ends, properties, id) {\r\n  /**\r\n  * @private\r\n  * @type {import(\"../extent.js\").Extent|undefined}\r\n  */\r\n  this.extent_;\r\n\r\n  /**\r\n  * @private\r\n  * @type {number|string|undefined}\r\n  */\r\n  this.id_ = id;\r\n\r\n  /**\r\n  * @private\r\n  * @type {GeometryType}\r\n  */\r\n  this.type_ = type;\r\n\r\n  /**\r\n  * @private\r\n  * @type {Array<number>}\r\n  */\r\n  this.flatCoordinates_ = flatCoordinates;\r\n\r\n  /**\r\n  * @private\r\n  * @type {Array<number>}\r\n  */\r\n  this.flatInteriorPoints_ = null;\r\n\r\n  /**\r\n  * @private\r\n  * @type {Array<number>}\r\n  */\r\n  this.flatMidpoints_ = null;\r\n\r\n  /**\r\n  * @private\r\n  * @type {Array<number>|Array<Array<number>>}\r\n  */\r\n  this.ends_ = ends;\r\n\r\n  /**\r\n  * @private\r\n  * @type {Object<string, *>}\r\n  */\r\n  this.properties_ = properties;\r\n\r\n};\r\n\r\n/**\r\n* Get a feature property by its key.\r\n* @param {string} key Key\r\n* @return {*} Value for the requested key.\r\n* @api\r\n*/\r\nRenderFeature.prototype.get = function get (key) {\r\n  return this.properties_[key];\r\n};\r\n\r\n/**\r\n* Get the extent of this feature's geometry.\r\n* @return {import(\"../extent.js\").Extent} Extent.\r\n* @api\r\n*/\r\nRenderFeature.prototype.getExtent = function getExtent () {\r\n  if (!this.extent_) {\r\n    this.extent_ = this.type_ === GeometryType.POINT ?\r\n      createOrUpdateFromCoordinate(this.flatCoordinates_) :\r\n      createOrUpdateFromFlatCoordinates(\r\n        this.flatCoordinates_, 0, this.flatCoordinates_.length, 2);\r\n\r\n  }\r\n  return this.extent_;\r\n};\r\n\r\n/**\r\n* @return {Array<number>} Flat interior points.\r\n*/\r\nRenderFeature.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\r\n  if (!this.flatInteriorPoints_) {\r\n    var flatCenter = getCenter(this.getExtent());\r\n    this.flatInteriorPoints_ = getInteriorPointOfArray(\r\n      this.flatCoordinates_, 0, /** @type {Array<number>} */ (this.ends_), 2, flatCenter, 0);\r\n  }\r\n  return this.flatInteriorPoints_;\r\n};\r\n\r\n/**\r\n* @return {Array<number>} Flat interior points.\r\n*/\r\nRenderFeature.prototype.getFlatInteriorPoints = function getFlatInteriorPoints () {\r\n  if (!this.flatInteriorPoints_) {\r\n    var flatCenters = linearRingssCenter(\r\n      this.flatCoordinates_, 0, /** @type {Array<Array<number>>} */ (this.ends_), 2);\r\n    this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\r\n      this.flatCoordinates_, 0, /** @type {Array<Array<number>>} */ (this.ends_), 2, flatCenters);\r\n  }\r\n  return this.flatInteriorPoints_;\r\n};\r\n\r\n/**\r\n* @return {Array<number>} Flat midpoint.\r\n*/\r\nRenderFeature.prototype.getFlatMidpoint = function getFlatMidpoint () {\r\n  if (!this.flatMidpoints_) {\r\n    this.flatMidpoints_ = interpolatePoint(\r\n      this.flatCoordinates_, 0, this.flatCoordinates_.length, 2, 0.5);\r\n  }\r\n  return this.flatMidpoints_;\r\n};\r\n\r\n/**\r\n* @return {Array<number>} Flat midpoints.\r\n*/\r\nRenderFeature.prototype.getFlatMidpoints = function getFlatMidpoints () {\r\n  if (!this.flatMidpoints_) {\r\n    this.flatMidpoints_ = [];\r\n    var flatCoordinates = this.flatCoordinates_;\r\n    var offset = 0;\r\n    var ends = /** @type {Array<number>} */ (this.ends_);\r\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n      var end = ends[i];\r\n      var midpoint = interpolatePoint(\r\n        flatCoordinates, offset, end, 2, 0.5);\r\n      extend(this.flatMidpoints_, midpoint);\r\n      offset = end;\r\n    }\r\n  }\r\n  return this.flatMidpoints_;\r\n};\r\n\r\n/**\r\n* Get the feature identifier.This is a stable identifier for the feature and\r\n* is set when reading data from a remote source.\r\n* @return {number|string|undefined} Id.\r\n* @api\r\n*/\r\nRenderFeature.prototype.getId = function getId () {\r\n  return this.id_;\r\n};\r\n\r\n/**\r\n* @return {Array<number>} Flat coordinates.\r\n*/\r\nRenderFeature.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\r\n  return this.flatCoordinates_;\r\n};\r\n\r\n/**\r\n* For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\r\n* determining the geometry type in style function (see {@link #getType}).\r\n* @return {RenderFeature} Feature.\r\n* @api\r\n*/\r\nRenderFeature.prototype.getGeometry = function getGeometry () {\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @return {RenderFeature} Simplified geometry.\r\n */\r\nRenderFeature.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\r\n  return this;\r\n};\r\n\r\n/**\r\n* Get the feature properties.\r\n* @return {Object<string, *>} Feature properties.\r\n* @api\r\n*/\r\nRenderFeature.prototype.getProperties = function getProperties () {\r\n  return this.properties_;\r\n};\r\n\r\n/**\r\n* @return {number} Stride.\r\n*/\r\nRenderFeature.prototype.getStride = function getStride () {\r\n  return 2;\r\n};\r\n\r\n/**\r\n * @return {undefined}\r\n */\r\nRenderFeature.prototype.getStyleFunction = function getStyleFunction () {\r\n  return undefined;\r\n};\r\n\r\n/**\r\n* Get the type of this feature's geometry.\r\n* @return {GeometryType} Geometry type.\r\n* @api\r\n*/\r\nRenderFeature.prototype.getType = function getType () {\r\n  return this.type_;\r\n};\r\n\r\n/**\r\n* Transform geometry coordinates from tile pixel space to projected.\r\n* The SRS of the source and destination are expected to be the same.\r\n*\r\n* @param {import(\"../proj.js\").ProjectionLike} source The current projection\r\n* @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.\r\n*/\r\nRenderFeature.prototype.transform = function transform (source, destination) {\r\n  source = getProjection(source);\r\n  var pixelExtent = source.getExtent();\r\n  var projectedExtent = source.getWorldExtent();\r\n  var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\r\n  composeTransform(tmpTransform,\r\n    projectedExtent[0], projectedExtent[3],\r\n    scale, -scale, 0,\r\n    0, 0);\r\n  transform2D(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2,\r\n    tmpTransform, this.flatCoordinates_);\r\n};\r\n\r\n\r\n/**\r\n * @return {Array<number>|Array<Array<number>>} Ends or endss.\r\n */\r\nRenderFeature.prototype.getEnds =\r\nRenderFeature.prototype.getEndss = function() {\r\n  return this.ends_;\r\n};\r\n\r\n\r\n/**\r\n * @return {Array<number>} Flat coordinates.\r\n */\r\nRenderFeature.prototype.getFlatCoordinates =\r\n    RenderFeature.prototype.getOrientedFlatCoordinates;\r\n\r\n\r\nexport default RenderFeature;\r\n\r\n//# sourceMappingURL=Feature.js.map","/**\r\n * @module ol/format/MVT\r\n */\r\n//FIXME Implement projection handling\r\n\r\nimport {assert} from '../asserts.js';\r\nimport PBF from 'pbf';\r\nimport FeatureFormat, {transformWithOptions} from './Feature.js';\r\nimport FormatType from './FormatType.js';\r\nimport GeometryLayout from '../geom/GeometryLayout.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport MultiLineString from '../geom/MultiLineString.js';\r\nimport MultiPoint from '../geom/MultiPoint.js';\r\nimport MultiPolygon from '../geom/MultiPolygon.js';\r\nimport Point from '../geom/Point.js';\r\nimport Polygon from '../geom/Polygon.js';\r\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\r\nimport Projection from '../proj/Projection.js';\r\nimport Units from '../proj/Units.js';\r\nimport RenderFeature from '../render/Feature.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\r\n * {@link module:ol/format/MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\r\n * support at the cost of decreased rendering performance. The default is\r\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\r\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\r\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\r\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\r\n * layers.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Feature format for reading data in the Mapbox MVT format.\r\n *\r\n * @param {Options=} opt_options Options.\r\n * @api\r\n */\r\nvar MVT = /*@__PURE__*/(function (FeatureFormat) {\n  function MVT(opt_options) {\r\n    FeatureFormat.call(this);\r\n\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    /**\r\n     * @type {Projection}\r\n     */\r\n    this.dataProjection = new Projection({\r\n      code: '',\r\n      units: Units.TILE_PIXELS\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../Feature.js\").FeatureClass}\r\n     */\r\n    this.featureClass_ = options.featureClass ? options.featureClass : RenderFeature;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|undefined}\r\n     */\r\n    this.geometryName_ = options.geometryName;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<string>}\r\n     */\r\n    this.layers_ = options.layers ? options.layers : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../extent.js\").Extent}\r\n     */\r\n    this.extent_ = null;\r\n\r\n  }\n\n  if ( FeatureFormat ) MVT.__proto__ = FeatureFormat;\n  MVT.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  MVT.prototype.constructor = MVT;\r\n\r\n  /**\r\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\r\n   * property.\r\n   * @suppress {missingProperties}\r\n   * @param {Object} pbf PBF.\r\n   * @param {Object} feature Raw feature.\r\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\r\n   * @param {Array<number>} ends Array to store ends in.\r\n   * @private\r\n   */\r\n  MVT.prototype.readRawGeometry_ = function readRawGeometry_ (pbf, feature, flatCoordinates, ends) {\r\n    pbf.pos = feature.geometry;\r\n\r\n    var end = pbf.readVarint() + pbf.pos;\r\n    var cmd = 1;\r\n    var length = 0;\r\n    var x = 0;\r\n    var y = 0;\r\n    var coordsLen = 0;\r\n    var currentEnd = 0;\r\n\r\n    while (pbf.pos < end) {\r\n      if (!length) {\r\n        var cmdLen = pbf.readVarint();\r\n        cmd = cmdLen & 0x7;\r\n        length = cmdLen >> 3;\r\n      }\r\n\r\n      length--;\r\n\r\n      if (cmd === 1 || cmd === 2) {\r\n        x += pbf.readSVarint();\r\n        y += pbf.readSVarint();\r\n\r\n        if (cmd === 1) { // moveTo\r\n          if (coordsLen > currentEnd) {\r\n            ends.push(coordsLen);\r\n            currentEnd = coordsLen;\r\n          }\r\n        }\r\n\r\n        flatCoordinates.push(x, y);\r\n        coordsLen += 2;\r\n\r\n      } else if (cmd === 7) {\r\n\r\n        if (coordsLen > currentEnd) {\r\n          // close polygon\r\n          flatCoordinates.push(\r\n            flatCoordinates[currentEnd], flatCoordinates[currentEnd + 1]);\r\n          coordsLen += 2;\r\n        }\r\n\r\n      } else {\r\n        assert(false, 59); // Invalid command found in the PBF\r\n      }\r\n    }\r\n\r\n    if (coordsLen > currentEnd) {\r\n      ends.push(coordsLen);\r\n      currentEnd = coordsLen;\r\n    }\r\n\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {Object} pbf PBF\r\n   * @param {Object} rawFeature Raw Mapbox feature.\r\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\r\n   */\r\n  MVT.prototype.createFeature_ = function createFeature_ (pbf, rawFeature, opt_options) {\r\n    var type = rawFeature.type;\r\n    if (type === 0) {\r\n      return null;\r\n    }\r\n\r\n    var feature;\r\n    var id = rawFeature.id;\r\n    var values = rawFeature.properties;\r\n    values[this.layerName_] = rawFeature.layer.name;\r\n\r\n    var flatCoordinates = [];\r\n    var ends = [];\r\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\r\n\r\n    var geometryType = getGeometryType(type, ends.length);\r\n\r\n    if (this.featureClass_ === RenderFeature) {\r\n      feature = new this.featureClass_(geometryType, flatCoordinates, ends, values, id);\r\n    } else {\r\n      var geom;\r\n      if (geometryType == GeometryType.POLYGON) {\r\n        var endss = [];\r\n        var offset = 0;\r\n        var prevEndIndex = 0;\r\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\r\n          var end = ends[i];\r\n          if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\r\n            endss.push(ends.slice(prevEndIndex, i));\r\n            prevEndIndex = i;\r\n          }\r\n          offset = end;\r\n        }\r\n        if (endss.length > 1) {\r\n          geom = new MultiPolygon(flatCoordinates, GeometryLayout.XY, endss);\r\n        } else {\r\n          geom = new Polygon(flatCoordinates, GeometryLayout.XY, ends);\r\n        }\r\n      } else {\r\n        geom = geometryType === GeometryType.POINT ? new Point(flatCoordinates, GeometryLayout.XY) :\r\n          geometryType === GeometryType.LINE_STRING ? new LineString(flatCoordinates, GeometryLayout.XY) :\r\n            geometryType === GeometryType.POLYGON ? new Polygon(flatCoordinates, GeometryLayout.XY, ends) :\r\n              geometryType === GeometryType.MULTI_POINT ? new MultiPoint(flatCoordinates, GeometryLayout.XY) :\r\n                geometryType === GeometryType.MULTI_LINE_STRING ? new MultiLineString(flatCoordinates, GeometryLayout.XY, ends) :\r\n                  null;\r\n      }\r\n      var ctor = /** @type {typeof import(\"../Feature.js\").default} */ (this.featureClass_);\r\n      feature = new ctor();\r\n      if (this.geometryName_) {\r\n        feature.setGeometryName(this.geometryName_);\r\n      }\r\n      var geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geom, false,\r\n        this.adaptOptions(opt_options)));\r\n      feature.setGeometry(geometry);\r\n      feature.setId(id);\r\n      feature.setProperties(values);\r\n    }\r\n\r\n    return feature;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  MVT.prototype.getLastExtent = function getLastExtent () {\r\n    return this.extent_;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  MVT.prototype.getType = function getType () {\r\n    return FormatType.ARRAY_BUFFER;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  MVT.prototype.readFeatures = function readFeatures (source, opt_options) {\r\n    var layers = this.layers_;\r\n\r\n    var pbf = new PBF(/** @type {ArrayBuffer} */ (source));\r\n    var pbfLayers = pbf.readFields(layersPBFReader, {});\r\n    /** @type {Array<import(\"../Feature.js\").FeatureLike>} */\r\n    var features = [];\r\n    for (var name in pbfLayers) {\r\n      if (layers && layers.indexOf(name) == -1) {\r\n        continue;\r\n      }\r\n      var pbfLayer = pbfLayers[name];\r\n\r\n      for (var i = 0, ii = pbfLayer.length; i < ii; ++i) {\r\n        var rawFeature = readRawFeature(pbf, pbfLayer, i);\r\n        features.push(this.createFeature_(pbf, rawFeature));\r\n      }\r\n      this.extent_ = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\r\n    }\r\n\r\n    return features;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  MVT.prototype.readProjection = function readProjection (source) {\r\n    return this.dataProjection;\r\n  };\r\n\r\n  /**\r\n   * Sets the layers that features will be read from.\r\n   * @param {Array<string>} layers Layers.\r\n   * @api\r\n   */\r\n  MVT.prototype.setLayers = function setLayers (layers) {\r\n    this.layers_ = layers;\r\n  };\n\n  return MVT;\n}(FeatureFormat));\r\n\r\n\r\n/**\r\n * Reader callback for parsing layers.\r\n * @param {number} tag The tag.\r\n * @param {Object} layers The layers object.\r\n * @param {Object} pbf The PBF.\r\n */\r\nfunction layersPBFReader(tag, layers, pbf) {\r\n  if (tag === 3) {\r\n    var layer = {\r\n      keys: [],\r\n      values: [],\r\n      features: []\r\n    };\r\n    var end = pbf.readVarint() + pbf.pos;\r\n    pbf.readFields(layerPBFReader, layer, end);\r\n    layer.length = layer.features.length;\r\n    if (layer.length) {\r\n      layers[layer.name] = layer;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Reader callback for parsing layer.\r\n * @param {number} tag The tag.\r\n * @param {Object} layer The layer object.\r\n * @param {Object} pbf The PBF.\r\n */\r\nfunction layerPBFReader(tag, layer, pbf) {\r\n  if (tag === 15) {\r\n    layer.version = pbf.readVarint();\r\n  } else if (tag === 1) {\r\n    layer.name = pbf.readString();\r\n  } else if (tag === 5) {\r\n    layer.extent = pbf.readVarint();\r\n  } else if (tag === 2) {\r\n    layer.features.push(pbf.pos);\r\n  } else if (tag === 3) {\r\n    layer.keys.push(pbf.readString());\r\n  } else if (tag === 4) {\r\n    var value = null;\r\n    var end = pbf.readVarint() + pbf.pos;\r\n    while (pbf.pos < end) {\r\n      tag = pbf.readVarint() >> 3;\r\n      value = tag === 1 ? pbf.readString() :\r\n        tag === 2 ? pbf.readFloat() :\r\n          tag === 3 ? pbf.readDouble() :\r\n            tag === 4 ? pbf.readVarint64() :\r\n              tag === 5 ? pbf.readVarint() :\r\n                tag === 6 ? pbf.readSVarint() :\r\n                  tag === 7 ? pbf.readBoolean() : null;\r\n    }\r\n    layer.values.push(value);\r\n  }\r\n}\r\n\r\n/**\r\n * Reader callback for parsing feature.\r\n * @param {number} tag The tag.\r\n * @param {Object} feature The feature object.\r\n * @param {Object} pbf The PBF.\r\n */\r\nfunction featurePBFReader(tag, feature, pbf) {\r\n  if (tag == 1) {\r\n    feature.id = pbf.readVarint();\r\n  } else if (tag == 2) {\r\n    var end = pbf.readVarint() + pbf.pos;\r\n    while (pbf.pos < end) {\r\n      var key = feature.layer.keys[pbf.readVarint()];\r\n      var value = feature.layer.values[pbf.readVarint()];\r\n      feature.properties[key] = value;\r\n    }\r\n  } else if (tag == 3) {\r\n    feature.type = pbf.readVarint();\r\n  } else if (tag == 4) {\r\n    feature.geometry = pbf.pos;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\r\n * @suppress {missingProperties}\r\n * @param {Object} pbf PBF.\r\n * @param {Object} layer Raw layer.\r\n * @param {number} i Index of the feature in the raw layer's `features` array.\r\n * @return {Object} Raw feature.\r\n */\r\nfunction readRawFeature(pbf, layer, i) {\r\n  pbf.pos = layer.features[i];\r\n  var end = pbf.readVarint() + pbf.pos;\r\n\r\n  var feature = {\r\n    layer: layer,\r\n    type: 0,\r\n    properties: {}\r\n  };\r\n  pbf.readFields(featurePBFReader, feature, end);\r\n  return feature;\r\n}\r\n\r\n\r\n/**\r\n * @suppress {missingProperties}\r\n * @param {number} type The raw feature's geometry type\r\n * @param {number} numEnds Number of ends of the flat coordinates of the\r\n * geometry.\r\n * @return {GeometryType} The geometry type.\r\n */\r\nfunction getGeometryType(type, numEnds) {\r\n  /** @type {GeometryType} */\r\n  var geometryType;\r\n  if (type === 1) {\r\n    geometryType = numEnds === 1 ?\r\n      GeometryType.POINT : GeometryType.MULTI_POINT;\r\n  } else if (type === 2) {\r\n    geometryType = numEnds === 1 ?\r\n      GeometryType.LINE_STRING :\r\n      GeometryType.MULTI_LINE_STRING;\r\n  } else if (type === 3) {\r\n    geometryType = GeometryType.POLYGON;\r\n    // MultiPolygon not relevant for rendering - winding order determines\r\n    // outer rings of polygons.\r\n  }\r\n  return geometryType;\r\n}\r\n\r\nexport default MVT;\r\n\r\n//# sourceMappingURL=MVT.js.map","/**\r\n * @module ol/format/OSMXML\r\n */\r\n// FIXME add typedef for stack state objects\r\nimport {extend} from '../array.js';\r\nimport Feature from '../Feature.js';\r\nimport {transformWithOptions} from './Feature.js';\r\nimport XMLFeature from './XMLFeature.js';\r\nimport GeometryLayout from '../geom/GeometryLayout.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport Point from '../geom/Point.js';\r\nimport Polygon from '../geom/Polygon.js';\r\nimport {isEmpty} from '../obj.js';\r\nimport {get as getProjection} from '../proj.js';\r\nimport {pushParseAndPop, makeStructureNS} from '../xml.js';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Array<null>}\r\n */\r\nvar NAMESPACE_URIS = [null];\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar WAY_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'nd': readNd,\r\n    'tag': readTag\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'node': readNode,\r\n    'way': readWay\r\n  });\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Feature format for reading data in the\r\n * [OSMXML format](http://wiki.openstreetmap.org/wiki/OSM_XML).\r\n *\r\n * @api\r\n */\r\nvar OSMXML = /*@__PURE__*/(function (XMLFeature) {\n  function OSMXML() {\r\n    XMLFeature.call(this);\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    this.dataProjection = getProjection('EPSG:4326');\r\n  }\n\n  if ( XMLFeature ) OSMXML.__proto__ = XMLFeature;\n  OSMXML.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  OSMXML.prototype.constructor = OSMXML;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  OSMXML.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\r\n    var options = this.getReadOptions(node, opt_options);\r\n    if (node.localName == 'osm') {\r\n      var state = pushParseAndPop({\r\n        nodes: {},\r\n        ways: [],\r\n        features: []\r\n      }, PARSERS, node, [options]);\r\n      // parse nodes in ways\r\n      for (var j = 0; j < state.ways.length; j++) {\r\n        var values = /** @type {Object} */ (state.ways[j]);\r\n        /** @type {Array<number>} */\r\n        var flatCoordinates = [];\r\n        for (var i = 0, ii = values.ndrefs.length; i < ii; i++) {\r\n          var point = state.nodes[values.ndrefs[i]];\r\n          extend(flatCoordinates, point);\r\n        }\r\n        var geometry = (void 0);\r\n        if (values.ndrefs[0] == values.ndrefs[values.ndrefs.length - 1]) {\r\n          // closed way\r\n          geometry = new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\r\n        } else {\r\n          geometry = new LineString(flatCoordinates, GeometryLayout.XY);\r\n        }\r\n        transformWithOptions(geometry, false, options);\r\n        var feature = new Feature(geometry);\r\n        feature.setId(values.id);\r\n        feature.setProperties(values.tags);\r\n        state.features.push(feature);\r\n      }\r\n      if (state.features) {\r\n        return state.features;\r\n      }\r\n    }\r\n    return [];\r\n  };\n\n  return OSMXML;\n}(XMLFeature));\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar NODE_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'tag': readTag\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction readNode(node, objectStack) {\r\n  var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\r\n  var state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n  var id = node.getAttribute('id');\r\n  /** @type {import(\"../coordinate.js\").Coordinate} */\r\n  var coordinates = [\r\n    parseFloat(node.getAttribute('lon')),\r\n    parseFloat(node.getAttribute('lat'))\r\n  ];\r\n  state.nodes[id] = coordinates;\r\n\r\n  var values = pushParseAndPop({\r\n    tags: {}\r\n  }, NODE_PARSERS, node, objectStack);\r\n  if (!isEmpty(values.tags)) {\r\n    var geometry = new Point(coordinates);\r\n    transformWithOptions(geometry, false, options);\r\n    var feature = new Feature(geometry);\r\n    feature.setId(id);\r\n    feature.setProperties(values.tags);\r\n    state.features.push(feature);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction readWay(node, objectStack) {\r\n  var id = node.getAttribute('id');\r\n  var values = pushParseAndPop({\r\n    id: id,\r\n    ndrefs: [],\r\n    tags: {}\r\n  }, WAY_PARSERS, node, objectStack);\r\n  var state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n  state.ways.push(values);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction readNd(node, objectStack) {\r\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n  values.ndrefs.push(node.getAttribute('ref'));\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction readTag(node, objectStack) {\r\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n  values.tags[node.getAttribute('k')] = node.getAttribute('v');\r\n}\r\n\r\n\r\nexport default OSMXML;\r\n\r\n//# sourceMappingURL=OSMXML.js.map","/**\r\n * @module ol/geom/flat/flip\r\n */\r\n\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {Array<number>=} opt_dest Destination.\r\n * @param {number=} opt_destOffset Destination offset.\r\n * @return {Array<number>} Flat coordinates.\r\n */\r\nexport function flipXY(flatCoordinates, offset, end, stride, opt_dest, opt_destOffset) {\r\n  var dest, destOffset;\r\n  if (opt_dest !== undefined) {\r\n    dest = opt_dest;\r\n    destOffset = opt_destOffset !== undefined ? opt_destOffset : 0;\r\n  } else {\r\n    dest = [];\r\n    destOffset = 0;\r\n  }\r\n  var j = offset;\r\n  while (j < end) {\r\n    var x = flatCoordinates[j++];\r\n    dest[destOffset++] = flatCoordinates[j++];\r\n    dest[destOffset++] = x;\r\n    for (var k = 2; k < stride; ++k) {\r\n      dest[destOffset++] = flatCoordinates[j++];\r\n    }\r\n  }\r\n  dest.length = destOffset;\r\n  return dest;\r\n}\r\n\r\n//# sourceMappingURL=flip.js.map","/**\r\n * @module ol/format/Polyline\r\n */\r\nimport {assert} from '../asserts.js';\r\nimport Feature from '../Feature.js';\r\nimport {transformWithOptions} from './Feature.js';\r\nimport TextFeature from './TextFeature.js';\r\nimport GeometryLayout from '../geom/GeometryLayout.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\r\nimport {flipXY} from '../geom/flat/flip.js';\r\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\r\nimport {get as getProjection} from '../proj.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\r\n * @property {GeometryLayout} [geometryLayout='XY'] Layout of the\r\n * feature geometries created by the format reader.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Feature format for reading and writing data in the Encoded\r\n * Polyline Algorithm Format.\r\n *\r\n * When reading features, the coordinates are assumed to be in two dimensions\r\n * and in [latitude, longitude] order.\r\n *\r\n * As Polyline sources contain a single feature,\r\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\r\n * feature in an array.\r\n *\r\n * @api\r\n */\r\nvar Polyline = /*@__PURE__*/(function (TextFeature) {\n  function Polyline(opt_options) {\r\n    TextFeature.call(this);\r\n\r\n    var options = opt_options ? opt_options : {};\r\n\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    this.dataProjection = getProjection('EPSG:4326');\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.factor_ = options.factor ? options.factor : 1e5;\r\n\r\n    /**\r\n     * @private\r\n     * @type {GeometryLayout}\r\n     */\r\n    this.geometryLayout_ = options.geometryLayout ?\r\n      options.geometryLayout : GeometryLayout.XY;\r\n  }\n\n  if ( TextFeature ) Polyline.__proto__ = TextFeature;\n  Polyline.prototype = Object.create( TextFeature && TextFeature.prototype );\n  Polyline.prototype.constructor = Polyline;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Polyline.prototype.readFeatureFromText = function readFeatureFromText (text, opt_options) {\r\n    var geometry = this.readGeometryFromText(text, opt_options);\r\n    return new Feature(geometry);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Polyline.prototype.readFeaturesFromText = function readFeaturesFromText (text, opt_options) {\r\n    var feature = this.readFeatureFromText(text, opt_options);\r\n    return [feature];\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Polyline.prototype.readGeometryFromText = function readGeometryFromText (text, opt_options) {\r\n    var stride = getStrideForLayout(this.geometryLayout_);\r\n    var flatCoordinates = decodeDeltas(text, stride, this.factor_);\r\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\r\n    var coordinates = inflateCoordinates(flatCoordinates, 0, flatCoordinates.length, stride);\r\n\r\n    return (\r\n      /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(\r\n        new LineString(coordinates, this.geometryLayout_),\r\n        false,\r\n        this.adaptOptions(opt_options)\r\n      ))\r\n    );\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Polyline.prototype.writeFeatureText = function writeFeatureText (feature, opt_options) {\r\n    var geometry = feature.getGeometry();\r\n    if (geometry) {\r\n      return this.writeGeometryText(geometry, opt_options);\r\n    } else {\r\n      assert(false, 40); // Expected `feature` to have a geometry\r\n      return '';\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Polyline.prototype.writeFeaturesText = function writeFeaturesText (features, opt_options) {\r\n    return this.writeFeatureText(features[0], opt_options);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Polyline.prototype.writeGeometryText = function writeGeometryText (geometry, opt_options) {\r\n    geometry = /** @type {LineString} */\r\n      (transformWithOptions(geometry, true, this.adaptOptions(opt_options)));\r\n    var flatCoordinates = geometry.getFlatCoordinates();\r\n    var stride = geometry.getStride();\r\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\r\n    return encodeDeltas(flatCoordinates, stride, this.factor_);\r\n  };\n\n  return Polyline;\n}(TextFeature));\r\n\r\n\r\n/**\r\n * Encode a list of n-dimensional points and return an encoded string\r\n *\r\n * Attention: This function will modify the passed array!\r\n *\r\n * @param {Array<number>} numbers A list of n-dimensional points.\r\n * @param {number} stride The number of dimension of the points in the list.\r\n * @param {number=} opt_factor The factor by which the numbers will be\r\n *     multiplied. The remaining decimal places will get rounded away.\r\n *     Default is `1e5`.\r\n * @return {string} The encoded string.\r\n * @api\r\n */\r\nexport function encodeDeltas(numbers, stride, opt_factor) {\r\n  var factor = opt_factor ? opt_factor : 1e5;\r\n  var d;\r\n\r\n  var lastNumbers = new Array(stride);\r\n  for (d = 0; d < stride; ++d) {\r\n    lastNumbers[d] = 0;\r\n  }\r\n\r\n  for (var i = 0, ii = numbers.length; i < ii;) {\r\n    for (d = 0; d < stride; ++d, ++i) {\r\n      var num = numbers[i];\r\n      var delta = num - lastNumbers[d];\r\n      lastNumbers[d] = num;\r\n\r\n      numbers[i] = delta;\r\n    }\r\n  }\r\n\r\n  return encodeFloats(numbers, factor);\r\n}\r\n\r\n\r\n/**\r\n * Decode a list of n-dimensional points from an encoded string\r\n *\r\n * @param {string} encoded An encoded string.\r\n * @param {number} stride The number of dimension of the points in the\r\n *     encoded string.\r\n * @param {number=} opt_factor The factor by which the resulting numbers will\r\n *     be divided. Default is `1e5`.\r\n * @return {Array<number>} A list of n-dimensional points.\r\n * @api\r\n */\r\nexport function decodeDeltas(encoded, stride, opt_factor) {\r\n  var factor = opt_factor ? opt_factor : 1e5;\r\n  var d;\r\n\r\n  /** @type {Array<number>} */\r\n  var lastNumbers = new Array(stride);\r\n  for (d = 0; d < stride; ++d) {\r\n    lastNumbers[d] = 0;\r\n  }\r\n\r\n  var numbers = decodeFloats(encoded, factor);\r\n\r\n  for (var i = 0, ii = numbers.length; i < ii;) {\r\n    for (d = 0; d < stride; ++d, ++i) {\r\n      lastNumbers[d] += numbers[i];\r\n\r\n      numbers[i] = lastNumbers[d];\r\n    }\r\n  }\r\n\r\n  return numbers;\r\n}\r\n\r\n\r\n/**\r\n * Encode a list of floating point numbers and return an encoded string\r\n *\r\n * Attention: This function will modify the passed array!\r\n *\r\n * @param {Array<number>} numbers A list of floating point numbers.\r\n * @param {number=} opt_factor The factor by which the numbers will be\r\n *     multiplied. The remaining decimal places will get rounded away.\r\n *     Default is `1e5`.\r\n * @return {string} The encoded string.\r\n * @api\r\n */\r\nexport function encodeFloats(numbers, opt_factor) {\r\n  var factor = opt_factor ? opt_factor : 1e5;\r\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\r\n    numbers[i] = Math.round(numbers[i] * factor);\r\n  }\r\n\r\n  return encodeSignedIntegers(numbers);\r\n}\r\n\r\n\r\n/**\r\n * Decode a list of floating point numbers from an encoded string\r\n *\r\n * @param {string} encoded An encoded string.\r\n * @param {number=} opt_factor The factor by which the result will be divided.\r\n *     Default is `1e5`.\r\n * @return {Array<number>} A list of floating point numbers.\r\n * @api\r\n */\r\nexport function decodeFloats(encoded, opt_factor) {\r\n  var factor = opt_factor ? opt_factor : 1e5;\r\n  var numbers = decodeSignedIntegers(encoded);\r\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\r\n    numbers[i] /= factor;\r\n  }\r\n  return numbers;\r\n}\r\n\r\n\r\n/**\r\n * Encode a list of signed integers and return an encoded string\r\n *\r\n * Attention: This function will modify the passed array!\r\n *\r\n * @param {Array<number>} numbers A list of signed integers.\r\n * @return {string} The encoded string.\r\n */\r\nexport function encodeSignedIntegers(numbers) {\r\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\r\n    var num = numbers[i];\r\n    numbers[i] = (num < 0) ? ~(num << 1) : (num << 1);\r\n  }\r\n  return encodeUnsignedIntegers(numbers);\r\n}\r\n\r\n\r\n/**\r\n * Decode a list of signed integers from an encoded string\r\n *\r\n * @param {string} encoded An encoded string.\r\n * @return {Array<number>} A list of signed integers.\r\n */\r\nexport function decodeSignedIntegers(encoded) {\r\n  var numbers = decodeUnsignedIntegers(encoded);\r\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\r\n    var num = numbers[i];\r\n    numbers[i] = (num & 1) ? ~(num >> 1) : (num >> 1);\r\n  }\r\n  return numbers;\r\n}\r\n\r\n\r\n/**\r\n * Encode a list of unsigned integers and return an encoded string\r\n *\r\n * @param {Array<number>} numbers A list of unsigned integers.\r\n * @return {string} The encoded string.\r\n */\r\nexport function encodeUnsignedIntegers(numbers) {\r\n  var encoded = '';\r\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\r\n    encoded += encodeUnsignedInteger(numbers[i]);\r\n  }\r\n  return encoded;\r\n}\r\n\r\n\r\n/**\r\n * Decode a list of unsigned integers from an encoded string\r\n *\r\n * @param {string} encoded An encoded string.\r\n * @return {Array<number>} A list of unsigned integers.\r\n */\r\nexport function decodeUnsignedIntegers(encoded) {\r\n  var numbers = [];\r\n  var current = 0;\r\n  var shift = 0;\r\n  for (var i = 0, ii = encoded.length; i < ii; ++i) {\r\n    var b = encoded.charCodeAt(i) - 63;\r\n    current |= (b & 0x1f) << shift;\r\n    if (b < 0x20) {\r\n      numbers.push(current);\r\n      current = 0;\r\n      shift = 0;\r\n    } else {\r\n      shift += 5;\r\n    }\r\n  }\r\n  return numbers;\r\n}\r\n\r\n\r\n/**\r\n * Encode one single unsigned integer and return an encoded string\r\n *\r\n * @param {number} num Unsigned integer that should be encoded.\r\n * @return {string} The encoded string.\r\n */\r\nexport function encodeUnsignedInteger(num) {\r\n  var value, encoded = '';\r\n  while (num >= 0x20) {\r\n    value = (0x20 | (num & 0x1f)) + 63;\r\n    encoded += String.fromCharCode(value);\r\n    num >>= 5;\r\n  }\r\n  value = num + 63;\r\n  encoded += String.fromCharCode(value);\r\n  return encoded;\r\n}\r\n\r\n\r\nexport default Polyline;\r\n\r\n//# sourceMappingURL=Polyline.js.map","/**\r\n * @module ol/format/TopoJSON\r\n */\r\nimport Feature from '../Feature.js';\r\nimport {transformWithOptions} from './Feature.js';\r\nimport JSONFeature from './JSONFeature.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport MultiLineString from '../geom/MultiLineString.js';\r\nimport MultiPoint from '../geom/MultiPoint.js';\r\nimport MultiPolygon from '../geom/MultiPolygon.js';\r\nimport Point from '../geom/Point.js';\r\nimport Polygon from '../geom/Polygon.js';\r\nimport {get as getProjection} from '../proj.js';\r\n\r\n/**\r\n * @typedef {import(\"topojson-specification\").Topology} TopoJSONTopology\r\n * @typedef {import(\"topojson-specification\").GeometryCollection} TopoJSONGeometryCollection\r\n * @typedef {import(\"topojson-specification\").GeometryObject} TopoJSONGeometry\r\n * @typedef {import(\"topojson-specification\").Point} TopoJSONPoint\r\n * @typedef {import(\"topojson-specification\").MultiPoint} TopoJSONMultiPoint\r\n * @typedef {import(\"topojson-specification\").LineString} TopoJSONLineString\r\n * @typedef {import(\"topojson-specification\").MultiLineString} TopoJSONMultiLineString\r\n * @typedef {import(\"topojson-specification\").Polygon} TopoJSONPolygon\r\n * @typedef {import(\"topojson-specification\").MultiPolygon} TopoJSONMultiPolygon\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\r\n * @property {string} [layerName] Set the name of the TopoJSON topology\r\n * `objects`'s children as feature property with the specified name. This means\r\n * that when set to `'layer'`, a topology like\r\n * ```\r\n * {\r\n *   \"type\": \"Topology\",\r\n *   \"objects\": {\r\n *     \"example\": {\r\n *       \"type\": \"GeometryCollection\",\r\n *       \"geometries\": []\r\n *     }\r\n *   }\r\n * }\r\n * ```\r\n * will result in features that have a property `'layer'` set to `'example'`.\r\n * When not set, no property will be added to features.\r\n * @property {Array<string>} [layers] Names of the TopoJSON topology's\r\n * `objects`'s children to read features from.  If not provided, features will\r\n * be read from all children.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Feature format for reading data in the TopoJSON format.\r\n *\r\n * @api\r\n */\r\nvar TopoJSON = /*@__PURE__*/(function (JSONFeature) {\n  function TopoJSON(opt_options) {\r\n    JSONFeature.call(this);\r\n\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|undefined}\r\n     */\r\n    this.layerName_ = options.layerName;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<string>}\r\n     */\r\n    this.layers_ = options.layers ? options.layers : null;\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    this.dataProjection = getProjection(\r\n      options.dataProjection ?\r\n        options.dataProjection : 'EPSG:4326');\r\n\r\n  }\n\n  if ( JSONFeature ) TopoJSON.__proto__ = JSONFeature;\n  TopoJSON.prototype = Object.create( JSONFeature && JSONFeature.prototype );\n  TopoJSON.prototype.constructor = TopoJSON;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  TopoJSON.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\r\n    if (object.type == 'Topology') {\r\n      var topoJSONTopology = /** @type {TopoJSONTopology} */ (object);\r\n      var transform, scale = null, translate = null;\r\n      if (topoJSONTopology['transform']) {\r\n        transform = topoJSONTopology['transform'];\r\n        scale = transform['scale'];\r\n        translate = transform['translate'];\r\n      }\r\n      var arcs = topoJSONTopology['arcs'];\r\n      if (transform) {\r\n        transformArcs(arcs, scale, translate);\r\n      }\r\n      /** @type {Array<Feature>} */\r\n      var features = [];\r\n      var topoJSONFeatures = topoJSONTopology['objects'];\r\n      var property = this.layerName_;\r\n      var feature;\r\n      for (var objectName in topoJSONFeatures) {\r\n        if (this.layers_ && this.layers_.indexOf(objectName) == -1) {\r\n          continue;\r\n        }\r\n        if (topoJSONFeatures[objectName].type === 'GeometryCollection') {\r\n          feature = /** @type {TopoJSONGeometryCollection} */ (topoJSONFeatures[objectName]);\r\n          features.push.apply(features, readFeaturesFromGeometryCollection(\r\n            feature, arcs, scale, translate, property, objectName, opt_options));\r\n        } else {\r\n          feature = /** @type {TopoJSONGeometry} */ (topoJSONFeatures[objectName]);\r\n          features.push(readFeatureFromGeometry(\r\n            feature, arcs, scale, translate, property, objectName, opt_options));\r\n        }\r\n      }\r\n      return features;\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  TopoJSON.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\r\n    return this.dataProjection;\r\n  };\n\n  return TopoJSON;\n}(JSONFeature));\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, function(TopoJSONGeometry, Array, ...Array=): import(\"../geom/Geometry.js\").default>}\r\n */\r\nvar GEOMETRY_READERS = {\r\n  'Point': readPointGeometry,\r\n  'LineString': readLineStringGeometry,\r\n  'Polygon': readPolygonGeometry,\r\n  'MultiPoint': readMultiPointGeometry,\r\n  'MultiLineString': readMultiLineStringGeometry,\r\n  'MultiPolygon': readMultiPolygonGeometry\r\n};\r\n\r\n\r\n/**\r\n * Concatenate arcs into a coordinate array.\r\n * @param {Array<number>} indices Indices of arcs to concatenate.  Negative\r\n *     values indicate arcs need to be reversed.\r\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs (already\r\n *     transformed).\r\n * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates array.\r\n */\r\nfunction concatenateArcs(indices, arcs) {\r\n  /** @type {Array<import(\"../coordinate.js\").Coordinate>} */\r\n  var coordinates = [];\r\n  var index, arc;\r\n  for (var i = 0, ii = indices.length; i < ii; ++i) {\r\n    index = indices[i];\r\n    if (i > 0) {\r\n      // splicing together arcs, discard last point\r\n      coordinates.pop();\r\n    }\r\n    if (index >= 0) {\r\n      // forward arc\r\n      arc = arcs[index];\r\n    } else {\r\n      // reverse arc\r\n      arc = arcs[~index].slice().reverse();\r\n    }\r\n    coordinates.push.apply(coordinates, arc);\r\n  }\r\n  // provide fresh copies of coordinate arrays\r\n  for (var j = 0, jj = coordinates.length; j < jj; ++j) {\r\n    coordinates[j] = coordinates[j].slice();\r\n  }\r\n  return coordinates;\r\n}\r\n\r\n\r\n/**\r\n * Create a point from a TopoJSON geometry object.\r\n *\r\n * @param {TopoJSONPoint} object TopoJSON object.\r\n * @param {Array<number>} scale Scale for each dimension.\r\n * @param {Array<number>} translate Translation for each dimension.\r\n * @return {Point} Geometry.\r\n */\r\nfunction readPointGeometry(object, scale, translate) {\r\n  var coordinates = object['coordinates'];\r\n  if (scale && translate) {\r\n    transformVertex(coordinates, scale, translate);\r\n  }\r\n  return new Point(coordinates);\r\n}\r\n\r\n\r\n/**\r\n * Create a multi-point from a TopoJSON geometry object.\r\n *\r\n * @param {TopoJSONMultiPoint} object TopoJSON object.\r\n * @param {Array<number>} scale Scale for each dimension.\r\n * @param {Array<number>} translate Translation for each dimension.\r\n * @return {MultiPoint} Geometry.\r\n */\r\nfunction readMultiPointGeometry(object, scale, translate) {\r\n  var coordinates = object['coordinates'];\r\n  if (scale && translate) {\r\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\r\n      transformVertex(coordinates[i], scale, translate);\r\n    }\r\n  }\r\n  return new MultiPoint(coordinates);\r\n}\r\n\r\n\r\n/**\r\n * Create a linestring from a TopoJSON geometry object.\r\n *\r\n * @param {TopoJSONLineString} object TopoJSON object.\r\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\r\n * @return {LineString} Geometry.\r\n */\r\nfunction readLineStringGeometry(object, arcs) {\r\n  var coordinates = concatenateArcs(object['arcs'], arcs);\r\n  return new LineString(coordinates);\r\n}\r\n\r\n\r\n/**\r\n * Create a multi-linestring from a TopoJSON geometry object.\r\n *\r\n * @param {TopoJSONMultiLineString} object TopoJSON object.\r\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\r\n * @return {MultiLineString} Geometry.\r\n */\r\nfunction readMultiLineStringGeometry(object, arcs) {\r\n  var coordinates = [];\r\n  for (var i = 0, ii = object['arcs'].length; i < ii; ++i) {\r\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\r\n  }\r\n  return new MultiLineString(coordinates);\r\n}\r\n\r\n\r\n/**\r\n * Create a polygon from a TopoJSON geometry object.\r\n *\r\n * @param {TopoJSONPolygon} object TopoJSON object.\r\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\r\n * @return {Polygon} Geometry.\r\n */\r\nfunction readPolygonGeometry(object, arcs) {\r\n  var coordinates = [];\r\n  for (var i = 0, ii = object['arcs'].length; i < ii; ++i) {\r\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\r\n  }\r\n  return new Polygon(coordinates);\r\n}\r\n\r\n\r\n/**\r\n * Create a multi-polygon from a TopoJSON geometry object.\r\n *\r\n * @param {TopoJSONMultiPolygon} object TopoJSON object.\r\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\r\n * @return {MultiPolygon} Geometry.\r\n */\r\nfunction readMultiPolygonGeometry(object, arcs) {\r\n  var coordinates = [];\r\n  for (var i = 0, ii = object['arcs'].length; i < ii; ++i) {\r\n    // for each polygon\r\n    var polyArray = object['arcs'][i];\r\n    var ringCoords = [];\r\n    for (var j = 0, jj = polyArray.length; j < jj; ++j) {\r\n      // for each ring\r\n      ringCoords[j] = concatenateArcs(polyArray[j], arcs);\r\n    }\r\n    coordinates[i] = ringCoords;\r\n  }\r\n  return new MultiPolygon(coordinates);\r\n}\r\n\r\n\r\n/**\r\n * Create features from a TopoJSON GeometryCollection object.\r\n *\r\n * @param {TopoJSONGeometryCollection} collection TopoJSON Geometry\r\n *     object.\r\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\r\n * @param {Array<number>} scale Scale for each dimension.\r\n * @param {Array<number>} translate Translation for each dimension.\r\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\r\n *     object to.\r\n * @param {string} name Name of the `Topology`'s child object.\r\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n * @return {Array<Feature>} Array of features.\r\n */\r\nfunction readFeaturesFromGeometryCollection(collection, arcs, scale, translate, property, name, opt_options) {\r\n  var geometries = collection['geometries'];\r\n  var features = [];\r\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\r\n    features[i] = readFeatureFromGeometry(\r\n      geometries[i], arcs, scale, translate, property, name, opt_options);\r\n  }\r\n  return features;\r\n}\r\n\r\n\r\n/**\r\n * Create a feature from a TopoJSON geometry object.\r\n *\r\n * @param {TopoJSONGeometry} object TopoJSON geometry object.\r\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\r\n * @param {Array<number>} scale Scale for each dimension.\r\n * @param {Array<number>} translate Translation for each dimension.\r\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\r\n *     object to.\r\n * @param {string} name Name of the `Topology`'s child object.\r\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\r\n * @return {Feature} Feature.\r\n */\r\nfunction readFeatureFromGeometry(object, arcs, scale, translate, property, name, opt_options) {\r\n  var geometry;\r\n  var type = object.type;\r\n  var geometryReader = GEOMETRY_READERS[type];\r\n  if ((type === 'Point') || (type === 'MultiPoint')) {\r\n    geometry = geometryReader(object, scale, translate);\r\n  } else {\r\n    geometry = geometryReader(object, arcs);\r\n  }\r\n  var feature = new Feature();\r\n  feature.setGeometry(/** @type {import(\"../geom/Geometry.js\").default} */ (\r\n    transformWithOptions(geometry, false, opt_options)));\r\n  if (object.id !== undefined) {\r\n    feature.setId(object.id);\r\n  }\r\n  var properties = object.properties;\r\n  if (property) {\r\n    if (!properties) {\r\n      properties = {};\r\n    }\r\n    properties[property] = name;\r\n  }\r\n  if (properties) {\r\n    feature.setProperties(properties);\r\n  }\r\n  return feature;\r\n}\r\n\r\n\r\n/**\r\n * Apply a linear transform to array of arcs.  The provided array of arcs is\r\n * modified in place.\r\n *\r\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\r\n * @param {Array<number>} scale Scale for each dimension.\r\n * @param {Array<number>} translate Translation for each dimension.\r\n */\r\nfunction transformArcs(arcs, scale, translate) {\r\n  for (var i = 0, ii = arcs.length; i < ii; ++i) {\r\n    transformArc(arcs[i], scale, translate);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Apply a linear transform to an arc.  The provided arc is modified in place.\r\n *\r\n * @param {Array<import(\"../coordinate.js\").Coordinate>} arc Arc.\r\n * @param {Array<number>} scale Scale for each dimension.\r\n * @param {Array<number>} translate Translation for each dimension.\r\n */\r\nfunction transformArc(arc, scale, translate) {\r\n  var x = 0;\r\n  var y = 0;\r\n  for (var i = 0, ii = arc.length; i < ii; ++i) {\r\n    var vertex = arc[i];\r\n    x += vertex[0];\r\n    y += vertex[1];\r\n    vertex[0] = x;\r\n    vertex[1] = y;\r\n    transformVertex(vertex, scale, translate);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Apply a linear transform to a vertex.  The provided vertex is modified in\r\n * place.\r\n *\r\n * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\r\n * @param {Array<number>} scale Scale for each dimension.\r\n * @param {Array<number>} translate Translation for each dimension.\r\n */\r\nfunction transformVertex(vertex, scale, translate) {\r\n  vertex[0] = vertex[0] * scale[0] + translate[0];\r\n  vertex[1] = vertex[1] * scale[1] + translate[1];\r\n}\r\n\r\n\r\nexport default TopoJSON;\r\n\r\n//# sourceMappingURL=TopoJSON.js.map","/**\r\n * @module ol/format/WFS\r\n */\r\nimport {assert} from '../asserts.js';\r\nimport GML2 from './GML2.js';\r\nimport GML3 from './GML3.js';\r\nimport GMLBase, {GMLNS} from './GMLBase.js';\r\nimport {and as andFilter, bbox as bboxFilter} from './filter.js';\r\nimport XMLFeature from './XMLFeature.js';\r\nimport {readNonNegativeIntegerString, readNonNegativeInteger, writeStringTextNode} from './xsd.js';\r\nimport {assign} from '../obj.js';\r\nimport {get as getProjection} from '../proj.js';\r\nimport {createElementNS, isDocument, makeArrayPusher, makeChildAppender,\r\n  makeObjectPropertySetter, makeSimpleNodeFactory, parse, parseNode,\r\n  pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar FEATURE_COLLECTION_PARSERS = {\r\n  'http://www.opengis.net/gml': {\r\n    'boundedBy': makeObjectPropertySetter(\r\n      GMLBase.prototype.readGeometryElement, 'bounds')\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar TRANSACTION_SUMMARY_PARSERS = {\r\n  'http://www.opengis.net/wfs': {\r\n    'totalInserted': makeObjectPropertySetter(readNonNegativeInteger),\r\n    'totalUpdated': makeObjectPropertySetter(readNonNegativeInteger),\r\n    'totalDeleted': makeObjectPropertySetter(readNonNegativeInteger)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar TRANSACTION_RESPONSE_PARSERS = {\r\n  'http://www.opengis.net/wfs': {\r\n    'TransactionSummary': makeObjectPropertySetter(\r\n      readTransactionSummary, 'transactionSummary'),\r\n    'InsertResults': makeObjectPropertySetter(\r\n      readInsertResults, 'insertIds')\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar QUERY_SERIALIZERS = {\r\n  'http://www.opengis.net/wfs': {\r\n    'PropertyName': makeChildAppender(writeStringTextNode)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar TRANSACTION_SERIALIZERS = {\r\n  'http://www.opengis.net/wfs': {\r\n    'Insert': makeChildAppender(writeFeature),\r\n    'Update': makeChildAppender(writeUpdate),\r\n    'Delete': makeChildAppender(writeDelete),\r\n    'Property': makeChildAppender(writeProperty),\r\n    'Native': makeChildAppender(writeNative)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\r\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\r\n * @property {GMLBase} [gmlFormat] The GML format to use to parse the response. Default is `ol/format/GML3`.\r\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} WriteGetFeatureOptions\r\n * @property {string} featureNS The namespace URI used for features.\r\n * @property {string} featurePrefix The prefix for the feature namespace.\r\n * @property {Array<string>} featureTypes The feature type names.\r\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\r\n * geometries when this is not provided.\r\n * @property {string} [handle] Handle.\r\n * @property {string} [outputFormat] Output format.\r\n * @property {number} [maxFeatures] Maximum number of features to fetch.\r\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\r\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\r\n * @property {string} [viewParams] viewParams GeoServer vendor parameter.\r\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\r\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\r\n * @property {number} [count] Number of features to retrieve when paging. This is a\r\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\r\n * Web Feature Services have repurposed `maxfeatures` instead.\r\n * @property {import(\"../extent.js\").Extent} [bbox] Extent to use for the BBOX filter.\r\n * @property {import(\"./filter/Filter.js\").default} [filter] Filter condition. See\r\n * {@link module:ol/format/Filter} for more information.\r\n * @property {string} [resultType] Indicates what response should be returned,\r\n * E.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} WriteTransactionOptions\r\n * @property {string} featureNS The namespace URI used for features.\r\n * @property {string} featurePrefix The prefix for the feature namespace.\r\n * @property {string} featureType The feature type name.\r\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\r\n * geometries when this is not provided.\r\n * @property {string} [handle] Handle.\r\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\r\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\r\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\r\n * @property {import(\"./GMLBase.js\").Options} [gmlOptions] GML options for the WFS transaction writer.\r\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0` or `1.1.0`.\r\n */\r\n\r\n\r\n/**\r\n * Number of features; bounds/extent.\r\n * @typedef {Object} FeatureCollectionMetadata\r\n * @property {number} numberOfFeatures\r\n * @property {import(\"../extent.js\").Extent} bounds\r\n */\r\n\r\n\r\n/**\r\n * Total deleted; total inserted; total updated; array of insert ids.\r\n * @typedef {Object} TransactionResponse\r\n * @property {number} totalDeleted\r\n * @property {number} totalInserted\r\n * @property {number} totalUpdated\r\n * @property {Array<string>} insertIds\r\n */\r\n\r\n\r\n/**\r\n * @type {string}\r\n */\r\nvar FEATURE_PREFIX = 'feature';\r\n\r\n\r\n/**\r\n * @type {string}\r\n */\r\nvar XMLNS = 'http://www.w3.org/2000/xmlns/';\r\n\r\n\r\n/**\r\n * @type {string}\r\n */\r\nvar OGCNS = 'http://www.opengis.net/ogc';\r\n\r\n\r\n/**\r\n * @type {string}\r\n */\r\nvar WFSNS = 'http://www.opengis.net/wfs';\r\n\r\n\r\n/**\r\n * @type {string}\r\n */\r\nvar FESNS = 'http://www.opengis.net/fes';\r\n\r\n\r\n/**\r\n * @type {Object<string, string>}\r\n */\r\nvar SCHEMA_LOCATIONS = {\r\n  '1.1.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\r\n  '1.0.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nvar DEFAULT_VERSION = '1.1.0';\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Feature format for reading and writing data in the WFS format.\r\n * By default, supports WFS version 1.1.0. You can pass a GML format\r\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\r\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\r\n *\r\n * @api\r\n */\r\nvar WFS = /*@__PURE__*/(function (XMLFeature) {\n  function WFS(opt_options) {\r\n    XMLFeature.call(this);\r\n\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<string>|string|undefined}\r\n     */\r\n    this.featureType_ = options.featureType;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<string, string>|string|undefined}\r\n     */\r\n    this.featureNS_ = options.featureNS;\r\n\r\n    /**\r\n     * @private\r\n     * @type {GMLBase}\r\n     */\r\n    this.gmlFormat_ = options.gmlFormat ?\r\n      options.gmlFormat : new GML3();\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.schemaLocation_ = options.schemaLocation ?\r\n      options.schemaLocation : SCHEMA_LOCATIONS[DEFAULT_VERSION];\r\n  }\n\n  if ( XMLFeature ) WFS.__proto__ = XMLFeature;\n  WFS.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  WFS.prototype.constructor = WFS;\r\n\r\n  /**\r\n   * @return {Array<string>|string|undefined} featureType\r\n   */\r\n  WFS.prototype.getFeatureType = function getFeatureType () {\r\n    return this.featureType_;\r\n  };\r\n\r\n  /**\r\n   * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\r\n   */\r\n  WFS.prototype.setFeatureType = function setFeatureType (featureType) {\r\n    this.featureType_ = featureType;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WFS.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\r\n    /** @type {import(\"../xml.js\").NodeStackItem} */\r\n    var context = {\r\n      node: node\r\n    };\r\n    assign(context, {\r\n      'featureType': this.featureType_,\r\n      'featureNS': this.featureNS_\r\n    });\r\n\r\n    assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\r\n    var objectStack = [context];\r\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLNS][\r\n      'featureMember'] =\r\n        makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\r\n    var features = pushParseAndPop([],\r\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\r\n      objectStack, this.gmlFormat_);\r\n    if (!features) {\r\n      features = [];\r\n    }\r\n    return features;\r\n  };\r\n\r\n  /**\r\n   * Read transaction response of the source.\r\n   *\r\n   * @param {Document|Element|Object|string} source Source.\r\n   * @return {TransactionResponse|undefined} Transaction response.\r\n   * @api\r\n   */\r\n  WFS.prototype.readTransactionResponse = function readTransactionResponse (source) {\r\n    if (!source) {\r\n      return undefined;\r\n    } else if (typeof source === 'string') {\r\n      var doc = parse(source);\r\n      return this.readTransactionResponseFromDocument(doc);\r\n    } else if (isDocument(source)) {\r\n      return this.readTransactionResponseFromDocument(\r\n        /** @type {Document} */ (source));\r\n    } else {\r\n      return this.readTransactionResponseFromNode(/** @type {Element} */ (source));\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Read feature collection metadata of the source.\r\n   *\r\n   * @param {Document|Element|Object|string} source Source.\r\n   * @return {FeatureCollectionMetadata|undefined}\r\n   *     FeatureCollection metadata.\r\n   * @api\r\n   */\r\n  WFS.prototype.readFeatureCollectionMetadata = function readFeatureCollectionMetadata (source) {\r\n    if (!source) {\r\n      return undefined;\r\n    } else if (typeof source === 'string') {\r\n      var doc = parse(source);\r\n      return this.readFeatureCollectionMetadataFromDocument(doc);\r\n    } else if (isDocument(source)) {\r\n      return this.readFeatureCollectionMetadataFromDocument(\r\n        /** @type {Document} */ (source));\r\n    } else {\r\n      return this.readFeatureCollectionMetadataFromNode(\r\n        /** @type {Element} */ (source));\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Document} doc Document.\r\n   * @return {FeatureCollectionMetadata|undefined}\r\n   *     FeatureCollection metadata.\r\n   */\r\n  WFS.prototype.readFeatureCollectionMetadataFromDocument = function readFeatureCollectionMetadataFromDocument (doc) {\r\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\r\n      if (n.nodeType == Node.ELEMENT_NODE) {\r\n        return this.readFeatureCollectionMetadataFromNode(/** @type {Element} */ (n));\r\n      }\r\n    }\r\n    return undefined;\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @return {FeatureCollectionMetadata|undefined}\r\n   *     FeatureCollection metadata.\r\n   */\r\n  WFS.prototype.readFeatureCollectionMetadataFromNode = function readFeatureCollectionMetadataFromNode (node) {\r\n    var result = {};\r\n    var value = readNonNegativeIntegerString(\r\n      node.getAttribute('numberOfFeatures'));\r\n    result['numberOfFeatures'] = value;\r\n    return pushParseAndPop(\r\n      /** @type {FeatureCollectionMetadata} */ (result),\r\n      FEATURE_COLLECTION_PARSERS, node, [], this.gmlFormat_);\r\n  };\r\n\r\n  /**\r\n   * @param {Document} doc Document.\r\n   * @return {TransactionResponse|undefined} Transaction response.\r\n   */\r\n  WFS.prototype.readTransactionResponseFromDocument = function readTransactionResponseFromDocument (doc) {\r\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\r\n      if (n.nodeType == Node.ELEMENT_NODE) {\r\n        return this.readTransactionResponseFromNode(/** @type {Element} */ (n));\r\n      }\r\n    }\r\n    return undefined;\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @return {TransactionResponse|undefined} Transaction response.\r\n   */\r\n  WFS.prototype.readTransactionResponseFromNode = function readTransactionResponseFromNode (node) {\r\n    return pushParseAndPop(\r\n      /** @type {TransactionResponse} */({}),\r\n      TRANSACTION_RESPONSE_PARSERS, node, []);\r\n  };\r\n\r\n  /**\r\n   * Encode format as WFS `GetFeature` and return the Node.\r\n   *\r\n   * @param {WriteGetFeatureOptions} options Options.\r\n   * @return {Node} Result.\r\n   * @api\r\n   */\r\n  WFS.prototype.writeGetFeature = function writeGetFeature$1 (options) {\r\n    var node = createElementNS(WFSNS, 'GetFeature');\r\n    node.setAttribute('service', 'WFS');\r\n    node.setAttribute('version', '1.1.0');\r\n    var filter;\r\n    if (options) {\r\n      if (options.handle) {\r\n        node.setAttribute('handle', options.handle);\r\n      }\r\n      if (options.outputFormat) {\r\n        node.setAttribute('outputFormat', options.outputFormat);\r\n      }\r\n      if (options.maxFeatures !== undefined) {\r\n        node.setAttribute('maxFeatures', String(options.maxFeatures));\r\n      }\r\n      if (options.resultType) {\r\n        node.setAttribute('resultType', options.resultType);\r\n      }\r\n      if (options.startIndex !== undefined) {\r\n        node.setAttribute('startIndex', String(options.startIndex));\r\n      }\r\n      if (options.count !== undefined) {\r\n        node.setAttribute('count', String(options.count));\r\n      }\r\n      if (options.viewParams !== undefined) {\r\n        node.setAttribute('viewParams ', options.viewParams);\r\n      }\r\n      filter = options.filter;\r\n      if (options.bbox) {\r\n        assert(options.geometryName,\r\n          12); // `options.geometryName` must also be provided when `options.bbox` is set\r\n        var bbox = bboxFilter(\r\n          /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\r\n        if (filter) {\r\n          // if bbox and filter are both set, combine the two into a single filter\r\n          filter = andFilter(filter, bbox);\r\n        } else {\r\n          filter = bbox;\r\n        }\r\n      }\r\n    }\r\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation_);\r\n    /** @type {import(\"../xml.js\").NodeStackItem} */\r\n    var context = {\r\n      node: node\r\n    };\r\n    assign(context, {\r\n      'srsName': options.srsName,\r\n      'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\r\n      'featurePrefix': options.featurePrefix,\r\n      'geometryName': options.geometryName,\r\n      'filter': filter,\r\n      'propertyNames': options.propertyNames ? options.propertyNames : []\r\n    });\r\n\r\n    assert(Array.isArray(options.featureTypes),\r\n      11); // `options.featureTypes` should be an Array\r\n    writeGetFeature(node, /** @type {!Array<string>} */ (options.featureTypes), [context]);\r\n    return node;\r\n  };\r\n\r\n  /**\r\n   * Encode format as WFS `Transaction` and return the Node.\r\n   *\r\n   * @param {Array<import(\"../Feature.js\").default>} inserts The features to insert.\r\n   * @param {Array<import(\"../Feature.js\").default>} updates The features to update.\r\n   * @param {Array<import(\"../Feature.js\").default>} deletes The features to delete.\r\n   * @param {WriteTransactionOptions} options Write options.\r\n   * @return {Node} Result.\r\n   * @api\r\n   */\r\n  WFS.prototype.writeTransaction = function writeTransaction (inserts, updates, deletes, options) {\r\n    var objectStack = [];\r\n    var node = createElementNS(WFSNS, 'Transaction');\r\n    var version = options.version ? options.version : DEFAULT_VERSION;\r\n    var gmlVersion = version === '1.0.0' ? 2 : 3;\r\n    node.setAttribute('service', 'WFS');\r\n    node.setAttribute('version', version);\r\n    var baseObj;\r\n    /** @type {import(\"../xml.js\").NodeStackItem} */\r\n    var obj;\r\n    if (options) {\r\n      baseObj = options.gmlOptions ? options.gmlOptions : {};\r\n      if (options.handle) {\r\n        node.setAttribute('handle', options.handle);\r\n      }\r\n    }\r\n    var schemaLocation = SCHEMA_LOCATIONS[version];\r\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', schemaLocation);\r\n    var featurePrefix = options.featurePrefix ? options.featurePrefix : FEATURE_PREFIX;\r\n    if (inserts) {\r\n      obj = assign({node: node}, {'featureNS': options.featureNS,\r\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\r\n        'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName});\r\n      assign(obj, baseObj);\r\n      pushSerializeAndPop(obj,\r\n        TRANSACTION_SERIALIZERS,\r\n        makeSimpleNodeFactory('Insert'), inserts,\r\n        objectStack);\r\n    }\r\n    if (updates) {\r\n      obj = assign({node: node}, {'featureNS': options.featureNS,\r\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\r\n        'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName});\r\n      assign(obj, baseObj);\r\n      pushSerializeAndPop(obj,\r\n        TRANSACTION_SERIALIZERS,\r\n        makeSimpleNodeFactory('Update'), updates,\r\n        objectStack);\r\n    }\r\n    if (deletes) {\r\n      pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\r\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\r\n        'gmlVersion': gmlVersion, 'srsName': options.srsName},\r\n      TRANSACTION_SERIALIZERS,\r\n      makeSimpleNodeFactory('Delete'), deletes,\r\n      objectStack);\r\n    }\r\n    if (options.nativeElements) {\r\n      pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\r\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\r\n        'gmlVersion': gmlVersion, 'srsName': options.srsName},\r\n      TRANSACTION_SERIALIZERS,\r\n      makeSimpleNodeFactory('Native'), options.nativeElements,\r\n      objectStack);\r\n    }\r\n    return node;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WFS.prototype.readProjectionFromDocument = function readProjectionFromDocument (doc) {\r\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\r\n      if (n.nodeType == Node.ELEMENT_NODE) {\r\n        return this.readProjectionFromNode(n);\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WFS.prototype.readProjectionFromNode = function readProjectionFromNode (node) {\r\n    if (node.firstElementChild &&\r\n        node.firstElementChild.firstElementChild) {\r\n      node = node.firstElementChild.firstElementChild;\r\n      for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\r\n        if (!(n.childNodes.length === 0 ||\r\n            (n.childNodes.length === 1 &&\r\n            n.firstChild.nodeType === 3))) {\r\n          var objectStack = [{}];\r\n          this.gmlFormat_.readGeometryElement(n, objectStack);\r\n          return getProjection(objectStack.pop().srsName);\r\n        }\r\n      }\r\n    }\r\n\r\n    return null;\r\n  };\n\n  return WFS;\n}(XMLFeature));\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Transaction Summary.\r\n */\r\nfunction readTransactionSummary(node, objectStack) {\r\n  return pushParseAndPop(\r\n    {}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar OGC_FID_PARSERS = {\r\n  'http://www.opengis.net/ogc': {\r\n    'FeatureId': makeArrayPusher(function(node, objectStack) {\r\n      return node.getAttribute('fid');\r\n    })\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction fidParser(node, objectStack) {\r\n  parseNode(OGC_FID_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar INSERT_RESULTS_PARSERS = {\r\n  'http://www.opengis.net/wfs': {\r\n    'Feature': fidParser\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Array<string>|undefined} Insert results.\r\n */\r\nfunction readInsertResults(node, objectStack) {\r\n  return pushParseAndPop(\r\n    [], INSERT_RESULTS_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {import(\"../Feature.js\").default} feature Feature.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeFeature(node, feature, objectStack) {\r\n  var context = objectStack[objectStack.length - 1];\r\n  var featureType = context['featureType'];\r\n  var featureNS = context['featureNS'];\r\n  var gmlVersion = context['gmlVersion'];\r\n  var child = createElementNS(featureNS, featureType);\r\n  node.appendChild(child);\r\n  if (gmlVersion === 2) {\r\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\r\n  } else {\r\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {number|string} fid Feature identifier.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeOgcFidFilter(node, fid, objectStack) {\r\n  var filter = createElementNS(OGCNS, 'Filter');\r\n  var child = createElementNS(OGCNS, 'FeatureId');\r\n  filter.appendChild(child);\r\n  child.setAttribute('fid', /** @type {string} */ (fid));\r\n  node.appendChild(filter);\r\n}\r\n\r\n\r\n/**\r\n * @param {string|undefined} featurePrefix The prefix of the feature.\r\n * @param {string} featureType The type of the feature.\r\n * @returns {string} The value of the typeName property.\r\n */\r\nfunction getTypeName(featurePrefix, featureType) {\r\n  featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\r\n  var prefix = featurePrefix + ':';\r\n  // The featureType already contains the prefix.\r\n  if (featureType.indexOf(prefix) === 0) {\r\n    return featureType;\r\n  } else {\r\n    return prefix + featureType;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {import(\"../Feature.js\").default} feature Feature.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeDelete(node, feature, objectStack) {\r\n  var context = objectStack[objectStack.length - 1];\r\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\r\n  var featureType = context['featureType'];\r\n  var featurePrefix = context['featurePrefix'];\r\n  var featureNS = context['featureNS'];\r\n  var typeName = getTypeName(featurePrefix, featureType);\r\n  node.setAttribute('typeName', typeName);\r\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\r\n  var fid = feature.getId();\r\n  if (fid !== undefined) {\r\n    writeOgcFidFilter(node, fid, objectStack);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {import(\"../Feature.js\").default} feature Feature.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeUpdate(node, feature, objectStack) {\r\n  var context = objectStack[objectStack.length - 1];\r\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\r\n  var featureType = context['featureType'];\r\n  var featurePrefix = context['featurePrefix'];\r\n  var featureNS = context['featureNS'];\r\n  var typeName = getTypeName(featurePrefix, featureType);\r\n  var geometryName = feature.getGeometryName();\r\n  node.setAttribute('typeName', typeName);\r\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\r\n  var fid = feature.getId();\r\n  if (fid !== undefined) {\r\n    var keys = feature.getKeys();\r\n    var values = [];\r\n    for (var i = 0, ii = keys.length; i < ii; i++) {\r\n      var value = feature.get(keys[i]);\r\n      if (value !== undefined) {\r\n        var name = keys[i];\r\n        if (value && typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\r\n          name = geometryName;\r\n        }\r\n        values.push({name: name, value: value});\r\n      }\r\n    }\r\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (\r\n      {'gmlVersion': context['gmlVersion'], node: node,\r\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\r\n    TRANSACTION_SERIALIZERS,\r\n    makeSimpleNodeFactory('Property'), values,\r\n    objectStack);\r\n    writeOgcFidFilter(node, fid, objectStack);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Object} pair Property name and value.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeProperty(node, pair, objectStack) {\r\n  var name = createElementNS(WFSNS, 'Name');\r\n  var context = objectStack[objectStack.length - 1];\r\n  var gmlVersion = context['gmlVersion'];\r\n  node.appendChild(name);\r\n  writeStringTextNode(name, pair.name);\r\n  if (pair.value !== undefined && pair.value !== null) {\r\n    var value = createElementNS(WFSNS, 'Value');\r\n    node.appendChild(value);\r\n    if (pair.value && typeof /** @type {?} */ (pair.value).getSimplifiedGeometry === 'function') {\r\n      if (gmlVersion === 2) {\r\n        GML2.prototype.writeGeometryElement(value,\r\n          pair.value, objectStack);\r\n      } else {\r\n        GML3.prototype.writeGeometryElement(value,\r\n          pair.value, objectStack);\r\n      }\r\n    } else {\r\n      writeStringTextNode(value, pair.value);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeNative(node, nativeElement, objectStack) {\r\n  if (nativeElement.vendorId) {\r\n    node.setAttribute('vendorId', nativeElement.vendorId);\r\n  }\r\n  if (nativeElement.safeToIgnore !== undefined) {\r\n    node.setAttribute('safeToIgnore', String(nativeElement.safeToIgnore));\r\n  }\r\n  if (nativeElement.value !== undefined) {\r\n    writeStringTextNode(node, nativeElement.value);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar GETFEATURE_SERIALIZERS = {\r\n  'http://www.opengis.net/wfs': {\r\n    'Query': makeChildAppender(writeQuery)\r\n  },\r\n  'http://www.opengis.net/ogc': {\r\n    'During': makeChildAppender(writeDuringFilter),\r\n    'And': makeChildAppender(writeLogicalFilter),\r\n    'Or': makeChildAppender(writeLogicalFilter),\r\n    'Not': makeChildAppender(writeNotFilter),\r\n    'BBOX': makeChildAppender(writeBboxFilter),\r\n    'Contains': makeChildAppender(writeContainsFilter),\r\n    'Intersects': makeChildAppender(writeIntersectsFilter),\r\n    'Within': makeChildAppender(writeWithinFilter),\r\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\r\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\r\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\r\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\r\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\r\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\r\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\r\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\r\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter)\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {string} featureType Feature type.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeQuery(node, featureType, objectStack) {\r\n  var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n  var featurePrefix = context['featurePrefix'];\r\n  var featureNS = context['featureNS'];\r\n  var propertyNames = context['propertyNames'];\r\n  var srsName = context['srsName'];\r\n  var typeName;\r\n  // If feature prefix is not defined, we must not use the default prefix.\r\n  if (featurePrefix) {\r\n    typeName = getTypeName(featurePrefix, featureType);\r\n  } else {\r\n    typeName = featureType;\r\n  }\r\n  node.setAttribute('typeName', typeName);\r\n  if (srsName) {\r\n    node.setAttribute('srsName', srsName);\r\n  }\r\n  if (featureNS) {\r\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\r\n  }\r\n  var item = /** @type {import(\"../xml.js\").NodeStackItem} */ (assign({}, context));\r\n  item.node = node;\r\n  pushSerializeAndPop(item,\r\n    QUERY_SERIALIZERS,\r\n    makeSimpleNodeFactory('PropertyName'), propertyNames,\r\n    objectStack);\r\n  var filter = context['filter'];\r\n  if (filter) {\r\n    var child = createElementNS(OGCNS, 'Filter');\r\n    node.appendChild(child);\r\n    writeFilterCondition(child, filter, objectStack);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeFilterCondition(node, filter, objectStack) {\r\n  /** @type {import(\"../xml.js\").NodeStackItem} */\r\n  var item = {node: node};\r\n  pushSerializeAndPop(item,\r\n    GETFEATURE_SERIALIZERS,\r\n    makeSimpleNodeFactory(filter.getTagName()),\r\n    [filter], objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {import(\"./filter/Bbox.js\").default} filter Filter.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeBboxFilter(node, filter, objectStack) {\r\n  var context = objectStack[objectStack.length - 1];\r\n  context['srsName'] = filter.srsName;\r\n\r\n  writeOgcPropertyName(node, filter.geometryName);\r\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {import(\"./filter/Contains.js\").default} filter Filter.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeContainsFilter(node, filter, objectStack) {\r\n  var context = objectStack[objectStack.length - 1];\r\n  context['srsName'] = filter.srsName;\r\n\r\n  writeOgcPropertyName(node, filter.geometryName);\r\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {import(\"./filter/Intersects.js\").default} filter Filter.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeIntersectsFilter(node, filter, objectStack) {\r\n  var context = objectStack[objectStack.length - 1];\r\n  context['srsName'] = filter.srsName;\r\n\r\n  writeOgcPropertyName(node, filter.geometryName);\r\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {import(\"./filter/Within.js\").default} filter Filter.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeWithinFilter(node, filter, objectStack) {\r\n  var context = objectStack[objectStack.length - 1];\r\n  context['srsName'] = filter.srsName;\r\n\r\n  writeOgcPropertyName(node, filter.geometryName);\r\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {import(\"./filter/During.js\").default} filter Filter.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeDuringFilter(node, filter, objectStack) {\r\n\r\n  var valueReference = createElementNS(FESNS, 'ValueReference');\r\n  writeStringTextNode(valueReference, filter.propertyName);\r\n  node.appendChild(valueReference);\r\n\r\n  var timePeriod = createElementNS(GMLNS, 'TimePeriod');\r\n\r\n  node.appendChild(timePeriod);\r\n\r\n  var begin = createElementNS(GMLNS, 'begin');\r\n  timePeriod.appendChild(begin);\r\n  writeTimeInstant(begin, filter.begin);\r\n\r\n  var end = createElementNS(GMLNS, 'end');\r\n  timePeriod.appendChild(end);\r\n  writeTimeInstant(end, filter.end);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {import(\"./filter/LogicalNary.js\").default} filter Filter.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeLogicalFilter(node, filter, objectStack) {\r\n  /** @type {import(\"../xml.js\").NodeStackItem} */\r\n  var item = {node: node};\r\n  var conditions = filter.conditions;\r\n  for (var i = 0, ii = conditions.length; i < ii; ++i) {\r\n    var condition = conditions[i];\r\n    pushSerializeAndPop(item,\r\n      GETFEATURE_SERIALIZERS,\r\n      makeSimpleNodeFactory(condition.getTagName()),\r\n      [condition], objectStack);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {import(\"./filter/Not.js\").default} filter Filter.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeNotFilter(node, filter, objectStack) {\r\n  /** @type {import(\"../xml.js\").NodeStackItem} */\r\n  var item = {node: node};\r\n  var condition = filter.condition;\r\n  pushSerializeAndPop(item,\r\n    GETFEATURE_SERIALIZERS,\r\n    makeSimpleNodeFactory(condition.getTagName()),\r\n    [condition], objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {import(\"./filter/ComparisonBinary.js\").default} filter Filter.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeComparisonFilter(node, filter, objectStack) {\r\n  if (filter.matchCase !== undefined) {\r\n    node.setAttribute('matchCase', filter.matchCase.toString());\r\n  }\r\n  writeOgcPropertyName(node, filter.propertyName);\r\n  writeOgcLiteral(node, '' + filter.expression);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {import(\"./filter/IsNull.js\").default} filter Filter.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeIsNullFilter(node, filter, objectStack) {\r\n  writeOgcPropertyName(node, filter.propertyName);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {import(\"./filter/IsBetween.js\").default} filter Filter.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeIsBetweenFilter(node, filter, objectStack) {\r\n  writeOgcPropertyName(node, filter.propertyName);\r\n\r\n  var lowerBoundary = createElementNS(OGCNS, 'LowerBoundary');\r\n  node.appendChild(lowerBoundary);\r\n  writeOgcLiteral(lowerBoundary, '' + filter.lowerBoundary);\r\n\r\n  var upperBoundary = createElementNS(OGCNS, 'UpperBoundary');\r\n  node.appendChild(upperBoundary);\r\n  writeOgcLiteral(upperBoundary, '' + filter.upperBoundary);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {import(\"./filter/IsLike.js\").default} filter Filter.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeIsLikeFilter(node, filter, objectStack) {\r\n  node.setAttribute('wildCard', filter.wildCard);\r\n  node.setAttribute('singleChar', filter.singleChar);\r\n  node.setAttribute('escapeChar', filter.escapeChar);\r\n  if (filter.matchCase !== undefined) {\r\n    node.setAttribute('matchCase', filter.matchCase.toString());\r\n  }\r\n  writeOgcPropertyName(node, filter.propertyName);\r\n  writeOgcLiteral(node, '' + filter.pattern);\r\n}\r\n\r\n\r\n/**\r\n * @param {string} tagName Tag name.\r\n * @param {Node} node Node.\r\n * @param {string} value Value.\r\n */\r\nfunction writeOgcExpression(tagName, node, value) {\r\n  var property = createElementNS(OGCNS, tagName);\r\n  writeStringTextNode(property, value);\r\n  node.appendChild(property);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {string} value PropertyName value.\r\n */\r\nfunction writeOgcPropertyName(node, value) {\r\n  writeOgcExpression('PropertyName', node, value);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {string} value PropertyName value.\r\n */\r\nfunction writeOgcLiteral(node, value) {\r\n  writeOgcExpression('Literal', node, value);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {string} time PropertyName value.\r\n */\r\nfunction writeTimeInstant(node, time) {\r\n  var timeInstant = createElementNS(GMLNS, 'TimeInstant');\r\n  node.appendChild(timeInstant);\r\n\r\n  var timePosition = createElementNS(GMLNS, 'timePosition');\r\n  timeInstant.appendChild(timePosition);\r\n  writeStringTextNode(timePosition, time);\r\n}\r\n\r\n\r\n/**\r\n * Encode filter as WFS `Filter` and return the Node.\r\n *\r\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\r\n * @return {Node} Result.\r\n * @api\r\n */\r\nexport function writeFilter(filter) {\r\n  var child = createElementNS(OGCNS, 'Filter');\r\n  writeFilterCondition(child, filter, []);\r\n  return child;\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Array<string>} featureTypes Feature types.\r\n * @param {Array<*>} objectStack Node stack.\r\n */\r\nfunction writeGetFeature(node, featureTypes, objectStack) {\r\n  var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n  var item = /** @type {import(\"../xml.js\").NodeStackItem} */ (assign({}, context));\r\n  item.node = node;\r\n  pushSerializeAndPop(item,\r\n    GETFEATURE_SERIALIZERS,\r\n    makeSimpleNodeFactory('Query'), featureTypes,\r\n    objectStack);\r\n}\r\n\r\n\r\nexport default WFS;\r\n\r\n//# sourceMappingURL=WFS.js.map","/**\r\n * @module ol/format/WKT\r\n */\r\nimport Feature from '../Feature.js';\r\nimport {transformWithOptions} from './Feature.js';\r\nimport TextFeature from './TextFeature.js';\r\nimport GeometryCollection from '../geom/GeometryCollection.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport GeometryLayout from '../geom/GeometryLayout.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport MultiLineString from '../geom/MultiLineString.js';\r\nimport MultiPoint from '../geom/MultiPoint.js';\r\nimport MultiPolygon from '../geom/MultiPolygon.js';\r\nimport Point from '../geom/Point.js';\r\nimport Polygon from '../geom/Polygon.js';\r\n\r\n\r\n/**\r\n * Geometry constructors\r\n * @enum {function (new:import(\"../geom/Geometry.js\").default, Array, GeometryLayout)}\r\n */\r\nvar GeometryConstructor = {\r\n  'POINT': Point,\r\n  'LINESTRING': LineString,\r\n  'POLYGON': Polygon,\r\n  'MULTIPOINT': MultiPoint,\r\n  'MULTILINESTRING': MultiLineString,\r\n  'MULTIPOLYGON': MultiPolygon\r\n};\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {boolean} [splitCollection=false] Whether to split GeometryCollections into\r\n * multiple features on reading.\r\n */\r\n\r\n/**\r\n * @typedef {Object} Token\r\n * @property {number} type\r\n * @property {number|string} [value]\r\n * @property {number} position\r\n */\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nvar EMPTY = 'EMPTY';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nvar Z = 'Z';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nvar M = 'M';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nvar ZM = 'ZM';\r\n\r\n\r\n/**\r\n * @const\r\n * @enum {number}\r\n */\r\nvar TokenType = {\r\n  TEXT: 1,\r\n  LEFT_PAREN: 2,\r\n  RIGHT_PAREN: 3,\r\n  NUMBER: 4,\r\n  COMMA: 5,\r\n  EOF: 6\r\n};\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, string>}\r\n */\r\nvar WKTGeometryType = {};\r\nfor (var type in GeometryType) {\r\n  WKTGeometryType[type] = GeometryType[type].toUpperCase();\r\n}\r\n\r\n\r\n/**\r\n * Class to tokenize a WKT string.\r\n */\r\nvar Lexer = function Lexer(wkt) {\r\n\r\n  /**\r\n   * @type {string}\r\n   */\r\n  this.wkt = wkt;\r\n\r\n  /**\r\n   * @type {number}\r\n   * @private\r\n   */\r\n  this.index_ = -1;\r\n};\r\n\r\n/**\r\n * @param {string} c Character.\r\n * @return {boolean} Whether the character is alphabetic.\r\n * @private\r\n */\r\nLexer.prototype.isAlpha_ = function isAlpha_ (c) {\r\n  return c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z';\r\n};\r\n\r\n/**\r\n * @param {string} c Character.\r\n * @param {boolean=} opt_decimal Whether the string number\r\n *   contains a dot, i.e. is a decimal number.\r\n * @return {boolean} Whether the character is numeric.\r\n * @private\r\n */\r\nLexer.prototype.isNumeric_ = function isNumeric_ (c, opt_decimal) {\r\n  var decimal = opt_decimal !== undefined ? opt_decimal : false;\r\n  return c >= '0' && c <= '9' || c == '.' && !decimal;\r\n};\r\n\r\n/**\r\n * @param {string} c Character.\r\n * @return {boolean} Whether the character is whitespace.\r\n * @private\r\n */\r\nLexer.prototype.isWhiteSpace_ = function isWhiteSpace_ (c) {\r\n  return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n';\r\n};\r\n\r\n/**\r\n * @return {string} Next string character.\r\n * @private\r\n */\r\nLexer.prototype.nextChar_ = function nextChar_ () {\r\n  return this.wkt.charAt(++this.index_);\r\n};\r\n\r\n/**\r\n * Fetch and return the next token.\r\n * @return {!Token} Next string token.\r\n */\r\nLexer.prototype.nextToken = function nextToken () {\r\n  var c = this.nextChar_();\r\n  var position = this.index_;\r\n  /** @type {number|string} */\r\n  var value = c;\r\n  var type;\r\n\r\n  if (c == '(') {\r\n    type = TokenType.LEFT_PAREN;\r\n  } else if (c == ',') {\r\n    type = TokenType.COMMA;\r\n  } else if (c == ')') {\r\n    type = TokenType.RIGHT_PAREN;\r\n  } else if (this.isNumeric_(c) || c == '-') {\r\n    type = TokenType.NUMBER;\r\n    value = this.readNumber_();\r\n  } else if (this.isAlpha_(c)) {\r\n    type = TokenType.TEXT;\r\n    value = this.readText_();\r\n  } else if (this.isWhiteSpace_(c)) {\r\n    return this.nextToken();\r\n  } else if (c === '') {\r\n    type = TokenType.EOF;\r\n  } else {\r\n    throw new Error('Unexpected character: ' + c);\r\n  }\r\n\r\n  return {position: position, value: value, type: type};\r\n};\r\n\r\n/**\r\n * @return {number} Numeric token value.\r\n * @private\r\n */\r\nLexer.prototype.readNumber_ = function readNumber_ () {\r\n  var c;\r\n  var index = this.index_;\r\n  var decimal = false;\r\n  var scientificNotation = false;\r\n  do {\r\n    if (c == '.') {\r\n      decimal = true;\r\n    } else if (c == 'e' || c == 'E') {\r\n      scientificNotation = true;\r\n    }\r\n    c = this.nextChar_();\r\n  } while (\r\n    this.isNumeric_(c, decimal) ||\r\n      // if we haven't detected a scientific number before, 'e' or 'E'\r\n      // hint that we should continue to read\r\n      !scientificNotation && (c == 'e' || c == 'E') ||\r\n      // once we know that we have a scientific number, both '-' and '+'\r\n      // are allowed\r\n      scientificNotation && (c == '-' || c == '+')\r\n  );\r\n  return parseFloat(this.wkt.substring(index, this.index_--));\r\n};\r\n\r\n/**\r\n * @return {string} String token value.\r\n * @private\r\n */\r\nLexer.prototype.readText_ = function readText_ () {\r\n  var c;\r\n  var index = this.index_;\r\n  do {\r\n    c = this.nextChar_();\r\n  } while (this.isAlpha_(c));\r\n  return this.wkt.substring(index, this.index_--).toUpperCase();\r\n};\r\n\r\n/**\r\n * Class to parse the tokens from the WKT string.\r\n */\r\nvar Parser = function Parser(lexer) {\r\n\r\n  /**\r\n   * @type {Lexer}\r\n   * @private\r\n   */\r\n  this.lexer_ = lexer;\r\n\r\n  /**\r\n   * @type {Token}\r\n   * @private\r\n   */\r\n  this.token_;\r\n\r\n  /**\r\n   * @type {GeometryLayout}\r\n   * @private\r\n   */\r\n  this.layout_ = GeometryLayout.XY;\r\n};\r\n\r\n/**\r\n * Fetch the next token form the lexer and replace the active token.\r\n * @private\r\n */\r\nParser.prototype.consume_ = function consume_ () {\r\n  this.token_ = this.lexer_.nextToken();\r\n};\r\n\r\n/**\r\n * Tests if the given type matches the type of the current token.\r\n * @param {TokenType} type Token type.\r\n * @return {boolean} Whether the token matches the given type.\r\n */\r\nParser.prototype.isTokenType = function isTokenType (type) {\r\n  var isMatch = this.token_.type == type;\r\n  return isMatch;\r\n};\r\n\r\n/**\r\n * If the given type matches the current token, consume it.\r\n * @param {TokenType} type Token type.\r\n * @return {boolean} Whether the token matches the given type.\r\n */\r\nParser.prototype.match = function match (type) {\r\n  var isMatch = this.isTokenType(type);\r\n  if (isMatch) {\r\n    this.consume_();\r\n  }\r\n  return isMatch;\r\n};\r\n\r\n/**\r\n * Try to parse the tokens provided by the lexer.\r\n * @return {import(\"../geom/Geometry.js\").default} The geometry.\r\n */\r\nParser.prototype.parse = function parse () {\r\n  this.consume_();\r\n  var geometry = this.parseGeometry_();\r\n  return geometry;\r\n};\r\n\r\n/**\r\n * Try to parse the dimensional info.\r\n * @return {GeometryLayout} The layout.\r\n * @private\r\n */\r\nParser.prototype.parseGeometryLayout_ = function parseGeometryLayout_ () {\r\n  var layout = GeometryLayout.XY;\r\n  var dimToken = this.token_;\r\n  if (this.isTokenType(TokenType.TEXT)) {\r\n    var dimInfo = dimToken.value;\r\n    if (dimInfo === Z) {\r\n      layout = GeometryLayout.XYZ;\r\n    } else if (dimInfo === M) {\r\n      layout = GeometryLayout.XYM;\r\n    } else if (dimInfo === ZM) {\r\n      layout = GeometryLayout.XYZM;\r\n    }\r\n    if (layout !== GeometryLayout.XY) {\r\n      this.consume_();\r\n    }\r\n  }\r\n  return layout;\r\n};\r\n\r\n/**\r\n * @return {!Array<import(\"../geom/Geometry.js\").default>} A collection of geometries.\r\n * @private\r\n */\r\nParser.prototype.parseGeometryCollectionText_ = function parseGeometryCollectionText_ () {\r\n  if (this.match(TokenType.LEFT_PAREN)) {\r\n    var geometries = [];\r\n    do {\r\n      geometries.push(this.parseGeometry_());\r\n    } while (this.match(TokenType.COMMA));\r\n    if (this.match(TokenType.RIGHT_PAREN)) {\r\n      return geometries;\r\n    }\r\n  } else if (this.isEmptyGeometry_()) {\r\n    return [];\r\n  }\r\n  throw new Error(this.formatErrorMessage_());\r\n};\r\n\r\n/**\r\n * @return {Array<number>} All values in a point.\r\n * @private\r\n */\r\nParser.prototype.parsePointText_ = function parsePointText_ () {\r\n  if (this.match(TokenType.LEFT_PAREN)) {\r\n    var coordinates = this.parsePoint_();\r\n    if (this.match(TokenType.RIGHT_PAREN)) {\r\n      return coordinates;\r\n    }\r\n  } else if (this.isEmptyGeometry_()) {\r\n    return null;\r\n  }\r\n  throw new Error(this.formatErrorMessage_());\r\n};\r\n\r\n/**\r\n * @return {!Array<!Array<number>>} All points in a linestring.\r\n * @private\r\n */\r\nParser.prototype.parseLineStringText_ = function parseLineStringText_ () {\r\n  if (this.match(TokenType.LEFT_PAREN)) {\r\n    var coordinates = this.parsePointList_();\r\n    if (this.match(TokenType.RIGHT_PAREN)) {\r\n      return coordinates;\r\n    }\r\n  } else if (this.isEmptyGeometry_()) {\r\n    return [];\r\n  }\r\n  throw new Error(this.formatErrorMessage_());\r\n};\r\n\r\n/**\r\n * @return {!Array<!Array<!Array<number>>>} All points in a polygon.\r\n * @private\r\n */\r\nParser.prototype.parsePolygonText_ = function parsePolygonText_ () {\r\n  if (this.match(TokenType.LEFT_PAREN)) {\r\n    var coordinates = this.parseLineStringTextList_();\r\n    if (this.match(TokenType.RIGHT_PAREN)) {\r\n      return coordinates;\r\n    }\r\n  } else if (this.isEmptyGeometry_()) {\r\n    return [];\r\n  }\r\n  throw new Error(this.formatErrorMessage_());\r\n};\r\n\r\n/**\r\n * @return {!Array<!Array<number>>} All points in a multipoint.\r\n * @private\r\n */\r\nParser.prototype.parseMultiPointText_ = function parseMultiPointText_ () {\r\n  if (this.match(TokenType.LEFT_PAREN)) {\r\n    var coordinates;\r\n    if (this.token_.type == TokenType.LEFT_PAREN) {\r\n      coordinates = this.parsePointTextList_();\r\n    } else {\r\n      coordinates = this.parsePointList_();\r\n    }\r\n    if (this.match(TokenType.RIGHT_PAREN)) {\r\n      return coordinates;\r\n    }\r\n  } else if (this.isEmptyGeometry_()) {\r\n    return [];\r\n  }\r\n  throw new Error(this.formatErrorMessage_());\r\n};\r\n\r\n/**\r\n * @return {!Array<!Array<!Array<number>>>} All linestring points\r\n *                                        in a multilinestring.\r\n * @private\r\n */\r\nParser.prototype.parseMultiLineStringText_ = function parseMultiLineStringText_ () {\r\n  if (this.match(TokenType.LEFT_PAREN)) {\r\n    var coordinates = this.parseLineStringTextList_();\r\n    if (this.match(TokenType.RIGHT_PAREN)) {\r\n      return coordinates;\r\n    }\r\n  } else if (this.isEmptyGeometry_()) {\r\n    return [];\r\n  }\r\n  throw new Error(this.formatErrorMessage_());\r\n};\r\n\r\n/**\r\n * @return {!Array<!Array<!Array<!Array<number>>>>} All polygon points in a multipolygon.\r\n * @private\r\n */\r\nParser.prototype.parseMultiPolygonText_ = function parseMultiPolygonText_ () {\r\n  if (this.match(TokenType.LEFT_PAREN)) {\r\n    var coordinates = this.parsePolygonTextList_();\r\n    if (this.match(TokenType.RIGHT_PAREN)) {\r\n      return coordinates;\r\n    }\r\n  } else if (this.isEmptyGeometry_()) {\r\n    return [];\r\n  }\r\n  throw new Error(this.formatErrorMessage_());\r\n};\r\n\r\n/**\r\n * @return {!Array<number>} A point.\r\n * @private\r\n */\r\nParser.prototype.parsePoint_ = function parsePoint_ () {\r\n  var coordinates = [];\r\n  var dimensions = this.layout_.length;\r\n  for (var i = 0; i < dimensions; ++i) {\r\n    var token = this.token_;\r\n    if (this.match(TokenType.NUMBER)) {\r\n      coordinates.push(/** @type {number} */ (token.value));\r\n    } else {\r\n      break;\r\n    }\r\n  }\r\n  if (coordinates.length == dimensions) {\r\n    return coordinates;\r\n  }\r\n  throw new Error(this.formatErrorMessage_());\r\n};\r\n\r\n/**\r\n * @return {!Array<!Array<number>>} An array of points.\r\n * @private\r\n */\r\nParser.prototype.parsePointList_ = function parsePointList_ () {\r\n  var coordinates = [this.parsePoint_()];\r\n  while (this.match(TokenType.COMMA)) {\r\n    coordinates.push(this.parsePoint_());\r\n  }\r\n  return coordinates;\r\n};\r\n\r\n/**\r\n * @return {!Array<!Array<number>>} An array of points.\r\n * @private\r\n */\r\nParser.prototype.parsePointTextList_ = function parsePointTextList_ () {\r\n  var coordinates = [this.parsePointText_()];\r\n  while (this.match(TokenType.COMMA)) {\r\n    coordinates.push(this.parsePointText_());\r\n  }\r\n  return coordinates;\r\n};\r\n\r\n/**\r\n * @return {!Array<!Array<!Array<number>>>} An array of points.\r\n * @private\r\n */\r\nParser.prototype.parseLineStringTextList_ = function parseLineStringTextList_ () {\r\n  var coordinates = [this.parseLineStringText_()];\r\n  while (this.match(TokenType.COMMA)) {\r\n    coordinates.push(this.parseLineStringText_());\r\n  }\r\n  return coordinates;\r\n};\r\n\r\n/**\r\n * @return {!Array<!Array<!Array<!Array<number>>>>} An array of points.\r\n * @private\r\n */\r\nParser.prototype.parsePolygonTextList_ = function parsePolygonTextList_ () {\r\n  var coordinates = [this.parsePolygonText_()];\r\n  while (this.match(TokenType.COMMA)) {\r\n    coordinates.push(this.parsePolygonText_());\r\n  }\r\n  return coordinates;\r\n};\r\n\r\n/**\r\n * @return {boolean} Whether the token implies an empty geometry.\r\n * @private\r\n */\r\nParser.prototype.isEmptyGeometry_ = function isEmptyGeometry_ () {\r\n  var isEmpty = this.isTokenType(TokenType.TEXT) &&\r\n      this.token_.value == EMPTY;\r\n  if (isEmpty) {\r\n    this.consume_();\r\n  }\r\n  return isEmpty;\r\n};\r\n\r\n/**\r\n * Create an error message for an unexpected token error.\r\n * @return {string} Error message.\r\n * @private\r\n */\r\nParser.prototype.formatErrorMessage_ = function formatErrorMessage_ () {\r\n  return 'Unexpected `' + this.token_.value + '` at position ' +\r\n      this.token_.position + ' in `' + this.lexer_.wkt + '`';\r\n};\r\n\r\n/**\r\n * @return {!import(\"../geom/Geometry.js\").default} The geometry.\r\n * @private\r\n */\r\nParser.prototype.parseGeometry_ = function parseGeometry_ () {\r\n  var token = this.token_;\r\n  if (this.match(TokenType.TEXT)) {\r\n    var geomType = token.value;\r\n    this.layout_ = this.parseGeometryLayout_();\r\n    if (geomType == 'GEOMETRYCOLLECTION') {\r\n      var geometries = this.parseGeometryCollectionText_();\r\n      return new GeometryCollection(geometries);\r\n    } else {\r\n      var ctor = GeometryConstructor[geomType];\r\n      if (!ctor) {\r\n        throw new Error('Invalid geometry type: ' + geomType);\r\n      }\r\n\r\n      var coordinates;\r\n      switch (geomType) {\r\n        case 'POINT': {\r\n          coordinates = this.parsePointText_();\r\n          break;\r\n        }\r\n        case 'LINESTRING': {\r\n          coordinates = this.parseLineStringText_();\r\n          break;\r\n        }\r\n        case 'POLYGON': {\r\n          coordinates = this.parsePolygonText_();\r\n          break;\r\n        }\r\n        case 'MULTIPOINT': {\r\n          coordinates = this.parseMultiPointText_();\r\n          break;\r\n        }\r\n        case 'MULTILINESTRING': {\r\n          coordinates = this.parseMultiLineStringText_();\r\n          break;\r\n        }\r\n        case 'MULTIPOLYGON': {\r\n          coordinates = this.parseMultiPolygonText_();\r\n          break;\r\n        }\r\n        default: {\r\n          throw new Error('Invalid geometry type: ' + geomType);\r\n        }\r\n      }\r\n\r\n      if (!coordinates) {\r\n        if (ctor === GeometryConstructor['POINT']) {\r\n          coordinates = [NaN, NaN];\r\n        } else {\r\n          coordinates = [];\r\n        }\r\n      }\r\n      return new ctor(coordinates, this.layout_);\r\n    }\r\n  }\r\n  throw new Error(this.formatErrorMessage_());\r\n};\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Geometry format for reading and writing data in the `WellKnownText` (WKT)\r\n * format.\r\n *\r\n * @api\r\n */\r\nvar WKT = /*@__PURE__*/(function (TextFeature) {\n  function WKT(opt_options) {\r\n    TextFeature.call(this);\r\n\r\n    var options = opt_options ? opt_options : {};\r\n\r\n\r\n    /**\r\n     * Split GeometryCollection into multiple features.\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.splitCollection_ = options.splitCollection !== undefined ?\r\n      options.splitCollection : false;\r\n\r\n  }\n\n  if ( TextFeature ) WKT.__proto__ = TextFeature;\n  WKT.prototype = Object.create( TextFeature && TextFeature.prototype );\n  WKT.prototype.constructor = WKT;\r\n\r\n  /**\r\n   * Parse a WKT string.\r\n   * @param {string} wkt WKT string.\r\n   * @return {import(\"../geom/Geometry.js\").default|undefined}\r\n   *     The geometry created.\r\n   * @private\r\n   */\r\n  WKT.prototype.parse_ = function parse_ (wkt) {\r\n    var lexer = new Lexer(wkt);\r\n    var parser = new Parser(lexer);\r\n    return parser.parse();\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WKT.prototype.readFeatureFromText = function readFeatureFromText (text, opt_options) {\r\n    var geom = this.readGeometryFromText(text, opt_options);\r\n    if (geom) {\r\n      var feature = new Feature();\r\n      feature.setGeometry(geom);\r\n      return feature;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WKT.prototype.readFeaturesFromText = function readFeaturesFromText (text, opt_options) {\r\n    var geometries = [];\r\n    var geometry = this.readGeometryFromText(text, opt_options);\r\n    if (this.splitCollection_ &&\r\n        geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\r\n      geometries = (/** @type {GeometryCollection} */ (geometry))\r\n        .getGeometriesArray();\r\n    } else {\r\n      geometries = [geometry];\r\n    }\r\n    var features = [];\r\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\r\n      var feature = new Feature();\r\n      feature.setGeometry(geometries[i]);\r\n      features.push(feature);\r\n    }\r\n    return features;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WKT.prototype.readGeometryFromText = function readGeometryFromText (text, opt_options) {\r\n    var geometry = this.parse_(text);\r\n    if (geometry) {\r\n      return (\r\n        /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, false, opt_options))\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WKT.prototype.writeFeatureText = function writeFeatureText (feature, opt_options) {\r\n    var geometry = feature.getGeometry();\r\n    if (geometry) {\r\n      return this.writeGeometryText(geometry, opt_options);\r\n    }\r\n    return '';\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WKT.prototype.writeFeaturesText = function writeFeaturesText (features, opt_options) {\r\n    if (features.length == 1) {\r\n      return this.writeFeatureText(features[0], opt_options);\r\n    }\r\n    var geometries = [];\r\n    for (var i = 0, ii = features.length; i < ii; ++i) {\r\n      geometries.push(features[i].getGeometry());\r\n    }\r\n    var collection = new GeometryCollection(geometries);\r\n    return this.writeGeometryText(collection, opt_options);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WKT.prototype.writeGeometryText = function writeGeometryText (geometry, opt_options) {\r\n    return encode(/** @type {import(\"../geom/Geometry.js\").default} */ (\r\n      transformWithOptions(geometry, true, opt_options)));\r\n  };\n\n  return WKT;\n}(TextFeature));\r\n\r\n\r\n/**\r\n * @param {Point} geom Point geometry.\r\n * @return {string} Coordinates part of Point as WKT.\r\n */\r\nfunction encodePointGeometry(geom) {\r\n  var coordinates = geom.getCoordinates();\r\n  if (coordinates.length === 0) {\r\n    return '';\r\n  }\r\n  return coordinates.join(' ');\r\n}\r\n\r\n\r\n/**\r\n * @param {MultiPoint} geom MultiPoint geometry.\r\n * @return {string} Coordinates part of MultiPoint as WKT.\r\n */\r\nfunction encodeMultiPointGeometry(geom) {\r\n  var array = [];\r\n  var components = geom.getPoints();\r\n  for (var i = 0, ii = components.length; i < ii; ++i) {\r\n    array.push('(' + encodePointGeometry(components[i]) + ')');\r\n  }\r\n  return array.join(',');\r\n}\r\n\r\n\r\n/**\r\n * @param {GeometryCollection} geom GeometryCollection geometry.\r\n * @return {string} Coordinates part of GeometryCollection as WKT.\r\n */\r\nfunction encodeGeometryCollectionGeometry(geom) {\r\n  var array = [];\r\n  var geoms = geom.getGeometries();\r\n  for (var i = 0, ii = geoms.length; i < ii; ++i) {\r\n    array.push(encode(geoms[i]));\r\n  }\r\n  return array.join(',');\r\n}\r\n\r\n\r\n/**\r\n * @param {LineString|import(\"../geom/LinearRing.js\").default} geom LineString geometry.\r\n * @return {string} Coordinates part of LineString as WKT.\r\n */\r\nfunction encodeLineStringGeometry(geom) {\r\n  var coordinates = geom.getCoordinates();\r\n  var array = [];\r\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\r\n    array.push(coordinates[i].join(' '));\r\n  }\r\n  return array.join(',');\r\n}\r\n\r\n\r\n/**\r\n * @param {MultiLineString} geom MultiLineString geometry.\r\n * @return {string} Coordinates part of MultiLineString as WKT.\r\n */\r\nfunction encodeMultiLineStringGeometry(geom) {\r\n  var array = [];\r\n  var components = geom.getLineStrings();\r\n  for (var i = 0, ii = components.length; i < ii; ++i) {\r\n    array.push('(' + encodeLineStringGeometry(components[i]) + ')');\r\n  }\r\n  return array.join(',');\r\n}\r\n\r\n\r\n/**\r\n * @param {Polygon} geom Polygon geometry.\r\n * @return {string} Coordinates part of Polygon as WKT.\r\n */\r\nfunction encodePolygonGeometry(geom) {\r\n  var array = [];\r\n  var rings = geom.getLinearRings();\r\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\r\n    array.push('(' + encodeLineStringGeometry(rings[i]) + ')');\r\n  }\r\n  return array.join(',');\r\n}\r\n\r\n\r\n/**\r\n * @param {MultiPolygon} geom MultiPolygon geometry.\r\n * @return {string} Coordinates part of MultiPolygon as WKT.\r\n */\r\nfunction encodeMultiPolygonGeometry(geom) {\r\n  var array = [];\r\n  var components = geom.getPolygons();\r\n  for (var i = 0, ii = components.length; i < ii; ++i) {\r\n    array.push('(' + encodePolygonGeometry(components[i]) + ')');\r\n  }\r\n  return array.join(',');\r\n}\r\n\r\n/**\r\n * @param {import(\"../geom/SimpleGeometry.js\").default} geom SimpleGeometry geometry.\r\n * @return {string} Potential dimensional information for WKT type.\r\n */\r\nfunction encodeGeometryLayout(geom) {\r\n  var layout = geom.getLayout();\r\n  var dimInfo = '';\r\n  if (layout === GeometryLayout.XYZ || layout === GeometryLayout.XYZM) {\r\n    dimInfo += Z;\r\n  }\r\n  if (layout === GeometryLayout.XYM || layout === GeometryLayout.XYZM) {\r\n    dimInfo += M;\r\n  }\r\n  return dimInfo;\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default): string>}\r\n */\r\nvar GeometryEncoder = {\r\n  'Point': encodePointGeometry,\r\n  'LineString': encodeLineStringGeometry,\r\n  'Polygon': encodePolygonGeometry,\r\n  'MultiPoint': encodeMultiPointGeometry,\r\n  'MultiLineString': encodeMultiLineStringGeometry,\r\n  'MultiPolygon': encodeMultiPolygonGeometry,\r\n  'GeometryCollection': encodeGeometryCollectionGeometry\r\n};\r\n\r\n\r\n/**\r\n * Encode a geometry as WKT.\r\n * @param {!import(\"../geom/Geometry.js\").default} geom The geometry to encode.\r\n * @return {string} WKT string for the geometry.\r\n */\r\nfunction encode(geom) {\r\n  var type = geom.getType();\r\n  var geometryEncoder = GeometryEncoder[type];\r\n  var enc = geometryEncoder(geom);\r\n  type = type.toUpperCase();\r\n  if (typeof /** @type {?} */ (geom).getFlatCoordinates === 'function') {\r\n    var dimInfo = encodeGeometryLayout(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geom));\r\n    if (dimInfo.length > 0) {\r\n      type += ' ' + dimInfo;\r\n    }\r\n  }\r\n  if (enc.length === 0) {\r\n    return type + ' ' + EMPTY;\r\n  }\r\n  return type + '(' + enc + ')';\r\n}\r\n\r\n\r\nexport default WKT;\r\n\r\n//# sourceMappingURL=WKT.js.map","/**\r\n * @module ol/format/XLink\r\n */\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nvar NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @return {string|undefined} href.\r\n */\r\nexport function readHref(node) {\r\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\r\n}\r\n\r\n//# sourceMappingURL=XLink.js.map","/**\r\n * @module ol/format/XML\r\n */\r\nimport {isDocument, parse} from '../xml.js';\r\n\r\n/**\r\n * @classdesc\r\n * Generic format for reading non-feature XML data\r\n *\r\n * @abstract\r\n */\r\nvar XML = function XML () {};\n\nXML.prototype.read = function read (source) {\r\n  if (!source) {\r\n    return null;\r\n  } else if (typeof source === 'string') {\r\n    var doc = parse(source);\r\n    return this.readFromDocument(doc);\r\n  } else if (isDocument(source)) {\r\n    return this.readFromDocument(/** @type {Document} */ (source));\r\n  } else {\r\n    return this.readFromNode(/** @type {Element} */ (source));\r\n  }\r\n};\r\n\r\n/**\r\n * @abstract\r\n * @param {Document} doc Document.\r\n * @return {Object} Object\r\n */\r\nXML.prototype.readFromDocument = function readFromDocument (doc) {};\r\n\r\n/**\r\n * @abstract\r\n * @param {Element} node Node.\r\n * @return {Object} Object\r\n */\r\nXML.prototype.readFromNode = function readFromNode (node) {};\r\n\r\nexport default XML;\r\n\r\n//# sourceMappingURL=XML.js.map","/**\r\n * @module ol/format/WMSCapabilities\r\n */\r\nimport {readHref} from './XLink.js';\r\nimport XML from './XML.js';\r\nimport {readDecimalString, readString, readNonNegativeInteger, readDecimal, readBooleanString, readNonNegativeIntegerString} from './xsd.js';\r\nimport {makeArrayPusher, makeObjectPropertyPusher, makeObjectPropertySetter,\r\n  makeStructureNS, pushParseAndPop} from '../xml.js';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Array<null|string>}\r\n */\r\nvar NAMESPACE_URIS = [\r\n  null,\r\n  'http://www.opengis.net/wms'\r\n];\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Service': makeObjectPropertySetter(readService),\r\n    'Capability': makeObjectPropertySetter(readCapability)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar CAPABILITY_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Request': makeObjectPropertySetter(readRequest),\r\n    'Exception': makeObjectPropertySetter(readException),\r\n    'Layer': makeObjectPropertySetter(readCapabilityLayer)\r\n  });\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Format for reading WMS capabilities data\r\n *\r\n * @api\r\n */\r\nvar WMSCapabilities = /*@__PURE__*/(function (XML) {\n  function WMSCapabilities() {\r\n    XML.call(this);\r\n\r\n    /**\r\n     * @type {string|undefined}\r\n     */\r\n    this.version = undefined;\r\n  }\n\n  if ( XML ) WMSCapabilities.__proto__ = XML;\n  WMSCapabilities.prototype = Object.create( XML && XML.prototype );\n  WMSCapabilities.prototype.constructor = WMSCapabilities;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WMSCapabilities.prototype.readFromDocument = function readFromDocument (doc) {\r\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\r\n      if (n.nodeType == Node.ELEMENT_NODE) {\r\n        return this.readFromNode(n);\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WMSCapabilities.prototype.readFromNode = function readFromNode (node) {\r\n    this.version = node.getAttribute('version').trim();\r\n    var wmsCapabilityObject = pushParseAndPop({\r\n      'version': this.version\r\n    }, PARSERS, node, []);\r\n    return wmsCapabilityObject ? wmsCapabilityObject : null;\r\n  };\n\n  return WMSCapabilities;\n}(XML));\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar SERVICE_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Name': makeObjectPropertySetter(readString),\r\n    'Title': makeObjectPropertySetter(readString),\r\n    'Abstract': makeObjectPropertySetter(readString),\r\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\r\n    'OnlineResource': makeObjectPropertySetter(readHref),\r\n    'ContactInformation': makeObjectPropertySetter(readContactInformation),\r\n    'Fees': makeObjectPropertySetter(readString),\r\n    'AccessConstraints': makeObjectPropertySetter(readString),\r\n    'LayerLimit': makeObjectPropertySetter(readNonNegativeInteger),\r\n    'MaxWidth': makeObjectPropertySetter(readNonNegativeInteger),\r\n    'MaxHeight': makeObjectPropertySetter(readNonNegativeInteger)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar CONTACT_INFORMATION_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'ContactPersonPrimary': makeObjectPropertySetter(readContactPersonPrimary),\r\n    'ContactPosition': makeObjectPropertySetter(readString),\r\n    'ContactAddress': makeObjectPropertySetter(readContactAddress),\r\n    'ContactVoiceTelephone': makeObjectPropertySetter(readString),\r\n    'ContactFacsimileTelephone': makeObjectPropertySetter(readString),\r\n    'ContactElectronicMailAddress': makeObjectPropertySetter(readString)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar CONTACT_PERSON_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'ContactPerson': makeObjectPropertySetter(readString),\r\n    'ContactOrganization': makeObjectPropertySetter(readString)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar CONTACT_ADDRESS_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'AddressType': makeObjectPropertySetter(readString),\r\n    'Address': makeObjectPropertySetter(readString),\r\n    'City': makeObjectPropertySetter(readString),\r\n    'StateOrProvince': makeObjectPropertySetter(readString),\r\n    'PostCode': makeObjectPropertySetter(readString),\r\n    'Country': makeObjectPropertySetter(readString)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar EXCEPTION_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Format': makeArrayPusher(readString)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar LAYER_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Name': makeObjectPropertySetter(readString),\r\n    'Title': makeObjectPropertySetter(readString),\r\n    'Abstract': makeObjectPropertySetter(readString),\r\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\r\n    'CRS': makeObjectPropertyPusher(readString),\r\n    'EX_GeographicBoundingBox': makeObjectPropertySetter(readEXGeographicBoundingBox),\r\n    'BoundingBox': makeObjectPropertyPusher(readBoundingBox),\r\n    'Dimension': makeObjectPropertyPusher(readDimension),\r\n    'Attribution': makeObjectPropertySetter(readAttribution),\r\n    'AuthorityURL': makeObjectPropertyPusher(readAuthorityURL),\r\n    'Identifier': makeObjectPropertyPusher(readString),\r\n    'MetadataURL': makeObjectPropertyPusher(readMetadataURL),\r\n    'DataURL': makeObjectPropertyPusher(readFormatOnlineresource),\r\n    'FeatureListURL': makeObjectPropertyPusher(readFormatOnlineresource),\r\n    'Style': makeObjectPropertyPusher(readStyle),\r\n    'MinScaleDenominator': makeObjectPropertySetter(readDecimal),\r\n    'MaxScaleDenominator': makeObjectPropertySetter(readDecimal),\r\n    'Layer': makeObjectPropertyPusher(readLayer)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar ATTRIBUTION_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Title': makeObjectPropertySetter(readString),\r\n    'OnlineResource': makeObjectPropertySetter(readHref),\r\n    'LogoURL': makeObjectPropertySetter(readSizedFormatOnlineresource)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS =\r\n    makeStructureNS(NAMESPACE_URIS, {\r\n      'westBoundLongitude': makeObjectPropertySetter(readDecimal),\r\n      'eastBoundLongitude': makeObjectPropertySetter(readDecimal),\r\n      'southBoundLatitude': makeObjectPropertySetter(readDecimal),\r\n      'northBoundLatitude': makeObjectPropertySetter(readDecimal)\r\n    });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar REQUEST_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'GetCapabilities': makeObjectPropertySetter(readOperationType),\r\n    'GetMap': makeObjectPropertySetter(readOperationType),\r\n    'GetFeatureInfo': makeObjectPropertySetter(readOperationType)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar OPERATIONTYPE_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Format': makeObjectPropertyPusher(readString),\r\n    'DCPType': makeObjectPropertyPusher(readDCPType)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar DCPTYPE_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'HTTP': makeObjectPropertySetter(readHTTP)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar HTTP_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Get': makeObjectPropertySetter(readFormatOnlineresource),\r\n    'Post': makeObjectPropertySetter(readFormatOnlineresource)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar STYLE_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Name': makeObjectPropertySetter(readString),\r\n    'Title': makeObjectPropertySetter(readString),\r\n    'Abstract': makeObjectPropertySetter(readString),\r\n    'LegendURL': makeObjectPropertyPusher(readSizedFormatOnlineresource),\r\n    'StyleSheetURL': makeObjectPropertySetter(readFormatOnlineresource),\r\n    'StyleURL': makeObjectPropertySetter(readFormatOnlineresource)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar FORMAT_ONLINERESOURCE_PARSERS =\r\n    makeStructureNS(NAMESPACE_URIS, {\r\n      'Format': makeObjectPropertySetter(readString),\r\n      'OnlineResource': makeObjectPropertySetter(readHref)\r\n    });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar KEYWORDLIST_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Keyword': makeArrayPusher(readString)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Attribution object.\r\n */\r\nfunction readAttribution(node, objectStack) {\r\n  return pushParseAndPop({}, ATTRIBUTION_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object} Bounding box object.\r\n */\r\nfunction readBoundingBox(node, objectStack) {\r\n  var extent = [\r\n    readDecimalString(node.getAttribute('minx')),\r\n    readDecimalString(node.getAttribute('miny')),\r\n    readDecimalString(node.getAttribute('maxx')),\r\n    readDecimalString(node.getAttribute('maxy'))\r\n  ];\r\n\r\n  var resolutions = [\r\n    readDecimalString(node.getAttribute('resx')),\r\n    readDecimalString(node.getAttribute('resy'))\r\n  ];\r\n\r\n  return {\r\n    'crs': node.getAttribute('CRS'),\r\n    'extent': extent,\r\n    'res': resolutions\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {import(\"../extent.js\").Extent|undefined} Bounding box object.\r\n */\r\nfunction readEXGeographicBoundingBox(node, objectStack) {\r\n  var geographicBoundingBox = pushParseAndPop(\r\n    {},\r\n    EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS,\r\n    node, objectStack);\r\n  if (!geographicBoundingBox) {\r\n    return undefined;\r\n  }\r\n  var westBoundLongitude = /** @type {number|undefined} */\r\n        (geographicBoundingBox['westBoundLongitude']);\r\n  var southBoundLatitude = /** @type {number|undefined} */\r\n        (geographicBoundingBox['southBoundLatitude']);\r\n  var eastBoundLongitude = /** @type {number|undefined} */\r\n        (geographicBoundingBox['eastBoundLongitude']);\r\n  var northBoundLatitude = /** @type {number|undefined} */\r\n        (geographicBoundingBox['northBoundLatitude']);\r\n  if (westBoundLongitude === undefined || southBoundLatitude === undefined ||\r\n        eastBoundLongitude === undefined || northBoundLatitude === undefined) {\r\n    return undefined;\r\n  }\r\n  return [\r\n    westBoundLongitude, southBoundLatitude,\r\n    eastBoundLongitude, northBoundLatitude\r\n  ];\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Capability object.\r\n */\r\nfunction readCapability(node, objectStack) {\r\n  return pushParseAndPop({}, CAPABILITY_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Service object.\r\n */\r\nfunction readService(node, objectStack) {\r\n  return pushParseAndPop({}, SERVICE_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Contact information object.\r\n */\r\nfunction readContactInformation(node, objectStack) {\r\n  return pushParseAndPop({}, CONTACT_INFORMATION_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Contact person object.\r\n */\r\nfunction readContactPersonPrimary(node, objectStack) {\r\n  return pushParseAndPop({}, CONTACT_PERSON_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Contact address object.\r\n */\r\nfunction readContactAddress(node, objectStack) {\r\n  return pushParseAndPop({}, CONTACT_ADDRESS_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Array<string>|undefined} Format array.\r\n */\r\nfunction readException(node, objectStack) {\r\n  return pushParseAndPop([], EXCEPTION_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Layer object.\r\n */\r\nfunction readCapabilityLayer(node, objectStack) {\r\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Layer object.\r\n */\r\nfunction readLayer(node, objectStack) {\r\n  var parentLayerObject = /**  @type {!Object<string,*>} */ (objectStack[objectStack.length - 1]);\r\n\r\n  var layerObject = pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\r\n\r\n  if (!layerObject) {\r\n    return undefined;\r\n  }\r\n  var queryable = readBooleanString(node.getAttribute('queryable'));\r\n  if (queryable === undefined) {\r\n    queryable = parentLayerObject['queryable'];\r\n  }\r\n  layerObject['queryable'] = queryable !== undefined ? queryable : false;\r\n\r\n  var cascaded = readNonNegativeIntegerString(\r\n    node.getAttribute('cascaded'));\r\n  if (cascaded === undefined) {\r\n    cascaded = parentLayerObject['cascaded'];\r\n  }\r\n  layerObject['cascaded'] = cascaded;\r\n\r\n  var opaque = readBooleanString(node.getAttribute('opaque'));\r\n  if (opaque === undefined) {\r\n    opaque = parentLayerObject['opaque'];\r\n  }\r\n  layerObject['opaque'] = opaque !== undefined ? opaque : false;\r\n\r\n  var noSubsets = readBooleanString(node.getAttribute('noSubsets'));\r\n  if (noSubsets === undefined) {\r\n    noSubsets = parentLayerObject['noSubsets'];\r\n  }\r\n  layerObject['noSubsets'] = noSubsets !== undefined ? noSubsets : false;\r\n\r\n  var fixedWidth = readDecimalString(node.getAttribute('fixedWidth'));\r\n  if (!fixedWidth) {\r\n    fixedWidth = parentLayerObject['fixedWidth'];\r\n  }\r\n  layerObject['fixedWidth'] = fixedWidth;\r\n\r\n  var fixedHeight = readDecimalString(node.getAttribute('fixedHeight'));\r\n  if (!fixedHeight) {\r\n    fixedHeight = parentLayerObject['fixedHeight'];\r\n  }\r\n  layerObject['fixedHeight'] = fixedHeight;\r\n\r\n  // See 7.2.4.8\r\n  var addKeys = ['Style', 'CRS', 'AuthorityURL'];\r\n  addKeys.forEach(function(key) {\r\n    if (key in parentLayerObject) {\r\n      var childValue = layerObject[key] || [];\r\n      layerObject[key] = childValue.concat(parentLayerObject[key]);\r\n    }\r\n  });\r\n\r\n  var replaceKeys = ['EX_GeographicBoundingBox', 'BoundingBox', 'Dimension',\r\n    'Attribution', 'MinScaleDenominator', 'MaxScaleDenominator'];\r\n  replaceKeys.forEach(function(key) {\r\n    if (!(key in layerObject)) {\r\n      var parentValue = parentLayerObject[key];\r\n      layerObject[key] = parentValue;\r\n    }\r\n  });\r\n\r\n  return layerObject;\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object} Dimension object.\r\n */\r\nfunction readDimension(node, objectStack) {\r\n  var dimensionObject = {\r\n    'name': node.getAttribute('name'),\r\n    'units': node.getAttribute('units'),\r\n    'unitSymbol': node.getAttribute('unitSymbol'),\r\n    'default': node.getAttribute('default'),\r\n    'multipleValues': readBooleanString(node.getAttribute('multipleValues')),\r\n    'nearestValue': readBooleanString(node.getAttribute('nearestValue')),\r\n    'current': readBooleanString(node.getAttribute('current')),\r\n    'values': readString(node)\r\n  };\r\n  return dimensionObject;\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Online resource object.\r\n */\r\nfunction readFormatOnlineresource(node, objectStack) {\r\n  return pushParseAndPop({}, FORMAT_ONLINERESOURCE_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Request object.\r\n */\r\nfunction readRequest(node, objectStack) {\r\n  return pushParseAndPop({}, REQUEST_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} DCP type object.\r\n */\r\nfunction readDCPType(node, objectStack) {\r\n  return pushParseAndPop({}, DCPTYPE_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} HTTP object.\r\n */\r\nfunction readHTTP(node, objectStack) {\r\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Operation type object.\r\n */\r\nfunction readOperationType(node, objectStack) {\r\n  return pushParseAndPop({}, OPERATIONTYPE_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Online resource object.\r\n */\r\nfunction readSizedFormatOnlineresource(node, objectStack) {\r\n  var formatOnlineresource = readFormatOnlineresource(node, objectStack);\r\n  if (formatOnlineresource) {\r\n    var size = [\r\n      readNonNegativeIntegerString(node.getAttribute('width')),\r\n      readNonNegativeIntegerString(node.getAttribute('height'))\r\n    ];\r\n    formatOnlineresource['size'] = size;\r\n    return formatOnlineresource;\r\n  }\r\n  return undefined;\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Authority URL object.\r\n */\r\nfunction readAuthorityURL(node, objectStack) {\r\n  var authorityObject = readFormatOnlineresource(node, objectStack);\r\n  if (authorityObject) {\r\n    authorityObject['name'] = node.getAttribute('name');\r\n    return authorityObject;\r\n  }\r\n  return undefined;\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Metadata URL object.\r\n */\r\nfunction readMetadataURL(node, objectStack) {\r\n  var metadataObject = readFormatOnlineresource(node, objectStack);\r\n  if (metadataObject) {\r\n    metadataObject['type'] = node.getAttribute('type');\r\n    return metadataObject;\r\n  }\r\n  return undefined;\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Style object.\r\n */\r\nfunction readStyle(node, objectStack) {\r\n  return pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Array<string>|undefined} Keyword list.\r\n */\r\nfunction readKeywordList(node, objectStack) {\r\n  return pushParseAndPop([], KEYWORDLIST_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\nexport default WMSCapabilities;\r\n\r\n//# sourceMappingURL=WMSCapabilities.js.map","/**\r\n * @module ol/format/WMSGetFeatureInfo\r\n */\r\nimport {extend, includes} from '../array.js';\r\nimport GML2 from './GML2.js';\r\nimport XMLFeature from './XMLFeature.js';\r\nimport {assign} from '../obj.js';\r\nimport {makeArrayPusher, makeStructureNS, pushParseAndPop} from '../xml.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {Array<string>} [layers] If set, only features of the given layers will be returned by the format when read.\r\n */\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nvar featureIdentifier = '_feature';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nvar layerIdentifier = '_layer';\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Format for reading WMSGetFeatureInfo format. It uses\r\n * {@link module:ol/format/GML2~GML2} to read features.\r\n *\r\n * @api\r\n */\r\nvar WMSGetFeatureInfo = /*@__PURE__*/(function (XMLFeature) {\n  function WMSGetFeatureInfo(opt_options) {\r\n    XMLFeature.call(this);\r\n\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\r\n\r\n\r\n    /**\r\n     * @private\r\n     * @type {GML2}\r\n     */\r\n    this.gmlFormat_ = new GML2();\r\n\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<string>}\r\n     */\r\n    this.layers_ = options.layers ? options.layers : null;\r\n  }\n\n  if ( XMLFeature ) WMSGetFeatureInfo.__proto__ = XMLFeature;\n  WMSGetFeatureInfo.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  WMSGetFeatureInfo.prototype.constructor = WMSGetFeatureInfo;\r\n\r\n  /**\r\n   * @return {Array<string>} layers\r\n   */\r\n  WMSGetFeatureInfo.prototype.getLayers = function getLayers () {\r\n    return this.layers_;\r\n  };\r\n\r\n  /**\r\n   * @param {Array<string>} layers Layers to parse.\r\n   */\r\n  WMSGetFeatureInfo.prototype.setLayers = function setLayers (layers) {\r\n    this.layers_ = layers;\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @return {Array<import(\"../Feature.js\").default>} Features.\r\n   * @private\r\n   */\r\n  WMSGetFeatureInfo.prototype.readFeatures_ = function readFeatures_ (node, objectStack) {\r\n    node.setAttribute('namespaceURI', this.featureNS_);\r\n    var localName = node.localName;\r\n    /** @type {Array<import(\"../Feature.js\").default>} */\r\n    var features = [];\r\n    if (node.childNodes.length === 0) {\r\n      return features;\r\n    }\r\n    if (localName == 'msGMLOutput') {\r\n      for (var i = 0, ii = node.childNodes.length; i < ii; i++) {\r\n        var layer = node.childNodes[i];\r\n        if (layer.nodeType !== Node.ELEMENT_NODE) {\r\n          continue;\r\n        }\r\n\r\n        var layerElement = /** @type {Element} */ (layer);\r\n        var context = objectStack[0];\r\n\r\n        var toRemove = layerIdentifier;\r\n        var layerName = layerElement.localName.replace(toRemove, '');\r\n\r\n        if (this.layers_ && !includes(this.layers_, layerName)) {\r\n          continue;\r\n        }\r\n\r\n        var featureType = layerName +\r\n            featureIdentifier;\r\n\r\n        context['featureType'] = featureType;\r\n        context['featureNS'] = this.featureNS_;\r\n\r\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\r\n        var parsers = {};\r\n        parsers[featureType] = makeArrayPusher(\r\n          this.gmlFormat_.readFeatureElement, this.gmlFormat_);\r\n        var parsersNS = makeStructureNS(\r\n          [context['featureNS'], null], parsers);\r\n        layerElement.setAttribute('namespaceURI', this.featureNS_);\r\n        var layerFeatures = pushParseAndPop(\r\n          [], parsersNS, layerElement, objectStack, this.gmlFormat_);\r\n        if (layerFeatures) {\r\n          extend(features, layerFeatures);\r\n        }\r\n      }\r\n    }\r\n    if (localName == 'FeatureCollection') {\r\n      var gmlFeatures = pushParseAndPop([],\r\n        this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\r\n        [{}], this.gmlFormat_);\r\n      if (gmlFeatures) {\r\n        features = gmlFeatures;\r\n      }\r\n    }\r\n    return features;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WMSGetFeatureInfo.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\r\n    var options = {};\r\n    if (opt_options) {\r\n      assign(options, this.getReadOptions(node, opt_options));\r\n    }\r\n    return this.readFeatures_(node, [options]);\r\n  };\n\n  return WMSGetFeatureInfo;\n}(XMLFeature));\r\n\r\n\r\nexport default WMSGetFeatureInfo;\r\n\r\n//# sourceMappingURL=WMSGetFeatureInfo.js.map","/**\r\n * @module ol/format/OWS\r\n */\r\nimport {readHref} from './XLink.js';\r\nimport XML from './XML.js';\r\nimport {readString} from './xsd.js';\r\nimport {makeObjectPropertyPusher, makeObjectPropertySetter, makeStructureNS, pushParseAndPop} from '../xml.js';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Array<null|string>}\r\n */\r\nvar NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\r\n    'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\r\n    'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata)\r\n  });\r\n\r\n\r\nvar OWS = /*@__PURE__*/(function (XML) {\n  function OWS() {\r\n    XML.call(this);\r\n  }\n\n  if ( XML ) OWS.__proto__ = XML;\n  OWS.prototype = Object.create( XML && XML.prototype );\n  OWS.prototype.constructor = OWS;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  OWS.prototype.readFromDocument = function readFromDocument (doc) {\r\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\r\n      if (n.nodeType == Node.ELEMENT_NODE) {\r\n        return this.readFromNode(n);\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  OWS.prototype.readFromNode = function readFromNode (node) {\r\n    var owsObject = pushParseAndPop({},\r\n      PARSERS, node, []);\r\n    return owsObject ? owsObject : null;\r\n  };\n\n  return OWS;\n}(XML));\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar ADDRESS_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'DeliveryPoint': makeObjectPropertySetter(readString),\r\n    'City': makeObjectPropertySetter(readString),\r\n    'AdministrativeArea': makeObjectPropertySetter(readString),\r\n    'PostalCode': makeObjectPropertySetter(readString),\r\n    'Country': makeObjectPropertySetter(readString),\r\n    'ElectronicMailAddress': makeObjectPropertySetter(readString)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar ALLOWED_VALUES_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Value': makeObjectPropertyPusher(readValue)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar CONSTRAINT_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'AllowedValues': makeObjectPropertySetter(readAllowedValues)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar CONTACT_INFO_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Phone': makeObjectPropertySetter(readPhone),\r\n    'Address': makeObjectPropertySetter(readAddress)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar DCP_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'HTTP': makeObjectPropertySetter(readHttp)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar HTTP_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Get': makeObjectPropertyPusher(readGet),\r\n    'Post': undefined // TODO\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar OPERATION_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'DCP': makeObjectPropertySetter(readDcp)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar OPERATIONS_METADATA_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Operation': readOperation\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar PHONE_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Voice': makeObjectPropertySetter(readString),\r\n    'Facsimile': makeObjectPropertySetter(readString)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar REQUEST_METHOD_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Constraint': makeObjectPropertyPusher(readConstraint)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar SERVICE_CONTACT_PARSERS =\r\n    makeStructureNS(\r\n      NAMESPACE_URIS, {\r\n        'IndividualName': makeObjectPropertySetter(readString),\r\n        'PositionName': makeObjectPropertySetter(readString),\r\n        'ContactInfo': makeObjectPropertySetter(readContactInfo)\r\n      });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar SERVICE_IDENTIFICATION_PARSERS =\r\n    makeStructureNS(\r\n      NAMESPACE_URIS, {\r\n        'Abstract': makeObjectPropertySetter(readString),\r\n        'AccessConstraints': makeObjectPropertySetter(readString),\r\n        'Fees': makeObjectPropertySetter(readString),\r\n        'Title': makeObjectPropertySetter(readString),\r\n        'ServiceTypeVersion': makeObjectPropertySetter(readString),\r\n        'ServiceType': makeObjectPropertySetter(readString)\r\n      });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar SERVICE_PROVIDER_PARSERS =\r\n    makeStructureNS(\r\n      NAMESPACE_URIS, {\r\n        'ProviderName': makeObjectPropertySetter(readString),\r\n        'ProviderSite': makeObjectPropertySetter(readHref),\r\n        'ServiceContact': makeObjectPropertySetter(readServiceContact)\r\n      });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} The address.\r\n */\r\nfunction readAddress(node, objectStack) {\r\n  return pushParseAndPop({},\r\n    ADDRESS_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} The values.\r\n */\r\nfunction readAllowedValues(node, objectStack) {\r\n  return pushParseAndPop({},\r\n    ALLOWED_VALUES_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} The constraint.\r\n */\r\nfunction readConstraint(node, objectStack) {\r\n  var name = node.getAttribute('name');\r\n  if (!name) {\r\n    return undefined;\r\n  }\r\n  return pushParseAndPop({'name': name},\r\n    CONSTRAINT_PARSERS, node,\r\n    objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} The contact info.\r\n */\r\nfunction readContactInfo(node, objectStack) {\r\n  return pushParseAndPop({},\r\n    CONTACT_INFO_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} The DCP.\r\n */\r\nfunction readDcp(node, objectStack) {\r\n  return pushParseAndPop({},\r\n    DCP_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} The GET object.\r\n */\r\nfunction readGet(node, objectStack) {\r\n  var href = readHref(node);\r\n  if (!href) {\r\n    return undefined;\r\n  }\r\n  return pushParseAndPop({'href': href},\r\n    REQUEST_METHOD_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} The HTTP object.\r\n */\r\nfunction readHttp(node, objectStack) {\r\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} The operation.\r\n */\r\nfunction readOperation(node, objectStack) {\r\n  var name = node.getAttribute('name');\r\n  var value = pushParseAndPop({},\r\n    OPERATION_PARSERS, node, objectStack);\r\n  if (!value) {\r\n    return undefined;\r\n  }\r\n  var object = /** @type {Object} */\r\n      (objectStack[objectStack.length - 1]);\r\n  object[name] = value;\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} The operations metadata.\r\n */\r\nfunction readOperationsMetadata(node, objectStack) {\r\n  return pushParseAndPop({},\r\n    OPERATIONS_METADATA_PARSERS, node,\r\n    objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} The phone.\r\n */\r\nfunction readPhone(node, objectStack) {\r\n  return pushParseAndPop({},\r\n    PHONE_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} The service identification.\r\n */\r\nfunction readServiceIdentification(node, objectStack) {\r\n  return pushParseAndPop(\r\n    {}, SERVICE_IDENTIFICATION_PARSERS, node,\r\n    objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} The service contact.\r\n */\r\nfunction readServiceContact(node, objectStack) {\r\n  return pushParseAndPop(\r\n    {}, SERVICE_CONTACT_PARSERS, node,\r\n    objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} The service provider.\r\n */\r\nfunction readServiceProvider(node, objectStack) {\r\n  return pushParseAndPop(\r\n    {}, SERVICE_PROVIDER_PARSERS, node,\r\n    objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {string|undefined} The value.\r\n */\r\nfunction readValue(node, objectStack) {\r\n  return readString(node);\r\n}\r\n\r\n\r\nexport default OWS;\r\n\r\n//# sourceMappingURL=OWS.js.map","/**\r\n * @module ol/format/WMTSCapabilities\r\n */\r\nimport {boundingExtent} from '../extent.js';\r\nimport OWS from './OWS.js';\r\nimport {readHref} from './XLink.js';\r\nimport XML from './XML.js';\r\nimport {readString, readNonNegativeInteger, readDecimal} from './xsd.js';\r\nimport {pushParseAndPop, makeStructureNS,\r\n  makeObjectPropertySetter, makeObjectPropertyPusher, makeArrayPusher} from '../xml.js';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Array<null|string>}\r\n */\r\nvar NAMESPACE_URIS = [\r\n  null,\r\n  'http://www.opengis.net/wmts/1.0'\r\n];\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Array<null|string>}\r\n */\r\nvar OWS_NAMESPACE_URIS = [\r\n  null,\r\n  'http://www.opengis.net/ows/1.1'\r\n];\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Contents': makeObjectPropertySetter(readContents)\r\n  });\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Format for reading WMTS capabilities data.\r\n *\r\n * @api\r\n */\r\nvar WMTSCapabilities = /*@__PURE__*/(function (XML) {\n  function WMTSCapabilities() {\r\n    XML.call(this);\r\n\r\n    /**\r\n     * @type {OWS}\r\n     * @private\r\n     */\r\n    this.owsParser_ = new OWS();\r\n  }\n\n  if ( XML ) WMTSCapabilities.__proto__ = XML;\n  WMTSCapabilities.prototype = Object.create( XML && XML.prototype );\n  WMTSCapabilities.prototype.constructor = WMTSCapabilities;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WMTSCapabilities.prototype.readFromDocument = function readFromDocument (doc) {\r\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\r\n      if (n.nodeType == Node.ELEMENT_NODE) {\r\n        return this.readFromNode(n);\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WMTSCapabilities.prototype.readFromNode = function readFromNode (node) {\r\n    var version = node.getAttribute('version').trim();\r\n    var WMTSCapabilityObject = this.owsParser_.readFromNode(node);\r\n    if (!WMTSCapabilityObject) {\r\n      return null;\r\n    }\r\n    WMTSCapabilityObject['version'] = version;\r\n    WMTSCapabilityObject = pushParseAndPop(WMTSCapabilityObject, PARSERS, node, []);\r\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\r\n  };\n\n  return WMTSCapabilities;\n}(XML));\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar CONTENTS_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Layer': makeObjectPropertyPusher(readLayer),\r\n    'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar LAYER_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Style': makeObjectPropertyPusher(readStyle),\r\n    'Format': makeObjectPropertyPusher(readString),\r\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\r\n    'Dimension': makeObjectPropertyPusher(readDimensions),\r\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl)\r\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\r\n    'Title': makeObjectPropertySetter(readString),\r\n    'Abstract': makeObjectPropertySetter(readString),\r\n    'WGS84BoundingBox': makeObjectPropertySetter(readWgs84BoundingBox),\r\n    'Identifier': makeObjectPropertySetter(readString)\r\n  }));\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar STYLE_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl)\r\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\r\n    'Title': makeObjectPropertySetter(readString),\r\n    'Identifier': makeObjectPropertySetter(readString)\r\n  }));\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar TMS_LINKS_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'TileMatrixSet': makeObjectPropertySetter(readString),\r\n    'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList)\r\n  });\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar TMS_LIMITS_LIST_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar TMS_LIMITS_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'TileMatrix': makeObjectPropertySetter(readString),\r\n    'MinTileRow': makeObjectPropertySetter(readNonNegativeInteger),\r\n    'MaxTileRow': makeObjectPropertySetter(readNonNegativeInteger),\r\n    'MinTileCol': makeObjectPropertySetter(readNonNegativeInteger),\r\n    'MaxTileCol': makeObjectPropertySetter(readNonNegativeInteger)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar DIMENSION_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Default': makeObjectPropertySetter(readString),\r\n    'Value': makeObjectPropertyPusher(readString)\r\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\r\n    'Identifier': makeObjectPropertySetter(readString)\r\n  }));\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar WGS84_BBOX_READERS = makeStructureNS(\r\n  OWS_NAMESPACE_URIS, {\r\n    'LowerCorner': makeArrayPusher(readCoordinates),\r\n    'UpperCorner': makeArrayPusher(readCoordinates)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar TMS_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\r\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix)\r\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\r\n    'SupportedCRS': makeObjectPropertySetter(readString),\r\n    'Identifier': makeObjectPropertySetter(readString)\r\n  }));\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar TM_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\r\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\r\n    'TileWidth': makeObjectPropertySetter(readNonNegativeInteger),\r\n    'TileHeight': makeObjectPropertySetter(readNonNegativeInteger),\r\n    'MatrixWidth': makeObjectPropertySetter(readNonNegativeInteger),\r\n    'MatrixHeight': makeObjectPropertySetter(readNonNegativeInteger)\r\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\r\n    'Identifier': makeObjectPropertySetter(readString)\r\n  }));\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Attribution object.\r\n */\r\nfunction readContents(node, objectStack) {\r\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Layers object.\r\n */\r\nfunction readLayer(node, objectStack) {\r\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Tile Matrix Set object.\r\n */\r\nfunction readTileMatrixSet(node, objectStack) {\r\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Style object.\r\n */\r\nfunction readStyle(node, objectStack) {\r\n  var style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\r\n  if (!style) {\r\n    return undefined;\r\n  }\r\n  var isDefault = node.getAttribute('isDefault') === 'true';\r\n  style['isDefault'] = isDefault;\r\n  return style;\r\n\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Tile Matrix Set Link object.\r\n */\r\nfunction readTileMatrixSetLink(node, objectStack) {\r\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Dimension object.\r\n */\r\nfunction readDimensions(node, objectStack) {\r\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Resource URL object.\r\n */\r\nfunction readResourceUrl(node, objectStack) {\r\n  var format = node.getAttribute('format');\r\n  var template = node.getAttribute('template');\r\n  var resourceType = node.getAttribute('resourceType');\r\n  var resource = {};\r\n  if (format) {\r\n    resource['format'] = format;\r\n  }\r\n  if (template) {\r\n    resource['template'] = template;\r\n  }\r\n  if (resourceType) {\r\n    resource['resourceType'] = resourceType;\r\n  }\r\n  return resource;\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} WGS84 BBox object.\r\n */\r\nfunction readWgs84BoundingBox(node, objectStack) {\r\n  var coordinates = pushParseAndPop([], WGS84_BBOX_READERS, node, objectStack);\r\n  if (coordinates.length != 2) {\r\n    return undefined;\r\n  }\r\n  return boundingExtent(coordinates);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Legend object.\r\n */\r\nfunction readLegendUrl(node, objectStack) {\r\n  var legend = {};\r\n  legend['format'] = node.getAttribute('format');\r\n  legend['href'] = readHref(node);\r\n  return legend;\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} Coordinates object.\r\n */\r\nfunction readCoordinates(node, objectStack) {\r\n  var coordinates = readString(node).split(/\\s+/);\r\n  if (!coordinates || coordinates.length != 2) {\r\n    return undefined;\r\n  }\r\n  var x = +coordinates[0];\r\n  var y = +coordinates[1];\r\n  if (isNaN(x) || isNaN(y)) {\r\n    return undefined;\r\n  }\r\n  return [x, y];\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} TileMatrix object.\r\n */\r\nfunction readTileMatrix(node, objectStack) {\r\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} TileMatrixSetLimits Object.\r\n */\r\nfunction readTileMatrixLimitsList(node, objectStack) {\r\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object|undefined} TileMatrixLimits Array.\r\n */\r\nfunction readTileMatrixLimits(node, objectStack) {\r\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\nexport default WMTSCapabilities;\r\n\r\n//# sourceMappingURL=WMTSCapabilities.js.map","/**\r\n * @module ol/Geolocation\r\n */\r\nimport BaseObject, {getChangeEventType} from './Object.js';\r\nimport {listen} from './events.js';\r\nimport Event from './events/Event.js';\r\nimport EventType from './events/EventType.js';\r\nimport {circular as circularPolygon} from './geom/Polygon.js';\r\nimport {GEOLOCATION} from './has.js';\r\nimport {toRadians} from './math.js';\r\nimport {get as getProjection, getTransformFromProjections, identityTransform} from './proj.js';\r\n\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nvar Property = {\r\n  ACCURACY: 'accuracy',\r\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\r\n  ALTITUDE: 'altitude',\r\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\r\n  HEADING: 'heading',\r\n  POSITION: 'position',\r\n  PROJECTION: 'projection',\r\n  SPEED: 'speed',\r\n  TRACKING: 'tracking',\r\n  TRACKING_OPTIONS: 'trackingOptions'\r\n};\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted on Geolocation error.\r\n */\r\nvar GeolocationError = /*@__PURE__*/(function (Event) {\n  function GeolocationError(error) {\r\n    Event.call(this, EventType.ERROR);\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.code = error.code;\r\n\r\n    /**\r\n     * @type {string}\r\n     */\r\n    this.message = error.message;\r\n  }\n\n  if ( Event ) GeolocationError.__proto__ = Event;\n  GeolocationError.prototype = Object.create( Event && Event.prototype );\n  GeolocationError.prototype.constructor = GeolocationError;\n\n  return GeolocationError;\n}(Event));\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {boolean} [tracking=false] Start Tracking right after\r\n * instantiation.\r\n * @property {PositionOptions} [trackingOptions] Tracking options.\r\n * See http://www.w3.org/TR/geolocation-API/#position_options_interface.\r\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\r\n * is reported in.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Helper class for providing HTML5 Geolocation capabilities.\r\n * The [Geolocation API](http://www.w3.org/TR/geolocation-API/)\r\n * is used to locate a user's position.\r\n *\r\n * To get notified of position changes, register a listener for the generic\r\n * `change` event on your instance of {@link module:ol/Geolocation~Geolocation}.\r\n *\r\n * Example:\r\n *\r\n *     var geolocation = new Geolocation({\r\n *       // take the projection to use from the map's view\r\n *       projection: view.getProjection()\r\n *     });\r\n *     // listen to changes in position\r\n *     geolocation.on('change', function(evt) {\r\n *       window.console.log(geolocation.getPosition());\r\n *     });\r\n *\r\n * @fires error\r\n * @api\r\n */\r\nvar Geolocation = /*@__PURE__*/(function (BaseObject) {\n  function Geolocation(opt_options) {\r\n\r\n    BaseObject.call(this);\r\n\r\n    var options = opt_options || {};\r\n\r\n    /**\r\n     * The unprojected (EPSG:4326) device position.\r\n     * @private\r\n     * @type {import(\"./coordinate.js\").Coordinate}\r\n     */\r\n    this.position_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./proj.js\").TransformFunction}\r\n     */\r\n    this.transform_ = identityTransform;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.watchId_ = undefined;\r\n\r\n    listen(\r\n      this, getChangeEventType(Property.PROJECTION),\r\n      this.handleProjectionChanged_, this);\r\n    listen(\r\n      this, getChangeEventType(Property.TRACKING),\r\n      this.handleTrackingChanged_, this);\r\n\r\n    if (options.projection !== undefined) {\r\n      this.setProjection(options.projection);\r\n    }\r\n    if (options.trackingOptions !== undefined) {\r\n      this.setTrackingOptions(options.trackingOptions);\r\n    }\r\n\r\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\r\n\r\n  }\n\n  if ( BaseObject ) Geolocation.__proto__ = BaseObject;\n  Geolocation.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geolocation.prototype.constructor = Geolocation;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Geolocation.prototype.disposeInternal = function disposeInternal () {\r\n    this.setTracking(false);\r\n    BaseObject.prototype.disposeInternal.call(this);\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  Geolocation.prototype.handleProjectionChanged_ = function handleProjectionChanged_ () {\r\n    var projection = this.getProjection();\r\n    if (projection) {\r\n      this.transform_ = getTransformFromProjections(\r\n        getProjection('EPSG:4326'), projection);\r\n      if (this.position_) {\r\n        this.set(Property.POSITION, this.transform_(this.position_));\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  Geolocation.prototype.handleTrackingChanged_ = function handleTrackingChanged_ () {\r\n    if (GEOLOCATION) {\r\n      var tracking = this.getTracking();\r\n      if (tracking && this.watchId_ === undefined) {\r\n        this.watchId_ = navigator.geolocation.watchPosition(\r\n          this.positionChange_.bind(this),\r\n          this.positionError_.bind(this),\r\n          this.getTrackingOptions());\r\n      } else if (!tracking && this.watchId_ !== undefined) {\r\n        navigator.geolocation.clearWatch(this.watchId_);\r\n        this.watchId_ = undefined;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {Position} position position event.\r\n   */\r\n  Geolocation.prototype.positionChange_ = function positionChange_ (position) {\r\n    var coords = position.coords;\r\n    this.set(Property.ACCURACY, coords.accuracy);\r\n    this.set(Property.ALTITUDE,\r\n      coords.altitude === null ? undefined : coords.altitude);\r\n    this.set(Property.ALTITUDE_ACCURACY,\r\n      coords.altitudeAccuracy === null ?\r\n        undefined : coords.altitudeAccuracy);\r\n    this.set(Property.HEADING, coords.heading === null ?\r\n      undefined : toRadians(coords.heading));\r\n    if (!this.position_) {\r\n      this.position_ = [coords.longitude, coords.latitude];\r\n    } else {\r\n      this.position_[0] = coords.longitude;\r\n      this.position_[1] = coords.latitude;\r\n    }\r\n    var projectedPosition = this.transform_(this.position_);\r\n    this.set(Property.POSITION, projectedPosition);\r\n    this.set(Property.SPEED,\r\n      coords.speed === null ? undefined : coords.speed);\r\n    var geometry = circularPolygon(this.position_, coords.accuracy);\r\n    geometry.applyTransform(this.transform_);\r\n    this.set(Property.ACCURACY_GEOMETRY, geometry);\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * Triggered when the Geolocation returns an error.\r\n   * @event error\r\n   * @api\r\n   */\r\n\r\n  /**\r\n   * @private\r\n   * @param {PositionError} error error object.\r\n   */\r\n  Geolocation.prototype.positionError_ = function positionError_ (error) {\r\n    this.setTracking(false);\r\n    this.dispatchEvent(new GeolocationError(error));\r\n  };\r\n\r\n  /**\r\n   * Get the accuracy of the position in meters.\r\n   * @return {number|undefined} The accuracy of the position measurement in\r\n   *     meters.\r\n   * @observable\r\n   * @api\r\n   */\r\n  Geolocation.prototype.getAccuracy = function getAccuracy () {\r\n    return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\r\n  };\r\n\r\n  /**\r\n   * Get a geometry of the position accuracy.\r\n   * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\r\n   * @observable\r\n   * @api\r\n   */\r\n  Geolocation.prototype.getAccuracyGeometry = function getAccuracyGeometry () {\r\n    return (\r\n      /** @type {?import(\"./geom/Polygon.js\").default} */ (this.get(Property.ACCURACY_GEOMETRY) || null)\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Get the altitude associated with the position.\r\n   * @return {number|undefined} The altitude of the position in meters above mean\r\n   *     sea level.\r\n   * @observable\r\n   * @api\r\n   */\r\n  Geolocation.prototype.getAltitude = function getAltitude () {\r\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\r\n  };\r\n\r\n  /**\r\n   * Get the altitude accuracy of the position.\r\n   * @return {number|undefined} The accuracy of the altitude measurement in\r\n   *     meters.\r\n   * @observable\r\n   * @api\r\n   */\r\n  Geolocation.prototype.getAltitudeAccuracy = function getAltitudeAccuracy () {\r\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE_ACCURACY));\r\n  };\r\n\r\n  /**\r\n   * Get the heading as radians clockwise from North.\r\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\r\n   * is set to `true` in the tracking options.\r\n   * @return {number|undefined} The heading of the device in radians from north.\r\n   * @observable\r\n   * @api\r\n   */\r\n  Geolocation.prototype.getHeading = function getHeading () {\r\n    return /** @type {number|undefined} */ (this.get(Property.HEADING));\r\n  };\r\n\r\n  /**\r\n   * Get the position of the device.\r\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\r\n   *     in the current projection.\r\n   * @observable\r\n   * @api\r\n   */\r\n  Geolocation.prototype.getPosition = function getPosition () {\r\n    return (\r\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION))\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Get the projection associated with the position.\r\n   * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\r\n   *     reported in.\r\n   * @observable\r\n   * @api\r\n   */\r\n  Geolocation.prototype.getProjection = function getProjection () {\r\n    return (\r\n      /** @type {import(\"./proj/Projection.js\").default|undefined} */ (this.get(Property.PROJECTION))\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Get the speed in meters per second.\r\n   * @return {number|undefined} The instantaneous speed of the device in meters\r\n   *     per second.\r\n   * @observable\r\n   * @api\r\n   */\r\n  Geolocation.prototype.getSpeed = function getSpeed () {\r\n    return /** @type {number|undefined} */ (this.get(Property.SPEED));\r\n  };\r\n\r\n  /**\r\n   * Determine if the device location is being tracked.\r\n   * @return {boolean} The device location is being tracked.\r\n   * @observable\r\n   * @api\r\n   */\r\n  Geolocation.prototype.getTracking = function getTracking () {\r\n    return /** @type {boolean} */ (this.get(Property.TRACKING));\r\n  };\r\n\r\n  /**\r\n   * Get the tracking options.\r\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\r\n   * @return {PositionOptions|undefined} PositionOptions as defined by\r\n   *     the [HTML5 Geolocation spec\r\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\r\n   * @observable\r\n   * @api\r\n   */\r\n  Geolocation.prototype.getTrackingOptions = function getTrackingOptions () {\r\n    return /** @type {PositionOptions|undefined} */ (this.get(Property.TRACKING_OPTIONS));\r\n  };\r\n\r\n  /**\r\n   * Set the projection to use for transforming the coordinates.\r\n   * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\r\n   *     reported in.\r\n   * @observable\r\n   * @api\r\n   */\r\n  Geolocation.prototype.setProjection = function setProjection (projection) {\r\n    this.set(Property.PROJECTION, getProjection(projection));\r\n  };\r\n\r\n  /**\r\n   * Enable or disable tracking.\r\n   * @param {boolean} tracking Enable tracking.\r\n   * @observable\r\n   * @api\r\n   */\r\n  Geolocation.prototype.setTracking = function setTracking (tracking) {\r\n    this.set(Property.TRACKING, tracking);\r\n  };\r\n\r\n  /**\r\n   * Set the tracking options.\r\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\r\n   * @param {PositionOptions} options PositionOptions as defined by the\r\n   *     [HTML5 Geolocation spec\r\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\r\n   * @observable\r\n   * @api\r\n   */\r\n  Geolocation.prototype.setTrackingOptions = function setTrackingOptions (options) {\r\n    this.set(Property.TRACKING_OPTIONS, options);\r\n  };\n\n  return Geolocation;\n}(BaseObject));\r\n\r\n\r\nexport default Geolocation;\r\n\r\n//# sourceMappingURL=Geolocation.js.map","/**\r\n * @module ol/geom/Circle\r\n */\r\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\r\nimport GeometryType from './GeometryType.js';\r\nimport SimpleGeometry from './SimpleGeometry.js';\r\nimport {deflateCoordinate} from './flat/deflate.js';\r\n\r\n/**\r\n * @classdesc\r\n * Circle geometry.\r\n *\r\n * @api\r\n */\r\nvar Circle = /*@__PURE__*/(function (SimpleGeometry) {\n  function Circle(center, opt_radius, opt_layout) {\r\n    SimpleGeometry.call(this);\r\n    if (opt_layout !== undefined && opt_radius === undefined) {\r\n      this.setFlatCoordinates(opt_layout, center);\r\n    } else {\r\n      var radius = opt_radius ? opt_radius : 0;\r\n      this.setCenterAndRadius(center, radius, opt_layout);\r\n    }\r\n  }\n\n  if ( SimpleGeometry ) Circle.__proto__ = SimpleGeometry;\n  Circle.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Circle.prototype.constructor = Circle;\r\n\r\n  /**\r\n   * Make a complete copy of the geometry.\r\n   * @return {!Circle} Clone.\r\n   * @override\r\n   * @api\r\n   */\r\n  Circle.prototype.clone = function clone () {\r\n    return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Circle.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\r\n    var flatCoordinates = this.flatCoordinates;\r\n    var dx = x - flatCoordinates[0];\r\n    var dy = y - flatCoordinates[1];\r\n    var squaredDistance = dx * dx + dy * dy;\r\n    if (squaredDistance < minSquaredDistance) {\r\n      if (squaredDistance === 0) {\r\n        for (var i = 0; i < this.stride; ++i) {\r\n          closestPoint[i] = flatCoordinates[i];\r\n        }\r\n      } else {\r\n        var delta = this.getRadius() / Math.sqrt(squaredDistance);\r\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\r\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\r\n        for (var i$1 = 2; i$1 < this.stride; ++i$1) {\r\n          closestPoint[i$1] = flatCoordinates[i$1];\r\n        }\r\n      }\r\n      closestPoint.length = this.stride;\r\n      return squaredDistance;\r\n    } else {\r\n      return minSquaredDistance;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Circle.prototype.containsXY = function containsXY (x, y) {\r\n    var flatCoordinates = this.flatCoordinates;\r\n    var dx = x - flatCoordinates[0];\r\n    var dy = y - flatCoordinates[1];\r\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\r\n  };\r\n\r\n  /**\r\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\r\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\r\n   * @api\r\n   */\r\n  Circle.prototype.getCenter = function getCenter () {\r\n    return this.flatCoordinates.slice(0, this.stride);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Circle.prototype.computeExtent = function computeExtent (extent) {\r\n    var flatCoordinates = this.flatCoordinates;\r\n    var radius = flatCoordinates[this.stride] - flatCoordinates[0];\r\n    return createOrUpdate(\r\n      flatCoordinates[0] - radius, flatCoordinates[1] - radius,\r\n      flatCoordinates[0] + radius, flatCoordinates[1] + radius,\r\n      extent);\r\n  };\r\n\r\n  /**\r\n   * Return the radius of the circle.\r\n   * @return {number} Radius.\r\n   * @api\r\n   */\r\n  Circle.prototype.getRadius = function getRadius () {\r\n    return Math.sqrt(this.getRadiusSquared_());\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @return {number} Radius squared.\r\n   */\r\n  Circle.prototype.getRadiusSquared_ = function getRadiusSquared_ () {\r\n    var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\r\n    var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\r\n    return dx * dx + dy * dy;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  Circle.prototype.getType = function getType () {\r\n    return GeometryType.CIRCLE;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  Circle.prototype.intersectsExtent = function intersectsExtent (extent) {\r\n    var circleExtent = this.getExtent();\r\n    if (intersects(extent, circleExtent)) {\r\n      var center = this.getCenter();\r\n\r\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\r\n        return true;\r\n      }\r\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\r\n        return true;\r\n      }\r\n\r\n      return forEachCorner(extent, this.intersectsCoordinate, this);\r\n    }\r\n    return false;\r\n\r\n  };\r\n\r\n  /**\r\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\r\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\r\n   * @api\r\n   */\r\n  Circle.prototype.setCenter = function setCenter (center) {\r\n    var stride = this.stride;\r\n    var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\r\n    var flatCoordinates = center.slice();\r\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\r\n    for (var i = 1; i < stride; ++i) {\r\n      flatCoordinates[stride + i] = center[i];\r\n    }\r\n    this.setFlatCoordinates(this.layout, flatCoordinates);\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\r\n   * number) of the circle.\r\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\r\n   * @param {number} radius Radius.\r\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\r\n   * @api\r\n   */\r\n  Circle.prototype.setCenterAndRadius = function setCenterAndRadius (center, radius, opt_layout) {\r\n    this.setLayout(opt_layout, center, 0);\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = [];\r\n    }\r\n    /** @type {Array<number>} */\r\n    var flatCoordinates = this.flatCoordinates;\r\n    var offset = deflateCoordinate(\r\n      flatCoordinates, 0, center, this.stride);\r\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\r\n    for (var i = 1, ii = this.stride; i < ii; ++i) {\r\n      flatCoordinates[offset++] = flatCoordinates[i];\r\n    }\r\n    flatCoordinates.length = offset;\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Circle.prototype.getCoordinates = function getCoordinates () {\r\n    return null;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Circle.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {};\r\n\r\n  /**\r\n   * Set the radius of the circle. The radius is in the units of the projection.\r\n   * @param {number} radius Radius.\r\n   * @api\r\n   */\r\n  Circle.prototype.setRadius = function setRadius (radius) {\r\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\r\n    this.changed();\r\n  };\n\n  return Circle;\n}(SimpleGeometry));\r\n\r\n\r\n/**\r\n * Transform each coordinate of the circle from one coordinate reference system\r\n * to another. The geometry is modified in place.\r\n * If you do not want the geometry modified in place, first clone() it and\r\n * then use this function on the clone.\r\n *\r\n * Internally a circle is currently represented by two points: the center of\r\n * the circle `[cx, cy]`, and the point to the right of the circle\r\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\r\n * So the resulting geometry is also a circle, and that circle does not\r\n * correspond to the shape that would be obtained by transforming every point\r\n * of the original circle.\r\n *\r\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\r\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\r\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\r\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\r\n * @return {Circle} This geometry.  Note that original geometry is\r\n *     modified in place.\r\n * @function\r\n * @api\r\n */\r\nCircle.prototype.transform;\r\nexport default Circle;\r\n\r\n//# sourceMappingURL=Circle.js.map","/**\r\n * @module ol/geom/flat/geodesic\r\n */\r\nimport {squaredSegmentDistance, toRadians, toDegrees} from '../../math.js';\r\nimport {get as getProjection, getTransform} from '../../proj.js';\r\n\r\n\r\n/**\r\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\r\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\r\n *     projected coordinates.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @return {Array<number>} Flat coordinates.\r\n */\r\nfunction line(interpolate, transform, squaredTolerance) {\r\n  // FIXME reduce garbage generation\r\n  // FIXME optimize stack operations\r\n\r\n  /** @type {Array<number>} */\r\n  var flatCoordinates = [];\r\n\r\n  var geoA = interpolate(0);\r\n  var geoB = interpolate(1);\r\n\r\n  var a = transform(geoA);\r\n  var b = transform(geoB);\r\n\r\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\r\n  var geoStack = [geoB, geoA];\r\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\r\n  var stack = [b, a];\r\n  /** @type {Array<number>} */\r\n  var fractionStack = [1, 0];\r\n\r\n  /** @type {!Object<string, boolean>} */\r\n  var fractions = {};\r\n\r\n  var maxIterations = 1e5;\r\n  var geoM, m, fracA, fracB, fracM, key;\r\n\r\n  while (--maxIterations > 0 && fractionStack.length > 0) {\r\n    // Pop the a coordinate off the stack\r\n    fracA = fractionStack.pop();\r\n    geoA = geoStack.pop();\r\n    a = stack.pop();\r\n    // Add the a coordinate if it has not been added yet\r\n    key = fracA.toString();\r\n    if (!(key in fractions)) {\r\n      flatCoordinates.push(a[0], a[1]);\r\n      fractions[key] = true;\r\n    }\r\n    // Pop the b coordinate off the stack\r\n    fracB = fractionStack.pop();\r\n    geoB = geoStack.pop();\r\n    b = stack.pop();\r\n    // Find the m point between the a and b coordinates\r\n    fracM = (fracA + fracB) / 2;\r\n    geoM = interpolate(fracM);\r\n    m = transform(geoM);\r\n    if (squaredSegmentDistance(m[0], m[1], a[0], a[1],\r\n      b[0], b[1]) < squaredTolerance) {\r\n      // If the m point is sufficiently close to the straight line, then we\r\n      // discard it.  Just use the b coordinate and move on to the next line\r\n      // segment.\r\n      flatCoordinates.push(b[0], b[1]);\r\n      key = fracB.toString();\r\n      fractions[key] = true;\r\n    } else {\r\n      // Otherwise, we need to subdivide the current line segment.  Split it\r\n      // into two and push the two line segments onto the stack.\r\n      fractionStack.push(fracB, fracM, fracM, fracA);\r\n      stack.push(b, m, m, a);\r\n      geoStack.push(geoB, geoM, geoM, geoA);\r\n    }\r\n  }\r\n\r\n  return flatCoordinates;\r\n}\r\n\r\n\r\n/**\r\n * Generate a great-circle arcs between two lat/lon points.\r\n * @param {number} lon1 Longitude 1 in degrees.\r\n * @param {number} lat1 Latitude 1 in degrees.\r\n * @param {number} lon2 Longitude 2 in degrees.\r\n * @param {number} lat2 Latitude 2 in degrees.\r\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @return {Array<number>} Flat coordinates.\r\n */\r\nexport function greatCircleArc(lon1, lat1, lon2, lat2, projection, squaredTolerance) {\r\n  var geoProjection = getProjection('EPSG:4326');\r\n\r\n  var cosLat1 = Math.cos(toRadians(lat1));\r\n  var sinLat1 = Math.sin(toRadians(lat1));\r\n  var cosLat2 = Math.cos(toRadians(lat2));\r\n  var sinLat2 = Math.sin(toRadians(lat2));\r\n  var cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\r\n  var sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\r\n  var d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\r\n\r\n  return line(\r\n    /**\r\n     * @param {number} frac Fraction.\r\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\r\n     */\r\n    function(frac) {\r\n      if (1 <= d) {\r\n        return [lon2, lat2];\r\n      }\r\n      var D = frac * Math.acos(d);\r\n      var cosD = Math.cos(D);\r\n      var sinD = Math.sin(D);\r\n      var y = sinDeltaLon * cosLat2;\r\n      var x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\r\n      var theta = Math.atan2(y, x);\r\n      var lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\r\n      var lon = toRadians(lon1) +\r\n            Math.atan2(Math.sin(theta) * sinD * cosLat1,\r\n              cosD - sinLat1 * Math.sin(lat));\r\n      return [toDegrees(lon), toDegrees(lat)];\r\n    }, getTransform(geoProjection, projection), squaredTolerance);\r\n}\r\n\r\n\r\n/**\r\n * Generate a meridian (line at constant longitude).\r\n * @param {number} lon Longitude.\r\n * @param {number} lat1 Latitude 1.\r\n * @param {number} lat2 Latitude 2.\r\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @return {Array<number>} Flat coordinates.\r\n */\r\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\r\n  var epsg4326Projection = getProjection('EPSG:4326');\r\n  return line(\r\n    /**\r\n     * @param {number} frac Fraction.\r\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\r\n     */\r\n    function(frac) {\r\n      return [lon, lat1 + ((lat2 - lat1) * frac)];\r\n    },\r\n    getTransform(epsg4326Projection, projection), squaredTolerance);\r\n}\r\n\r\n\r\n/**\r\n * Generate a parallel (line at constant latitude).\r\n * @param {number} lat Latitude.\r\n * @param {number} lon1 Longitude 1.\r\n * @param {number} lon2 Longitude 2.\r\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @return {Array<number>} Flat coordinates.\r\n */\r\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\r\n  var epsg4326Projection = getProjection('EPSG:4326');\r\n  return line(\r\n    /**\r\n     * @param {number} frac Fraction.\r\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\r\n     */\r\n    function(frac) {\r\n      return [lon1 + ((lon2 - lon1) * frac), lat];\r\n    },\r\n    getTransform(epsg4326Projection, projection), squaredTolerance);\r\n}\r\n\r\n//# sourceMappingURL=geodesic.js.map","/**\r\n * @module ol/Graticule\r\n */\r\nimport {degreesToStringHDMS} from './coordinate.js';\r\nimport {listen, unlistenByKey} from './events.js';\r\nimport {intersects, getCenter} from './extent.js';\r\nimport GeometryLayout from './geom/GeometryLayout.js';\r\nimport LineString from './geom/LineString.js';\r\nimport Point from './geom/Point.js';\r\nimport {meridian, parallel} from './geom/flat/geodesic.js';\r\nimport {clamp} from './math.js';\r\nimport {get as getProjection, equivalent as equivalentProjection, getTransform, transformExtent} from './proj.js';\r\nimport RenderEventType from './render/EventType.js';\r\nimport Fill from './style/Fill.js';\r\nimport Stroke from './style/Stroke.js';\r\nimport Text from './style/Text.js';\r\n\r\n\r\n/**\r\n * @type {Stroke}\r\n * @private\r\n * @const\r\n */\r\nvar DEFAULT_STROKE_STYLE = new Stroke({\r\n  color: 'rgba(0,0,0,0.2)'\r\n});\r\n\r\n/**\r\n * @type {Array<number>}\r\n * @private\r\n */\r\nvar INTERVALS = [\r\n  90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001\r\n];\r\n\r\n/**\r\n * @typedef {Object} GraticuleLabelDataType\r\n * @property {Point} geom\r\n * @property {string} text\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./PluggableMap.js\").default} [map] Reference to an\r\n * {@link module:ol/Map~Map} object.\r\n * @property {number} [maxLines=100] The maximum number of meridians and\r\n * parallels from the center of the map. The default value of 100 means that at\r\n * most 200 meridians and 200 parallels will be displayed. The default value is\r\n * appropriate for conformal projections like Spherical Mercator. If you\r\n * increase the value, more lines will be drawn and the drawing performance will\r\n * decrease.\r\n * @property {Stroke} [strokeStyle='rgba(0,0,0,0.2)'] The\r\n * stroke style to use for drawing the graticule. If not provided, a not fully\r\n * opaque black will be used.\r\n * @property {number} [targetSize=100] The target size of the graticule cells,\r\n * in pixels.\r\n * @property {boolean} [showLabels=false] Render a label with the respective\r\n * latitude/longitude for each graticule line.\r\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\r\n * longitudes. This function is called with the longitude as argument, and\r\n * should return a formatted string representing the longitude. By default,\r\n * labels are formatted as degrees, minutes, seconds and hemisphere.\r\n * @property {function(number):string} [latLabelFormatter] Label formatter for\r\n * latitudes. This function is called with the latitude as argument, and\r\n * should return a formatted string representing the latitude. By default,\r\n * labels are formatted as degrees, minutes, seconds and hemisphere.\r\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\r\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\r\n * top.\r\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\r\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\r\n * right.\r\n * @property {Text} [lonLabelStyle] Longitude label text\r\n * style. If not provided, the following style will be used:\r\n * ```js\r\n * new Text({\r\n *   font: '12px Calibri,sans-serif',\r\n *   textBaseline: 'bottom',\r\n *   fill: new Fill({\r\n *     color: 'rgba(0,0,0,1)'\r\n *   }),\r\n *   stroke: new Stroke({\r\n *     color: 'rgba(255,255,255,1)',\r\n *     width: 3\r\n *   })\r\n * });\r\n * ```\r\n * Note that the default's `textBaseline` configuration will not work well for\r\n * `lonLabelPosition` configurations that position labels close to the top of\r\n * the viewport.\r\n * @property {Text} [latLabelStyle] Latitude label text style.\r\n * If not provided, the following style will be used:\r\n * ```js\r\n * new Text({\r\n *   font: '12px Calibri,sans-serif',\r\n *   textAlign: 'end',\r\n *   fill: new Fill({\r\n *     color: 'rgba(0,0,0,1)'\r\n *   }),\r\n *   stroke: Stroke({\r\n *     color: 'rgba(255,255,255,1)',\r\n *     width: 3\r\n *   })\r\n * });\r\n * ```\r\n * Note that the default's `textAlign` configuration will not work well for\r\n * `latLabelPosition` configurations that position labels close to the left of\r\n * the viewport.\r\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001]]\r\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\r\n * ```js\r\n * [30, 10]\r\n * ```\r\n */\r\n\r\n\r\n/**\r\n * Render a grid for a coordinate system on a map.\r\n * @api\r\n */\r\nvar Graticule = function Graticule(opt_options) {\r\n  var options = opt_options || {};\r\n\r\n  /**\r\n   * @type {import(\"./PluggableMap.js\").default}\r\n   * @private\r\n   */\r\n  this.map_ = null;\r\n\r\n  /**\r\n   * @type {?import(\"./events.js\").EventsKey}\r\n   * @private\r\n   */\r\n  this.postcomposeListenerKey_ = null;\r\n\r\n  /**\r\n   * @type {import(\"./proj/Projection.js\").default}\r\n   */\r\n  this.projection_ = null;\r\n\r\n  /**\r\n   * @type {number}\r\n   * @private\r\n   */\r\n  this.maxLat_ = Infinity;\r\n\r\n  /**\r\n   * @type {number}\r\n   * @private\r\n   */\r\n  this.maxLon_ = Infinity;\r\n\r\n  /**\r\n   * @type {number}\r\n   * @private\r\n   */\r\n  this.minLat_ = -Infinity;\r\n\r\n  /**\r\n   * @type {number}\r\n   * @private\r\n   */\r\n  this.minLon_ = -Infinity;\r\n\r\n  /**\r\n   * @type {number}\r\n   * @private\r\n   */\r\n  this.maxLatP_ = Infinity;\r\n\r\n  /**\r\n   * @type {number}\r\n   * @private\r\n   */\r\n  this.maxLonP_ = Infinity;\r\n\r\n  /**\r\n   * @type {number}\r\n   * @private\r\n   */\r\n  this.minLatP_ = -Infinity;\r\n\r\n  /**\r\n   * @type {number}\r\n   * @private\r\n   */\r\n  this.minLonP_ = -Infinity;\r\n\r\n  /**\r\n   * @type {number}\r\n   * @private\r\n   */\r\n  this.targetSize_ = options.targetSize !== undefined ? options.targetSize : 100;\r\n\r\n  /**\r\n   * @type {number}\r\n   * @private\r\n   */\r\n  this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\r\n\r\n  /**\r\n   * @type {Array<LineString>}\r\n   * @private\r\n   */\r\n  this.meridians_ = [];\r\n\r\n  /**\r\n   * @type {Array<LineString>}\r\n   * @private\r\n   */\r\n  this.parallels_ = [];\r\n\r\n  /**\r\n   * @type {Stroke}\r\n   * @private\r\n   */\r\n  this.strokeStyle_ = options.strokeStyle !== undefined ? options.strokeStyle : DEFAULT_STROKE_STYLE;\r\n\r\n  /**\r\n   * @type {import(\"./proj.js\").TransformFunction|undefined}\r\n   * @private\r\n   */\r\n  this.fromLonLatTransform_ = undefined;\r\n\r\n  /**\r\n   * @type {import(\"./proj.js\").TransformFunction|undefined}\r\n   * @private\r\n   */\r\n  this.toLonLatTransform_ = undefined;\r\n\r\n  /**\r\n   * @type {import(\"./coordinate.js\").Coordinate}\r\n   * @private\r\n   */\r\n  this.projectionCenterLonLat_ = null;\r\n\r\n  /**\r\n   * @type {Array<GraticuleLabelDataType>}\r\n   * @private\r\n   */\r\n  this.meridiansLabels_ = null;\r\n\r\n  /**\r\n   * @type {Array<GraticuleLabelDataType>}\r\n   * @private\r\n   */\r\n  this.parallelsLabels_ = null;\r\n\r\n  if (options.showLabels == true) {\r\n\r\n    /**\r\n     * @type {null|function(number):string}\r\n     * @private\r\n     */\r\n    this.lonLabelFormatter_ = options.lonLabelFormatter == undefined ?\r\n      degreesToStringHDMS.bind(this, 'EW') : options.lonLabelFormatter;\r\n\r\n    /**\r\n     * @type {function(number):string}\r\n     * @private\r\n     */\r\n    this.latLabelFormatter_ = options.latLabelFormatter == undefined ?\r\n      degreesToStringHDMS.bind(this, 'NS') : options.latLabelFormatter;\r\n\r\n    /**\r\n     * Longitude label position in fractions (0..1) of view extent. 0 means\r\n     * bottom, 1 means top.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.lonLabelPosition_ = options.lonLabelPosition == undefined ? 0 :\r\n      options.lonLabelPosition;\r\n\r\n    /**\r\n     * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\r\n     * means right.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.latLabelPosition_ = options.latLabelPosition == undefined ? 1 :\r\n      options.latLabelPosition;\r\n\r\n    /**\r\n     * @type {Text}\r\n     * @private\r\n     */\r\n    this.lonLabelStyle_ = options.lonLabelStyle !== undefined ? options.lonLabelStyle :\r\n      new Text({\r\n        font: '12px Calibri,sans-serif',\r\n        textBaseline: 'bottom',\r\n        fill: new Fill({\r\n          color: 'rgba(0,0,0,1)'\r\n        }),\r\n        stroke: new Stroke({\r\n          color: 'rgba(255,255,255,1)',\r\n          width: 3\r\n        })\r\n      });\r\n\r\n    /**\r\n     * @type {Text}\r\n     * @private\r\n     */\r\n    this.latLabelStyle_ = options.latLabelStyle !== undefined ? options.latLabelStyle :\r\n      new Text({\r\n        font: '12px Calibri,sans-serif',\r\n        textAlign: 'end',\r\n        fill: new Fill({\r\n          color: 'rgba(0,0,0,1)'\r\n        }),\r\n        stroke: new Stroke({\r\n          color: 'rgba(255,255,255,1)',\r\n          width: 3\r\n        })\r\n      });\r\n\r\n    this.meridiansLabels_ = [];\r\n    this.parallelsLabels_ = [];\r\n  }\r\n\r\n  /**\r\n   * @type {Array<number>}\r\n   * @private\r\n   */\r\n  this.intervals_ = options.intervals !== undefined ? options.intervals : INTERVALS;\r\n\r\n  this.setMap(options.map !== undefined ? options.map : null);\r\n};\r\n\r\n/**\r\n * @param {number} lon Longitude.\r\n * @param {number} minLat Minimal latitude.\r\n * @param {number} maxLat Maximal latitude.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @param {import(\"./extent.js\").Extent} extent Extent.\r\n * @param {number} index Index.\r\n * @return {number} Index.\r\n * @private\r\n */\r\nGraticule.prototype.addMeridian_ = function addMeridian_ (lon, minLat, maxLat, squaredTolerance, extent, index) {\r\n  var lineString = this.getMeridian_(lon, minLat, maxLat, squaredTolerance, index);\r\n  if (intersects(lineString.getExtent(), extent)) {\r\n    if (this.meridiansLabels_) {\r\n      var textPoint = this.getMeridianPoint_(lineString, extent, index);\r\n      this.meridiansLabels_[index] = {\r\n        geom: textPoint,\r\n        text: this.lonLabelFormatter_(lon)\r\n      };\r\n    }\r\n    this.meridians_[index++] = lineString;\r\n  }\r\n  return index;\r\n};\r\n\r\n/**\r\n * @param {LineString} lineString Meridian\r\n * @param {import(\"./extent.js\").Extent} extent Extent.\r\n * @param {number} index Index.\r\n * @return {Point} Meridian point.\r\n * @private\r\n */\r\nGraticule.prototype.getMeridianPoint_ = function getMeridianPoint_ (lineString, extent, index) {\r\n  var flatCoordinates = lineString.getFlatCoordinates();\r\n  var clampedBottom = Math.max(extent[1], flatCoordinates[1]);\r\n  var clampedTop = Math.min(extent[3], flatCoordinates[flatCoordinates.length - 1]);\r\n  var lat = clamp(\r\n    extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\r\n    clampedBottom, clampedTop);\r\n  var coordinate = [flatCoordinates[0], lat];\r\n  var point;\r\n  if (index in this.meridiansLabels_) {\r\n    point = this.meridiansLabels_[index].geom;\r\n    point.setCoordinates(coordinate);\r\n  } else {\r\n    point = new Point(coordinate);\r\n  }\r\n  return point;\r\n};\r\n\r\n/**\r\n * @param {number} lat Latitude.\r\n * @param {number} minLon Minimal longitude.\r\n * @param {number} maxLon Maximal longitude.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @param {import(\"./extent.js\").Extent} extent Extent.\r\n * @param {number} index Index.\r\n * @return {number} Index.\r\n * @private\r\n */\r\nGraticule.prototype.addParallel_ = function addParallel_ (lat, minLon, maxLon, squaredTolerance, extent, index) {\r\n  var lineString = this.getParallel_(lat, minLon, maxLon, squaredTolerance, index);\r\n  if (intersects(lineString.getExtent(), extent)) {\r\n    if (this.parallelsLabels_) {\r\n      var textPoint = this.getParallelPoint_(lineString, extent, index);\r\n      this.parallelsLabels_[index] = {\r\n        geom: textPoint,\r\n        text: this.latLabelFormatter_(lat)\r\n      };\r\n    }\r\n    this.parallels_[index++] = lineString;\r\n  }\r\n  return index;\r\n};\r\n\r\n/**\r\n * @param {LineString} lineString Parallels.\r\n * @param {import(\"./extent.js\").Extent} extent Extent.\r\n * @param {number} index Index.\r\n * @return {Point} Parallel point.\r\n * @private\r\n */\r\nGraticule.prototype.getParallelPoint_ = function getParallelPoint_ (lineString, extent, index) {\r\n  var flatCoordinates = lineString.getFlatCoordinates();\r\n  var clampedLeft = Math.max(extent[0], flatCoordinates[0]);\r\n  var clampedRight = Math.min(extent[2], flatCoordinates[flatCoordinates.length - 2]);\r\n  var lon = clamp(\r\n    extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\r\n    clampedLeft, clampedRight);\r\n  var coordinate = [lon, flatCoordinates[1]];\r\n  var point;\r\n  if (index in this.parallelsLabels_) {\r\n    point = this.parallelsLabels_[index].geom;\r\n    point.setCoordinates(coordinate);\r\n  } else {\r\n    point = new Point(coordinate);\r\n  }\r\n  return point;\r\n};\r\n\r\n/**\r\n * @param {import(\"./extent.js\").Extent} extent Extent.\r\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\r\n * @param {number} resolution Resolution.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @private\r\n */\r\nGraticule.prototype.createGraticule_ = function createGraticule_ (extent, center, resolution, squaredTolerance) {\r\n\r\n  var interval = this.getInterval_(resolution);\r\n  if (interval == -1) {\r\n    this.meridians_.length = this.parallels_.length = 0;\r\n    if (this.meridiansLabels_) {\r\n      this.meridiansLabels_.length = 0;\r\n    }\r\n    if (this.parallelsLabels_) {\r\n      this.parallelsLabels_.length = 0;\r\n    }\r\n    return;\r\n  }\r\n\r\n  var centerLonLat = this.toLonLatTransform_(center);\r\n  var centerLon = centerLonLat[0];\r\n  var centerLat = centerLonLat[1];\r\n  var maxLines = this.maxLines_;\r\n  var cnt, idx, lat, lon;\r\n\r\n  var validExtent = [\r\n    Math.max(extent[0], this.minLonP_),\r\n    Math.max(extent[1], this.minLatP_),\r\n    Math.min(extent[2], this.maxLonP_),\r\n    Math.min(extent[3], this.maxLatP_)\r\n  ];\r\n\r\n  validExtent = transformExtent(validExtent, this.projection_, 'EPSG:4326');\r\n  var maxLat = validExtent[3];\r\n  var maxLon = validExtent[2];\r\n  var minLat = validExtent[1];\r\n  var minLon = validExtent[0];\r\n\r\n  // Create meridians\r\n\r\n  centerLon = Math.floor(centerLon / interval) * interval;\r\n  lon = clamp(centerLon, this.minLon_, this.maxLon_);\r\n\r\n  idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\r\n\r\n  cnt = 0;\r\n  while (lon != this.minLon_ && cnt++ < maxLines) {\r\n    lon = Math.max(lon - interval, this.minLon_);\r\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\r\n  }\r\n\r\n  lon = clamp(centerLon, this.minLon_, this.maxLon_);\r\n\r\n  cnt = 0;\r\n  while (lon != this.maxLon_ && cnt++ < maxLines) {\r\n    lon = Math.min(lon + interval, this.maxLon_);\r\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\r\n  }\r\n\r\n  this.meridians_.length = idx;\r\n  if (this.meridiansLabels_) {\r\n    this.meridiansLabels_.length = idx;\r\n  }\r\n\r\n  // Create parallels\r\n\r\n  centerLat = Math.floor(centerLat / interval) * interval;\r\n  lat = clamp(centerLat, this.minLat_, this.maxLat_);\r\n\r\n  idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\r\n\r\n  cnt = 0;\r\n  while (lat != this.minLat_ && cnt++ < maxLines) {\r\n    lat = Math.max(lat - interval, this.minLat_);\r\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\r\n  }\r\n\r\n  lat = clamp(centerLat, this.minLat_, this.maxLat_);\r\n\r\n  cnt = 0;\r\n  while (lat != this.maxLat_ && cnt++ < maxLines) {\r\n    lat = Math.min(lat + interval, this.maxLat_);\r\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\r\n  }\r\n\r\n  this.parallels_.length = idx;\r\n  if (this.parallelsLabels_) {\r\n    this.parallelsLabels_.length = idx;\r\n  }\r\n\r\n};\r\n\r\n/**\r\n * @param {number} resolution Resolution.\r\n * @return {number} The interval in degrees.\r\n * @private\r\n */\r\nGraticule.prototype.getInterval_ = function getInterval_ (resolution) {\r\n  var centerLon = this.projectionCenterLonLat_[0];\r\n  var centerLat = this.projectionCenterLonLat_[1];\r\n  var interval = -1;\r\n  var target = Math.pow(this.targetSize_ * resolution, 2);\r\n  /** @type {Array<number>} **/\r\n  var p1 = [];\r\n  /** @type {Array<number>} **/\r\n  var p2 = [];\r\n  for (var i = 0, ii = this.intervals_.length; i < ii; ++i) {\r\n    var delta = this.intervals_[i] / 2;\r\n    p1[0] = centerLon - delta;\r\n    p1[1] = centerLat - delta;\r\n    p2[0] = centerLon + delta;\r\n    p2[1] = centerLat + delta;\r\n    this.fromLonLatTransform_(p1, p1);\r\n    this.fromLonLatTransform_(p2, p2);\r\n    var dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\r\n    if (dist <= target) {\r\n      break;\r\n    }\r\n    interval = this.intervals_[i];\r\n  }\r\n  return interval;\r\n};\r\n\r\n/**\r\n * Get the map associated with this graticule.\r\n * @return {import(\"./PluggableMap.js\").default} The map.\r\n * @api\r\n */\r\nGraticule.prototype.getMap = function getMap () {\r\n  return this.map_;\r\n};\r\n\r\n/**\r\n * @param {number} lon Longitude.\r\n * @param {number} minLat Minimal latitude.\r\n * @param {number} maxLat Maximal latitude.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @return {LineString} The meridian line string.\r\n * @param {number} index Index.\r\n * @private\r\n */\r\nGraticule.prototype.getMeridian_ = function getMeridian_ (lon, minLat, maxLat, squaredTolerance, index) {\r\n  var flatCoordinates = meridian(lon, minLat, maxLat, this.projection_, squaredTolerance);\r\n  var lineString = this.meridians_[index];\r\n  if (!lineString) {\r\n    lineString = this.meridians_[index] = new LineString(flatCoordinates, GeometryLayout.XY);\r\n  } else {\r\n    lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\r\n    lineString.changed();\r\n  }\r\n  return lineString;\r\n};\r\n\r\n/**\r\n * Get the list of meridians.Meridians are lines of equal longitude.\r\n * @return {Array<LineString>} The meridians.\r\n * @api\r\n */\r\nGraticule.prototype.getMeridians = function getMeridians () {\r\n  return this.meridians_;\r\n};\r\n\r\n/**\r\n * @param {number} lat Latitude.\r\n * @param {number} minLon Minimal longitude.\r\n * @param {number} maxLon Maximal longitude.\r\n * @param {number} squaredTolerance Squared tolerance.\r\n * @return {LineString} The parallel line string.\r\n * @param {number} index Index.\r\n * @private\r\n */\r\nGraticule.prototype.getParallel_ = function getParallel_ (lat, minLon, maxLon, squaredTolerance, index) {\r\n  var flatCoordinates = parallel(lat, minLon, maxLon, this.projection_, squaredTolerance);\r\n  var lineString = this.parallels_[index];\r\n  if (!lineString) {\r\n    lineString = new LineString(flatCoordinates, GeometryLayout.XY);\r\n  } else {\r\n    lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\r\n    lineString.changed();\r\n  }\r\n  return lineString;\r\n};\r\n\r\n/**\r\n * Get the list of parallels.Parallels are lines of equal latitude.\r\n * @return {Array<LineString>} The parallels.\r\n * @api\r\n */\r\nGraticule.prototype.getParallels = function getParallels () {\r\n  return this.parallels_;\r\n};\r\n\r\n/**\r\n * @param {import(\"./render/Event.js\").default} e Event.\r\n * @private\r\n */\r\nGraticule.prototype.handlePostCompose_ = function handlePostCompose_ (e) {\r\n  var vectorContext = e.vectorContext;\r\n  var frameState = e.frameState;\r\n  var extent = frameState.extent;\r\n  var viewState = frameState.viewState;\r\n  var center = viewState.center;\r\n  var projection = viewState.projection;\r\n  var resolution = viewState.resolution;\r\n  var pixelRatio = frameState.pixelRatio;\r\n  var squaredTolerance =\r\n      resolution * resolution / (4 * pixelRatio * pixelRatio);\r\n\r\n  var updateProjectionInfo = !this.projection_ ||\r\n      !equivalentProjection(this.projection_, projection);\r\n\r\n  if (updateProjectionInfo) {\r\n    this.updateProjectionInfo_(projection);\r\n  }\r\n\r\n  this.createGraticule_(extent, center, resolution, squaredTolerance);\r\n\r\n  // Draw the lines\r\n  vectorContext.setFillStrokeStyle(null, this.strokeStyle_);\r\n  var i, l, line;\r\n  for (i = 0, l = this.meridians_.length; i < l; ++i) {\r\n    line = this.meridians_[i];\r\n    vectorContext.drawGeometry(line);\r\n  }\r\n  for (i = 0, l = this.parallels_.length; i < l; ++i) {\r\n    line = this.parallels_[i];\r\n    vectorContext.drawGeometry(line);\r\n  }\r\n  var labelData;\r\n  if (this.meridiansLabels_) {\r\n    for (i = 0, l = this.meridiansLabels_.length; i < l; ++i) {\r\n      labelData = this.meridiansLabels_[i];\r\n      this.lonLabelStyle_.setText(labelData.text);\r\n      vectorContext.setTextStyle(this.lonLabelStyle_);\r\n      vectorContext.drawGeometry(labelData.geom);\r\n    }\r\n  }\r\n  if (this.parallelsLabels_) {\r\n    for (i = 0, l = this.parallelsLabels_.length; i < l; ++i) {\r\n      labelData = this.parallelsLabels_[i];\r\n      this.latLabelStyle_.setText(labelData.text);\r\n      vectorContext.setTextStyle(this.latLabelStyle_);\r\n      vectorContext.drawGeometry(labelData.geom);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\r\n * @private\r\n */\r\nGraticule.prototype.updateProjectionInfo_ = function updateProjectionInfo_ (projection) {\r\n  var epsg4326Projection = getProjection('EPSG:4326');\r\n\r\n  var worldExtent = projection.getWorldExtent();\r\n  var worldExtentP = transformExtent(worldExtent, epsg4326Projection, projection);\r\n\r\n  this.maxLat_ = worldExtent[3];\r\n  this.maxLon_ = worldExtent[2];\r\n  this.minLat_ = worldExtent[1];\r\n  this.minLon_ = worldExtent[0];\r\n\r\n  this.maxLatP_ = worldExtentP[3];\r\n  this.maxLonP_ = worldExtentP[2];\r\n  this.minLatP_ = worldExtentP[1];\r\n  this.minLonP_ = worldExtentP[0];\r\n\r\n  this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\r\n\r\n  this.toLonLatTransform_ = getTransform(projection, epsg4326Projection);\r\n\r\n  this.projectionCenterLonLat_ = this.toLonLatTransform_(getCenter(projection.getExtent()));\r\n\r\n  this.projection_ = projection;\r\n};\r\n\r\n/**\r\n * Set the map for this graticule.The graticule will be rendered on the\r\n * provided map.\r\n * @param {import(\"./PluggableMap.js\").default} map Map.\r\n * @api\r\n */\r\nGraticule.prototype.setMap = function setMap (map) {\r\n  if (this.map_) {\r\n    unlistenByKey(this.postcomposeListenerKey_);\r\n    this.postcomposeListenerKey_ = null;\r\n    this.map_.render();\r\n  }\r\n  if (map) {\r\n    this.postcomposeListenerKey_ = listen(map, RenderEventType.POSTCOMPOSE, this.handlePostCompose_, this);\r\n    map.render();\r\n  }\r\n  this.map_ = map;\r\n};\r\n\r\nexport default Graticule;\r\n\r\n//# sourceMappingURL=Graticule.js.map","/**\r\n * @module ol/interaction/DragAndDrop\r\n */\r\n// FIXME should handle all geo-referenced data, not just vector data\r\n\r\nimport {TRUE} from '../functions.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\nimport Event from '../events/Event.js';\r\nimport EventType from '../events/EventType.js';\r\nimport Interaction from './Interaction.js';\r\nimport {get as getProjection} from '../proj.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {Array<typeof import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors.\r\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\r\n * all existing features will be removed and new features will be added when\r\n * they are dropped on the target.  If you want to add features to a vector\r\n * source without removing the existing features (append only), instead of\r\n * providing the source option listen for the \"addfeatures\" event.\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\r\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\r\n */\r\n\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nvar DragAndDropEventType = {\r\n  /**\r\n   * Triggered when features are added\r\n   * @event DragAndDropEvent#addfeatures\r\n   * @api\r\n   */\r\n  ADD_FEATURES: 'addfeatures'\r\n};\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\r\n * of this type.\r\n */\r\nvar DragAndDropEvent = /*@__PURE__*/(function (Event) {\n  function DragAndDropEvent(type, file, opt_features, opt_projection) {\r\n\r\n    Event.call(this, type);\r\n\r\n    /**\r\n     * The features parsed from dropped data.\r\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\r\n     * @api\r\n     */\r\n    this.features = opt_features;\r\n\r\n    /**\r\n     * The dropped file.\r\n     * @type {File}\r\n     * @api\r\n     */\r\n    this.file = file;\r\n\r\n    /**\r\n     * The feature projection.\r\n     * @type {import(\"../proj/Projection.js\").default|undefined}\r\n     * @api\r\n     */\r\n    this.projection = opt_projection;\r\n\r\n  }\n\n  if ( Event ) DragAndDropEvent.__proto__ = Event;\n  DragAndDropEvent.prototype = Object.create( Event && Event.prototype );\n  DragAndDropEvent.prototype.constructor = DragAndDropEvent;\n\n  return DragAndDropEvent;\n}(Event));\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Handles input of vector data by drag and drop.\r\n * @api\r\n *\r\n * @fires DragAndDropEvent\r\n */\r\nvar DragAndDrop = /*@__PURE__*/(function (Interaction) {\n  function DragAndDrop(opt_options) {\r\n\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    Interaction.call(this, {\r\n      handleEvent: TRUE\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<typeof import(\"../format/Feature.js\").default>}\r\n     */\r\n    this.formatConstructors_ = options.formatConstructors ?\r\n      options.formatConstructors : [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../proj/Projection.js\").default}\r\n     */\r\n    this.projection_ = options.projection ?\r\n      getProjection(options.projection) : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<import(\"../events.js\").EventsKey>}\r\n     */\r\n    this.dropListenKeys_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../source/Vector.js\").default}\r\n     */\r\n    this.source_ = options.source || null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement}\r\n     */\r\n    this.target = options.target ? options.target : null;\r\n\r\n  }\n\n  if ( Interaction ) DragAndDrop.__proto__ = Interaction;\n  DragAndDrop.prototype = Object.create( Interaction && Interaction.prototype );\n  DragAndDrop.prototype.constructor = DragAndDrop;\r\n\r\n  /**\r\n   * @param {File} file File.\r\n   * @param {Event} event Load event.\r\n   * @private\r\n   */\r\n  DragAndDrop.prototype.handleResult_ = function handleResult_ (file, event) {\r\n    var result = event.target.result;\r\n    var map = this.getMap();\r\n    var projection = this.projection_;\r\n    if (!projection) {\r\n      var view = map.getView();\r\n      projection = view.getProjection();\r\n    }\r\n\r\n    var formatConstructors = this.formatConstructors_;\r\n    var features = [];\r\n    for (var i = 0, ii = formatConstructors.length; i < ii; ++i) {\r\n      var format = new formatConstructors[i]();\r\n      features = this.tryReadFeatures_(format, result, {\r\n        featureProjection: projection\r\n      });\r\n      if (features && features.length > 0) {\r\n        break;\r\n      }\r\n    }\r\n    if (this.source_) {\r\n      this.source_.clear();\r\n      this.source_.addFeatures(features);\r\n    }\r\n    this.dispatchEvent(\r\n      new DragAndDropEvent(\r\n        DragAndDropEventType.ADD_FEATURES, file,\r\n        features, projection));\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  DragAndDrop.prototype.registerListeners_ = function registerListeners_ () {\r\n    var map = this.getMap();\r\n    if (map) {\r\n      var dropArea = this.target ? this.target : map.getViewport();\r\n      this.dropListenKeys_ = [\r\n        listen(dropArea, EventType.DROP, handleDrop, this),\r\n        listen(dropArea, EventType.DRAGENTER, handleStop, this),\r\n        listen(dropArea, EventType.DRAGOVER, handleStop, this),\r\n        listen(dropArea, EventType.DROP, handleStop, this)\r\n      ];\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  DragAndDrop.prototype.setActive = function setActive (active) {\r\n    Interaction.prototype.setActive.call(this, active);\r\n    if (active) {\r\n      this.registerListeners_();\r\n    } else {\r\n      this.unregisterListeners_();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  DragAndDrop.prototype.setMap = function setMap (map) {\r\n    this.unregisterListeners_();\r\n    Interaction.prototype.setMap.call(this, map);\r\n    if (this.getActive()) {\r\n      this.registerListeners_();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../format/Feature.js\").default} format Format.\r\n   * @param {string} text Text.\r\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\r\n   * @private\r\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\r\n   */\r\n  DragAndDrop.prototype.tryReadFeatures_ = function tryReadFeatures_ (format, text, options) {\r\n    try {\r\n      return format.readFeatures(text, options);\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  DragAndDrop.prototype.unregisterListeners_ = function unregisterListeners_ () {\r\n    if (this.dropListenKeys_) {\r\n      this.dropListenKeys_.forEach(unlistenByKey);\r\n      this.dropListenKeys_ = null;\r\n    }\r\n  };\n\n  return DragAndDrop;\n}(Interaction));\r\n\r\n\r\n/**\r\n * @param {DragEvent} event Event.\r\n * @this {DragAndDrop}\r\n */\r\nfunction handleDrop(event) {\r\n  var files = event.dataTransfer.files;\r\n  for (var i = 0, ii = files.length; i < ii; ++i) {\r\n    var file = files.item(i);\r\n    var reader = new FileReader();\r\n    reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\r\n    reader.readAsText(file);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {DragEvent} event Event.\r\n */\r\nfunction handleStop(event) {\r\n  event.stopPropagation();\r\n  event.preventDefault();\r\n  event.dataTransfer.dropEffect = 'copy';\r\n}\r\n\r\n\r\nexport default DragAndDrop;\r\n\r\n//# sourceMappingURL=DragAndDrop.js.map","/**\r\n * @module ol/interaction/DragRotateAndZoom\r\n */\r\nimport {disable} from '../rotationconstraint.js';\r\nimport ViewHint from '../ViewHint.js';\r\nimport {shiftKeyOnly, mouseOnly} from '../events/condition.js';\r\nimport {rotate, rotateWithoutConstraints, zoom, zoomWithoutConstraints} from './Interaction.js';\r\nimport PointerInteraction from './Pointer.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled.\r\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\r\n * @property {number} [duration=400] Animation duration in milliseconds.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom and rotate the map by clicking and dragging\r\n * on the map.  By default, this interaction is limited to when the shift\r\n * key is held down.\r\n *\r\n * This interaction is only supported for mouse devices.\r\n *\r\n * And this interaction is not included in the default interactions.\r\n * @api\r\n */\r\nvar DragRotateAndZoom = /*@__PURE__*/(function (PointerInteraction) {\n  function DragRotateAndZoom(opt_options) {\r\n\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    PointerInteraction.call(/** @type {import(\"./Pointer.js\").Options} */ this, (options));\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.lastAngle_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.lastMagnitude_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.lastScaleDelta_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\r\n\r\n  }\n\n  if ( PointerInteraction ) DragRotateAndZoom.__proto__ = PointerInteraction;\n  DragRotateAndZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotateAndZoom.prototype.constructor = DragRotateAndZoom;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  DragRotateAndZoom.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\r\n    if (!mouseOnly(mapBrowserEvent)) {\r\n      return;\r\n    }\r\n\r\n    var map = mapBrowserEvent.map;\r\n    var size = map.getSize();\r\n    var offset = mapBrowserEvent.pixel;\r\n    var deltaX = offset[0] - size[0] / 2;\r\n    var deltaY = size[1] / 2 - offset[1];\r\n    var theta = Math.atan2(deltaY, deltaX);\r\n    var magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\r\n    var view = map.getView();\r\n    if (view.getConstraints().rotation !== disable && this.lastAngle_ !== undefined) {\r\n      var angleDelta = theta - this.lastAngle_;\r\n      rotateWithoutConstraints(view, view.getRotation() - angleDelta);\r\n    }\r\n    this.lastAngle_ = theta;\r\n    if (this.lastMagnitude_ !== undefined) {\r\n      var resolution = this.lastMagnitude_ * (view.getResolution() / magnitude);\r\n      zoomWithoutConstraints(view, resolution);\r\n    }\r\n    if (this.lastMagnitude_ !== undefined) {\r\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\r\n    }\r\n    this.lastMagnitude_ = magnitude;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  DragRotateAndZoom.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\r\n    if (!mouseOnly(mapBrowserEvent)) {\r\n      return true;\r\n    }\r\n\r\n    var map = mapBrowserEvent.map;\r\n    var view = map.getView();\r\n    view.setHint(ViewHint.INTERACTING, -1);\r\n    var direction = this.lastScaleDelta_ - 1;\r\n    rotate(view, view.getRotation());\r\n    zoom(view, view.getResolution(), undefined, this.duration_, direction);\r\n    this.lastScaleDelta_ = 0;\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  DragRotateAndZoom.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\r\n    if (!mouseOnly(mapBrowserEvent)) {\r\n      return false;\r\n    }\r\n\r\n    if (this.condition_(mapBrowserEvent)) {\r\n      mapBrowserEvent.map.getView().setHint(ViewHint.INTERACTING, 1);\r\n      this.lastAngle_ = undefined;\r\n      this.lastMagnitude_ = undefined;\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\n\n  return DragRotateAndZoom;\n}(PointerInteraction));\r\n\r\nexport default DragRotateAndZoom;\r\n\r\n//# sourceMappingURL=DragRotateAndZoom.js.map","/**\r\n * @module ol/layer/Vector\r\n */\r\nimport LayerType from '../LayerType.js';\r\nimport Layer from './Layer.js';\r\nimport VectorRenderType from './VectorRenderType.js';\r\nimport {assign} from '../obj.js';\r\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\r\n * features before rendering. By default features are drawn in the order that they are created. Use\r\n * `null` to avoid the sort, but get an undefined draw order.\r\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\r\n * renderer when getting features from the vector source for the rendering or hit-detection.\r\n * Recommended value: the size of the largest symbol, line width or label.\r\n * @property {import(\"./VectorRenderType.js\").default|string} [renderMode='vector'] Render mode for vector layers:\r\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\r\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\r\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\r\n *    animations, but slower performance.\r\n * @property {import(\"../source/Vector.js\").default} [source] Source.\r\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\r\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\r\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\r\n * use {@link module:ol/Map#addLayer}.\r\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\r\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\r\n * means higher priority.\r\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\r\n * {@link module:ol/style} for default style which will be used if this is not defined.\r\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\r\n * is `vector`, feature batches will be recreated during animations. This means that no\r\n * vectors will be shown clipped, but the setting will have a performance impact for large\r\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\r\n * is active.\r\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\r\n * is `vector`, feature batches will be recreated during interactions. See also\r\n * `updateWhileAnimating`.\r\n */\r\n\r\n\r\n/**\r\n * @enum {string}\r\n * @private\r\n */\r\nvar Property = {\r\n  RENDER_ORDER: 'renderOrder'\r\n};\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Vector data that is rendered client-side.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @api\r\n */\r\nvar VectorLayer = /*@__PURE__*/(function (Layer) {\n  function VectorLayer(opt_options) {\r\n    var options = opt_options ?\r\n      opt_options : /** @type {Options} */ ({});\r\n\r\n    var baseOptions = assign({}, options);\r\n\r\n    delete baseOptions.style;\r\n    delete baseOptions.renderBuffer;\r\n    delete baseOptions.updateWhileAnimating;\r\n    delete baseOptions.updateWhileInteracting;\r\n    Layer.call(this, baseOptions);\r\n\r\n    /**\r\n    * @private\r\n    * @type {boolean}\r\n    */\r\n    this.declutter_ = options.declutter !== undefined ? options.declutter : false;\r\n\r\n    /**\r\n    * @type {number}\r\n    * @private\r\n    */\r\n    this.renderBuffer_ = options.renderBuffer !== undefined ?\r\n      options.renderBuffer : 100;\r\n\r\n    /**\r\n    * User provided style.\r\n    * @type {import(\"../style/Style.js\").StyleLike}\r\n    * @private\r\n    */\r\n    this.style_ = null;\r\n\r\n    /**\r\n    * Style function for use within the library.\r\n    * @type {import(\"../style/Style.js\").StyleFunction|undefined}\r\n    * @private\r\n    */\r\n    this.styleFunction_ = undefined;\r\n\r\n    this.setStyle(options.style);\r\n\r\n    /**\r\n    * @type {boolean}\r\n    * @private\r\n    */\r\n    this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\r\n      options.updateWhileAnimating : false;\r\n\r\n    /**\r\n    * @type {boolean}\r\n    * @private\r\n    */\r\n    this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\r\n      options.updateWhileInteracting : false;\r\n\r\n    /**\r\n    * @private\r\n    * @type {import(\"./VectorTileRenderType.js\").default|string}\r\n    */\r\n    this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\r\n\r\n    /**\r\n    * The layer type.\r\n    * @protected\r\n    * @type {import(\"../LayerType.js\").default}\r\n    */\r\n    this.type = LayerType.VECTOR;\r\n\r\n  }\n\n  if ( Layer ) VectorLayer.__proto__ = Layer;\n  VectorLayer.prototype = Object.create( Layer && Layer.prototype );\n  VectorLayer.prototype.constructor = VectorLayer;\r\n\r\n  /**\r\n  * @return {boolean} Declutter.\r\n  */\r\n  VectorLayer.prototype.getDeclutter = function getDeclutter () {\r\n    return this.declutter_;\r\n  };\r\n\r\n  /**\r\n  * @param {boolean} declutter Declutter.\r\n  */\r\n  VectorLayer.prototype.setDeclutter = function setDeclutter (declutter) {\r\n    this.declutter_ = declutter;\r\n  };\r\n\r\n  /**\r\n  * @return {number|undefined} Render buffer.\r\n  */\r\n  VectorLayer.prototype.getRenderBuffer = function getRenderBuffer () {\r\n    return this.renderBuffer_;\r\n  };\r\n\r\n  /**\r\n  * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\r\n  *     order.\r\n  */\r\n  VectorLayer.prototype.getRenderOrder = function getRenderOrder () {\r\n    return (\r\n    /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\r\n    );\r\n  };\r\n\r\n  /**\r\n  * Get the style for features.  This returns whatever was passed to the `style`\r\n  * option at construction or to the `setStyle` method.\r\n  * @return {import(\"../style/Style.js\").StyleLike}\r\n  *     Layer style.\r\n  * @api\r\n  */\r\n  VectorLayer.prototype.getStyle = function getStyle () {\r\n    return this.style_;\r\n  };\r\n\r\n  /**\r\n  * Get the style function.\r\n  * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\r\n  * @api\r\n  */\r\n  VectorLayer.prototype.getStyleFunction = function getStyleFunction () {\r\n    return this.styleFunction_;\r\n  };\r\n\r\n  /**\r\n  * @return {boolean} Whether the rendered layer should be updated while\r\n  *     animating.\r\n  */\r\n  VectorLayer.prototype.getUpdateWhileAnimating = function getUpdateWhileAnimating () {\r\n    return this.updateWhileAnimating_;\r\n  };\r\n\r\n  /**\r\n  * @return {boolean} Whether the rendered layer should be updated while\r\n  *     interacting.\r\n  */\r\n  VectorLayer.prototype.getUpdateWhileInteracting = function getUpdateWhileInteracting () {\r\n    return this.updateWhileInteracting_;\r\n  };\r\n\r\n  /**\r\n  * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\r\n  *     Render order.\r\n  */\r\n  VectorLayer.prototype.setRenderOrder = function setRenderOrder (renderOrder) {\r\n    this.set(Property.RENDER_ORDER, renderOrder);\r\n  };\r\n\r\n  /**\r\n  * Set the style for features.  This can be a single style object, an array\r\n  * of styles, or a function that takes a feature and resolution and returns\r\n  * an array of styles. If it is `undefined` the default style is used. If\r\n  * it is `null` the layer has no style (a `null` style), so only features\r\n  * that have their own styles will be rendered in the layer. See\r\n  * {@link module:ol/style} for information on the default style.\r\n  * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\r\n  * @api\r\n  */\r\n  VectorLayer.prototype.setStyle = function setStyle (style) {\r\n    this.style_ = style !== undefined ? style : createDefaultStyle;\r\n    this.styleFunction_ = style === null ?\r\n      undefined : toStyleFunction(this.style_);\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n  * @return {import(\"./VectorRenderType.js\").default|string} The render mode.\r\n  */\r\n  VectorLayer.prototype.getRenderMode = function getRenderMode () {\r\n    return this.renderMode_;\r\n  };\n\n  return VectorLayer;\n}(Layer));\r\n\r\n\r\n/**\r\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\r\n * @function\r\n * @return {import(\"../source/Vector.js\").default} Source.\r\n * @api\r\n */\r\nVectorLayer.prototype.getSource;\r\n\r\n\r\nexport default VectorLayer;\r\n\r\n//# sourceMappingURL=Vector.js.map","/**\r\n * @module ol/loadingstrategy\r\n */\r\n\r\n\r\n/**\r\n * Strategy function for loading all features with a single request.\r\n * @param {import(\"./extent.js\").Extent} extent Extent.\r\n * @param {number} resolution Resolution.\r\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\r\n * @api\r\n */\r\nexport function all(extent, resolution) {\r\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\r\n}\r\n\r\n\r\n/**\r\n * Strategy function for loading features based on the view's extent and\r\n * resolution.\r\n * @param {import(\"./extent.js\").Extent} extent Extent.\r\n * @param {number} resolution Resolution.\r\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\r\n * @api\r\n */\r\nexport function bbox(extent, resolution) {\r\n  return [extent];\r\n}\r\n\r\n\r\n/**\r\n * Creates a strategy function for loading features based on a tile grid.\r\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\r\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\r\n * @api\r\n */\r\nexport function tile(tileGrid) {\r\n  return (\r\n    /**\r\n     * @param {import(\"./extent.js\").Extent} extent Extent.\r\n     * @param {number} resolution Resolution.\r\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\r\n     */\r\n    function(extent, resolution) {\r\n      var z = tileGrid.getZForResolution(resolution);\r\n      var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\r\n      /** @type {Array<import(\"./extent.js\").Extent>} */\r\n      var extents = [];\r\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\r\n      var tileCoord = [z, 0, 0];\r\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\r\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\r\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\r\n        }\r\n      }\r\n      return extents;\r\n    }\r\n  );\r\n}\r\n\r\n//# sourceMappingURL=loadingstrategy.js.map","/**\r\n * @module ol/source/Source\r\n */\r\nimport {abstract} from '../util.js';\r\nimport BaseObject from '../Object.js';\r\nimport {get as getProjection} from '../proj.js';\r\nimport SourceState from './State.js';\r\n\r\n\r\n/**\r\n * A function that returns a string or an array of strings representing source\r\n * attributions.\r\n *\r\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\r\n */\r\n\r\n\r\n/**\r\n * A type that can be used to provide attribution information for data sources.\r\n *\r\n * It represents either\r\n * * a simple string (e.g. `'© Acme Inc.'`)\r\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\r\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\r\n *\r\n * @typedef {string|Array<string>|Attribution} AttributionLike\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {AttributionLike} [attributions]\r\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\r\n * @property {import(\"../proj.js\").ProjectionLike} projection\r\n * @property {SourceState} [state='ready']\r\n * @property {boolean} [wrapX=false]\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\r\n *\r\n * A generic `change` event is triggered when the state of the source changes.\r\n * @abstract\r\n * @api\r\n */\r\nvar Source = /*@__PURE__*/(function (BaseObject) {\n  function Source(options) {\r\n\r\n    BaseObject.call(this);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../proj/Projection.js\").default}\r\n     */\r\n    this.projection_ = getProjection(options.projection);\r\n\r\n    /**\r\n     * @private\r\n     * @type {?Attribution}\r\n     */\r\n    this.attributions_ = adaptAttributions(options.attributions);\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\r\n      options.attributionsCollapsible : true;\r\n\r\n    /**\r\n     * This source is currently loading data. Sources that defer loading to the\r\n     * map's tile queue never set this to `true`.\r\n     * @type {boolean}\r\n     */\r\n    this.loading = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {SourceState}\r\n     */\r\n    this.state_ = options.state !== undefined ?\r\n      options.state : SourceState.READY;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\r\n\r\n  }\n\n  if ( BaseObject ) Source.__proto__ = BaseObject;\n  Source.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Source.prototype.constructor = Source;\r\n\r\n  /**\r\n   * Get the attribution function for the source.\r\n   * @return {?Attribution} Attribution function.\r\n   */\r\n  Source.prototype.getAttributions = function getAttributions () {\r\n    return this.attributions_;\r\n  };\r\n\r\n  /**\r\n   * @return {boolean} Aattributions are collapsible.\r\n   */\r\n  Source.prototype.getAttributionsCollapsible = function getAttributionsCollapsible () {\r\n    return this.attributionsCollapsible_;\r\n  };\r\n\r\n  /**\r\n   * Get the projection of the source.\r\n   * @return {import(\"../proj/Projection.js\").default} Projection.\r\n   * @api\r\n   */\r\n  Source.prototype.getProjection = function getProjection () {\r\n    return this.projection_;\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {Array<number>|undefined} Resolutions.\r\n   */\r\n  Source.prototype.getResolutions = function getResolutions () {\r\n    return abstract();\r\n  };\r\n\r\n  /**\r\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\r\n   * @return {SourceState} State.\r\n   * @api\r\n   */\r\n  Source.prototype.getState = function getState () {\r\n    return this.state_;\r\n  };\r\n\r\n  /**\r\n   * @return {boolean|undefined} Wrap X.\r\n   */\r\n  Source.prototype.getWrapX = function getWrapX () {\r\n    return this.wrapX_;\r\n  };\r\n\r\n  /**\r\n   * Refreshes the source and finally dispatches a 'change' event.\r\n   * @api\r\n   */\r\n  Source.prototype.refresh = function refresh () {\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * Set the attributions of the source.\r\n   * @param {AttributionLike|undefined} attributions Attributions.\r\n   *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\r\n   *     or `undefined`.\r\n   * @api\r\n   */\r\n  Source.prototype.setAttributions = function setAttributions (attributions) {\r\n    this.attributions_ = adaptAttributions(attributions);\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * Set the state of the source.\r\n   * @param {SourceState} state State.\r\n   * @protected\r\n   */\r\n  Source.prototype.setState = function setState (state) {\r\n    this.state_ = state;\r\n    this.changed();\r\n  };\n\n  return Source;\n}(BaseObject));\r\n\r\n\r\n/**\r\n * Turns the attributions option into an attributions function.\r\n * @param {AttributionLike|undefined} attributionLike The attribution option.\r\n * @return {?Attribution} An attribution function (or null).\r\n */\r\nfunction adaptAttributions(attributionLike) {\r\n  if (!attributionLike) {\r\n    return null;\r\n  }\r\n  if (Array.isArray(attributionLike)) {\r\n    return function(frameState) {\r\n      return attributionLike;\r\n    };\r\n  }\r\n\r\n  if (typeof attributionLike === 'function') {\r\n    return attributionLike;\r\n  }\r\n\r\n  return function(frameState) {\r\n    return [attributionLike];\r\n  };\r\n}\r\n\r\n\r\nexport default Source;\r\n\r\n//# sourceMappingURL=Source.js.map","/**\r\n * @module ol/source/VectorEventType\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  /**\r\n   * Triggered when a feature is added to the source.\r\n   * @event ol/source/Vector.VectorSourceEvent#addfeature\r\n   * @api\r\n   */\r\n  ADDFEATURE: 'addfeature',\r\n\r\n  /**\r\n   * Triggered when a feature is updated.\r\n   * @event ol/source/Vector.VectorSourceEvent#changefeature\r\n   * @api\r\n   */\r\n  CHANGEFEATURE: 'changefeature',\r\n\r\n  /**\r\n   * Triggered when the clear method is called on the source.\r\n   * @event ol/source/Vector.VectorSourceEvent#clear\r\n   * @api\r\n   */\r\n  CLEAR: 'clear',\r\n\r\n  /**\r\n   * Triggered when a feature is removed from the source.\r\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\r\n   * @event ol/source/Vector.VectorSourceEvent#removefeature\r\n   * @api\r\n   */\r\n  REMOVEFEATURE: 'removefeature'\r\n};\r\n\r\n//# sourceMappingURL=VectorEventType.js.map","/**\r\n * @module ol/structs/RBush\r\n */\r\nimport {getUid} from '../util.js';\r\nimport rbush from 'rbush';\r\nimport {createOrUpdate, equals} from '../extent.js';\r\nimport {isEmpty} from '../obj.js';\r\n\r\n/**\r\n * @typedef {Object} Entry\r\n * @property {number} minX\r\n * @property {number} minY\r\n * @property {number} maxX\r\n * @property {number} maxY\r\n * @property {Object} [value]\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Wrapper around the RBush by Vladimir Agafonkin.\r\n * See https://github.com/mourner/rbush.\r\n *\r\n * @template T\r\n */\r\nvar RBush = function RBush(opt_maxEntries) {\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  this.rbush_ = rbush(opt_maxEntries, undefined);\r\n\r\n  /**\r\n   * A mapping between the objects added to this rbush wrapper\r\n   * and the objects that are actually added to the internal rbush.\r\n   * @private\r\n   * @type {Object<string, Entry>}\r\n   */\r\n  this.items_ = {};\r\n\r\n};\r\n\r\n/**\r\n * Insert a value into the RBush.\r\n * @param {import(\"../extent.js\").Extent} extent Extent.\r\n * @param {T} value Value.\r\n */\r\nRBush.prototype.insert = function insert (extent, value) {\r\n  /** @type {Entry} */\r\n  var item = {\r\n    minX: extent[0],\r\n    minY: extent[1],\r\n    maxX: extent[2],\r\n    maxY: extent[3],\r\n    value: value\r\n  };\r\n\r\n  this.rbush_.insert(item);\r\n  this.items_[getUid(value)] = item;\r\n};\r\n\r\n\r\n/**\r\n * Bulk-insert values into the RBush.\r\n * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\r\n * @param {Array<T>} values Values.\r\n */\r\nRBush.prototype.load = function load (extents, values) {\r\n  var items = new Array(values.length);\r\n  for (var i = 0, l = values.length; i < l; i++) {\r\n    var extent = extents[i];\r\n    var value = values[i];\r\n\r\n    /** @type {Entry} */\r\n    var item = {\r\n      minX: extent[0],\r\n      minY: extent[1],\r\n      maxX: extent[2],\r\n      maxY: extent[3],\r\n      value: value\r\n    };\r\n    items[i] = item;\r\n    this.items_[getUid(value)] = item;\r\n  }\r\n  this.rbush_.load(items);\r\n};\r\n\r\n\r\n/**\r\n * Remove a value from the RBush.\r\n * @param {T} value Value.\r\n * @return {boolean} Removed.\r\n */\r\nRBush.prototype.remove = function remove (value) {\r\n  var uid = getUid(value);\r\n\r\n  // get the object in which the value was wrapped when adding to the\r\n  // internal rbush. then use that object to do the removal.\r\n  var item = this.items_[uid];\r\n  delete this.items_[uid];\r\n  return this.rbush_.remove(item) !== null;\r\n};\r\n\r\n\r\n/**\r\n * Update the extent of a value in the RBush.\r\n * @param {import(\"../extent.js\").Extent} extent Extent.\r\n * @param {T} value Value.\r\n */\r\nRBush.prototype.update = function update (extent, value) {\r\n  var item = this.items_[getUid(value)];\r\n  var bbox = [item.minX, item.minY, item.maxX, item.maxY];\r\n  if (!equals(bbox, extent)) {\r\n    this.remove(value);\r\n    this.insert(extent, value);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Return all values in the RBush.\r\n * @return {Array<T>} All.\r\n */\r\nRBush.prototype.getAll = function getAll () {\r\n  var items = this.rbush_.all();\r\n  return items.map(function(item) {\r\n    return item.value;\r\n  });\r\n};\r\n\r\n\r\n/**\r\n * Return all values in the given extent.\r\n * @param {import(\"../extent.js\").Extent} extent Extent.\r\n * @return {Array<T>} All in extent.\r\n */\r\nRBush.prototype.getInExtent = function getInExtent (extent) {\r\n  /** @type {Entry} */\r\n  var bbox = {\r\n    minX: extent[0],\r\n    minY: extent[1],\r\n    maxX: extent[2],\r\n    maxY: extent[3]\r\n  };\r\n  var items = this.rbush_.search(bbox);\r\n  return items.map(function(item) {\r\n    return item.value;\r\n  });\r\n};\r\n\r\n\r\n/**\r\n * Calls a callback function with each value in the tree.\r\n * If the callback returns a truthy value, this value is returned without\r\n * checking the rest of the tree.\r\n * @param {function(this: S, T): *} callback Callback.\r\n * @param {S=} opt_this The object to use as `this` in `callback`.\r\n * @return {*} Callback return value.\r\n * @template S\r\n */\r\nRBush.prototype.forEach = function forEach (callback, opt_this) {\r\n  return this.forEach_(this.getAll(), callback, opt_this);\r\n};\r\n\r\n\r\n/**\r\n * Calls a callback function with each value in the provided extent.\r\n * @param {import(\"../extent.js\").Extent} extent Extent.\r\n * @param {function(this: S, T): *} callback Callback.\r\n * @param {S=} opt_this The object to use as `this` in `callback`.\r\n * @return {*} Callback return value.\r\n * @template S\r\n */\r\nRBush.prototype.forEachInExtent = function forEachInExtent (extent, callback, opt_this) {\r\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\r\n};\r\n\r\n\r\n/**\r\n * @param {Array<T>} values Values.\r\n * @param {function(this: S, T): *} callback Callback.\r\n * @param {S=} opt_this The object to use as `this` in `callback`.\r\n * @private\r\n * @return {*} Callback return value.\r\n * @template S\r\n */\r\nRBush.prototype.forEach_ = function forEach_ (values, callback, opt_this) {\r\n  var result;\r\n  for (var i = 0, l = values.length; i < l; i++) {\r\n    result = callback.call(opt_this, values[i]);\r\n    if (result) {\r\n      return result;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\n\r\n/**\r\n * @return {boolean} Is empty.\r\n */\r\nRBush.prototype.isEmpty = function isEmpty$1 () {\r\n  return isEmpty(this.items_);\r\n};\r\n\r\n\r\n/**\r\n * Remove all values from the RBush.\r\n */\r\nRBush.prototype.clear = function clear () {\r\n  this.rbush_.clear();\r\n  this.items_ = {};\r\n};\r\n\r\n\r\n/**\r\n * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\r\n * @return {import(\"../extent.js\").Extent} Extent.\r\n */\r\nRBush.prototype.getExtent = function getExtent (opt_extent) {\r\n  var data = this.rbush_.toJSON();\r\n  return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\r\n};\r\n\r\n\r\n/**\r\n * @param {RBush} rbush R-Tree.\r\n */\r\nRBush.prototype.concat = function concat (rbush) {\r\n  this.rbush_.load(rbush.rbush_.all());\r\n  for (var i in rbush.items_) {\r\n    this.items_[i] = rbush.items_[i];\r\n  }\r\n};\r\n\r\n\r\nexport default RBush;\r\n\r\n//# sourceMappingURL=RBush.js.map","/**\r\n * @module ol/source/Vector\r\n */\r\n\r\nimport {getUid} from '../util.js';\r\nimport Collection from '../Collection.js';\r\nimport CollectionEventType from '../CollectionEventType.js';\r\nimport ObjectEventType from '../ObjectEventType.js';\r\nimport {extend} from '../array.js';\r\nimport {assert} from '../asserts.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\nimport Event from '../events/Event.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {containsExtent, equals} from '../extent.js';\r\nimport {xhr} from '../featureloader.js';\r\nimport {TRUE, VOID} from '../functions.js';\r\nimport {all as allStrategy} from '../loadingstrategy.js';\r\nimport {isEmpty, getValues} from '../obj.js';\r\nimport Source from './Source.js';\r\nimport SourceState from './State.js';\r\nimport VectorEventType from './VectorEventType.js';\r\nimport RBush from '../structs/RBush.js';\r\n\r\n/**\r\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\r\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\r\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\r\n *\r\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\r\n * type.\r\n */\r\nexport var VectorSourceEvent = /*@__PURE__*/(function (Event) {\n  function VectorSourceEvent(type, opt_feature) {\r\n\r\n    Event.call(this, type);\r\n\r\n    /**\r\n     * The feature being added or removed.\r\n     * @type {import(\"../Feature.js\").default|undefined}\r\n     * @api\r\n     */\r\n    this.feature = opt_feature;\r\n\r\n  }\n\n  if ( Event ) VectorSourceEvent.__proto__ = Event;\n  VectorSourceEvent.prototype = Object.create( Event && Event.prototype );\n  VectorSourceEvent.prototype.constructor = VectorSourceEvent;\n\n  return VectorSourceEvent;\n}(Event));\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\r\n * Features. If provided as {@link module:ol/Collection}, the features in the source\r\n * and the collection will stay in sync.\r\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\r\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\r\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\r\n * The loader function used to load features, from a remote source for example.\r\n * If this is not set and `url` is set, the source will create and use an XHR\r\n * feature loader.\r\n *\r\n * Example:\r\n *\r\n * ```js\r\n * import {Vector} from 'ol/source';\r\n * import {GeoJSON} from 'ol/format';\r\n * import {bbox} from 'ol/loadingstrategy';\r\n *\r\n * var vectorSource = new Vector({\r\n *   format: new GeoJSON(),\r\n *   loader: function(extent, resolution, projection) {\r\n *      var proj = projection.getCode();\r\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\r\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\r\n *          'outputFormat=application/json&srsname=' + proj + '&' +\r\n *          'bbox=' + extent.join(',') + ',' + proj;\r\n *      var xhr = new XMLHttpRequest();\r\n *      xhr.open('GET', url);\r\n *      var onError = function() {\r\n *        vectorSource.removeLoadedExtent(extent);\r\n *      }\r\n *      xhr.onerror = onError;\r\n *      xhr.onload = function() {\r\n *        if (xhr.status == 200) {\r\n *          vectorSource.addFeatures(\r\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\r\n *        } else {\r\n *          onError();\r\n *        }\r\n *      }\r\n *      xhr.send();\r\n *    },\r\n *    strategy: bbox\r\n *  });\r\n * ```\r\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\r\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\r\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\r\n * stroke operations.\r\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\r\n * By default an {@link module:ol/loadingstrategy~all}\r\n * strategy is used, a one-off strategy which loads all features at once.\r\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\r\n * Setting this option instructs the source to load features using an XHR loader\r\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\r\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\r\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\r\n * other loading strategies.\r\n * Requires `format` to be set as well.\r\n * When default XHR feature loader is provided, the features will\r\n * be transformed from the data projection to the view projection\r\n * during parsing. If your remote data source does not advertise its projection\r\n * properly, this transformation will be incorrect. For some formats, the\r\n * default projection (usually EPSG:4326) can be overridden by setting the\r\n * dataProjection constructor option on the format.\r\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\r\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\r\n * @property {boolean} [useSpatialIndex=true]\r\n * By default, an RTree is used as spatial index. When features are removed and\r\n * added frequently, and the total number of features is low, setting this to\r\n * `false` may improve performance.\r\n *\r\n * Note that\r\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\r\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\r\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\r\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\r\n * through all features.\r\n *\r\n * When set to `false`, the features will be maintained in an\r\n * {@link module:ol/Collection}, which can be retrieved through\r\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\r\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\r\n * -180° and 180° meridians to work properly, this should be set to `false`. The\r\n * resulting geometry coordinates will then exceed the world bounds.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Provides a source of features for vector layers. Vector features provided\r\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\r\n * vector data that is optimized for rendering.\r\n *\r\n * @fires ol/source/Vector.VectorSourceEvent\r\n * @api\r\n */\r\nvar VectorSource = /*@__PURE__*/(function (Source) {\n  function VectorSource(opt_options) {\r\n\r\n    var options = opt_options || {};\r\n\r\n    Source.call(this, {\r\n      attributions: options.attributions,\r\n      projection: undefined,\r\n      state: SourceState.READY,\r\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../featureloader.js\").FeatureLoader}\r\n     */\r\n    this.loader_ = VOID;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../format/Feature.js\").default|undefined}\r\n     */\r\n    this.format_ = options.format;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\r\n     */\r\n    this.url_ = options.url;\r\n\r\n    if (options.loader !== undefined) {\r\n      this.loader_ = options.loader;\r\n    } else if (this.url_ !== undefined) {\r\n      assert(this.format_, 7); // `format` must be set when `url` is set\r\n      // create a XHR feature loader for \"url\" and \"format\"\r\n      this.loader_ = xhr(this.url_, /** @type {import(\"../format/Feature.js\").default} */ (this.format_));\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {LoadingStrategy}\r\n     */\r\n    this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\r\n\r\n    var useSpatialIndex =\r\n        options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {RBush<import(\"../Feature.js\").default>}\r\n     */\r\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\r\n     */\r\n    this.loadedExtentsRtree_ = new RBush();\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, import(\"../Feature.js\").default>}\r\n     */\r\n    this.nullGeometryFeatures_ = {};\r\n\r\n    /**\r\n     * A lookup of features by id (the return from feature.getId()).\r\n     * @private\r\n     * @type {!Object<string, import(\"../Feature.js\").default>}\r\n     */\r\n    this.idIndex_ = {};\r\n\r\n    /**\r\n     * A lookup of features without id (keyed by getUid(feature)).\r\n     * @private\r\n     * @type {!Object<string, import(\"../Feature.js\").default>}\r\n     */\r\n    this.undefIdIndex_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\r\n     */\r\n    this.featureChangeKeys_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {Collection<import(\"../Feature.js\").default>}\r\n     */\r\n    this.featuresCollection_ = null;\r\n\r\n    var collection, features;\r\n    if (Array.isArray(options.features)) {\r\n      features = options.features;\r\n    } else if (options.features) {\r\n      collection = options.features;\r\n      features = collection.getArray();\r\n    }\r\n    if (!useSpatialIndex && collection === undefined) {\r\n      collection = new Collection(features);\r\n    }\r\n    if (features !== undefined) {\r\n      this.addFeaturesInternal(features);\r\n    }\r\n    if (collection !== undefined) {\r\n      this.bindFeaturesCollection_(collection);\r\n    }\r\n\r\n  }\n\n  if ( Source ) VectorSource.__proto__ = Source;\n  VectorSource.prototype = Object.create( Source && Source.prototype );\n  VectorSource.prototype.constructor = VectorSource;\r\n\r\n  /**\r\n   * Add a single feature to the source.  If you want to add a batch of features\r\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\r\n   * instead. A feature will not be added to the source if feature with\r\n   * the same id is already there. The reason for this behavior is to avoid\r\n   * feature duplication when using bbox or tile loading strategies.\r\n   * @param {import(\"../Feature.js\").default} feature Feature to add.\r\n   * @api\r\n   */\r\n  VectorSource.prototype.addFeature = function addFeature (feature) {\r\n    this.addFeatureInternal(feature);\r\n    this.changed();\r\n  };\r\n\r\n\r\n  /**\r\n   * Add a feature without firing a `change` event.\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @protected\r\n   */\r\n  VectorSource.prototype.addFeatureInternal = function addFeatureInternal (feature) {\r\n    var featureKey = getUid(feature);\r\n\r\n    if (!this.addToIndex_(featureKey, feature)) {\r\n      return;\r\n    }\r\n\r\n    this.setupChangeEvents_(featureKey, feature);\r\n\r\n    var geometry = feature.getGeometry();\r\n    if (geometry) {\r\n      var extent = geometry.getExtent();\r\n      if (this.featuresRtree_) {\r\n        this.featuresRtree_.insert(extent, feature);\r\n      }\r\n    } else {\r\n      this.nullGeometryFeatures_[featureKey] = feature;\r\n    }\r\n\r\n    this.dispatchEvent(\r\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\r\n  };\r\n\r\n\r\n  /**\r\n   * @param {string} featureKey Unique identifier for the feature.\r\n   * @param {import(\"../Feature.js\").default} feature The feature.\r\n   * @private\r\n   */\r\n  VectorSource.prototype.setupChangeEvents_ = function setupChangeEvents_ (featureKey, feature) {\r\n    this.featureChangeKeys_[featureKey] = [\r\n      listen(feature, EventType.CHANGE,\r\n        this.handleFeatureChange_, this),\r\n      listen(feature, ObjectEventType.PROPERTYCHANGE,\r\n        this.handleFeatureChange_, this)\r\n    ];\r\n  };\r\n\r\n\r\n  /**\r\n   * @param {string} featureKey Unique identifier for the feature.\r\n   * @param {import(\"../Feature.js\").default} feature The feature.\r\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\r\n   *     candidate for insertion into the Rtree.\r\n   * @private\r\n   */\r\n  VectorSource.prototype.addToIndex_ = function addToIndex_ (featureKey, feature) {\r\n    var valid = true;\r\n    var id = feature.getId();\r\n    if (id !== undefined) {\r\n      if (!(id.toString() in this.idIndex_)) {\r\n        this.idIndex_[id.toString()] = feature;\r\n      } else {\r\n        valid = false;\r\n      }\r\n    } else {\r\n      assert(!(featureKey in this.undefIdIndex_),\r\n        30); // The passed `feature` was already added to the source\r\n      this.undefIdIndex_[featureKey] = feature;\r\n    }\r\n    return valid;\r\n  };\r\n\r\n\r\n  /**\r\n   * Add a batch of features to the source.\r\n   * @param {Array<import(\"../Feature.js\").default>} features Features to add.\r\n   * @api\r\n   */\r\n  VectorSource.prototype.addFeatures = function addFeatures (features) {\r\n    this.addFeaturesInternal(features);\r\n    this.changed();\r\n  };\r\n\r\n\r\n  /**\r\n   * Add features without firing a `change` event.\r\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\r\n   * @protected\r\n   */\r\n  VectorSource.prototype.addFeaturesInternal = function addFeaturesInternal (features) {\r\n    var extents = [];\r\n    var newFeatures = [];\r\n    var geometryFeatures = [];\r\n\r\n    for (var i = 0, length = features.length; i < length; i++) {\r\n      var feature = features[i];\r\n      var featureKey = getUid(feature);\r\n      if (this.addToIndex_(featureKey, feature)) {\r\n        newFeatures.push(feature);\r\n      }\r\n    }\r\n\r\n    for (var i$1 = 0, length$1 = newFeatures.length; i$1 < length$1; i$1++) {\r\n      var feature$1 = newFeatures[i$1];\r\n      var featureKey$1 = getUid(feature$1);\r\n      this.setupChangeEvents_(featureKey$1, feature$1);\r\n\r\n      var geometry = feature$1.getGeometry();\r\n      if (geometry) {\r\n        var extent = geometry.getExtent();\r\n        extents.push(extent);\r\n        geometryFeatures.push(feature$1);\r\n      } else {\r\n        this.nullGeometryFeatures_[featureKey$1] = feature$1;\r\n      }\r\n    }\r\n    if (this.featuresRtree_) {\r\n      this.featuresRtree_.load(extents, geometryFeatures);\r\n    }\r\n\r\n    for (var i$2 = 0, length$2 = newFeatures.length; i$2 < length$2; i$2++) {\r\n      this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i$2]));\r\n    }\r\n  };\r\n\r\n\r\n  /**\r\n   * @param {!Collection<import(\"../Feature.js\").default>} collection Collection.\r\n   * @private\r\n   */\r\n  VectorSource.prototype.bindFeaturesCollection_ = function bindFeaturesCollection_ (collection) {\r\n    var modifyingCollection = false;\r\n    listen(this, VectorEventType.ADDFEATURE,\r\n      /**\r\n       * @param {VectorSourceEvent} evt The vector source event\r\n       */\r\n      function(evt) {\r\n        if (!modifyingCollection) {\r\n          modifyingCollection = true;\r\n          collection.push(evt.feature);\r\n          modifyingCollection = false;\r\n        }\r\n      });\r\n    listen(this, VectorEventType.REMOVEFEATURE,\r\n      /**\r\n       * @param {VectorSourceEvent} evt The vector source event\r\n       */\r\n      function(evt) {\r\n        if (!modifyingCollection) {\r\n          modifyingCollection = true;\r\n          collection.remove(evt.feature);\r\n          modifyingCollection = false;\r\n        }\r\n      });\r\n    listen(collection, CollectionEventType.ADD,\r\n      /**\r\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\r\n       */\r\n      function(evt) {\r\n        if (!modifyingCollection) {\r\n          modifyingCollection = true;\r\n          this.addFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\r\n          modifyingCollection = false;\r\n        }\r\n      }, this);\r\n    listen(collection, CollectionEventType.REMOVE,\r\n      /**\r\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\r\n       */\r\n      function(evt) {\r\n        if (!modifyingCollection) {\r\n          modifyingCollection = true;\r\n          this.removeFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\r\n          modifyingCollection = false;\r\n        }\r\n      }, this);\r\n    this.featuresCollection_ = collection;\r\n  };\r\n\r\n\r\n  /**\r\n   * Remove all features from the source.\r\n   * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\r\n   * @api\r\n   */\r\n  VectorSource.prototype.clear = function clear (opt_fast) {\r\n    if (opt_fast) {\r\n      for (var featureId in this.featureChangeKeys_) {\r\n        var keys = this.featureChangeKeys_[featureId];\r\n        keys.forEach(unlistenByKey);\r\n      }\r\n      if (!this.featuresCollection_) {\r\n        this.featureChangeKeys_ = {};\r\n        this.idIndex_ = {};\r\n        this.undefIdIndex_ = {};\r\n      }\r\n    } else {\r\n      if (this.featuresRtree_) {\r\n        this.featuresRtree_.forEach(this.removeFeatureInternal, this);\r\n        for (var id in this.nullGeometryFeatures_) {\r\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\r\n        }\r\n      }\r\n    }\r\n    if (this.featuresCollection_) {\r\n      this.featuresCollection_.clear();\r\n    }\r\n\r\n    if (this.featuresRtree_) {\r\n      this.featuresRtree_.clear();\r\n    }\r\n    this.loadedExtentsRtree_.clear();\r\n    this.nullGeometryFeatures_ = {};\r\n\r\n    var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\r\n    this.dispatchEvent(clearEvent);\r\n    this.changed();\r\n  };\r\n\r\n\r\n  /**\r\n   * Iterate through all features on the source, calling the provided callback\r\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\r\n   * stop and the function will return the same value.\r\n   * Note: this function only iterate through the feature that have a defined geometry.\r\n   *\r\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\r\n   *     on the source.  Return a truthy value to stop iteration.\r\n   * @return {T|undefined} The return value from the last call to the callback.\r\n   * @template T\r\n   * @api\r\n   */\r\n  VectorSource.prototype.forEachFeature = function forEachFeature (callback) {\r\n    if (this.featuresRtree_) {\r\n      return this.featuresRtree_.forEach(callback);\r\n    } else if (this.featuresCollection_) {\r\n      this.featuresCollection_.forEach(callback);\r\n    }\r\n  };\r\n\r\n\r\n  /**\r\n   * Iterate through all features whose geometries contain the provided\r\n   * coordinate, calling the callback with each feature.  If the callback returns\r\n   * a \"truthy\" value, iteration will stop and the function will return the same\r\n   * value.\r\n   *\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\r\n   *     whose goemetry contains the provided coordinate.\r\n   * @return {T|undefined} The return value from the last call to the callback.\r\n   * @template T\r\n   */\r\n  VectorSource.prototype.forEachFeatureAtCoordinateDirect = function forEachFeatureAtCoordinateDirect (coordinate, callback) {\r\n    var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\r\n    return this.forEachFeatureInExtent(extent, function(feature) {\r\n      var geometry = feature.getGeometry();\r\n      if (geometry.intersectsCoordinate(coordinate)) {\r\n        return callback(feature);\r\n      } else {\r\n        return undefined;\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  /**\r\n   * Iterate through all features whose bounding box intersects the provided\r\n   * extent (note that the feature's geometry may not intersect the extent),\r\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\r\n   * value, iteration will stop and the function will return the same value.\r\n   *\r\n   * If you are interested in features whose geometry intersects an extent, call\r\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\r\n   *\r\n   * When `useSpatialIndex` is set to false, this method will loop through all\r\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\r\n   *\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\r\n   *     whose bounding box intersects the provided extent.\r\n   * @return {T|undefined} The return value from the last call to the callback.\r\n   * @template T\r\n   * @api\r\n   */\r\n  VectorSource.prototype.forEachFeatureInExtent = function forEachFeatureInExtent (extent, callback) {\r\n    if (this.featuresRtree_) {\r\n      return this.featuresRtree_.forEachInExtent(extent, callback);\r\n    } else if (this.featuresCollection_) {\r\n      this.featuresCollection_.forEach(callback);\r\n    }\r\n  };\r\n\r\n\r\n  /**\r\n   * Iterate through all features whose geometry intersects the provided extent,\r\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\r\n   * value, iteration will stop and the function will return the same value.\r\n   *\r\n   * If you only want to test for bounding box intersection, call the\r\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\r\n   *\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\r\n   *     whose geometry intersects the provided extent.\r\n   * @return {T|undefined} The return value from the last call to the callback.\r\n   * @template T\r\n   * @api\r\n   */\r\n  VectorSource.prototype.forEachFeatureIntersectingExtent = function forEachFeatureIntersectingExtent (extent, callback) {\r\n    return this.forEachFeatureInExtent(extent,\r\n      /**\r\n       * @param {import(\"../Feature.js\").default} feature Feature.\r\n       * @return {T|undefined} The return value from the last call to the callback.\r\n       */\r\n      function(feature) {\r\n        var geometry = feature.getGeometry();\r\n        if (geometry.intersectsExtent(extent)) {\r\n          var result = callback(feature);\r\n          if (result) {\r\n            return result;\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  /**\r\n   * Get the features collection associated with this source. Will be `null`\r\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\r\n   * with an {@link module:ol/Collection} as `features`.\r\n   * @return {Collection<import(\"../Feature.js\").default>} The collection of features.\r\n   * @api\r\n   */\r\n  VectorSource.prototype.getFeaturesCollection = function getFeaturesCollection () {\r\n    return this.featuresCollection_;\r\n  };\r\n\r\n\r\n  /**\r\n   * Get all features on the source in random order.\r\n   * @return {Array<import(\"../Feature.js\").default>} Features.\r\n   * @api\r\n   */\r\n  VectorSource.prototype.getFeatures = function getFeatures () {\r\n    var features;\r\n    if (this.featuresCollection_) {\r\n      features = this.featuresCollection_.getArray();\r\n    } else if (this.featuresRtree_) {\r\n      features = this.featuresRtree_.getAll();\r\n      if (!isEmpty(this.nullGeometryFeatures_)) {\r\n        extend(features, getValues(this.nullGeometryFeatures_));\r\n      }\r\n    }\r\n    return (\r\n      /** @type {Array<import(\"../Feature.js\").default>} */ (features)\r\n    );\r\n  };\r\n\r\n\r\n  /**\r\n   * Get all features whose geometry intersects the provided coordinate.\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @return {Array<import(\"../Feature.js\").default>} Features.\r\n   * @api\r\n   */\r\n  VectorSource.prototype.getFeaturesAtCoordinate = function getFeaturesAtCoordinate (coordinate) {\r\n    var features = [];\r\n    this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\r\n      features.push(feature);\r\n    });\r\n    return features;\r\n  };\r\n\r\n\r\n  /**\r\n   * Get all features in the provided extent.  Note that this returns an array of\r\n   * all features intersecting the given extent in random order (so it may include\r\n   * features whose geometries do not intersect the extent).\r\n   *\r\n   * This method is not available when the source is configured with\r\n   * `useSpatialIndex` set to `false`.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @return {Array<import(\"../Feature.js\").default>} Features.\r\n   * @api\r\n   */\r\n  VectorSource.prototype.getFeaturesInExtent = function getFeaturesInExtent (extent) {\r\n    return this.featuresRtree_.getInExtent(extent);\r\n  };\r\n\r\n\r\n  /**\r\n   * Get the closest feature to the provided coordinate.\r\n   *\r\n   * This method is not available when the source is configured with\r\n   * `useSpatialIndex` set to `false`.\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {function(import(\"../Feature.js\").default):boolean=} opt_filter Feature filter function.\r\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\r\n   *     and it should return a boolean value. By default, no filtering is made.\r\n   * @return {import(\"../Feature.js\").default} Closest feature.\r\n   * @api\r\n   */\r\n  VectorSource.prototype.getClosestFeatureToCoordinate = function getClosestFeatureToCoordinate (coordinate, opt_filter) {\r\n    // Find the closest feature using branch and bound.  We start searching an\r\n    // infinite extent, and find the distance from the first feature found.  This\r\n    // becomes the closest feature.  We then compute a smaller extent which any\r\n    // closer feature must intersect.  We continue searching with this smaller\r\n    // extent, trying to find a closer feature.  Every time we find a closer\r\n    // feature, we update the extent being searched so that any even closer\r\n    // feature must intersect it.  We continue until we run out of features.\r\n    var x = coordinate[0];\r\n    var y = coordinate[1];\r\n    var closestFeature = null;\r\n    var closestPoint = [NaN, NaN];\r\n    var minSquaredDistance = Infinity;\r\n    var extent = [-Infinity, -Infinity, Infinity, Infinity];\r\n    var filter = opt_filter ? opt_filter : TRUE;\r\n    this.featuresRtree_.forEachInExtent(extent,\r\n      /**\r\n       * @param {import(\"../Feature.js\").default} feature Feature.\r\n       */\r\n      function(feature) {\r\n        if (filter(feature)) {\r\n          var geometry = feature.getGeometry();\r\n          var previousMinSquaredDistance = minSquaredDistance;\r\n          minSquaredDistance = geometry.closestPointXY(\r\n            x, y, closestPoint, minSquaredDistance);\r\n          if (minSquaredDistance < previousMinSquaredDistance) {\r\n            closestFeature = feature;\r\n            // This is sneaky.  Reduce the extent that it is currently being\r\n            // searched while the R-Tree traversal using this same extent object\r\n            // is still in progress.  This is safe because the new extent is\r\n            // strictly contained by the old extent.\r\n            var minDistance = Math.sqrt(minSquaredDistance);\r\n            extent[0] = x - minDistance;\r\n            extent[1] = y - minDistance;\r\n            extent[2] = x + minDistance;\r\n            extent[3] = y + minDistance;\r\n          }\r\n        }\r\n      });\r\n    return closestFeature;\r\n  };\r\n\r\n\r\n  /**\r\n   * Get the extent of the features currently in the source.\r\n   *\r\n   * This method is not available when the source is configured with\r\n   * `useSpatialIndex` set to `false`.\r\n   * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\r\n   *     will be created. Instead, that extent's coordinates will be overwritten.\r\n   * @return {import(\"../extent.js\").Extent} Extent.\r\n   * @api\r\n   */\r\n  VectorSource.prototype.getExtent = function getExtent (opt_extent) {\r\n    return this.featuresRtree_.getExtent(opt_extent);\r\n  };\r\n\r\n\r\n  /**\r\n   * Get a feature by its identifier (the value returned by feature.getId()).\r\n   * Note that the index treats string and numeric identifiers as the same.  So\r\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\r\n   *\r\n   * @param {string|number} id Feature identifier.\r\n   * @return {import(\"../Feature.js\").default} The feature (or `null` if not found).\r\n   * @api\r\n   */\r\n  VectorSource.prototype.getFeatureById = function getFeatureById (id) {\r\n    var feature = this.idIndex_[id.toString()];\r\n    return feature !== undefined ? feature : null;\r\n  };\r\n\r\n\r\n  /**\r\n   * Get the format associated with this source.\r\n   *\r\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\r\n   * @api\r\n   */\r\n  VectorSource.prototype.getFormat = function getFormat () {\r\n    return this.format_;\r\n  };\r\n\r\n\r\n  /**\r\n   * @return {boolean} The source can have overlapping geometries.\r\n   */\r\n  VectorSource.prototype.getOverlaps = function getOverlaps () {\r\n    return this.overlaps_;\r\n  };\r\n\r\n\r\n  /**\r\n   * Get the url associated with this source.\r\n   *\r\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\r\n   * @api\r\n   */\r\n  VectorSource.prototype.getUrl = function getUrl () {\r\n    return this.url_;\r\n  };\r\n\r\n\r\n  /**\r\n   * @param {Event} event Event.\r\n   * @private\r\n   */\r\n  VectorSource.prototype.handleFeatureChange_ = function handleFeatureChange_ (event) {\r\n    var feature = /** @type {import(\"../Feature.js\").default} */ (event.target);\r\n    var featureKey = getUid(feature);\r\n    var geometry = feature.getGeometry();\r\n    if (!geometry) {\r\n      if (!(featureKey in this.nullGeometryFeatures_)) {\r\n        if (this.featuresRtree_) {\r\n          this.featuresRtree_.remove(feature);\r\n        }\r\n        this.nullGeometryFeatures_[featureKey] = feature;\r\n      }\r\n    } else {\r\n      var extent = geometry.getExtent();\r\n      if (featureKey in this.nullGeometryFeatures_) {\r\n        delete this.nullGeometryFeatures_[featureKey];\r\n        if (this.featuresRtree_) {\r\n          this.featuresRtree_.insert(extent, feature);\r\n        }\r\n      } else {\r\n        if (this.featuresRtree_) {\r\n          this.featuresRtree_.update(extent, feature);\r\n        }\r\n      }\r\n    }\r\n    var id = feature.getId();\r\n    if (id !== undefined) {\r\n      var sid = id.toString();\r\n      if (featureKey in this.undefIdIndex_) {\r\n        delete this.undefIdIndex_[featureKey];\r\n        this.idIndex_[sid] = feature;\r\n      } else {\r\n        if (this.idIndex_[sid] !== feature) {\r\n          this.removeFromIdIndex_(feature);\r\n          this.idIndex_[sid] = feature;\r\n        }\r\n      }\r\n    } else {\r\n      if (!(featureKey in this.undefIdIndex_)) {\r\n        this.removeFromIdIndex_(feature);\r\n        this.undefIdIndex_[featureKey] = feature;\r\n      }\r\n    }\r\n    this.changed();\r\n    this.dispatchEvent(new VectorSourceEvent(\r\n      VectorEventType.CHANGEFEATURE, feature));\r\n  };\r\n\r\n  /**\r\n   * Returns true if the feature is contained within the source.\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @return {boolean} Has feature.\r\n   * @api\r\n   */\r\n  VectorSource.prototype.hasFeature = function hasFeature (feature) {\r\n    var id = feature.getId();\r\n    if (id !== undefined) {\r\n      return id in this.idIndex_;\r\n    } else {\r\n      return getUid(feature) in this.undefIdIndex_;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @return {boolean} Is empty.\r\n   */\r\n  VectorSource.prototype.isEmpty = function isEmpty$1 () {\r\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\r\n  };\r\n\r\n\r\n  /**\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {number} resolution Resolution.\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   */\r\n  VectorSource.prototype.loadFeatures = function loadFeatures (extent, resolution, projection) {\n    var this$1 = this;\n\r\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\r\n    var extentsToLoad = this.strategy_(extent, resolution);\r\n    this.loading = false;\r\n    var loop = function ( i, ii ) {\r\n      var extentToLoad = extentsToLoad[i];\r\n      var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\r\n        /**\r\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\r\n         * @return {boolean} Contains.\r\n         */\r\n        function(object) {\r\n          return containsExtent(object.extent, extentToLoad);\r\n        });\r\n      if (!alreadyLoaded) {\r\n        this$1.loader_.call(this$1, extentToLoad, resolution, projection);\r\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\r\n        this$1.loading = this$1.loader_ !== VOID;\r\n      }\r\n    };\n\n    for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) loop( i, ii );\r\n  };\r\n\r\n\r\n  /**\r\n   * Remove an extent from the list of loaded extents.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @api\r\n   */\r\n  VectorSource.prototype.removeLoadedExtent = function removeLoadedExtent (extent) {\r\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\r\n    var obj;\r\n    loadedExtentsRtree.forEachInExtent(extent, function(object) {\r\n      if (equals(object.extent, extent)) {\r\n        obj = object;\r\n        return true;\r\n      }\r\n    });\r\n    if (obj) {\r\n      loadedExtentsRtree.remove(obj);\r\n    }\r\n  };\r\n\r\n\r\n  /**\r\n   * Remove a single feature from the source.  If you want to remove all features\r\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\r\n   * instead.\r\n   * @param {import(\"../Feature.js\").default} feature Feature to remove.\r\n   * @api\r\n   */\r\n  VectorSource.prototype.removeFeature = function removeFeature (feature) {\r\n    var featureKey = getUid(feature);\r\n    if (featureKey in this.nullGeometryFeatures_) {\r\n      delete this.nullGeometryFeatures_[featureKey];\r\n    } else {\r\n      if (this.featuresRtree_) {\r\n        this.featuresRtree_.remove(feature);\r\n      }\r\n    }\r\n    this.removeFeatureInternal(feature);\r\n    this.changed();\r\n  };\r\n\r\n\r\n  /**\r\n   * Remove feature without firing a `change` event.\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @protected\r\n   */\r\n  VectorSource.prototype.removeFeatureInternal = function removeFeatureInternal (feature) {\r\n    var featureKey = getUid(feature);\r\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\r\n    delete this.featureChangeKeys_[featureKey];\r\n    var id = feature.getId();\r\n    if (id !== undefined) {\r\n      delete this.idIndex_[id.toString()];\r\n    } else {\r\n      delete this.undefIdIndex_[featureKey];\r\n    }\r\n    this.dispatchEvent(new VectorSourceEvent(\r\n      VectorEventType.REMOVEFEATURE, feature));\r\n  };\r\n\r\n\r\n  /**\r\n   * Remove a feature from the id index.  Called internally when the feature id\r\n   * may have changed.\r\n   * @param {import(\"../Feature.js\").default} feature The feature.\r\n   * @return {boolean} Removed the feature from the index.\r\n   * @private\r\n   */\r\n  VectorSource.prototype.removeFromIdIndex_ = function removeFromIdIndex_ (feature) {\r\n    var removed = false;\r\n    for (var id in this.idIndex_) {\r\n      if (this.idIndex_[id] === feature) {\r\n        delete this.idIndex_[id];\r\n        removed = true;\r\n        break;\r\n      }\r\n    }\r\n    return removed;\r\n  };\r\n\r\n\r\n  /**\r\n   * Set the new loader of the source. The next loadFeatures call will use the\r\n   * new loader.\r\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\r\n   * @api\r\n   */\r\n  VectorSource.prototype.setLoader = function setLoader (loader) {\r\n    this.loader_ = loader;\r\n  };\n\n  return VectorSource;\n}(Source));\r\n\r\n\r\nexport default VectorSource;\r\n\r\n//# sourceMappingURL=Vector.js.map","/**\r\n * @module ol/interaction/Draw\r\n */\r\nimport EventType from '../events/EventType.js';\r\nimport Feature from '../Feature.js';\r\nimport MapBrowserEventType from '../MapBrowserEventType.js';\r\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\r\nimport {getChangeEventType} from '../Object.js';\r\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\r\nimport {listen} from '../events.js';\r\nimport Event from '../events/Event.js';\r\nimport {noModifierKeys, always, shiftKeyOnly} from '../events/condition.js';\r\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\r\nimport {TRUE, FALSE} from '../functions.js';\r\nimport Circle from '../geom/Circle.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport MultiLineString from '../geom/MultiLineString.js';\r\nimport MultiPoint from '../geom/MultiPoint.js';\r\nimport MultiPolygon from '../geom/MultiPolygon.js';\r\nimport {POINTER_TYPE} from '../pointer/MouseSource.js';\r\nimport Point from '../geom/Point.js';\r\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\r\nimport PointerInteraction from './Pointer.js';\r\nimport InteractionProperty from './Property.js';\r\nimport VectorLayer from '../layer/Vector.js';\r\nimport VectorSource from '../source/Vector.js';\r\nimport {createEditingStyle} from '../style/Style.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {GeometryType} type Geometry type of\r\n * the geometries being drawn with this instance.\r\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\r\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\r\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\r\n * was chosen for the draw interaction to behave correctly on mouse as well as\r\n * on touch devices.\r\n * @property {import(\"../Collection.js\").default<Feature>} [features]\r\n * Destination collection for the drawn features.\r\n * @property {VectorSource} [source] Destination source for\r\n * the drawn features.\r\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\r\n * before the current vertex can be dragged to its exact position.\r\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\r\n * drawing finish.\r\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\r\n * doubleclick events from firing during drawing.\r\n * @property {number} [maxPoints] The number of points that can be drawn before\r\n * a polygon ring or line string is finished. By default there is no\r\n * restriction.\r\n * @property {number} [minPoints] The number of points that must be drawn\r\n * before a polygon ring or line string can be finished. Default is `3` for\r\n * polygon rings and `2` for line strings.\r\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\r\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether the drawing can be finished.\r\n * @property {import(\"../style/Style.js\").StyleLike} [style]\r\n * Style for sketch features.\r\n * @property {GeometryFunction} [geometryFunction]\r\n * Function that is called when a geometry's coordinates are updated.\r\n * @property {string} [geometryName] Geometry name to use for features created\r\n * by the draw interaction.\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled.\r\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\r\n * adds a vertex or deactivates freehand drawing.\r\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\r\n * polygons, and circles.  This makes the interaction always operate in freehand\r\n * mode and takes precedence over any `freehandCondition` option.\r\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\r\n * Condition that activates freehand drawing for lines and polygons. This\r\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\r\n * returns a boolean to indicate whether that event should be handled. The\r\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\r\n * Shift key activates freehand drawing.\r\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\r\n * overlay.\r\n */\r\n\r\n\r\n/**\r\n * Coordinate type when drawing points.\r\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\r\n */\r\n\r\n\r\n/**\r\n * Coordinate type when drawing lines.\r\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\r\n */\r\n\r\n\r\n/**\r\n * Coordinate type when drawing polygons.\r\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\r\n */\r\n\r\n\r\n/**\r\n * Types used for drawing coordinates.\r\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\r\n */\r\n\r\n\r\n/**\r\n * Function that takes an array of coordinates and an optional existing geometry as\r\n * arguments, and returns a geometry. The optional existing geometry is the\r\n * geometry that is returned when the function is called without a second\r\n * argument.\r\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default=):\r\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\r\n */\r\n\r\n\r\n/**\r\n * Draw mode.  This collapses multi-part geometry types with their single-part\r\n * cousins.\r\n * @enum {string}\r\n */\r\nvar Mode = {\r\n  POINT: 'Point',\r\n  LINE_STRING: 'LineString',\r\n  POLYGON: 'Polygon',\r\n  CIRCLE: 'Circle'\r\n};\r\n\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nvar DrawEventType = {\r\n  /**\r\n   * Triggered upon feature draw start\r\n   * @event DrawEvent#drawstart\r\n   * @api\r\n   */\r\n  DRAWSTART: 'drawstart',\r\n  /**\r\n   * Triggered upon feature draw end\r\n   * @event DrawEvent#drawend\r\n   * @api\r\n   */\r\n  DRAWEND: 'drawend'\r\n};\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\r\n * instances of this type.\r\n */\r\nvar DrawEvent = /*@__PURE__*/(function (Event) {\n  function DrawEvent(type, feature) {\r\n\r\n    Event.call(this, type);\r\n\r\n    /**\r\n     * The feature being drawn.\r\n     * @type {Feature}\r\n     * @api\r\n     */\r\n    this.feature = feature;\r\n\r\n  }\n\n  if ( Event ) DrawEvent.__proto__ = Event;\n  DrawEvent.prototype = Object.create( Event && Event.prototype );\n  DrawEvent.prototype.constructor = DrawEvent;\n\n  return DrawEvent;\n}(Event));\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Interaction for drawing feature geometries.\r\n *\r\n * @fires DrawEvent\r\n * @api\r\n */\r\nvar Draw = /*@__PURE__*/(function (PointerInteraction) {\n  function Draw(options) {\r\n\r\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\r\n    if (!pointerOptions.stopDown) {\r\n      pointerOptions.stopDown = FALSE;\r\n    }\r\n\r\n    PointerInteraction.call(this, pointerOptions);\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.shouldHandle_ = false;\r\n\r\n    /**\r\n     * @type {import(\"../pixel.js\").Pixel}\r\n     * @private\r\n     */\r\n    this.downPx_ = null;\r\n\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    this.downTimeout_;\r\n\r\n    /**\r\n     * @type {number|undefined}\r\n     * @private\r\n     */\r\n    this.lastDragTime_;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.freehand_ = false;\r\n\r\n    /**\r\n     * Target source for drawn features.\r\n     * @type {VectorSource}\r\n     * @private\r\n     */\r\n    this.source_ = options.source ? options.source : null;\r\n\r\n    /**\r\n     * Target collection for drawn features.\r\n     * @type {import(\"../Collection.js\").default<Feature>}\r\n     * @private\r\n     */\r\n    this.features_ = options.features ? options.features : null;\r\n\r\n    /**\r\n     * Pixel distance for snapping.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\r\n\r\n    /**\r\n     * Geometry type.\r\n     * @type {GeometryType}\r\n     * @private\r\n     */\r\n    this.type_ = /** @type {GeometryType} */ (options.type);\r\n\r\n    /**\r\n     * Drawing mode (derived from geometry type.\r\n     * @type {Mode}\r\n     * @private\r\n     */\r\n    this.mode_ = getMode(this.type_);\r\n\r\n    /**\r\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\r\n     * Default is `false`.\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.stopClick_ = !!options.stopClick;\r\n\r\n    /**\r\n     * The number of points that must be drawn before a polygon ring or line\r\n     * string can be finished.  The default is 3 for polygon rings and 2 for\r\n     * line strings.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.minPoints_ = options.minPoints ?\r\n      options.minPoints :\r\n      (this.mode_ === Mode.POLYGON ? 3 : 2);\r\n\r\n    /**\r\n     * The number of points that can be drawn before a polygon ring or line string\r\n     * is finished. The default is no restriction.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\r\n\r\n    /**\r\n     * A function to decide if a potential finish coordinate is permissible\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\r\n\r\n    var geometryFunction = options.geometryFunction;\r\n    if (!geometryFunction) {\r\n      if (this.type_ === GeometryType.CIRCLE) {\r\n        /**\r\n         * @param {!LineCoordType} coordinates The coordinates.\r\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\r\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\r\n         */\r\n        geometryFunction = function(coordinates, opt_geometry) {\r\n          var circle = opt_geometry ? /** @type {Circle} */ (opt_geometry) :\r\n            new Circle([NaN, NaN]);\r\n          var squaredLength = squaredCoordinateDistance(\r\n            coordinates[0], coordinates[1]);\r\n          circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\r\n          return circle;\r\n        };\r\n      } else {\r\n        var Constructor;\r\n        var mode = this.mode_;\r\n        if (mode === Mode.POINT) {\r\n          Constructor = Point;\r\n        } else if (mode === Mode.LINE_STRING) {\r\n          Constructor = LineString;\r\n        } else if (mode === Mode.POLYGON) {\r\n          Constructor = Polygon;\r\n        }\r\n        /**\r\n         * @param {!LineCoordType} coordinates The coordinates.\r\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\r\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\r\n         */\r\n        geometryFunction = function(coordinates, opt_geometry) {\r\n          var geometry = opt_geometry;\r\n          if (geometry) {\r\n            if (mode === Mode.POLYGON) {\r\n              if (coordinates[0].length) {\r\n                // Add a closing coordinate to match the first\r\n                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\r\n              } else {\r\n                geometry.setCoordinates([]);\r\n              }\r\n            } else {\r\n              geometry.setCoordinates(coordinates);\r\n            }\r\n          } else {\r\n            geometry = new Constructor(coordinates);\r\n          }\r\n          return geometry;\r\n        };\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @type {GeometryFunction}\r\n     * @private\r\n     */\r\n    this.geometryFunction_ = geometryFunction;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\r\n\r\n    /**\r\n     * Finish coordinate for the feature (first point for polygons, last point for\r\n     * linestrings).\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     * @private\r\n     */\r\n    this.finishCoordinate_ = null;\r\n\r\n    /**\r\n     * Sketch feature.\r\n     * @type {Feature}\r\n     * @private\r\n     */\r\n    this.sketchFeature_ = null;\r\n\r\n    /**\r\n     * Sketch point.\r\n     * @type {Feature}\r\n     * @private\r\n     */\r\n    this.sketchPoint_ = null;\r\n\r\n    /**\r\n     * Sketch coordinates. Used when drawing a line or polygon.\r\n     * @type {SketchCoordType}\r\n     * @private\r\n     */\r\n    this.sketchCoords_ = null;\r\n\r\n    /**\r\n     * Sketch line. Used when drawing polygon.\r\n     * @type {Feature}\r\n     * @private\r\n     */\r\n    this.sketchLine_ = null;\r\n\r\n    /**\r\n     * Sketch line coordinates. Used when drawing a polygon or circle.\r\n     * @type {LineCoordType}\r\n     * @private\r\n     */\r\n    this.sketchLineCoords_ = null;\r\n\r\n    /**\r\n     * Squared tolerance for handling up events.  If the squared distance\r\n     * between a down and up event is greater than this tolerance, up events\r\n     * will not be handled.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.squaredClickTolerance_ = options.clickTolerance ?\r\n      options.clickTolerance * options.clickTolerance : 36;\r\n\r\n    /**\r\n     * Draw overlay where our sketch features are drawn.\r\n     * @type {VectorLayer}\r\n     * @private\r\n     */\r\n    this.overlay_ = new VectorLayer({\r\n      source: new VectorSource({\r\n        useSpatialIndex: false,\r\n        wrapX: options.wrapX ? options.wrapX : false\r\n      }),\r\n      style: options.style ? options.style :\r\n        getDefaultStyleFunction(),\r\n      updateWhileInteracting: true\r\n    });\r\n\r\n    /**\r\n     * Name of the geometry attribute for newly created features.\r\n     * @type {string|undefined}\r\n     * @private\r\n     */\r\n    this.geometryName_ = options.geometryName;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.freehandCondition_;\r\n    if (options.freehand) {\r\n      this.freehandCondition_ = always;\r\n    } else {\r\n      this.freehandCondition_ = options.freehandCondition ?\r\n        options.freehandCondition : shiftKeyOnly;\r\n    }\r\n\r\n    listen(this,\r\n      getChangeEventType(InteractionProperty.ACTIVE),\r\n      this.updateState_, this);\r\n\r\n  }\n\n  if ( PointerInteraction ) Draw.__proto__ = PointerInteraction;\n  Draw.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Draw.prototype.constructor = Draw;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Draw.prototype.setMap = function setMap (map) {\r\n    PointerInteraction.prototype.setMap.call(this, map);\r\n    this.updateState_();\r\n  };\r\n\r\n  /**\r\n   * Get the overlay layer that this interaction renders sketch features to.\r\n   * @return {VectorLayer} Overlay layer.\r\n   * @api\r\n   */\r\n  Draw.prototype.getOverlay = function getOverlay () {\r\n    return this.overlay_;\r\n  };\r\n\r\n  /**\r\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\r\n   * @override\r\n   * @api\r\n   */\r\n  Draw.prototype.handleEvent = function handleEvent (event) {\r\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\r\n      // Avoid context menu for long taps when drawing on mobile\r\n      event.preventDefault();\r\n    }\r\n    this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\r\n    var move = event.type === MapBrowserEventType.POINTERMOVE;\r\n    var pass = true;\r\n    if (!this.freehand_ && this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\r\n      var now = Date.now();\r\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\r\n        this.downPx_ = event.pixel;\r\n        this.shouldHandle_ = !this.freehand_;\r\n        move = true;\r\n      } else {\r\n        this.lastDragTime_ = undefined;\r\n      }\r\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\r\n        clearTimeout(this.downTimeout_);\r\n        this.downTimeout_ = undefined;\r\n      }\r\n    }\r\n    if (this.freehand_ &&\r\n        event.type === MapBrowserEventType.POINTERDRAG &&\r\n        this.sketchFeature_ !== null) {\r\n      this.addToDrawing_(event);\r\n      pass = false;\r\n    } else if (this.freehand_ &&\r\n        event.type === MapBrowserEventType.POINTERDOWN) {\r\n      pass = false;\r\n    } else if (move) {\r\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\r\n      if (pass && this.freehand_) {\r\n        pass = this.handlePointerMove_(event);\r\n      } else if (/** @type {MapBrowserPointerEvent} */ (event).pointerEvent.pointerType == POINTER_TYPE ||\r\n          (event.type === MapBrowserEventType.POINTERDRAG && this.downTimeout_ === undefined)) {\r\n        this.handlePointerMove_(event);\r\n      }\r\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\r\n      pass = false;\r\n    }\r\n\r\n    return PointerInteraction.prototype.handleEvent.call(this, event) && pass;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Draw.prototype.handleDownEvent = function handleDownEvent (event) {\r\n    this.shouldHandle_ = !this.freehand_;\r\n\r\n    if (this.freehand_) {\r\n      this.downPx_ = event.pixel;\r\n      if (!this.finishCoordinate_) {\r\n        this.startDrawing_(event);\r\n      }\r\n      return true;\r\n    } else if (this.condition_(event)) {\r\n      this.lastDragTime_ = Date.now();\r\n      this.downTimeout_ = setTimeout(function() {\r\n        this.handlePointerMove_(new MapBrowserPointerEvent(\r\n          MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, false, event.frameState));\r\n      }.bind(this), this.dragVertexDelay_);\r\n      this.downPx_ = event.pixel;\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Draw.prototype.handleUpEvent = function handleUpEvent (event) {\r\n    var pass = true;\r\n\r\n    if (this.downTimeout_) {\r\n      clearTimeout(this.downTimeout_);\r\n      this.downTimeout_ = undefined;\r\n    }\r\n\r\n    this.handlePointerMove_(event);\r\n\r\n    var circleMode = this.mode_ === Mode.CIRCLE;\r\n\r\n    if (this.shouldHandle_) {\r\n      if (!this.finishCoordinate_) {\r\n        this.startDrawing_(event);\r\n        if (this.mode_ === Mode.POINT) {\r\n          this.finishDrawing();\r\n        }\r\n      } else if (this.freehand_ || circleMode) {\r\n        this.finishDrawing();\r\n      } else if (this.atFinish_(event)) {\r\n        if (this.finishCondition_(event)) {\r\n          this.finishDrawing();\r\n        }\r\n      } else {\r\n        this.addToDrawing_(event);\r\n      }\r\n      pass = false;\r\n    } else if (this.freehand_) {\r\n      this.finishCoordinate_ = null;\r\n      this.abortDrawing_();\r\n    }\r\n    if (!pass && this.stopClick_) {\r\n      event.stopPropagation();\r\n    }\r\n    return pass;\r\n  };\r\n\r\n  /**\r\n   * Handle move events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\r\n   * @return {boolean} Pass the event to other interactions.\r\n   * @private\r\n   */\r\n  Draw.prototype.handlePointerMove_ = function handlePointerMove_ (event) {\r\n    if (this.downPx_ &&\r\n        ((!this.freehand_ && this.shouldHandle_) ||\r\n        (this.freehand_ && !this.shouldHandle_))) {\r\n      var downPx = this.downPx_;\r\n      var clickPx = event.pixel;\r\n      var dx = downPx[0] - clickPx[0];\r\n      var dy = downPx[1] - clickPx[1];\r\n      var squaredDistance = dx * dx + dy * dy;\r\n      this.shouldHandle_ = this.freehand_ ?\r\n        squaredDistance > this.squaredClickTolerance_ :\r\n        squaredDistance <= this.squaredClickTolerance_;\r\n      if (!this.shouldHandle_) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (this.finishCoordinate_) {\r\n      this.modifyDrawing_(event);\r\n    } else {\r\n      this.createOrUpdateSketchPoint_(event);\r\n    }\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * Determine if an event is within the snapping tolerance of the start coord.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\r\n   * @return {boolean} The event is within the snapping tolerance of the start.\r\n   * @private\r\n   */\r\n  Draw.prototype.atFinish_ = function atFinish_ (event) {\r\n    var at = false;\r\n    if (this.sketchFeature_) {\r\n      var potentiallyDone = false;\r\n      var potentiallyFinishCoordinates = [this.finishCoordinate_];\r\n      if (this.mode_ === Mode.LINE_STRING) {\r\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\r\n      } else if (this.mode_ === Mode.POLYGON) {\r\n        var sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\r\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\r\n        potentiallyFinishCoordinates = [sketchCoords[0][0], sketchCoords[0][sketchCoords[0].length - 2]];\r\n      }\r\n      if (potentiallyDone) {\r\n        var map = event.map;\r\n        for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\r\n          var finishCoordinate = potentiallyFinishCoordinates[i];\r\n          var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\r\n          var pixel = event.pixel;\r\n          var dx = pixel[0] - finishPixel[0];\r\n          var dy = pixel[1] - finishPixel[1];\r\n          var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\r\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\r\n          if (at) {\r\n            this.finishCoordinate_ = finishCoordinate;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return at;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\r\n   * @private\r\n   */\r\n  Draw.prototype.createOrUpdateSketchPoint_ = function createOrUpdateSketchPoint_ (event) {\r\n    var coordinates = event.coordinate.slice();\r\n    if (!this.sketchPoint_) {\r\n      this.sketchPoint_ = new Feature(new Point(coordinates));\r\n      this.updateSketchFeatures_();\r\n    } else {\r\n      var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\r\n      sketchPointGeom.setCoordinates(coordinates);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Start the drawing.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\r\n   * @private\r\n   */\r\n  Draw.prototype.startDrawing_ = function startDrawing_ (event) {\r\n    var start = event.coordinate;\r\n    this.finishCoordinate_ = start;\r\n    if (this.mode_ === Mode.POINT) {\r\n      this.sketchCoords_ = start.slice();\r\n    } else if (this.mode_ === Mode.POLYGON) {\r\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\r\n      this.sketchLineCoords_ = this.sketchCoords_[0];\r\n    } else {\r\n      this.sketchCoords_ = [start.slice(), start.slice()];\r\n    }\r\n    if (this.sketchLineCoords_) {\r\n      this.sketchLine_ = new Feature(\r\n        new LineString(this.sketchLineCoords_));\r\n    }\r\n    var geometry = this.geometryFunction_(this.sketchCoords_);\r\n    this.sketchFeature_ = new Feature();\r\n    if (this.geometryName_) {\r\n      this.sketchFeature_.setGeometryName(this.geometryName_);\r\n    }\r\n    this.sketchFeature_.setGeometry(geometry);\r\n    this.updateSketchFeatures_();\r\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\r\n  };\r\n\r\n  /**\r\n   * Modify the drawing.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\r\n   * @private\r\n   */\r\n  Draw.prototype.modifyDrawing_ = function modifyDrawing_ (event) {\r\n    var coordinate = event.coordinate;\r\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\r\n    var coordinates, last;\r\n    if (this.mode_ === Mode.POINT) {\r\n      last = this.sketchCoords_;\r\n    } else if (this.mode_ === Mode.POLYGON) {\r\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\r\n      last = coordinates[coordinates.length - 1];\r\n      if (this.atFinish_(event)) {\r\n        // snap to finish\r\n        coordinate = this.finishCoordinate_.slice();\r\n      }\r\n    } else {\r\n      coordinates = this.sketchCoords_;\r\n      last = coordinates[coordinates.length - 1];\r\n    }\r\n    last[0] = coordinate[0];\r\n    last[1] = coordinate[1];\r\n    this.geometryFunction_(/** @type {!LineCoordType} */ (this.sketchCoords_), geometry);\r\n    if (this.sketchPoint_) {\r\n      var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\r\n      sketchPointGeom.setCoordinates(coordinate);\r\n    }\r\n    /** @type {LineString} */\r\n    var sketchLineGeom;\r\n    if (geometry.getType() == GeometryType.POLYGON &&\r\n        this.mode_ !== Mode.POLYGON) {\r\n      if (!this.sketchLine_) {\r\n        this.sketchLine_ = new Feature();\r\n      }\r\n      var ring = /** @type {Polygon} */ (geometry).getLinearRing(0);\r\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\r\n      if (!sketchLineGeom) {\r\n        sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\r\n        this.sketchLine_.setGeometry(sketchLineGeom);\r\n      } else {\r\n        sketchLineGeom.setFlatCoordinates(\r\n          ring.getLayout(), ring.getFlatCoordinates());\r\n        sketchLineGeom.changed();\r\n      }\r\n    } else if (this.sketchLineCoords_) {\r\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\r\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\r\n    }\r\n    this.updateSketchFeatures_();\r\n  };\r\n\r\n  /**\r\n   * Add a new coordinate to the drawing.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\r\n   * @private\r\n   */\r\n  Draw.prototype.addToDrawing_ = function addToDrawing_ (event) {\r\n    var coordinate = event.coordinate;\r\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\r\n    var done;\r\n    var coordinates;\r\n    if (this.mode_ === Mode.LINE_STRING) {\r\n      this.finishCoordinate_ = coordinate.slice();\r\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\r\n      if (coordinates.length >= this.maxPoints_) {\r\n        if (this.freehand_) {\r\n          coordinates.pop();\r\n        } else {\r\n          done = true;\r\n        }\r\n      }\r\n      coordinates.push(coordinate.slice());\r\n      this.geometryFunction_(coordinates, geometry);\r\n    } else if (this.mode_ === Mode.POLYGON) {\r\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\r\n      if (coordinates.length >= this.maxPoints_) {\r\n        if (this.freehand_) {\r\n          coordinates.pop();\r\n        } else {\r\n          done = true;\r\n        }\r\n      }\r\n      coordinates.push(coordinate.slice());\r\n      if (done) {\r\n        this.finishCoordinate_ = coordinates[0];\r\n      }\r\n      this.geometryFunction_(this.sketchCoords_, geometry);\r\n    }\r\n    this.updateSketchFeatures_();\r\n    if (done) {\r\n      this.finishDrawing();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Remove last point of the feature currently being drawn.\r\n   * @api\r\n   */\r\n  Draw.prototype.removeLastPoint = function removeLastPoint () {\r\n    if (!this.sketchFeature_) {\r\n      return;\r\n    }\r\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\r\n    var coordinates;\r\n    /** @type {LineString} */\r\n    var sketchLineGeom;\r\n    if (this.mode_ === Mode.LINE_STRING) {\r\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\r\n      coordinates.splice(-2, 1);\r\n      this.geometryFunction_(coordinates, geometry);\r\n      if (coordinates.length >= 2) {\r\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\r\n      }\r\n    } else if (this.mode_ === Mode.POLYGON) {\r\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\r\n      coordinates.splice(-2, 1);\r\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\r\n      sketchLineGeom.setCoordinates(coordinates);\r\n      this.geometryFunction_(this.sketchCoords_, geometry);\r\n    }\r\n\r\n    if (coordinates.length === 0) {\r\n      this.finishCoordinate_ = null;\r\n    }\r\n\r\n    this.updateSketchFeatures_();\r\n  };\r\n\r\n  /**\r\n   * Stop drawing and add the sketch feature to the target layer.\r\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\r\n   * dispatched before inserting the feature.\r\n   * @api\r\n   */\r\n  Draw.prototype.finishDrawing = function finishDrawing () {\r\n    var sketchFeature = this.abortDrawing_();\r\n    if (!sketchFeature) {\r\n      return;\r\n    }\r\n    var coordinates = this.sketchCoords_;\r\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (sketchFeature.getGeometry());\r\n    if (this.mode_ === Mode.LINE_STRING) {\r\n      // remove the redundant last point\r\n      coordinates.pop();\r\n      this.geometryFunction_(coordinates, geometry);\r\n    } else if (this.mode_ === Mode.POLYGON) {\r\n      // remove the redundant last point in ring\r\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\r\n      this.geometryFunction_(coordinates, geometry);\r\n      coordinates = geometry.getCoordinates();\r\n    }\r\n\r\n    // cast multi-part geometries\r\n    if (this.type_ === GeometryType.MULTI_POINT) {\r\n      sketchFeature.setGeometry(new MultiPoint([/** @type {PointCoordType} */(coordinates)]));\r\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\r\n      sketchFeature.setGeometry(new MultiLineString([/** @type {LineCoordType} */(coordinates)]));\r\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\r\n      sketchFeature.setGeometry(new MultiPolygon([/** @type {PolyCoordType} */(coordinates)]));\r\n    }\r\n\r\n    // First dispatch event to allow full set up of feature\r\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\r\n\r\n    // Then insert feature\r\n    if (this.features_) {\r\n      this.features_.push(sketchFeature);\r\n    }\r\n    if (this.source_) {\r\n      this.source_.addFeature(sketchFeature);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Stop drawing without adding the sketch feature to the target layer.\r\n   * @return {Feature} The sketch feature (or null if none).\r\n   * @private\r\n   */\r\n  Draw.prototype.abortDrawing_ = function abortDrawing_ () {\r\n    this.finishCoordinate_ = null;\r\n    var sketchFeature = this.sketchFeature_;\r\n    if (sketchFeature) {\r\n      this.sketchFeature_ = null;\r\n      this.sketchPoint_ = null;\r\n      this.sketchLine_ = null;\r\n      /** @type {VectorSource} */ (this.overlay_.getSource()).clear(true);\r\n    }\r\n    return sketchFeature;\r\n  };\r\n\r\n  /**\r\n   * Extend an existing geometry by adding additional points. This only works\r\n   * on features with `LineString` geometries, where the interaction will\r\n   * extend lines by adding points to the end of the coordinates array.\r\n   * @param {!Feature} feature Feature to be extended.\r\n   * @api\r\n   */\r\n  Draw.prototype.extend = function extend (feature) {\r\n    var geometry = feature.getGeometry();\r\n    var lineString = /** @type {LineString} */ (geometry);\r\n    this.sketchFeature_ = feature;\r\n    this.sketchCoords_ = lineString.getCoordinates();\r\n    var last = this.sketchCoords_[this.sketchCoords_.length - 1];\r\n    this.finishCoordinate_ = last.slice();\r\n    this.sketchCoords_.push(last.slice());\r\n    this.updateSketchFeatures_();\r\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\r\n  };\r\n\r\n  /**\r\n   * Redraw the sketch features.\r\n   * @private\r\n   */\r\n  Draw.prototype.updateSketchFeatures_ = function updateSketchFeatures_ () {\r\n    var sketchFeatures = [];\r\n    if (this.sketchFeature_) {\r\n      sketchFeatures.push(this.sketchFeature_);\r\n    }\r\n    if (this.sketchLine_) {\r\n      sketchFeatures.push(this.sketchLine_);\r\n    }\r\n    if (this.sketchPoint_) {\r\n      sketchFeatures.push(this.sketchPoint_);\r\n    }\r\n    var overlaySource = /** @type {VectorSource} */ (this.overlay_.getSource());\r\n    overlaySource.clear(true);\r\n    overlaySource.addFeatures(sketchFeatures);\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  Draw.prototype.updateState_ = function updateState_ () {\r\n    var map = this.getMap();\r\n    var active = this.getActive();\r\n    if (!map || !active) {\r\n      this.abortDrawing_();\r\n    }\r\n    this.overlay_.setMap(active ? map : null);\r\n  };\n\n  return Draw;\n}(PointerInteraction));\r\n\r\n\r\n/**\r\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\r\n */\r\nfunction getDefaultStyleFunction() {\r\n  var styles = createEditingStyle();\r\n  return function(feature, resolution) {\r\n    return styles[feature.getGeometry().getType()];\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\r\n * polygon with a user specified number of sides and start angle instead of an\r\n * `import(\"../geom/Circle.js\").Circle` geometry.\r\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\r\n *     32.\r\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\r\n *     Default is the angle defined by the heading from the center of the\r\n *     regular polygon to the current pointer position.\r\n * @return {GeometryFunction} Function that draws a\r\n *     polygon.\r\n * @api\r\n */\r\nexport function createRegularPolygon(opt_sides, opt_angle) {\r\n  return function(coordinates, opt_geometry) {\r\n    var center = /** @type {LineCoordType} */ (coordinates)[0];\r\n    var end = /** @type {LineCoordType} */ (coordinates)[1];\r\n    var radius = Math.sqrt(\r\n      squaredCoordinateDistance(center, end));\r\n    var geometry = opt_geometry ? /** @type {Polygon} */ (opt_geometry) :\r\n      fromCircle(new Circle(center), opt_sides);\r\n    var angle = opt_angle;\r\n    if (!opt_angle) {\r\n      var x = end[0] - center[0];\r\n      var y = end[1] - center[1];\r\n      angle = Math.atan(y / x) - (x < 0 ? Math.PI : 0);\r\n    }\r\n    makeRegular(geometry, center, radius, angle);\r\n    return geometry;\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\r\n * with the coordinate system axes).  Use this with the draw interaction and\r\n * `type: 'Circle'` to return a box instead of a circle geometry.\r\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\r\n * @api\r\n */\r\nexport function createBox() {\r\n  return (\r\n    function(coordinates, opt_geometry) {\r\n      var extent = boundingExtent(/** @type {LineCoordType} */ (coordinates));\r\n      var boxCoordinates = [[\r\n        getBottomLeft(extent),\r\n        getBottomRight(extent),\r\n        getTopRight(extent),\r\n        getTopLeft(extent),\r\n        getBottomLeft(extent)\r\n      ]];\r\n      var geometry = opt_geometry;\r\n      if (geometry) {\r\n        geometry.setCoordinates(boxCoordinates);\r\n      } else {\r\n        geometry = new Polygon(boxCoordinates);\r\n      }\r\n      return geometry;\r\n    }\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\r\n * their single-part cousins.\r\n * @param {GeometryType} type Geometry type.\r\n * @return {Mode} Drawing mode.\r\n */\r\nfunction getMode(type) {\r\n  var mode;\r\n  if (type === GeometryType.POINT ||\r\n      type === GeometryType.MULTI_POINT) {\r\n    mode = Mode.POINT;\r\n  } else if (type === GeometryType.LINE_STRING ||\r\n      type === GeometryType.MULTI_LINE_STRING) {\r\n    mode = Mode.LINE_STRING;\r\n  } else if (type === GeometryType.POLYGON ||\r\n      type === GeometryType.MULTI_POLYGON) {\r\n    mode = Mode.POLYGON;\r\n  } else if (type === GeometryType.CIRCLE) {\r\n    mode = Mode.CIRCLE;\r\n  }\r\n  return (\r\n    /** @type {!Mode} */ (mode)\r\n  );\r\n}\r\n\r\n\r\nexport default Draw;\r\n\r\n//# sourceMappingURL=Draw.js.map","/**\r\n * @module ol/interaction/Extent\r\n */\r\nimport Feature from '../Feature.js';\r\nimport MapBrowserEventType from '../MapBrowserEventType.js';\r\nimport {squaredDistanceToSegment, closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\r\nimport Event from '../events/Event.js';\r\nimport {boundingExtent, getArea} from '../extent.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport Point from '../geom/Point.js';\r\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\r\nimport PointerInteraction from './Pointer.js';\r\nimport VectorLayer from '../layer/Vector.js';\r\nimport VectorSource from '../source/Vector.js';\r\nimport {createEditingStyle} from '../style/Style.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\r\n * initial extent.\r\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\r\n * Style for the drawn extent box. Defaults to\r\n * {@link module:ol/style/Style~createEditing()['Polygon']}\r\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\r\n * pointer close enough to a segment or vertex for editing.\r\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\r\n * Style for the cursor used to draw the extent. Defaults to\r\n * {@link module:ol/style/Style~createEditing()['Point']}\r\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\r\n * in the X direction? Only affects visuals, not functionality.\r\n */\r\n\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nvar ExtentEventType = {\r\n  /**\r\n   * Triggered after the extent is changed\r\n   * @event ExtentEventType#extentchanged\r\n   * @api\r\n   */\r\n  EXTENTCHANGED: 'extentchanged'\r\n};\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/Extent~ExtentInteraction} instances are\r\n * instances of this type.\r\n */\r\nvar ExtentInteractionEvent = /*@__PURE__*/(function (Event) {\n  function ExtentInteractionEvent(extent) {\r\n    Event.call(this, ExtentEventType.EXTENTCHANGED);\r\n\r\n    /**\r\n     * The current extent.\r\n     * @type {import(\"../extent.js\").Extent}\r\n     * @api\r\n     */\r\n    this.extent = extent;\r\n  }\n\n  if ( Event ) ExtentInteractionEvent.__proto__ = Event;\n  ExtentInteractionEvent.prototype = Object.create( Event && Event.prototype );\n  ExtentInteractionEvent.prototype.constructor = ExtentInteractionEvent;\n\n  return ExtentInteractionEvent;\n}(Event));\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to draw a vector box by clicking and dragging on the map.\r\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\r\n * This interaction is only supported for mouse devices.\r\n *\r\n * @fires Event\r\n * @api\r\n */\r\nvar ExtentInteraction = /*@__PURE__*/(function (PointerInteraction) {\n  function ExtentInteraction(opt_options) {\r\n\r\n    var options = opt_options || {};\r\n\r\n    PointerInteraction.call(/** @type {import(\"./Pointer.js\").Options} */ this, (options));\r\n\r\n    /**\r\n     * Extent of the drawn box\r\n     * @type {import(\"../extent.js\").Extent}\r\n     * @private\r\n     */\r\n    this.extent_ = null;\r\n\r\n    /**\r\n     * Handler for pointer move events\r\n     * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\r\n     * @private\r\n     */\r\n    this.pointerHandler_ = null;\r\n\r\n    /**\r\n     * Pixel threshold to snap to extent\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\r\n      options.pixelTolerance : 10;\r\n\r\n    /**\r\n     * Is the pointer snapped to an extent vertex\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.snappedToVertex_ = false;\r\n\r\n    /**\r\n     * Feature for displaying the visible extent\r\n     * @type {Feature}\r\n     * @private\r\n     */\r\n    this.extentFeature_ = null;\r\n\r\n    /**\r\n     * Feature for displaying the visible pointer\r\n     * @type {Feature}\r\n     * @private\r\n     */\r\n    this.vertexFeature_ = null;\r\n\r\n    if (!opt_options) {\r\n      opt_options = {};\r\n    }\r\n\r\n    /**\r\n     * Layer for the extentFeature\r\n     * @type {VectorLayer}\r\n     * @private\r\n     */\r\n    this.extentOverlay_ = new VectorLayer({\r\n      source: new VectorSource({\r\n        useSpatialIndex: false,\r\n        wrapX: !!opt_options.wrapX\r\n      }),\r\n      style: opt_options.boxStyle ? opt_options.boxStyle : getDefaultExtentStyleFunction(),\r\n      updateWhileAnimating: true,\r\n      updateWhileInteracting: true\r\n    });\r\n\r\n    /**\r\n     * Layer for the vertexFeature\r\n     * @type {VectorLayer}\r\n     * @private\r\n     */\r\n    this.vertexOverlay_ = new VectorLayer({\r\n      source: new VectorSource({\r\n        useSpatialIndex: false,\r\n        wrapX: !!opt_options.wrapX\r\n      }),\r\n      style: opt_options.pointerStyle ? opt_options.pointerStyle : getDefaultPointerStyleFunction(),\r\n      updateWhileAnimating: true,\r\n      updateWhileInteracting: true\r\n    });\r\n\r\n    if (opt_options.extent) {\r\n      this.setExtent(opt_options.extent);\r\n    }\r\n  }\n\n  if ( PointerInteraction ) ExtentInteraction.__proto__ = PointerInteraction;\n  ExtentInteraction.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  ExtentInteraction.prototype.constructor = ExtentInteraction;\r\n\r\n  /**\r\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\r\n   * @param {import(\"../PluggableMap.js\").default} map map\r\n   * @returns {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\r\n   * @private\r\n   */\r\n  ExtentInteraction.prototype.snapToVertex_ = function snapToVertex_ (pixel, map) {\r\n    var pixelCoordinate = map.getCoordinateFromPixel(pixel);\r\n    var sortByDistance = function(a, b) {\r\n      return squaredDistanceToSegment(pixelCoordinate, a) -\r\n          squaredDistanceToSegment(pixelCoordinate, b);\r\n    };\r\n    var extent = this.getExtent();\r\n    if (extent) {\r\n      //convert extents to line segments and find the segment closest to pixelCoordinate\r\n      var segments = getSegments(extent);\r\n      segments.sort(sortByDistance);\r\n      var closestSegment = segments[0];\r\n\r\n      var vertex = (closestOnSegment(pixelCoordinate,\r\n        closestSegment));\r\n      var vertexPixel = map.getPixelFromCoordinate(vertex);\r\n\r\n      //if the distance is within tolerance, snap to the segment\r\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\r\n        //test if we should further snap to a vertex\r\n        var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\r\n        var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\r\n        var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\r\n        var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\r\n        var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\r\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\r\n        if (this.snappedToVertex_) {\r\n          vertex = squaredDist1 > squaredDist2 ?\r\n            closestSegment[1] : closestSegment[0];\r\n        }\r\n        return vertex;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\r\n   * @private\r\n   */\r\n  ExtentInteraction.prototype.handlePointerMove_ = function handlePointerMove_ (mapBrowserEvent) {\r\n    var pixel = mapBrowserEvent.pixel;\r\n    var map = mapBrowserEvent.map;\r\n\r\n    var vertex = this.snapToVertex_(pixel, map);\r\n    if (!vertex) {\r\n      vertex = map.getCoordinateFromPixel(pixel);\r\n    }\r\n    this.createOrUpdatePointerFeature_(vertex);\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../extent.js\").Extent} extent extent\r\n   * @returns {Feature} extent as featrue\r\n   * @private\r\n   */\r\n  ExtentInteraction.prototype.createOrUpdateExtentFeature_ = function createOrUpdateExtentFeature_ (extent) {\r\n    var extentFeature = this.extentFeature_;\r\n\r\n    if (!extentFeature) {\r\n      if (!extent) {\r\n        extentFeature = new Feature({});\r\n      } else {\r\n        extentFeature = new Feature(polygonFromExtent(extent));\r\n      }\r\n      this.extentFeature_ = extentFeature;\r\n      /** @type {VectorSource} */ (this.extentOverlay_.getSource()).addFeature(extentFeature);\r\n    } else {\r\n      if (!extent) {\r\n        extentFeature.setGeometry(undefined);\r\n      } else {\r\n        extentFeature.setGeometry(polygonFromExtent(extent));\r\n      }\r\n    }\r\n    return extentFeature;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\r\n   * @returns {Feature} vertex as feature\r\n   * @private\r\n   */\r\n  ExtentInteraction.prototype.createOrUpdatePointerFeature_ = function createOrUpdatePointerFeature_ (vertex) {\r\n    var vertexFeature = this.vertexFeature_;\r\n    if (!vertexFeature) {\r\n      vertexFeature = new Feature(new Point(vertex));\r\n      this.vertexFeature_ = vertexFeature;\r\n      /** @type {VectorSource} */ (this.vertexOverlay_.getSource()).addFeature(vertexFeature);\r\n    } else {\r\n      var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\r\n      geometry.setCoordinates(vertex);\r\n    }\r\n    return vertexFeature;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  ExtentInteraction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\r\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\r\n      return true;\r\n    }\r\n    //display pointer (if not dragging)\r\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\r\n      this.handlePointerMove_(mapBrowserEvent);\r\n    }\r\n    //call pointer to determine up/down/drag\r\n    PointerInteraction.prototype.handleEvent.call(this, mapBrowserEvent);\r\n    //return false to stop propagation\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  ExtentInteraction.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\r\n    var pixel = mapBrowserEvent.pixel;\r\n    var map = mapBrowserEvent.map;\r\n\r\n    var extent = this.getExtent();\r\n    var vertex = this.snapToVertex_(pixel, map);\r\n\r\n    //find the extent corner opposite the passed corner\r\n    var getOpposingPoint = function(point) {\r\n      var x_ = null;\r\n      var y_ = null;\r\n      if (point[0] == extent[0]) {\r\n        x_ = extent[2];\r\n      } else if (point[0] == extent[2]) {\r\n        x_ = extent[0];\r\n      }\r\n      if (point[1] == extent[1]) {\r\n        y_ = extent[3];\r\n      } else if (point[1] == extent[3]) {\r\n        y_ = extent[1];\r\n      }\r\n      if (x_ !== null && y_ !== null) {\r\n        return [x_, y_];\r\n      }\r\n      return null;\r\n    };\r\n    if (vertex && extent) {\r\n      var x = (vertex[0] == extent[0] || vertex[0] == extent[2]) ? vertex[0] : null;\r\n      var y = (vertex[1] == extent[1] || vertex[1] == extent[3]) ? vertex[1] : null;\r\n\r\n      //snap to point\r\n      if (x !== null && y !== null) {\r\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\r\n      //snap to edge\r\n      } else if (x !== null) {\r\n        this.pointerHandler_ = getEdgeHandler(\r\n          getOpposingPoint([x, extent[1]]),\r\n          getOpposingPoint([x, extent[3]])\r\n        );\r\n      } else if (y !== null) {\r\n        this.pointerHandler_ = getEdgeHandler(\r\n          getOpposingPoint([extent[0], y]),\r\n          getOpposingPoint([extent[2], y])\r\n        );\r\n      }\r\n    //no snap - new bbox\r\n    } else {\r\n      vertex = map.getCoordinateFromPixel(pixel);\r\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\r\n      this.pointerHandler_ = getPointHandler(vertex);\r\n    }\r\n    return true; //event handled; start downup sequence\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  ExtentInteraction.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\r\n    if (this.pointerHandler_) {\r\n      var pixelCoordinate = mapBrowserEvent.coordinate;\r\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\r\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\r\n    }\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  ExtentInteraction.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\r\n    this.pointerHandler_ = null;\r\n    //If bbox is zero area, set to null;\r\n    var extent = this.getExtent();\r\n    if (!extent || getArea(extent) === 0) {\r\n      this.setExtent(null);\r\n    }\r\n    return false; //Stop handling downup sequence\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  ExtentInteraction.prototype.setMap = function setMap (map) {\r\n    this.extentOverlay_.setMap(map);\r\n    this.vertexOverlay_.setMap(map);\r\n    PointerInteraction.prototype.setMap.call(this, map);\r\n  };\r\n\r\n  /**\r\n   * Returns the current drawn extent in the view projection\r\n   *\r\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\r\n   * @api\r\n   */\r\n  ExtentInteraction.prototype.getExtent = function getExtent () {\r\n    return this.extent_;\r\n  };\r\n\r\n  /**\r\n   * Manually sets the drawn extent, using the view projection.\r\n   *\r\n   * @param {import(\"../extent.js\").Extent} extent Extent\r\n   * @api\r\n   */\r\n  ExtentInteraction.prototype.setExtent = function setExtent (extent) {\r\n    //Null extent means no bbox\r\n    this.extent_ = extent ? extent : null;\r\n    this.createOrUpdateExtentFeature_(extent);\r\n    this.dispatchEvent(new ExtentInteractionEvent(this.extent_));\r\n  };\n\n  return ExtentInteraction;\n}(PointerInteraction));\r\n\r\n/**\r\n * Returns the default style for the drawn bbox\r\n *\r\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\r\n */\r\nfunction getDefaultExtentStyleFunction() {\r\n  var style = createEditingStyle();\r\n  return function(feature, resolution) {\r\n    return style[GeometryType.POLYGON];\r\n  };\r\n}\r\n\r\n/**\r\n * Returns the default style for the pointer\r\n *\r\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\r\n */\r\nfunction getDefaultPointerStyleFunction() {\r\n  var style = createEditingStyle();\r\n  return function(feature, resolution) {\r\n    return style[GeometryType.POINT];\r\n  };\r\n}\r\n\r\n/**\r\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\r\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\r\n */\r\nfunction getPointHandler(fixedPoint) {\r\n  return function(point) {\r\n    return boundingExtent([fixedPoint, point]);\r\n  };\r\n}\r\n\r\n/**\r\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\r\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\r\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\r\n */\r\nfunction getEdgeHandler(fixedP1, fixedP2) {\r\n  if (fixedP1[0] == fixedP2[0]) {\r\n    return function(point) {\r\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\r\n    };\r\n  } else if (fixedP1[1] == fixedP2[1]) {\r\n    return function(point) {\r\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\r\n    };\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../extent.js\").Extent} extent extent\r\n * @returns {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\r\n */\r\nfunction getSegments(extent) {\r\n  return [\r\n    [[extent[0], extent[1]], [extent[0], extent[3]]],\r\n    [[extent[0], extent[3]], [extent[2], extent[3]]],\r\n    [[extent[2], extent[3]], [extent[2], extent[1]]],\r\n    [[extent[2], extent[1]], [extent[0], extent[1]]]\r\n  ];\r\n}\r\n\r\n\r\nexport default ExtentInteraction;\r\n\r\n//# sourceMappingURL=Extent.js.map","/**\r\n * @module ol/interaction/Modify\r\n */\r\nimport {getUid} from '../util.js';\r\nimport Collection from '../Collection.js';\r\nimport CollectionEventType from '../CollectionEventType.js';\r\nimport Feature from '../Feature.js';\r\nimport MapBrowserEventType from '../MapBrowserEventType.js';\r\nimport {equals} from '../array.js';\r\nimport {equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment} from '../coordinate.js';\r\nimport {listen, unlisten} from '../events.js';\r\nimport Event from '../events/Event.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {always, primaryAction, altKeyOnly, singleClick} from '../events/condition.js';\r\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport Point from '../geom/Point.js';\r\nimport PointerInteraction from './Pointer.js';\r\nimport VectorLayer from '../layer/Vector.js';\r\nimport VectorSource from '../source/Vector.js';\r\nimport VectorEventType from '../source/VectorEventType.js';\r\nimport RBush from '../structs/RBush.js';\r\nimport {createEditingStyle} from '../style/Style.js';\r\n\r\n\r\n/**\r\n * The segment index assigned to a circle's center when\r\n * breaking up a circle into ModifySegmentDataType segments.\r\n * @type {number}\r\n */\r\nvar CIRCLE_CENTER_INDEX = 0;\r\n\r\n/**\r\n * The segment index assigned to a circle's circumference when\r\n * breaking up a circle into ModifySegmentDataType segments.\r\n * @type {number}\r\n */\r\nvar CIRCLE_CIRCUMFERENCE_INDEX = 1;\r\n\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nvar ModifyEventType = {\r\n  /**\r\n   * Triggered upon feature modification start\r\n   * @event ModifyEvent#modifystart\r\n   * @api\r\n   */\r\n  MODIFYSTART: 'modifystart',\r\n  /**\r\n   * Triggered upon feature modification end\r\n   * @event ModifyEvent#modifyend\r\n   * @api\r\n   */\r\n  MODIFYEND: 'modifyend'\r\n};\r\n\r\n\r\n/**\r\n * @typedef {Object} SegmentData\r\n * @property {Array<number>} [depth]\r\n * @property {Feature} feature\r\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\r\n * @property {number} [index]\r\n * @property {Array<import(\"../extent.js\").Extent>} segment\r\n * @property {Array<SegmentData>} [featureSegments]\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event will be considered to add or move a\r\n * vertex to the sketch. Default is\r\n * {@link module:ol/events/condition~primaryAction}.\r\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\r\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. By default,\r\n * {@link module:ol/events/condition~singleClick} with\r\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\r\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\r\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\r\n * returns a boolean to indicate whether a new vertex can be added to the sketch\r\n * features. Default is {@link module:ol/events/condition~always}.\r\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\r\n * pointer close enough to a segment or vertex for editing.\r\n * @property {import(\"../style/Style.js\").StyleLike} [style]\r\n * Style used for the features being modified. By default the default edit\r\n * style is used (see {@link module:ol/style}).\r\n * @property {VectorSource} [source] The vector source with\r\n * features to modify.  If a vector source is not provided, a feature collection\r\n * must be provided with the features option.\r\n * @property {Collection<Feature>} [features]\r\n * The features the interaction works on.  If a feature collection is not\r\n * provided, a vector source must be provided with the source option.\r\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\r\n * overlay.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\r\n * instances of this type.\r\n */\r\nexport var ModifyEvent = /*@__PURE__*/(function (Event) {\n  function ModifyEvent(type, features, mapBrowserPointerEvent) {\r\n    Event.call(this, type);\r\n\r\n    /**\r\n     * The features being modified.\r\n     * @type {Collection<Feature>}\r\n     * @api\r\n     */\r\n    this.features = features;\r\n\r\n    /**\r\n     * Associated {@link module:ol/MapBrowserEvent}.\r\n     * @type {import(\"../MapBrowserEvent.js\").default}\r\n     * @api\r\n     */\r\n    this.mapBrowserEvent = mapBrowserPointerEvent;\r\n\r\n  }\n\n  if ( Event ) ModifyEvent.__proto__ = Event;\n  ModifyEvent.prototype = Object.create( Event && Event.prototype );\n  ModifyEvent.prototype.constructor = ModifyEvent;\n\n  return ModifyEvent;\n}(Event));\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Interaction for modifying feature geometries.  To modify features that have\r\n * been added to an existing source, construct the modify interaction with the\r\n * `source` option.  If you want to modify features in a collection (for example,\r\n * the collection used by a select interaction), construct the interaction with\r\n * the `features` option.  The interaction must be constructed with either a\r\n * `source` or `features` option.\r\n *\r\n * By default, the interaction will allow deletion of vertices when the `alt`\r\n * key is pressed.  To configure the interaction with a different condition\r\n * for deletion, use the `deleteCondition` option.\r\n * @fires ModifyEvent\r\n * @api\r\n */\r\nvar Modify = /*@__PURE__*/(function (PointerInteraction) {\n  function Modify(options) {\r\n\r\n    PointerInteraction.call(/** @type {import(\"./Pointer.js\").Options} */ this, (options));\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : primaryAction;\r\n\r\n    /**\r\n     * @private\r\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\r\n     * @return {boolean} Combined condition result.\r\n     */\r\n    this.defaultDeleteCondition_ = function(mapBrowserEvent) {\r\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\r\n    };\r\n\r\n    /**\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     * @private\r\n     */\r\n    this.deleteCondition_ = options.deleteCondition ?\r\n      options.deleteCondition : this.defaultDeleteCondition_;\r\n\r\n    /**\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     * @private\r\n     */\r\n    this.insertVertexCondition_ = options.insertVertexCondition ?\r\n      options.insertVertexCondition : always;\r\n\r\n    /**\r\n     * Editing vertex.\r\n     * @type {Feature}\r\n     * @private\r\n     */\r\n    this.vertexFeature_ = null;\r\n\r\n    /**\r\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\r\n     * @type {Object<string, boolean>}\r\n     * @private\r\n     */\r\n    this.vertexSegments_ = null;\r\n\r\n    /**\r\n     * @type {import(\"../pixel.js\").Pixel}\r\n     * @private\r\n     */\r\n    this.lastPixel_ = [0, 0];\r\n\r\n    /**\r\n     * Tracks if the next `singleclick` event should be ignored to prevent\r\n     * accidental deletion right after vertex creation.\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.ignoreNextSingleClick_ = false;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.modified_ = false;\r\n\r\n    /**\r\n     * Segment RTree for each layer\r\n     * @type {RBush<SegmentData>}\r\n     * @private\r\n     */\r\n    this.rBush_ = new RBush();\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\r\n      options.pixelTolerance : 10;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.snappedToVertex_ = false;\r\n\r\n    /**\r\n     * Indicate whether the interaction is currently changing a feature's\r\n     * coordinates.\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.changingFeature_ = false;\r\n\r\n    /**\r\n     * @type {Array}\r\n     * @private\r\n     */\r\n    this.dragSegments_ = [];\r\n\r\n    /**\r\n     * Draw overlay where sketch features are drawn.\r\n     * @type {VectorLayer}\r\n     * @private\r\n     */\r\n    this.overlay_ = new VectorLayer({\r\n      source: new VectorSource({\r\n        useSpatialIndex: false,\r\n        wrapX: !!options.wrapX\r\n      }),\r\n      style: options.style ? options.style :\r\n        getDefaultStyleFunction(),\r\n      updateWhileAnimating: true,\r\n      updateWhileInteracting: true\r\n    });\r\n\r\n    /**\r\n     * @const\r\n     * @private\r\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default)>}\r\n     */\r\n    this.SEGMENT_WRITERS_ = {\r\n      'Point': this.writePointGeometry_,\r\n      'LineString': this.writeLineStringGeometry_,\r\n      'LinearRing': this.writeLineStringGeometry_,\r\n      'Polygon': this.writePolygonGeometry_,\r\n      'MultiPoint': this.writeMultiPointGeometry_,\r\n      'MultiLineString': this.writeMultiLineStringGeometry_,\r\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\r\n      'Circle': this.writeCircleGeometry_,\r\n      'GeometryCollection': this.writeGeometryCollectionGeometry_\r\n    };\r\n\r\n\r\n    /**\r\n     * @type {VectorSource}\r\n     * @private\r\n     */\r\n    this.source_ = null;\r\n\r\n    var features;\r\n    if (options.source) {\r\n      this.source_ = options.source;\r\n      features = new Collection(this.source_.getFeatures());\r\n      listen(this.source_, VectorEventType.ADDFEATURE,\r\n        this.handleSourceAdd_, this);\r\n      listen(this.source_, VectorEventType.REMOVEFEATURE,\r\n        this.handleSourceRemove_, this);\r\n    } else {\r\n      features = options.features;\r\n    }\r\n    if (!features) {\r\n      throw new Error('The modify interaction requires features or a source');\r\n    }\r\n\r\n    /**\r\n     * @type {Collection<Feature>}\r\n     * @private\r\n     */\r\n    this.features_ = features;\r\n\r\n    this.features_.forEach(this.addFeature_.bind(this));\r\n    listen(this.features_, CollectionEventType.ADD,\r\n      this.handleFeatureAdd_, this);\r\n    listen(this.features_, CollectionEventType.REMOVE,\r\n      this.handleFeatureRemove_, this);\r\n\r\n    /**\r\n     * @type {import(\"../MapBrowserPointerEvent.js\").default}\r\n     * @private\r\n     */\r\n    this.lastPointerEvent_ = null;\r\n\r\n  }\n\n  if ( PointerInteraction ) Modify.__proto__ = PointerInteraction;\n  Modify.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Modify.prototype.constructor = Modify;\r\n\r\n  /**\r\n   * @param {Feature} feature Feature.\r\n   * @private\r\n   */\r\n  Modify.prototype.addFeature_ = function addFeature_ (feature) {\r\n    var geometry = feature.getGeometry();\r\n    if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\r\n      this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\r\n    }\r\n    var map = this.getMap();\r\n    if (map && map.isRendered() && this.getActive()) {\r\n      this.handlePointerAtPixel_(this.lastPixel_, map);\r\n    }\r\n    listen(feature, EventType.CHANGE,\r\n      this.handleFeatureChange_, this);\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} evt Map browser event\r\n   * @private\r\n   */\r\n  Modify.prototype.willModifyFeatures_ = function willModifyFeatures_ (evt) {\r\n    if (!this.modified_) {\r\n      this.modified_ = true;\r\n      this.dispatchEvent(new ModifyEvent(\r\n        ModifyEventType.MODIFYSTART, this.features_, evt));\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Feature} feature Feature.\r\n   * @private\r\n   */\r\n  Modify.prototype.removeFeature_ = function removeFeature_ (feature) {\r\n    this.removeFeatureSegmentData_(feature);\r\n    // Remove the vertex feature if the collection of canditate features\r\n    // is empty.\r\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\r\n      /** @type {VectorSource} */ (this.overlay_.getSource()).removeFeature(this.vertexFeature_);\r\n      this.vertexFeature_ = null;\r\n    }\r\n    unlisten(feature, EventType.CHANGE,\r\n      this.handleFeatureChange_, this);\r\n  };\r\n\r\n  /**\r\n   * @param {Feature} feature Feature.\r\n   * @private\r\n   */\r\n  Modify.prototype.removeFeatureSegmentData_ = function removeFeatureSegmentData_ (feature) {\r\n    var rBush = this.rBush_;\r\n    var /** @type {Array<SegmentData>} */ nodesToRemove = [];\r\n    rBush.forEach(\r\n      /**\r\n       * @param {SegmentData} node RTree node.\r\n       */\r\n      function(node) {\r\n        if (feature === node.feature) {\r\n          nodesToRemove.push(node);\r\n        }\r\n      });\r\n    for (var i = nodesToRemove.length - 1; i >= 0; --i) {\r\n      rBush.remove(nodesToRemove[i]);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Modify.prototype.setActive = function setActive (active) {\r\n    if (this.vertexFeature_ && !active) {\r\n      /** @type {VectorSource} */ (this.overlay_.getSource()).removeFeature(this.vertexFeature_);\r\n      this.vertexFeature_ = null;\r\n    }\r\n    PointerInteraction.prototype.setActive.call(this, active);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Modify.prototype.setMap = function setMap (map) {\r\n    this.overlay_.setMap(map);\r\n    PointerInteraction.prototype.setMap.call(this, map);\r\n  };\r\n\r\n  /**\r\n   * Get the overlay layer that this interaction renders sketch features to.\r\n   * @return {VectorLayer} Overlay layer.\r\n   * @api\r\n   */\r\n  Modify.prototype.getOverlay = function getOverlay () {\r\n    return this.overlay_;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\r\n   * @private\r\n   */\r\n  Modify.prototype.handleSourceAdd_ = function handleSourceAdd_ (event) {\r\n    if (event.feature) {\r\n      this.features_.push(event.feature);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\r\n   * @private\r\n   */\r\n  Modify.prototype.handleSourceRemove_ = function handleSourceRemove_ (event) {\r\n    if (event.feature) {\r\n      this.features_.remove(event.feature);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\r\n   * @private\r\n   */\r\n  Modify.prototype.handleFeatureAdd_ = function handleFeatureAdd_ (evt) {\r\n    this.addFeature_(/** @type {Feature} */ (evt.element));\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../events/Event.js\").default} evt Event.\r\n   * @private\r\n   */\r\n  Modify.prototype.handleFeatureChange_ = function handleFeatureChange_ (evt) {\r\n    if (!this.changingFeature_) {\r\n      var feature = /** @type {Feature} */ (evt.target);\r\n      this.removeFeature_(feature);\r\n      this.addFeature_(feature);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\r\n   * @private\r\n   */\r\n  Modify.prototype.handleFeatureRemove_ = function handleFeatureRemove_ (evt) {\r\n    var feature = /** @type {Feature} */ (evt.element);\r\n    this.removeFeature_(feature);\r\n  };\r\n\r\n  /**\r\n   * @param {Feature} feature Feature\r\n   * @param {Point} geometry Geometry.\r\n   * @private\r\n   */\r\n  Modify.prototype.writePointGeometry_ = function writePointGeometry_ (feature, geometry) {\r\n    var coordinates = geometry.getCoordinates();\r\n    var segmentData = /** @type {SegmentData} */ ({\r\n      feature: feature,\r\n      geometry: geometry,\r\n      segment: [coordinates, coordinates]\r\n    });\r\n    this.rBush_.insert(geometry.getExtent(), segmentData);\r\n  };\r\n\r\n  /**\r\n   * @param {Feature} feature Feature\r\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  Modify.prototype.writeMultiPointGeometry_ = function writeMultiPointGeometry_ (feature, geometry) {\r\n    var points = geometry.getCoordinates();\r\n    for (var i = 0, ii = points.length; i < ii; ++i) {\r\n      var coordinates = points[i];\r\n      var segmentData = /** @type {SegmentData} */ ({\r\n        feature: feature,\r\n        geometry: geometry,\r\n        depth: [i],\r\n        index: i,\r\n        segment: [coordinates, coordinates]\r\n      });\r\n      this.rBush_.insert(geometry.getExtent(), segmentData);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Feature} feature Feature\r\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  Modify.prototype.writeLineStringGeometry_ = function writeLineStringGeometry_ (feature, geometry) {\r\n    var coordinates = geometry.getCoordinates();\r\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n      var segment = coordinates.slice(i, i + 2);\r\n      var segmentData = /** @type {SegmentData} */ ({\r\n        feature: feature,\r\n        geometry: geometry,\r\n        index: i,\r\n        segment: segment\r\n      });\r\n      this.rBush_.insert(boundingExtent(segment), segmentData);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Feature} feature Feature\r\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  Modify.prototype.writeMultiLineStringGeometry_ = function writeMultiLineStringGeometry_ (feature, geometry) {\r\n    var lines = geometry.getCoordinates();\r\n    for (var j = 0, jj = lines.length; j < jj; ++j) {\r\n      var coordinates = lines[j];\r\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n        var segment = coordinates.slice(i, i + 2);\r\n        var segmentData = /** @type {SegmentData} */ ({\r\n          feature: feature,\r\n          geometry: geometry,\r\n          depth: [j],\r\n          index: i,\r\n          segment: segment\r\n        });\r\n        this.rBush_.insert(boundingExtent(segment), segmentData);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Feature} feature Feature\r\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  Modify.prototype.writePolygonGeometry_ = function writePolygonGeometry_ (feature, geometry) {\r\n    var rings = geometry.getCoordinates();\r\n    for (var j = 0, jj = rings.length; j < jj; ++j) {\r\n      var coordinates = rings[j];\r\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n        var segment = coordinates.slice(i, i + 2);\r\n        var segmentData = /** @type {SegmentData} */ ({\r\n          feature: feature,\r\n          geometry: geometry,\r\n          depth: [j],\r\n          index: i,\r\n          segment: segment\r\n        });\r\n        this.rBush_.insert(boundingExtent(segment), segmentData);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Feature} feature Feature\r\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  Modify.prototype.writeMultiPolygonGeometry_ = function writeMultiPolygonGeometry_ (feature, geometry) {\r\n    var polygons = geometry.getCoordinates();\r\n    for (var k = 0, kk = polygons.length; k < kk; ++k) {\r\n      var rings = polygons[k];\r\n      for (var j = 0, jj = rings.length; j < jj; ++j) {\r\n        var coordinates = rings[j];\r\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n          var segment = coordinates.slice(i, i + 2);\r\n          var segmentData = /** @type {SegmentData} */ ({\r\n            feature: feature,\r\n            geometry: geometry,\r\n            depth: [j, k],\r\n            index: i,\r\n            segment: segment\r\n          });\r\n          this.rBush_.insert(boundingExtent(segment), segmentData);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * We convert a circle into two segments.  The segment at index\r\n   * {@link CIRCLE_CENTER_INDEX} is the\r\n   * circle's center (a point).  The segment at index\r\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\r\n   * the circumference, and is not a line segment.\r\n   *\r\n   * @param {Feature} feature Feature.\r\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  Modify.prototype.writeCircleGeometry_ = function writeCircleGeometry_ (feature, geometry) {\r\n    var coordinates = geometry.getCenter();\r\n    var centerSegmentData = /** @type {SegmentData} */ ({\r\n      feature: feature,\r\n      geometry: geometry,\r\n      index: CIRCLE_CENTER_INDEX,\r\n      segment: [coordinates, coordinates]\r\n    });\r\n    var circumferenceSegmentData = /** @type {SegmentData} */ ({\r\n      feature: feature,\r\n      geometry: geometry,\r\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\r\n      segment: [coordinates, coordinates]\r\n    });\r\n    var featureSegments = [centerSegmentData, circumferenceSegmentData];\r\n    centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\r\n    this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\r\n    this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\r\n  };\r\n\r\n  /**\r\n   * @param {Feature} feature Feature\r\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  Modify.prototype.writeGeometryCollectionGeometry_ = function writeGeometryCollectionGeometry_ (feature, geometry) {\r\n    var geometries = geometry.getGeometriesArray();\r\n    for (var i = 0; i < geometries.length; ++i) {\r\n      this.SEGMENT_WRITERS_[geometries[i].getType()].call(this, feature, geometries[i]);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\r\n   * @return {Feature} Vertex feature.\r\n   * @private\r\n   */\r\n  Modify.prototype.createOrUpdateVertexFeature_ = function createOrUpdateVertexFeature_ (coordinates) {\r\n    var vertexFeature = this.vertexFeature_;\r\n    if (!vertexFeature) {\r\n      vertexFeature = new Feature(new Point(coordinates));\r\n      this.vertexFeature_ = vertexFeature;\r\n      /** @type {VectorSource} */ (this.overlay_.getSource()).addFeature(vertexFeature);\r\n    } else {\r\n      var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\r\n      geometry.setCoordinates(coordinates);\r\n    }\r\n    return vertexFeature;\r\n  };\r\n\r\n  /**\r\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the geometry.\r\n   * @override\r\n   */\r\n  Modify.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\r\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\r\n      return true;\r\n    }\r\n    this.lastPointerEvent_ = mapBrowserEvent;\r\n\r\n    var handled;\r\n    if (!mapBrowserEvent.map.getView().getInteracting() &&\r\n        mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\r\n        !this.handlingDownUpSequence) {\r\n      this.handlePointerMove_(mapBrowserEvent);\r\n    }\r\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\r\n      if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\r\n        handled = this.removePoint();\r\n      } else {\r\n        handled = true;\r\n      }\r\n    }\r\n\r\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\r\n      this.ignoreNextSingleClick_ = false;\r\n    }\r\n\r\n    return PointerInteraction.prototype.handleEvent.call(this, mapBrowserEvent) && !handled;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Modify.prototype.handleDragEvent = function handleDragEvent (evt) {\r\n    this.ignoreNextSingleClick_ = false;\r\n    this.willModifyFeatures_(evt);\r\n\r\n    var vertex = evt.coordinate;\r\n    for (var i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\r\n      var dragSegment = this.dragSegments_[i];\r\n      var segmentData = dragSegment[0];\r\n      var depth = segmentData.depth;\r\n      var geometry = segmentData.geometry;\r\n      var coordinates = (void 0);\r\n      var segment = segmentData.segment;\r\n      var index = dragSegment[1];\r\n\r\n      while (vertex.length < geometry.getStride()) {\r\n        vertex.push(segment[index][vertex.length]);\r\n      }\r\n\r\n      switch (geometry.getType()) {\r\n        case GeometryType.POINT:\r\n          coordinates = vertex;\r\n          segment[0] = segment[1] = vertex;\r\n          break;\r\n        case GeometryType.MULTI_POINT:\r\n          coordinates = geometry.getCoordinates();\r\n          coordinates[segmentData.index] = vertex;\r\n          segment[0] = segment[1] = vertex;\r\n          break;\r\n        case GeometryType.LINE_STRING:\r\n          coordinates = geometry.getCoordinates();\r\n          coordinates[segmentData.index + index] = vertex;\r\n          segment[index] = vertex;\r\n          break;\r\n        case GeometryType.MULTI_LINE_STRING:\r\n          coordinates = geometry.getCoordinates();\r\n          coordinates[depth[0]][segmentData.index + index] = vertex;\r\n          segment[index] = vertex;\r\n          break;\r\n        case GeometryType.POLYGON:\r\n          coordinates = geometry.getCoordinates();\r\n          coordinates[depth[0]][segmentData.index + index] = vertex;\r\n          segment[index] = vertex;\r\n          break;\r\n        case GeometryType.MULTI_POLYGON:\r\n          coordinates = geometry.getCoordinates();\r\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\r\n          segment[index] = vertex;\r\n          break;\r\n        case GeometryType.CIRCLE:\r\n          segment[0] = segment[1] = vertex;\r\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\r\n            this.changingFeature_ = true;\r\n            geometry.setCenter(vertex);\r\n            this.changingFeature_ = false;\r\n          } else { // We're dragging the circle's circumference:\r\n            this.changingFeature_ = true;\r\n            geometry.setRadius(coordinateDistance(geometry.getCenter(), vertex));\r\n            this.changingFeature_ = false;\r\n          }\r\n          break;\r\n        default:\r\n          // pass\r\n      }\r\n\r\n      if (coordinates) {\r\n        this.setGeometryCoordinates_(geometry, coordinates);\r\n      }\r\n    }\r\n    this.createOrUpdateVertexFeature_(vertex);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Modify.prototype.handleDownEvent = function handleDownEvent (evt) {\r\n    if (!this.condition_(evt)) {\r\n      return false;\r\n    }\r\n    this.handlePointerAtPixel_(evt.pixel, evt.map);\r\n    var pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\r\n    this.dragSegments_.length = 0;\r\n    this.modified_ = false;\r\n    var vertexFeature = this.vertexFeature_;\r\n    if (vertexFeature) {\r\n      var insertVertices = [];\r\n      var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\r\n      var vertex = geometry.getCoordinates();\r\n      var vertexExtent = boundingExtent([vertex]);\r\n      var segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\r\n      var componentSegments = {};\r\n      segmentDataMatches.sort(compareIndexes);\r\n      for (var i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\r\n        var segmentDataMatch = segmentDataMatches[i];\r\n        var segment = segmentDataMatch.segment;\r\n        var uid = getUid(segmentDataMatch.feature);\r\n        var depth = segmentDataMatch.depth;\r\n        if (depth) {\r\n          uid += '-' + depth.join('-'); // separate feature components\r\n        }\r\n        if (!componentSegments[uid]) {\r\n          componentSegments[uid] = new Array(2);\r\n        }\r\n        if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\r\n        segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\r\n\r\n          var closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch);\r\n          if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\r\n            this.dragSegments_.push([segmentDataMatch, 0]);\r\n            componentSegments[uid][0] = segmentDataMatch;\r\n          }\r\n        } else if (coordinatesEqual(segment[0], vertex) &&\r\n            !componentSegments[uid][0]) {\r\n          this.dragSegments_.push([segmentDataMatch, 0]);\r\n          componentSegments[uid][0] = segmentDataMatch;\r\n        } else if (coordinatesEqual(segment[1], vertex) &&\r\n            !componentSegments[uid][1]) {\r\n\r\n          // prevent dragging closed linestrings by the connecting node\r\n          if ((segmentDataMatch.geometry.getType() ===\r\n              GeometryType.LINE_STRING ||\r\n              segmentDataMatch.geometry.getType() ===\r\n              GeometryType.MULTI_LINE_STRING) &&\r\n              componentSegments[uid][0] &&\r\n              componentSegments[uid][0].index === 0) {\r\n            continue;\r\n          }\r\n\r\n          this.dragSegments_.push([segmentDataMatch, 1]);\r\n          componentSegments[uid][1] = segmentDataMatch;\r\n        } else if (this.insertVertexCondition_(evt) && getUid(segment) in this.vertexSegments_ &&\r\n            (!componentSegments[uid][0] && !componentSegments[uid][1])) {\r\n          insertVertices.push([segmentDataMatch, vertex]);\r\n        }\r\n      }\r\n      if (insertVertices.length) {\r\n        this.willModifyFeatures_(evt);\r\n      }\r\n      for (var j = insertVertices.length - 1; j >= 0; --j) {\r\n        this.insertVertex_.apply(this, insertVertices[j]);\r\n      }\r\n    }\r\n    return !!this.vertexFeature_;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Modify.prototype.handleUpEvent = function handleUpEvent (evt) {\r\n    for (var i = this.dragSegments_.length - 1; i >= 0; --i) {\r\n      var segmentData = this.dragSegments_[i][0];\r\n      var geometry = segmentData.geometry;\r\n      if (geometry.getType() === GeometryType.CIRCLE) {\r\n        // Update a circle object in the R* bush:\r\n        var coordinates = geometry.getCenter();\r\n        var centerSegmentData = segmentData.featureSegments[0];\r\n        var circumferenceSegmentData = segmentData.featureSegments[1];\r\n        centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\r\n        circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\r\n        this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\r\n        this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\r\n      } else {\r\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\r\n      }\r\n    }\r\n    if (this.modified_) {\r\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\r\n      this.modified_ = false;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\r\n   * @private\r\n   */\r\n  Modify.prototype.handlePointerMove_ = function handlePointerMove_ (evt) {\r\n    this.lastPixel_ = evt.pixel;\r\n    this.handlePointerAtPixel_(evt.pixel, evt.map);\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\r\n   * @param {import(\"../PluggableMap.js\").default} map Map.\r\n   * @private\r\n   */\r\n  Modify.prototype.handlePointerAtPixel_ = function handlePointerAtPixel_ (pixel, map) {\r\n    var pixelCoordinate = map.getCoordinateFromPixel(pixel);\r\n    var sortByDistance = function(a, b) {\r\n      return pointDistanceToSegmentDataSquared(pixelCoordinate, a) -\r\n          pointDistanceToSegmentDataSquared(pixelCoordinate, b);\r\n    };\r\n\r\n    var box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\r\n      map.getView().getResolution() * this.pixelTolerance_);\r\n\r\n    var rBush = this.rBush_;\r\n    var nodes = rBush.getInExtent(box);\r\n    if (nodes.length > 0) {\r\n      nodes.sort(sortByDistance);\r\n      var node = nodes[0];\r\n      var closestSegment = node.segment;\r\n      var vertex = closestOnSegmentData(pixelCoordinate, node);\r\n      var vertexPixel = map.getPixelFromCoordinate(vertex);\r\n      var dist = coordinateDistance(pixel, vertexPixel);\r\n      if (dist <= this.pixelTolerance_) {\r\n        /** @type {Object<string, boolean>} */\r\n        var vertexSegments = {};\r\n\r\n        if (node.geometry.getType() === GeometryType.CIRCLE &&\r\n        node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\r\n\r\n          this.snappedToVertex_ = true;\r\n          this.createOrUpdateVertexFeature_(vertex);\r\n        } else {\r\n          var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\r\n          var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\r\n          var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\r\n          var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\r\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\r\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\r\n          if (this.snappedToVertex_) {\r\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\r\n          }\r\n          this.createOrUpdateVertexFeature_(vertex);\r\n          for (var i = 1, ii = nodes.length; i < ii; ++i) {\r\n            var segment = nodes[i].segment;\r\n            if ((coordinatesEqual(closestSegment[0], segment[0]) &&\r\n                coordinatesEqual(closestSegment[1], segment[1]) ||\r\n                (coordinatesEqual(closestSegment[0], segment[1]) &&\r\n                coordinatesEqual(closestSegment[1], segment[0])))) {\r\n              vertexSegments[getUid(segment)] = true;\r\n            } else {\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        vertexSegments[getUid(closestSegment)] = true;\r\n        this.vertexSegments_ = vertexSegments;\r\n        return;\r\n      }\r\n    }\r\n    if (this.vertexFeature_) {\r\n      /** @type {VectorSource} */ (this.overlay_.getSource()).removeFeature(this.vertexFeature_);\r\n      this.vertexFeature_ = null;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {SegmentData} segmentData Segment data.\r\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\r\n   * @private\r\n   */\r\n  Modify.prototype.insertVertex_ = function insertVertex_ (segmentData, vertex) {\r\n    var segment = segmentData.segment;\r\n    var feature = segmentData.feature;\r\n    var geometry = segmentData.geometry;\r\n    var depth = segmentData.depth;\r\n    var index = /** @type {number} */ (segmentData.index);\r\n    var coordinates;\r\n\r\n    while (vertex.length < geometry.getStride()) {\r\n      vertex.push(0);\r\n    }\r\n\r\n    switch (geometry.getType()) {\r\n      case GeometryType.MULTI_LINE_STRING:\r\n        coordinates = geometry.getCoordinates();\r\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\r\n        break;\r\n      case GeometryType.POLYGON:\r\n        coordinates = geometry.getCoordinates();\r\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\r\n        break;\r\n      case GeometryType.MULTI_POLYGON:\r\n        coordinates = geometry.getCoordinates();\r\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\r\n        break;\r\n      case GeometryType.LINE_STRING:\r\n        coordinates = geometry.getCoordinates();\r\n        coordinates.splice(index + 1, 0, vertex);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n\r\n    this.setGeometryCoordinates_(geometry, coordinates);\r\n    var rTree = this.rBush_;\r\n    rTree.remove(segmentData);\r\n    this.updateSegmentIndices_(geometry, index, depth, 1);\r\n    var newSegmentData = /** @type {SegmentData} */ ({\r\n      segment: [segment[0], vertex],\r\n      feature: feature,\r\n      geometry: geometry,\r\n      depth: depth,\r\n      index: index\r\n    });\r\n    rTree.insert(boundingExtent(newSegmentData.segment),\r\n      newSegmentData);\r\n    this.dragSegments_.push([newSegmentData, 1]);\r\n\r\n    var newSegmentData2 = /** @type {SegmentData} */ ({\r\n      segment: [vertex, segment[1]],\r\n      feature: feature,\r\n      geometry: geometry,\r\n      depth: depth,\r\n      index: index + 1\r\n    });\r\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\r\n    this.dragSegments_.push([newSegmentData2, 0]);\r\n    this.ignoreNextSingleClick_ = true;\r\n  };\r\n\r\n  /**\r\n   * Removes the vertex currently being pointed.\r\n   * @return {boolean} True when a vertex was removed.\r\n   * @api\r\n   */\r\n  Modify.prototype.removePoint = function removePoint () {\r\n    if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\r\n      var evt = this.lastPointerEvent_;\r\n      this.willModifyFeatures_(evt);\r\n      this.removeVertex_();\r\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\r\n      this.modified_ = false;\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Removes a vertex from all matching features.\r\n   * @return {boolean} True when a vertex was removed.\r\n   * @private\r\n   */\r\n  Modify.prototype.removeVertex_ = function removeVertex_ () {\r\n    var dragSegments = this.dragSegments_;\r\n    var segmentsByFeature = {};\r\n    var deleted = false;\r\n    var component, coordinates, dragSegment, geometry, i, index, left;\r\n    var newIndex, right, segmentData, uid;\r\n    for (i = dragSegments.length - 1; i >= 0; --i) {\r\n      dragSegment = dragSegments[i];\r\n      segmentData = dragSegment[0];\r\n      uid = getUid(segmentData.feature);\r\n      if (segmentData.depth) {\r\n        // separate feature components\r\n        uid += '-' + segmentData.depth.join('-');\r\n      }\r\n      if (!(uid in segmentsByFeature)) {\r\n        segmentsByFeature[uid] = {};\r\n      }\r\n      if (dragSegment[1] === 0) {\r\n        segmentsByFeature[uid].right = segmentData;\r\n        segmentsByFeature[uid].index = segmentData.index;\r\n      } else if (dragSegment[1] == 1) {\r\n        segmentsByFeature[uid].left = segmentData;\r\n        segmentsByFeature[uid].index = segmentData.index + 1;\r\n      }\r\n\r\n    }\r\n    for (uid in segmentsByFeature) {\r\n      right = segmentsByFeature[uid].right;\r\n      left = segmentsByFeature[uid].left;\r\n      index = segmentsByFeature[uid].index;\r\n      newIndex = index - 1;\r\n      if (left !== undefined) {\r\n        segmentData = left;\r\n      } else {\r\n        segmentData = right;\r\n      }\r\n      if (newIndex < 0) {\r\n        newIndex = 0;\r\n      }\r\n      geometry = segmentData.geometry;\r\n      coordinates = geometry.getCoordinates();\r\n      component = coordinates;\r\n      deleted = false;\r\n      switch (geometry.getType()) {\r\n        case GeometryType.MULTI_LINE_STRING:\r\n          if (coordinates[segmentData.depth[0]].length > 2) {\r\n            coordinates[segmentData.depth[0]].splice(index, 1);\r\n            deleted = true;\r\n          }\r\n          break;\r\n        case GeometryType.LINE_STRING:\r\n          if (coordinates.length > 2) {\r\n            coordinates.splice(index, 1);\r\n            deleted = true;\r\n          }\r\n          break;\r\n        case GeometryType.MULTI_POLYGON:\r\n          component = component[segmentData.depth[1]];\r\n          /* falls through */\r\n        case GeometryType.POLYGON:\r\n          component = component[segmentData.depth[0]];\r\n          if (component.length > 4) {\r\n            if (index == component.length - 1) {\r\n              index = 0;\r\n            }\r\n            component.splice(index, 1);\r\n            deleted = true;\r\n            if (index === 0) {\r\n              // close the ring again\r\n              component.pop();\r\n              component.push(component[0]);\r\n              newIndex = component.length - 1;\r\n            }\r\n          }\r\n          break;\r\n        default:\r\n          // pass\r\n      }\r\n\r\n      if (deleted) {\r\n        this.setGeometryCoordinates_(geometry, coordinates);\r\n        var segments = [];\r\n        if (left !== undefined) {\r\n          this.rBush_.remove(left);\r\n          segments.push(left.segment[0]);\r\n        }\r\n        if (right !== undefined) {\r\n          this.rBush_.remove(right);\r\n          segments.push(right.segment[1]);\r\n        }\r\n        if (left !== undefined && right !== undefined) {\r\n          var newSegmentData = /** @type {SegmentData} */ ({\r\n            depth: segmentData.depth,\r\n            feature: segmentData.feature,\r\n            geometry: segmentData.geometry,\r\n            index: newIndex,\r\n            segment: segments\r\n          });\r\n          this.rBush_.insert(boundingExtent(newSegmentData.segment),\r\n            newSegmentData);\r\n        }\r\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\r\n        if (this.vertexFeature_) {\r\n          /** @type {VectorSource} */ (this.overlay_.getSource()).removeFeature(this.vertexFeature_);\r\n          this.vertexFeature_ = null;\r\n        }\r\n        dragSegments.length = 0;\r\n      }\r\n\r\n    }\r\n    return deleted;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\r\n   * @param {Array} coordinates Coordinates.\r\n   * @private\r\n   */\r\n  Modify.prototype.setGeometryCoordinates_ = function setGeometryCoordinates_ (geometry, coordinates) {\r\n    this.changingFeature_ = true;\r\n    geometry.setCoordinates(coordinates);\r\n    this.changingFeature_ = false;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\r\n   * @param {number} index Index.\r\n   * @param {Array<number>|undefined} depth Depth.\r\n   * @param {number} delta Delta (1 or -1).\r\n   * @private\r\n   */\r\n  Modify.prototype.updateSegmentIndices_ = function updateSegmentIndices_ (geometry, index, depth, delta) {\r\n    this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\r\n      if (segmentDataMatch.geometry === geometry &&\r\n          (depth === undefined || segmentDataMatch.depth === undefined ||\r\n          equals(segmentDataMatch.depth, depth)) &&\r\n          segmentDataMatch.index > index) {\r\n        segmentDataMatch.index += delta;\r\n      }\r\n    });\r\n  };\n\n  return Modify;\n}(PointerInteraction));\r\n\r\n\r\n/**\r\n * @param {SegmentData} a The first segment data.\r\n * @param {SegmentData} b The second segment data.\r\n * @return {number} The difference in indexes.\r\n */\r\nfunction compareIndexes(a, b) {\r\n  return a.index - b.index;\r\n}\r\n\r\n\r\n/**\r\n * Returns the distance from a point to a line segment.\r\n *\r\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\r\n *        which to calculate the distance.\r\n * @param {SegmentData} segmentData The object describing the line\r\n *        segment we are calculating the distance to.\r\n * @return {number} The square of the distance between a point and a line segment.\r\n */\r\nfunction pointDistanceToSegmentDataSquared(pointCoordinates, segmentData) {\r\n  var geometry = segmentData.geometry;\r\n\r\n  if (geometry.getType() === GeometryType.CIRCLE) {\r\n    var circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\r\n\r\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\r\n      var distanceToCenterSquared =\r\n            squaredCoordinateDistance(circleGeometry.getCenter(), pointCoordinates);\r\n      var distanceToCircumference =\r\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\r\n      return distanceToCircumference * distanceToCircumference;\r\n    }\r\n  }\r\n  return squaredDistanceToSegment(pointCoordinates, segmentData.segment);\r\n}\r\n\r\n/**\r\n * Returns the point closest to a given line segment.\r\n *\r\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\r\n *        should be found.\r\n * @param {SegmentData} segmentData The object describing the line\r\n *        segment which should contain the closest point.\r\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\r\n */\r\nfunction closestOnSegmentData(pointCoordinates, segmentData) {\r\n  var geometry = segmentData.geometry;\r\n\r\n  if (geometry.getType() === GeometryType.CIRCLE &&\r\n  segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\r\n    return geometry.getClosestPoint(pointCoordinates);\r\n  }\r\n  return closestOnSegment(pointCoordinates, segmentData.segment);\r\n}\r\n\r\n\r\n/**\r\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\r\n */\r\nfunction getDefaultStyleFunction() {\r\n  var style = createEditingStyle();\r\n  return function(feature, resolution) {\r\n    return style[GeometryType.POINT];\r\n  };\r\n}\r\n\r\n\r\nexport default Modify;\r\n\r\n//# sourceMappingURL=Modify.js.map","/**\r\n * @module ol/interaction/Select\r\n */\r\nimport {getUid} from '../util.js';\r\nimport CollectionEventType from '../CollectionEventType.js';\r\nimport {extend, includes} from '../array.js';\r\nimport {listen} from '../events.js';\r\nimport Event from '../events/Event.js';\r\nimport {singleClick, never, shiftKeyOnly, pointerMove} from '../events/condition.js';\r\nimport {TRUE} from '../functions.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport Interaction from './Interaction.js';\r\nimport VectorLayer from '../layer/Vector.js';\r\nimport {clear} from '../obj.js';\r\nimport VectorSource from '../source/Vector.js';\r\nimport {createEditingStyle} from '../style/Style.js';\r\n\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nvar SelectEventType = {\r\n  /**\r\n   * Triggered when feature(s) has been (de)selected.\r\n   * @event SelectEvent#select\r\n   * @api\r\n   */\r\n  SELECT: 'select'\r\n};\r\n\r\n\r\n/**\r\n * A function that takes an {@link module:ol/Feature} or\r\n * {@link module:ol/render/Feature} and an\r\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\r\n * selected or `false` otherwise.\r\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\r\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled.\r\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\r\n * want to use different events for add and remove instead of `toggle`.\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. This is the event\r\n * for the selected features as a whole. By default, this is\r\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\r\n * feature and removes any that were in the selection. Clicking outside any\r\n * feature removes all from the selection.\r\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\r\n * from the selection.\r\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers]\r\n * A list of layers from which features should be selected. Alternatively, a\r\n * filter function can be provided. The function will be called for each layer\r\n * in the map and should return `true` for layers that you want to be\r\n * selectable. If the option is absent, all visible layers will be considered\r\n * selectable.\r\n * @property {import(\"../style/Style.js\").StyleLike} [style]\r\n * Style for the selected features. By default the default edit style is used\r\n * (see {@link module:ol/style}).\r\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\r\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled.\r\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\r\n * want to use different events for add and remove instead of `toggle`.\r\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\r\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. This is in addition\r\n * to the `condition` event. By default,\r\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\r\n * well as the `condition` event, adds that feature to the current selection if\r\n * it is not currently selected, and removes it if it is. See `add` and `remove`\r\n * if you want to use different events instead of a toggle.\r\n * @property {boolean} [multi=false] A boolean that determines if the default\r\n * behaviour should select only single features or all (overlapping) features at\r\n * the clicked map position. The default of `false` means single select.\r\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\r\n * Collection where the interaction will place selected features. Optional. If\r\n * not set the interaction will create a collection. In any case the collection\r\n * used by the interaction is returned by\r\n * {@link module:ol/interaction/Select~Select#getFeatures}.\r\n * @property {FilterFunction} [filter] A function\r\n * that takes an {@link module:ol/Feature} and an\r\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\r\n * selected or `false` otherwise.\r\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the selection\r\n * overlay.\r\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\r\n * the radius around the given position will be checked for features. This only\r\n * works for the canvas renderer and not for WebGL.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\r\n * this type.\r\n */\r\nvar SelectEvent = /*@__PURE__*/(function (Event) {\n  function SelectEvent(type, selected, deselected, mapBrowserEvent) {\r\n    Event.call(this, type);\r\n\r\n    /**\r\n     * Selected features array.\r\n     * @type {Array<import(\"../Feature.js\").default>}\r\n     * @api\r\n     */\r\n    this.selected = selected;\r\n\r\n    /**\r\n     * Deselected features array.\r\n     * @type {Array<import(\"../Feature.js\").default>}\r\n     * @api\r\n     */\r\n    this.deselected = deselected;\r\n\r\n    /**\r\n     * Associated {@link module:ol/MapBrowserEvent}.\r\n     * @type {import(\"../MapBrowserEvent.js\").default}\r\n     * @api\r\n     */\r\n    this.mapBrowserEvent = mapBrowserEvent;\r\n\r\n  }\n\n  if ( Event ) SelectEvent.__proto__ = Event;\n  SelectEvent.prototype = Object.create( Event && Event.prototype );\n  SelectEvent.prototype.constructor = SelectEvent;\n\n  return SelectEvent;\n}(Event));\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Interaction for selecting vector features. By default, selected features are\r\n * styled differently, so this interaction can be used for visual highlighting,\r\n * as well as selecting features for other actions, such as modification or\r\n * output. There are three ways of controlling which features are selected:\r\n * using the browser event as defined by the `condition` and optionally the\r\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\r\n * further feature filter using the `filter` option.\r\n *\r\n * Selected features are added to an internal unmanaged layer.\r\n *\r\n * @fires SelectEvent\r\n * @api\r\n */\r\nvar Select = /*@__PURE__*/(function (Interaction) {\n  function Select(opt_options) {\r\n\r\n    Interaction.call(this, {\r\n      handleEvent: handleEvent\r\n    });\r\n\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : singleClick;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.multi_ = options.multi ? options.multi : false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {FilterFunction}\r\n     */\r\n    this.filter_ = options.filter ? options.filter : TRUE;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\r\n\r\n    var featureOverlay = new VectorLayer({\r\n      source: new VectorSource({\r\n        useSpatialIndex: false,\r\n        features: options.features,\r\n        wrapX: options.wrapX\r\n      }),\r\n      style: options.style ? options.style :\r\n        getDefaultStyleFunction(),\r\n      updateWhileAnimating: true,\r\n      updateWhileInteracting: true\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {VectorLayer}\r\n     */\r\n    this.featureOverlay_ = featureOverlay;\r\n\r\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\r\n    var layerFilter;\r\n    if (options.layers) {\r\n      if (typeof options.layers === 'function') {\r\n        layerFilter = options.layers;\r\n      } else {\r\n        var layers = options.layers;\r\n        layerFilter = function(layer) {\r\n          return includes(layers, layer);\r\n        };\r\n      }\r\n    } else {\r\n      layerFilter = TRUE;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\r\n     */\r\n    this.layerFilter_ = layerFilter;\r\n\r\n    /**\r\n     * An association between selected feature (key)\r\n     * and layer (value)\r\n     * @private\r\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\r\n     */\r\n    this.featureLayerAssociation_ = {};\r\n\r\n    var features = this.getFeatures();\r\n    listen(features, CollectionEventType.ADD,\r\n      this.addFeature_, this);\r\n    listen(features, CollectionEventType.REMOVE,\r\n      this.removeFeature_, this);\r\n  }\n\n  if ( Interaction ) Select.__proto__ = Interaction;\n  Select.prototype = Object.create( Interaction && Interaction.prototype );\n  Select.prototype.constructor = Select;\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\r\n   * @private\r\n   */\r\n  Select.prototype.addFeatureLayerAssociation_ = function addFeatureLayerAssociation_ (feature, layer) {\r\n    this.featureLayerAssociation_[getUid(feature)] = layer;\r\n  };\r\n\r\n  /**\r\n   * Get the selected features.\r\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\r\n   * @api\r\n   */\r\n  Select.prototype.getFeatures = function getFeatures () {\r\n    return /** @type {VectorSource} */ (this.featureOverlay_.getSource()).getFeaturesCollection();\r\n  };\r\n\r\n  /**\r\n   * Returns the Hit-detection tolerance.\r\n   * @returns {number} Hit tolerance in pixels.\r\n   * @api\r\n   */\r\n  Select.prototype.getHitTolerance = function getHitTolerance () {\r\n    return this.hitTolerance_;\r\n  };\r\n\r\n  /**\r\n   * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\r\n   * the (last) selected feature. Note that this will not work with any\r\n   * programmatic method like pushing features to\r\n   * {@link module:ol/interaction/Select~Select#getFeatures collection}.\r\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature\r\n   * @return {VectorLayer} Layer.\r\n   * @api\r\n   */\r\n  Select.prototype.getLayer = function getLayer (feature) {\r\n    return (\r\n      /** @type {VectorLayer} */ (this.featureLayerAssociation_[getUid(feature)])\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Get the overlay layer that this interaction renders selected features to.\r\n   * @return {VectorLayer} Overlay layer.\r\n   * @api\r\n   */\r\n  Select.prototype.getOverlay = function getOverlay () {\r\n    return this.featureOverlay_;\r\n  };\r\n\r\n  /**\r\n   * Hit-detection tolerance. Pixels inside the radius around the given position\r\n   * will be checked for features. This only works for the canvas renderer and\r\n   * not for WebGL.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @api\r\n   */\r\n  Select.prototype.setHitTolerance = function setHitTolerance (hitTolerance) {\r\n    this.hitTolerance_ = hitTolerance;\r\n  };\r\n\r\n  /**\r\n   * Remove the interaction from its current map, if any,  and attach it to a new\r\n   * map, if any. Pass `null` to just remove the interaction from the current map.\r\n   * @param {import(\"../PluggableMap.js\").default} map Map.\r\n   * @override\r\n   * @api\r\n   */\r\n  Select.prototype.setMap = function setMap (map) {\r\n    var currentMap = this.getMap();\r\n    var selectedFeatures = this.getFeatures();\r\n    if (currentMap) {\r\n      selectedFeatures.forEach(currentMap.unskipFeature.bind(currentMap));\r\n    }\r\n    Interaction.prototype.setMap.call(this, map);\r\n    this.featureOverlay_.setMap(map);\r\n    if (map) {\r\n      selectedFeatures.forEach(map.skipFeature.bind(map));\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\r\n   * @private\r\n   */\r\n  Select.prototype.addFeature_ = function addFeature_ (evt) {\r\n    var map = this.getMap();\r\n    if (map) {\r\n      map.skipFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\r\n   * @private\r\n   */\r\n  Select.prototype.removeFeature_ = function removeFeature_ (evt) {\r\n    var map = this.getMap();\r\n    if (map) {\r\n      map.unskipFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n   * @private\r\n   */\r\n  Select.prototype.removeFeatureLayerAssociation_ = function removeFeatureLayerAssociation_ (feature) {\r\n    delete this.featureLayerAssociation_[getUid(feature)];\r\n  };\n\n  return Select;\n}(Interaction));\r\n\r\n\r\n/**\r\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\r\n * selected state of features.\r\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n * @return {boolean} `false` to stop event propagation.\r\n * @this {Select}\r\n */\r\nfunction handleEvent(mapBrowserEvent) {\r\n  if (!this.condition_(mapBrowserEvent)) {\r\n    return true;\r\n  }\r\n  var add = this.addCondition_(mapBrowserEvent);\r\n  var remove = this.removeCondition_(mapBrowserEvent);\r\n  var toggle = this.toggleCondition_(mapBrowserEvent);\r\n  var set = !add && !remove && !toggle;\r\n  var map = mapBrowserEvent.map;\r\n  var features = this.getFeatures();\r\n  var deselected = [];\r\n  var selected = [];\r\n  if (set) {\r\n    // Replace the currently selected feature(s) with the feature(s) at the\r\n    // pixel, or clear the selected feature(s) if there is no feature at\r\n    // the pixel.\r\n    clear(this.featureLayerAssociation_);\r\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\r\n      (\r\n        /**\r\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\r\n         * @return {boolean|undefined} Continue to iterate over the features.\r\n         */\r\n        function(feature, layer) {\r\n          if (this.filter_(feature, layer)) {\r\n            selected.push(feature);\r\n            this.addFeatureLayerAssociation_(feature, layer);\r\n            return !this.multi_;\r\n          }\r\n        }).bind(this), {\r\n        layerFilter: this.layerFilter_,\r\n        hitTolerance: this.hitTolerance_\r\n      });\r\n    for (var i = features.getLength() - 1; i >= 0; --i) {\r\n      var feature = features.item(i);\r\n      var index = selected.indexOf(feature);\r\n      if (index > -1) {\r\n        // feature is already selected\r\n        selected.splice(index, 1);\r\n      } else {\r\n        features.remove(feature);\r\n        deselected.push(feature);\r\n      }\r\n    }\r\n    if (selected.length !== 0) {\r\n      features.extend(selected);\r\n    }\r\n  } else {\r\n    // Modify the currently selected feature(s).\r\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\r\n      (\r\n        /**\r\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\r\n         * @return {boolean|undefined} Continue to iterate over the features.\r\n         */\r\n        function(feature, layer) {\r\n          if (this.filter_(feature, layer)) {\r\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\r\n              selected.push(feature);\r\n              this.addFeatureLayerAssociation_(feature, layer);\r\n            } else if ((remove || toggle) && includes(features.getArray(), feature)) {\r\n              deselected.push(feature);\r\n              this.removeFeatureLayerAssociation_(feature);\r\n            }\r\n            return !this.multi_;\r\n          }\r\n        }).bind(this), {\r\n        layerFilter: this.layerFilter_,\r\n        hitTolerance: this.hitTolerance_\r\n      });\r\n    for (var j = deselected.length - 1; j >= 0; --j) {\r\n      features.remove(deselected[j]);\r\n    }\r\n    features.extend(selected);\r\n  }\r\n  if (selected.length > 0 || deselected.length > 0) {\r\n    this.dispatchEvent(\r\n      new SelectEvent(SelectEventType.SELECT,\r\n        selected, deselected, mapBrowserEvent));\r\n  }\r\n  return pointerMove(mapBrowserEvent);\r\n}\r\n\r\n\r\n/**\r\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\r\n */\r\nfunction getDefaultStyleFunction() {\r\n  var styles = createEditingStyle();\r\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\r\n  extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\r\n\r\n  return function(feature, resolution) {\r\n    if (!feature.getGeometry()) {\r\n      return null;\r\n    }\r\n    return styles[feature.getGeometry().getType()];\r\n  };\r\n}\r\n\r\n\r\nexport default Select;\r\n\r\n//# sourceMappingURL=Select.js.map","/**\r\n * @module ol/interaction/Snap\r\n */\r\nimport {getUid} from '../util.js';\r\nimport CollectionEventType from '../CollectionEventType.js';\r\nimport {distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment} from '../coordinate.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {boundingExtent, createEmpty} from '../extent.js';\r\nimport {TRUE, FALSE} from '../functions.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport {fromCircle} from '../geom/Polygon.js';\r\nimport PointerInteraction from './Pointer.js';\r\nimport {getValues} from '../obj.js';\r\nimport VectorEventType from '../source/VectorEventType.js';\r\nimport RBush from '../structs/RBush.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Result\r\n * @property {boolean} snapped\r\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex\r\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} SegmentData\r\n * @property {import(\"../Feature.js\").default} feature\r\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\r\n * @property {boolean} [edge=true] Snap to edges.\r\n * @property {boolean} [vertex=true] Snap to vertices.\r\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\r\n * vertex for snapping.\r\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\r\n */\r\n\r\n\r\n/**\r\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\r\n * @return {import(\"../Feature.js\").default} Feature.\r\n */\r\nfunction getFeatureFromEvent(evt) {\r\n  if (/** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature) {\r\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature;\r\n  } else if (/** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element) {\r\n    return /** @type {import(\"../Feature.js\").default} */ (/** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element);\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * @classdesc\r\n * Handles snapping of vector features while modifying or drawing them.  The\r\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\r\n * Any interaction object that allows the user to interact\r\n * with the features using the mouse can benefit from the snapping, as long\r\n * as it is added before.\r\n *\r\n * The snap interaction modifies map browser event `coordinate` and `pixel`\r\n * properties to force the snap to occur to any interaction that them.\r\n *\r\n * Example:\r\n *\r\n *     import Snap from 'ol/interaction/Snap';\r\n *\r\n *     var snap = new Snap({\r\n *       source: source\r\n *     });\r\n *\r\n * @api\r\n */\r\nvar Snap = /*@__PURE__*/(function (PointerInteraction) {\n  function Snap(opt_options) {\r\n\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\r\n\r\n    if (!pointerOptions.handleDownEvent) {\r\n      pointerOptions.handleDownEvent = TRUE;\r\n    }\r\n\r\n    if (!pointerOptions.stopDown) {\r\n      pointerOptions.stopDown = FALSE;\r\n    }\r\n\r\n    PointerInteraction.call(this, pointerOptions);\r\n\r\n    /**\r\n     * @type {import(\"../source/Vector.js\").default}\r\n     * @private\r\n     */\r\n    this.source_ = options.source ? options.source : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.edge_ = options.edge !== undefined ? options.edge : true;\r\n\r\n    /**\r\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>}\r\n     * @private\r\n     */\r\n    this.features_ = options.features ? options.features : null;\r\n\r\n    /**\r\n     * @type {Array<import(\"../events.js\").EventsKey>}\r\n     * @private\r\n     */\r\n    this.featuresListenerKeys_ = [];\r\n\r\n    /**\r\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\r\n     * @private\r\n     */\r\n    this.featureChangeListenerKeys_ = {};\r\n\r\n    /**\r\n     * Extents are preserved so indexed segment can be quickly removed\r\n     * when its feature geometry changes\r\n     * @type {Object<string, import(\"../extent.js\").Extent>}\r\n     * @private\r\n     */\r\n    this.indexedFeaturesExtents_ = {};\r\n\r\n    /**\r\n     * If a feature geometry changes while a pointer drag|move event occurs, the\r\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\r\n     * event fired.\r\n     * @type {!Object<string, import(\"../Feature.js\").default>}\r\n     * @private\r\n     */\r\n    this.pendingFeatures_ = {};\r\n\r\n    /**\r\n     * Used for distance sorting in sortByDistance_\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     * @private\r\n     */\r\n    this.pixelCoordinate_ = null;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\r\n      options.pixelTolerance : 10;\r\n\r\n    /**\r\n     * @type {function(SegmentData, SegmentData): number}\r\n     * @private\r\n     */\r\n    this.sortByDistance_ = sortByDistance.bind(this);\r\n\r\n\r\n    /**\r\n    * Segment RTree for each layer\r\n    * @type {import(\"../structs/RBush.js\").default<SegmentData>}\r\n    * @private\r\n    */\r\n    this.rBush_ = new RBush();\r\n\r\n\r\n    /**\r\n    * @const\r\n    * @private\r\n    * @type {Object<string, function(import(\"../Feature.js\").default, import(\"../geom/Geometry.js\").default)>}\r\n    */\r\n    this.SEGMENT_WRITERS_ = {\r\n      'Point': this.writePointGeometry_,\r\n      'LineString': this.writeLineStringGeometry_,\r\n      'LinearRing': this.writeLineStringGeometry_,\r\n      'Polygon': this.writePolygonGeometry_,\r\n      'MultiPoint': this.writeMultiPointGeometry_,\r\n      'MultiLineString': this.writeMultiLineStringGeometry_,\r\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\r\n      'GeometryCollection': this.writeGeometryCollectionGeometry_,\r\n      'Circle': this.writeCircleGeometry_\r\n    };\r\n  }\n\n  if ( PointerInteraction ) Snap.__proto__ = PointerInteraction;\n  Snap.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Snap.prototype.constructor = Snap;\r\n\r\n  /**\r\n   * Add a feature to the collection of features that we may snap to.\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @param {boolean=} opt_listen Whether to listen to the feature change or not\r\n   *     Defaults to `true`.\r\n   * @api\r\n   */\r\n  Snap.prototype.addFeature = function addFeature (feature, opt_listen) {\r\n    var register = opt_listen !== undefined ? opt_listen : true;\r\n    var feature_uid = getUid(feature);\r\n    var geometry = feature.getGeometry();\r\n    if (geometry) {\r\n      var segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\r\n      if (segmentWriter) {\r\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\r\n        segmentWriter.call(this, feature, geometry);\r\n      }\r\n    }\r\n\r\n    if (register) {\r\n      this.featureChangeListenerKeys_[feature_uid] = listen(\r\n        feature,\r\n        EventType.CHANGE,\r\n        this.handleFeatureChange_, this);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @private\r\n   */\r\n  Snap.prototype.forEachFeatureAdd_ = function forEachFeatureAdd_ (feature) {\r\n    this.addFeature(feature);\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @private\r\n   */\r\n  Snap.prototype.forEachFeatureRemove_ = function forEachFeatureRemove_ (feature) {\r\n    this.removeFeature(feature);\r\n  };\r\n\r\n  /**\r\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\r\n   * @private\r\n   */\r\n  Snap.prototype.getFeatures_ = function getFeatures_ () {\r\n    var features;\r\n    if (this.features_) {\r\n      features = this.features_;\r\n    } else if (this.source_) {\r\n      features = this.source_.getFeatures();\r\n    }\r\n    return features;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Snap.prototype.handleEvent = function handleEvent (evt) {\r\n    var result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\r\n    if (result.snapped) {\r\n      evt.coordinate = result.vertex.slice(0, 2);\r\n      evt.pixel = result.vertexPixel;\r\n    }\r\n    return PointerInteraction.prototype.handleEvent.call(this, evt);\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\r\n   * @private\r\n   */\r\n  Snap.prototype.handleFeatureAdd_ = function handleFeatureAdd_ (evt) {\r\n    var feature = getFeatureFromEvent(evt);\r\n    this.addFeature(feature);\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\r\n   * @private\r\n   */\r\n  Snap.prototype.handleFeatureRemove_ = function handleFeatureRemove_ (evt) {\r\n    var feature = getFeatureFromEvent(evt);\r\n    this.removeFeature(feature);\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../events/Event.js\").default} evt Event.\r\n   * @private\r\n   */\r\n  Snap.prototype.handleFeatureChange_ = function handleFeatureChange_ (evt) {\r\n    var feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\r\n    if (this.handlingDownUpSequence) {\r\n      var uid = getUid(feature);\r\n      if (!(uid in this.pendingFeatures_)) {\r\n        this.pendingFeatures_[uid] = feature;\r\n      }\r\n    } else {\r\n      this.updateFeature_(feature);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Snap.prototype.handleUpEvent = function handleUpEvent (evt) {\r\n    var featuresToUpdate = getValues(this.pendingFeatures_);\r\n    if (featuresToUpdate.length) {\r\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\r\n      this.pendingFeatures_ = {};\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Remove a feature from the collection of features that we may snap to.\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\r\n   *     or not. Defaults to `true`.\r\n   * @api\r\n   */\r\n  Snap.prototype.removeFeature = function removeFeature (feature, opt_unlisten) {\r\n    var unregister = opt_unlisten !== undefined ? opt_unlisten : true;\r\n    var feature_uid = getUid(feature);\r\n    var extent = this.indexedFeaturesExtents_[feature_uid];\r\n    if (extent) {\r\n      var rBush = this.rBush_;\r\n      var nodesToRemove = [];\r\n      rBush.forEachInExtent(extent, function(node) {\r\n        if (feature === node.feature) {\r\n          nodesToRemove.push(node);\r\n        }\r\n      });\r\n      for (var i = nodesToRemove.length - 1; i >= 0; --i) {\r\n        rBush.remove(nodesToRemove[i]);\r\n      }\r\n    }\r\n\r\n    if (unregister) {\r\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\r\n      delete this.featureChangeListenerKeys_[feature_uid];\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Snap.prototype.setMap = function setMap (map) {\r\n    var currentMap = this.getMap();\r\n    var keys = this.featuresListenerKeys_;\r\n    var features = /** @type {Array<import(\"../Feature.js\").default>} */ (this.getFeatures_());\r\n\r\n    if (currentMap) {\r\n      keys.forEach(unlistenByKey);\r\n      keys.length = 0;\r\n      features.forEach(this.forEachFeatureRemove_.bind(this));\r\n    }\r\n    PointerInteraction.prototype.setMap.call(this, map);\r\n\r\n    if (map) {\r\n      if (this.features_) {\r\n        keys.push(\r\n          listen(this.features_, CollectionEventType.ADD,\r\n            this.handleFeatureAdd_, this),\r\n          listen(this.features_, CollectionEventType.REMOVE,\r\n            this.handleFeatureRemove_, this)\r\n        );\r\n      } else if (this.source_) {\r\n        keys.push(\r\n          listen(this.source_, VectorEventType.ADDFEATURE,\r\n            this.handleFeatureAdd_, this),\r\n          listen(this.source_, VectorEventType.REMOVEFEATURE,\r\n            this.handleFeatureRemove_, this)\r\n        );\r\n      }\r\n      features.forEach(this.forEachFeatureAdd_.bind(this));\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\r\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\r\n   * @param {import(\"../PluggableMap.js\").default} map Map.\r\n   * @return {Result} Snap result\r\n   */\r\n  Snap.prototype.snapTo = function snapTo (pixel, pixelCoordinate, map) {\r\n\r\n    var lowerLeft = map.getCoordinateFromPixel(\r\n      [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\r\n    var upperRight = map.getCoordinateFromPixel(\r\n      [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\r\n    var box = boundingExtent([lowerLeft, upperRight]);\r\n\r\n    var segments = this.rBush_.getInExtent(box);\r\n\r\n    // If snapping on vertices only, don't consider circles\r\n    if (this.vertex_ && !this.edge_) {\r\n      segments = segments.filter(function(segment) {\r\n        return segment.feature.getGeometry().getType() !==\r\n            GeometryType.CIRCLE;\r\n      });\r\n    }\r\n\r\n    var snappedToVertex = false;\r\n    var snapped = false;\r\n    var vertex = null;\r\n    var vertexPixel = null;\r\n    var dist, pixel1, pixel2, squaredDist1, squaredDist2;\r\n    if (segments.length > 0) {\r\n      this.pixelCoordinate_ = pixelCoordinate;\r\n      segments.sort(this.sortByDistance_);\r\n      var closestSegment = segments[0].segment;\r\n      var isCircle = segments[0].feature.getGeometry().getType() ===\r\n          GeometryType.CIRCLE;\r\n      if (this.vertex_ && !this.edge_) {\r\n        pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\r\n        pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\r\n        squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\r\n        squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\r\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\r\n        snappedToVertex = dist <= this.pixelTolerance_;\r\n        if (snappedToVertex) {\r\n          snapped = true;\r\n          vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\r\n          vertexPixel = map.getPixelFromCoordinate(vertex);\r\n        }\r\n      } else if (this.edge_) {\r\n        if (isCircle) {\r\n          vertex = closestOnCircle(pixelCoordinate,\r\n            /** @type {import(\"../geom/Circle.js\").default} */ (segments[0].feature.getGeometry()));\r\n        } else {\r\n          vertex = closestOnSegment(pixelCoordinate, closestSegment);\r\n        }\r\n        vertexPixel = map.getPixelFromCoordinate(vertex);\r\n        if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\r\n          snapped = true;\r\n          if (this.vertex_ && !isCircle) {\r\n            pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\r\n            pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\r\n            squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\r\n            squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\r\n            dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\r\n            snappedToVertex = dist <= this.pixelTolerance_;\r\n            if (snappedToVertex) {\r\n              vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\r\n              vertexPixel = map.getPixelFromCoordinate(vertex);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (snapped) {\r\n        vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\r\n      }\r\n    }\r\n    return (\r\n      /** @type {Result} */ ({\r\n        snapped: snapped,\r\n        vertex: vertex,\r\n        vertexPixel: vertexPixel\r\n      })\r\n    );\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @private\r\n   */\r\n  Snap.prototype.updateFeature_ = function updateFeature_ (feature) {\r\n    this.removeFeature(feature, false);\r\n    this.addFeature(feature, false);\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  Snap.prototype.writeCircleGeometry_ = function writeCircleGeometry_ (feature, geometry) {\r\n    var polygon = fromCircle(geometry);\r\n    var coordinates = polygon.getCoordinates()[0];\r\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n      var segment = coordinates.slice(i, i + 2);\r\n      var segmentData = /** @type {SegmentData} */ ({\r\n        feature: feature,\r\n        segment: segment\r\n      });\r\n      this.rBush_.insert(boundingExtent(segment), segmentData);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  Snap.prototype.writeGeometryCollectionGeometry_ = function writeGeometryCollectionGeometry_ (feature, geometry) {\r\n    var geometries = geometry.getGeometriesArray();\r\n    for (var i = 0; i < geometries.length; ++i) {\r\n      var segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\r\n      if (segmentWriter) {\r\n        segmentWriter.call(this, feature, geometries[i]);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  Snap.prototype.writeLineStringGeometry_ = function writeLineStringGeometry_ (feature, geometry) {\r\n    var coordinates = geometry.getCoordinates();\r\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n      var segment = coordinates.slice(i, i + 2);\r\n      var segmentData = /** @type {SegmentData} */ ({\r\n        feature: feature,\r\n        segment: segment\r\n      });\r\n      this.rBush_.insert(boundingExtent(segment), segmentData);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  Snap.prototype.writeMultiLineStringGeometry_ = function writeMultiLineStringGeometry_ (feature, geometry) {\r\n    var lines = geometry.getCoordinates();\r\n    for (var j = 0, jj = lines.length; j < jj; ++j) {\r\n      var coordinates = lines[j];\r\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n        var segment = coordinates.slice(i, i + 2);\r\n        var segmentData = /** @type {SegmentData} */ ({\r\n          feature: feature,\r\n          segment: segment\r\n        });\r\n        this.rBush_.insert(boundingExtent(segment), segmentData);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  Snap.prototype.writeMultiPointGeometry_ = function writeMultiPointGeometry_ (feature, geometry) {\r\n    var points = geometry.getCoordinates();\r\n    for (var i = 0, ii = points.length; i < ii; ++i) {\r\n      var coordinates = points[i];\r\n      var segmentData = /** @type {SegmentData} */ ({\r\n        feature: feature,\r\n        segment: [coordinates, coordinates]\r\n      });\r\n      this.rBush_.insert(geometry.getExtent(), segmentData);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  Snap.prototype.writeMultiPolygonGeometry_ = function writeMultiPolygonGeometry_ (feature, geometry) {\r\n    var polygons = geometry.getCoordinates();\r\n    for (var k = 0, kk = polygons.length; k < kk; ++k) {\r\n      var rings = polygons[k];\r\n      for (var j = 0, jj = rings.length; j < jj; ++j) {\r\n        var coordinates = rings[j];\r\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n          var segment = coordinates.slice(i, i + 2);\r\n          var segmentData = /** @type {SegmentData} */ ({\r\n            feature: feature,\r\n            segment: segment\r\n          });\r\n          this.rBush_.insert(boundingExtent(segment), segmentData);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  Snap.prototype.writePointGeometry_ = function writePointGeometry_ (feature, geometry) {\r\n    var coordinates = geometry.getCoordinates();\r\n    var segmentData = /** @type {SegmentData} */ ({\r\n      feature: feature,\r\n      segment: [coordinates, coordinates]\r\n    });\r\n    this.rBush_.insert(geometry.getExtent(), segmentData);\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  Snap.prototype.writePolygonGeometry_ = function writePolygonGeometry_ (feature, geometry) {\r\n    var rings = geometry.getCoordinates();\r\n    for (var j = 0, jj = rings.length; j < jj; ++j) {\r\n      var coordinates = rings[j];\r\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n        var segment = coordinates.slice(i, i + 2);\r\n        var segmentData = /** @type {SegmentData} */ ({\r\n          feature: feature,\r\n          segment: segment\r\n        });\r\n        this.rBush_.insert(boundingExtent(segment), segmentData);\r\n      }\r\n    }\r\n  };\n\n  return Snap;\n}(PointerInteraction));\r\n\r\n\r\n/**\r\n * Sort segments by distance, helper function\r\n * @param {SegmentData} a The first segment data.\r\n * @param {SegmentData} b The second segment data.\r\n * @return {number} The difference in distance.\r\n * @this {Snap}\r\n */\r\nfunction sortByDistance(a, b) {\r\n  var deltaA = squaredDistanceToSegment(this.pixelCoordinate_, a.segment);\r\n  var deltaB = squaredDistanceToSegment(this.pixelCoordinate_, b.segment);\r\n  return deltaA - deltaB;\r\n}\r\n\r\nexport default Snap;\r\n\r\n//# sourceMappingURL=Snap.js.map","/**\r\n * @module ol/interaction/Translate\r\n */\r\nimport Collection from '../Collection.js';\r\nimport {getChangeEventType} from '../Object.js';\r\nimport {listen} from '../events.js';\r\nimport Event from '../events/Event.js';\r\nimport {TRUE} from '../functions.js';\r\nimport {includes} from '../array.js';\r\nimport PointerInteraction from './Pointer.js';\r\nimport InteractionProperty from './Property.js';\r\n\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nvar TranslateEventType = {\r\n  /**\r\n   * Triggered upon feature translation start.\r\n   * @event TranslateEvent#translatestart\r\n   * @api\r\n   */\r\n  TRANSLATESTART: 'translatestart',\r\n  /**\r\n   * Triggered upon feature translation.\r\n   * @event TranslateEvent#translating\r\n   * @api\r\n   */\r\n  TRANSLATING: 'translating',\r\n  /**\r\n   * Triggered upon feature translation end.\r\n   * @event TranslateEvent#translateend\r\n   * @api\r\n   */\r\n  TRANSLATEEND: 'translateend'\r\n};\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {Collection<import(\"../Feature.js\").default>} [features] Only features contained in this collection will be able to be translated. If\r\n * not specified, all features on the map will be able to be translated.\r\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers] A list of layers from which features should be\r\n * translated. Alternatively, a filter function can be provided. The\r\n * function will be called for each layer in the map and should return\r\n * `true` for layers that you want to be translatable. If the option is\r\n * absent, all visible layers will be considered translatable.\r\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\r\n * will be checked for features. This only works for the canvas renderer and\r\n * not for WebGL.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\r\n * are instances of this type.\r\n */\r\nexport var TranslateEvent = /*@__PURE__*/(function (Event) {\n  function TranslateEvent(type, features, coordinate) {\r\n\r\n    Event.call(this, type);\r\n\r\n    /**\r\n     * The features being translated.\r\n     * @type {Collection<import(\"../Feature.js\").default>}\r\n     * @api\r\n     */\r\n    this.features = features;\r\n\r\n    /**\r\n     * The coordinate of the drag event.\r\n     * @const\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     * @api\r\n     */\r\n    this.coordinate = coordinate;\r\n\r\n  }\n\n  if ( Event ) TranslateEvent.__proto__ = Event;\n  TranslateEvent.prototype = Object.create( Event && Event.prototype );\n  TranslateEvent.prototype.constructor = TranslateEvent;\n\n  return TranslateEvent;\n}(Event));\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Interaction for translating (moving) features.\r\n *\r\n * @fires TranslateEvent\r\n * @api\r\n */\r\nvar Translate = /*@__PURE__*/(function (PointerInteraction) {\n  function Translate(opt_options) {\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    PointerInteraction.call(/** @type {import(\"./Pointer.js\").Options} */ this, (options));\r\n\r\n    /**\r\n     * The last position we translated to.\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     * @private\r\n     */\r\n    this.lastCoordinate_ = null;\r\n\r\n\r\n    /**\r\n     * @type {Collection<import(\"../Feature.js\").default>}\r\n     * @private\r\n     */\r\n    this.features_ = options.features !== undefined ? options.features : null;\r\n\r\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\r\n    var layerFilter;\r\n    if (options.layers) {\r\n      if (typeof options.layers === 'function') {\r\n        layerFilter = options.layers;\r\n      } else {\r\n        var layers = options.layers;\r\n        layerFilter = function(layer) {\r\n          return includes(layers, layer);\r\n        };\r\n      }\r\n    } else {\r\n      layerFilter = TRUE;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\r\n     */\r\n    this.layerFilter_ = layerFilter;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\r\n\r\n    /**\r\n     * @type {import(\"../Feature.js\").default}\r\n     * @private\r\n     */\r\n    this.lastFeature_ = null;\r\n\r\n    listen(this,\r\n      getChangeEventType(InteractionProperty.ACTIVE),\r\n      this.handleActiveChanged_, this);\r\n\r\n  }\n\n  if ( PointerInteraction ) Translate.__proto__ = PointerInteraction;\n  Translate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Translate.prototype.constructor = Translate;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Translate.prototype.handleDownEvent = function handleDownEvent (event) {\r\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\r\n    if (!this.lastCoordinate_ && this.lastFeature_) {\r\n      this.lastCoordinate_ = event.coordinate;\r\n      this.handleMoveEvent(event);\r\n\r\n      var features = this.features_ || new Collection([this.lastFeature_]);\r\n\r\n      this.dispatchEvent(\r\n        new TranslateEvent(\r\n          TranslateEventType.TRANSLATESTART, features,\r\n          event.coordinate));\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Translate.prototype.handleUpEvent = function handleUpEvent (event) {\r\n    if (this.lastCoordinate_) {\r\n      this.lastCoordinate_ = null;\r\n      this.handleMoveEvent(event);\r\n\r\n      var features = this.features_ || new Collection([this.lastFeature_]);\r\n\r\n      this.dispatchEvent(\r\n        new TranslateEvent(\r\n          TranslateEventType.TRANSLATEEND, features,\r\n          event.coordinate));\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Translate.prototype.handleDragEvent = function handleDragEvent (event) {\r\n    if (this.lastCoordinate_) {\r\n      var newCoordinate = event.coordinate;\r\n      var deltaX = newCoordinate[0] - this.lastCoordinate_[0];\r\n      var deltaY = newCoordinate[1] - this.lastCoordinate_[1];\r\n\r\n      var features = this.features_ || new Collection([this.lastFeature_]);\r\n\r\n      features.forEach(function(feature) {\r\n        var geom = feature.getGeometry();\r\n        geom.translate(deltaX, deltaY);\r\n        feature.setGeometry(geom);\r\n      });\r\n\r\n      this.lastCoordinate_ = newCoordinate;\r\n      this.dispatchEvent(\r\n        new TranslateEvent(\r\n          TranslateEventType.TRANSLATING, features,\r\n          newCoordinate));\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Translate.prototype.handleMoveEvent = function handleMoveEvent (event) {\r\n    var elem = event.map.getViewport();\r\n\r\n    // Change the cursor to grab/grabbing if hovering any of the features managed\r\n    // by the interaction\r\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\r\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\r\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\r\n    } else {\r\n      elem.classList.remove('ol-grab', 'ol-grabbing');\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Tests to see if the given coordinates intersects any of our selected\r\n   * features.\r\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\r\n   * @param {import(\"../PluggableMap.js\").default} map Map to test the intersection on.\r\n   * @return {import(\"../Feature.js\").default} Returns the feature found at the specified pixel\r\n   * coordinates.\r\n   * @private\r\n   */\r\n  Translate.prototype.featuresAtPixel_ = function featuresAtPixel_ (pixel, map) {\r\n    return map.forEachFeatureAtPixel(pixel,\r\n      function(feature) {\r\n        if (!this.features_ || includes(this.features_.getArray(), feature)) {\r\n          return feature;\r\n        }\r\n      }.bind(this), {\r\n        layerFilter: this.layerFilter_,\r\n        hitTolerance: this.hitTolerance_\r\n      });\r\n  };\r\n\r\n  /**\r\n   * Returns the Hit-detection tolerance.\r\n   * @returns {number} Hit tolerance in pixels.\r\n   * @api\r\n   */\r\n  Translate.prototype.getHitTolerance = function getHitTolerance () {\r\n    return this.hitTolerance_;\r\n  };\r\n\r\n  /**\r\n   * Hit-detection tolerance. Pixels inside the radius around the given position\r\n   * will be checked for features. This only works for the canvas renderer and\r\n   * not for WebGL.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @api\r\n   */\r\n  Translate.prototype.setHitTolerance = function setHitTolerance (hitTolerance) {\r\n    this.hitTolerance_ = hitTolerance;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Translate.prototype.setMap = function setMap (map) {\r\n    var oldMap = this.getMap();\r\n    PointerInteraction.prototype.setMap.call(this, map);\r\n    this.updateState_(oldMap);\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  Translate.prototype.handleActiveChanged_ = function handleActiveChanged_ () {\r\n    this.updateState_(null);\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../PluggableMap.js\").default} oldMap Old map.\r\n   * @private\r\n   */\r\n  Translate.prototype.updateState_ = function updateState_ (oldMap) {\r\n    var map = this.getMap();\r\n    var active = this.getActive();\r\n    if (!map || !active) {\r\n      map = map || oldMap;\r\n      if (map) {\r\n        var elem = map.getViewport();\r\n        elem.classList.remove('ol-grab', 'ol-grabbing');\r\n      }\r\n    }\r\n  };\n\n  return Translate;\n}(PointerInteraction));\r\n\r\nexport default Translate;\r\n\r\n//# sourceMappingURL=Translate.js.map","/**\r\n * @module ol/layer/Heatmap\r\n */\r\nimport {listen} from '../events.js';\r\nimport {getChangeEventType} from '../Object.js';\r\nimport {createCanvasContext2D} from '../dom.js';\r\nimport VectorLayer from './Vector.js';\r\nimport {clamp} from '../math.js';\r\nimport {assign} from '../obj.js';\r\nimport RenderEventType from '../render/EventType.js';\r\nimport Icon from '../style/Icon.js';\r\nimport Style from '../style/Style.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\r\n * of the heatmap, specified as an array of CSS color strings.\r\n * @property {number} [radius=8] Radius size in pixels.\r\n * @property {number} [blur=15] Blur size in pixels.\r\n * @property {number} [shadow=250] Shadow size in pixels.\r\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\r\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\r\n * should range from 0 to 1 (and values outside will be clamped to that range).\r\n * @property {import(\"./VectorRenderType.js\").default|string} [renderMode='vector'] Render mode for vector layers:\r\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\r\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\r\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\r\n *    animations, but slower performance.\r\n * @property {import(\"../source/Vector.js\").default} [source] Source.\r\n */\r\n\r\n\r\n/**\r\n * @enum {string}\r\n * @private\r\n */\r\nvar Property = {\r\n  BLUR: 'blur',\r\n  GRADIENT: 'gradient',\r\n  RADIUS: 'radius'\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Array<string>}\r\n */\r\nvar DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Layer for rendering vector data as a heatmap.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @fires import(\"../render/Event.js\").RenderEvent\r\n * @api\r\n */\r\nvar Heatmap = /*@__PURE__*/(function (VectorLayer) {\n  function Heatmap(opt_options) {\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    var baseOptions = assign({}, options);\r\n\r\n    delete baseOptions.gradient;\r\n    delete baseOptions.radius;\r\n    delete baseOptions.blur;\r\n    delete baseOptions.shadow;\r\n    delete baseOptions.weight;\r\n    VectorLayer.call(this, baseOptions);\r\n\r\n    /**\r\n     * @private\r\n     * @type {Uint8ClampedArray}\r\n     */\r\n    this.gradient_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.shadow_ = options.shadow !== undefined ? options.shadow : 250;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|undefined}\r\n     */\r\n    this.circleImage_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<Array<import(\"../style/Style.js\").default>>}\r\n     */\r\n    this.styleCache_ = null;\r\n\r\n    listen(this,\r\n      getChangeEventType(Property.GRADIENT),\r\n      this.handleGradientChanged_, this);\r\n\r\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\r\n\r\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\r\n\r\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\r\n\r\n    listen(this,\r\n      getChangeEventType(Property.BLUR),\r\n      this.handleStyleChanged_, this);\r\n    listen(this,\r\n      getChangeEventType(Property.RADIUS),\r\n      this.handleStyleChanged_, this);\r\n\r\n    this.handleStyleChanged_();\r\n\r\n    var weight = options.weight ? options.weight : 'weight';\r\n    var weightFunction;\r\n    if (typeof weight === 'string') {\r\n      weightFunction = function(feature) {\r\n        return feature.get(weight);\r\n      };\r\n    } else {\r\n      weightFunction = weight;\r\n    }\r\n\r\n    this.setStyle(function(feature, resolution) {\r\n      var weight = weightFunction(feature);\r\n      var opacity = weight !== undefined ? clamp(weight, 0, 1) : 1;\r\n      // cast to 8 bits\r\n      var index = (255 * opacity) | 0;\r\n      var style = this.styleCache_[index];\r\n      if (!style) {\r\n        style = [\r\n          new Style({\r\n            image: new Icon({\r\n              opacity: opacity,\r\n              src: this.circleImage_\r\n            })\r\n          })\r\n        ];\r\n        this.styleCache_[index] = style;\r\n      }\r\n      return style;\r\n    }.bind(this));\r\n\r\n    // For performance reasons, don't sort the features before rendering.\r\n    // The render order is not relevant for a heatmap representation.\r\n    this.setRenderOrder(null);\r\n\r\n    listen(this, RenderEventType.RENDER, this.handleRender_, this);\r\n  }\n\n  if ( VectorLayer ) Heatmap.__proto__ = VectorLayer;\n  Heatmap.prototype = Object.create( VectorLayer && VectorLayer.prototype );\n  Heatmap.prototype.constructor = Heatmap;\r\n\r\n  /**\r\n   * @return {string} Data URL for a circle.\r\n   * @private\r\n   */\r\n  Heatmap.prototype.createCircle_ = function createCircle_ () {\r\n    var radius = this.getRadius();\r\n    var blur = this.getBlur();\r\n    var halfSize = radius + blur + 1;\r\n    var size = 2 * halfSize;\r\n    var context = createCanvasContext2D(size, size);\r\n    context.shadowOffsetX = context.shadowOffsetY = this.shadow_;\r\n    context.shadowBlur = blur;\r\n    context.shadowColor = '#000';\r\n    context.beginPath();\r\n    var center = halfSize - this.shadow_;\r\n    context.arc(center, center, radius, 0, Math.PI * 2, true);\r\n    context.fill();\r\n    return context.canvas.toDataURL();\r\n  };\r\n\r\n  /**\r\n   * Return the blur size in pixels.\r\n   * @return {number} Blur size in pixels.\r\n   * @api\r\n   * @observable\r\n   */\r\n  Heatmap.prototype.getBlur = function getBlur () {\r\n    return /** @type {number} */ (this.get(Property.BLUR));\r\n  };\r\n\r\n  /**\r\n   * Return the gradient colors as array of strings.\r\n   * @return {Array<string>} Colors.\r\n   * @api\r\n   * @observable\r\n   */\r\n  Heatmap.prototype.getGradient = function getGradient () {\r\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\r\n  };\r\n\r\n  /**\r\n   * Return the size of the radius in pixels.\r\n   * @return {number} Radius size in pixel.\r\n   * @api\r\n   * @observable\r\n   */\r\n  Heatmap.prototype.getRadius = function getRadius () {\r\n    return /** @type {number} */ (this.get(Property.RADIUS));\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  Heatmap.prototype.handleGradientChanged_ = function handleGradientChanged_ () {\r\n    this.gradient_ = createGradient(this.getGradient());\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  Heatmap.prototype.handleStyleChanged_ = function handleStyleChanged_ () {\r\n    this.circleImage_ = this.createCircle_();\r\n    this.styleCache_ = new Array(256);\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../render/Event.js\").default} event Post compose event\r\n   * @private\r\n   */\r\n  Heatmap.prototype.handleRender_ = function handleRender_ (event) {\r\n    var context = event.context;\r\n    var canvas = context.canvas;\r\n    var image = context.getImageData(0, 0, canvas.width, canvas.height);\r\n    var view8 = image.data;\r\n    for (var i = 0, ii = view8.length; i < ii; i += 4) {\r\n      var alpha = view8[i + 3] * 4;\r\n      if (alpha) {\r\n        view8[i] = this.gradient_[alpha];\r\n        view8[i + 1] = this.gradient_[alpha + 1];\r\n        view8[i + 2] = this.gradient_[alpha + 2];\r\n      }\r\n    }\r\n    context.putImageData(image, 0, 0);\r\n  };\r\n\r\n  /**\r\n   * Set the blur size in pixels.\r\n   * @param {number} blur Blur size in pixels.\r\n   * @api\r\n   * @observable\r\n   */\r\n  Heatmap.prototype.setBlur = function setBlur (blur) {\r\n    this.set(Property.BLUR, blur);\r\n  };\r\n\r\n  /**\r\n   * Set the gradient colors as array of strings.\r\n   * @param {Array<string>} colors Gradient.\r\n   * @api\r\n   * @observable\r\n   */\r\n  Heatmap.prototype.setGradient = function setGradient (colors) {\r\n    this.set(Property.GRADIENT, colors);\r\n  };\r\n\r\n  /**\r\n   * Set the size of the radius in pixels.\r\n   * @param {number} radius Radius size in pixel.\r\n   * @api\r\n   * @observable\r\n   */\r\n  Heatmap.prototype.setRadius = function setRadius (radius) {\r\n    this.set(Property.RADIUS, radius);\r\n  };\n\n  return Heatmap;\n}(VectorLayer));\r\n\r\n\r\n/**\r\n * @param {Array<string>} colors A list of colored.\r\n * @return {Uint8ClampedArray} An array.\r\n */\r\nfunction createGradient(colors) {\r\n  var width = 1;\r\n  var height = 256;\r\n  var context = createCanvasContext2D(width, height);\r\n\r\n  var gradient = context.createLinearGradient(0, 0, width, height);\r\n  var step = 1 / (colors.length - 1);\r\n  for (var i = 0, ii = colors.length; i < ii; ++i) {\r\n    gradient.addColorStop(i * step, colors[i]);\r\n  }\r\n\r\n  context.fillStyle = gradient;\r\n  context.fillRect(0, 0, width, height);\r\n\r\n  return context.getImageData(0, 0, width, height).data;\r\n}\r\n\r\n\r\nexport default Heatmap;\r\n\r\n//# sourceMappingURL=Heatmap.js.map","/**\r\n * @module ol/layer/Image\r\n */\r\nimport LayerType from '../LayerType.js';\r\nimport Layer from './Layer.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\r\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\r\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\r\n * use {@link module:ol/Map#addLayer}.\r\n * @property {import(\"../source/Image.js\").default} [source] Source for this layer.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Server-rendered images that are available for arbitrary extents and\r\n * resolutions.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @fires import(\"../render/Event.js\").RenderEvent\r\n * @api\r\n */\r\nvar ImageLayer = /*@__PURE__*/(function (Layer) {\n  function ImageLayer(opt_options) {\r\n    var options = opt_options ? opt_options : {};\r\n    Layer.call(this, options);\r\n\r\n    /**\r\n     * The layer type.\r\n     * @protected\r\n     * @type {import(\"../LayerType.js\").default}\r\n     */\r\n    this.type = LayerType.IMAGE;\r\n\r\n  }\n\n  if ( Layer ) ImageLayer.__proto__ = Layer;\n  ImageLayer.prototype = Object.create( Layer && Layer.prototype );\n  ImageLayer.prototype.constructor = ImageLayer;\n\n  return ImageLayer;\n}(Layer));\r\n\r\n\r\n/**\r\n * Return the associated {@link module:ol/source/Image source} of the image layer.\r\n * @function\r\n * @return {import(\"../source/Image.js\").default} Source.\r\n * @api\r\n */\r\nImageLayer.prototype.getSource;\r\nexport default ImageLayer;\r\n\r\n//# sourceMappingURL=Image.js.map","/**\r\n * @module ol/layer/TileProperty\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  PRELOAD: 'preload',\r\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\r\n};\r\n\r\n//# sourceMappingURL=TileProperty.js.map","/**\r\n * @module ol/layer/Tile\r\n */\r\nimport LayerType from '../LayerType.js';\r\nimport Layer from './Layer.js';\r\nimport TileProperty from './TileProperty.js';\r\nimport {assign} from '../obj.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\r\n * means no preloading.\r\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\r\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\r\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\r\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\r\n * use {@link module:ol/Map#addLayer}.\r\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * For layer sources that provide pre-rendered, tiled images in grids that are\r\n * organized by zoom levels for specific resolutions.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @api\r\n */\r\nvar TileLayer = /*@__PURE__*/(function (Layer) {\n  function TileLayer(opt_options) {\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    var baseOptions = assign({}, options);\r\n\r\n    delete baseOptions.preload;\r\n    delete baseOptions.useInterimTilesOnError;\r\n    Layer.call(this, baseOptions);\r\n\r\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\r\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\r\n      options.useInterimTilesOnError : true);\r\n\r\n    /**\r\n    * The layer type.\r\n    * @protected\r\n    * @type {import(\"../LayerType.js\").default}\r\n    */\r\n    this.type = LayerType.TILE;\r\n\r\n  }\n\n  if ( Layer ) TileLayer.__proto__ = Layer;\n  TileLayer.prototype = Object.create( Layer && Layer.prototype );\n  TileLayer.prototype.constructor = TileLayer;\r\n\r\n  /**\r\n  * Return the level as number to which we will preload tiles up to.\r\n  * @return {number} The level to preload tiles up to.\r\n  * @observable\r\n  * @api\r\n  */\r\n  TileLayer.prototype.getPreload = function getPreload () {\r\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\r\n  };\r\n\r\n  /**\r\n  * Set the level as number to which we will preload tiles up to.\r\n  * @param {number} preload The level to preload tiles up to.\r\n  * @observable\r\n  * @api\r\n  */\r\n  TileLayer.prototype.setPreload = function setPreload (preload) {\r\n    this.set(TileProperty.PRELOAD, preload);\r\n  };\r\n\r\n  /**\r\n  * Whether we use interim tiles on error.\r\n  * @return {boolean} Use interim tiles on error.\r\n  * @observable\r\n  * @api\r\n  */\r\n  TileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\r\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\r\n  };\r\n\r\n  /**\r\n  * Set whether we use interim tiles on error.\r\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\r\n  * @observable\r\n  * @api\r\n  */\r\n  TileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\r\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\r\n  };\n\n  return TileLayer;\n}(Layer));\r\n\r\n\r\n/**\r\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\r\n * @function\r\n * @return {import(\"../source/Tile.js\").default} Source.\r\n * @api\r\n */\r\nTileLayer.prototype.getSource;\r\n\r\n\r\nexport default TileLayer;\r\n\r\n//# sourceMappingURL=Tile.js.map","/**\r\n * @module ol/layer/VectorTile\r\n */\r\nimport LayerType from '../LayerType.js';\r\nimport {assert} from '../asserts.js';\r\nimport TileProperty from './TileProperty.js';\r\nimport VectorLayer from './Vector.js';\r\nimport VectorTileRenderType from './VectorTileRenderType.js';\r\nimport {assign} from '../obj.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\r\n * features before rendering. By default features are drawn in the order that they are created. Use\r\n * `null` to avoid the sort, but get an undefined draw order.\r\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\r\n * renderer when getting features from the vector tile for the rendering or hit-detection.\r\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\r\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\r\n * point symbol or line width.\r\n * @property {import(\"./VectorTileRenderType.js\").default|string} [renderMode='hybrid'] Render mode for vector tiles:\r\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but point symbols and texts\r\n *    are always rotated with the view and pixels are scaled during zoom animations.\r\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\r\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\r\n *    rotated views.\r\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering even during\r\n *    animations, but slower performance than the other options.\r\n *\r\n * When `declutter` is set to `true`, `'hybrid'` will be used instead of `'image'`.\r\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\r\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\r\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\r\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\r\n * use {@link module:ol/Map#addLayer}.\r\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\r\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\r\n * means higher priority. When set to `true`, a `renderMode` of `'image'` will be overridden with\r\n * `'hybrid'`.\r\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\r\n * {@link module:ol/style} for default style which will be used if this is not defined.\r\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\r\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\r\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\r\n * will be recreated when no animation is active.\r\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\r\n * recreated during interactions. See also `updateWhileAnimating`.\r\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\r\n * means no preloading.\r\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\r\n * features before rendering. By default features are drawn in the order that they are created.\r\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\r\n * {@link module:ol/style} for default style which will be used if this is not defined.\r\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Layer for vector tile data that is rendered client-side.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @param {Options=} opt_options Options.\r\n * @api\r\n */\r\nvar VectorTileLayer = /*@__PURE__*/(function (VectorLayer) {\n  function VectorTileLayer(opt_options) {\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    var renderMode = options.renderMode || VectorTileRenderType.HYBRID;\r\n    assert(renderMode == undefined ||\r\n       renderMode == VectorTileRenderType.IMAGE ||\r\n       renderMode == VectorTileRenderType.HYBRID ||\r\n       renderMode == VectorTileRenderType.VECTOR,\r\n    28); // `renderMode` must be `'image'`, `'hybrid'` or `'vector'`\r\n    if (options.declutter && renderMode == VectorTileRenderType.IMAGE) {\r\n      renderMode = VectorTileRenderType.HYBRID;\r\n    }\r\n    options.renderMode = renderMode;\r\n\r\n    var baseOptions = /** @type {Object} */ (assign({}, options));\r\n    delete baseOptions.preload;\r\n    delete baseOptions.useInterimTilesOnError;\r\n\r\n    VectorLayer.call(/** @type {import(\"./Vector.js\").Options} */ this, (baseOptions));\r\n\r\n    this.setPreload(options.preload ? options.preload : 0);\r\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\r\n      options.useInterimTilesOnError : true);\r\n\r\n    /**\r\n    * The layer type.\r\n    * @protected\r\n    * @type {import(\"../LayerType.js\").default}\r\n    */\r\n    this.type = LayerType.VECTOR_TILE;\r\n\r\n  }\n\n  if ( VectorLayer ) VectorTileLayer.__proto__ = VectorLayer;\n  VectorTileLayer.prototype = Object.create( VectorLayer && VectorLayer.prototype );\n  VectorTileLayer.prototype.constructor = VectorTileLayer;\r\n\r\n  /**\r\n  * Return the level as number to which we will preload tiles up to.\r\n  * @return {number} The level to preload tiles up to.\r\n  * @observable\r\n  * @api\r\n  */\r\n  VectorTileLayer.prototype.getPreload = function getPreload () {\r\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\r\n  };\r\n\r\n  /**\r\n  * Whether we use interim tiles on error.\r\n  * @return {boolean} Use interim tiles on error.\r\n  * @observable\r\n  * @api\r\n  */\r\n  VectorTileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\r\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\r\n  };\r\n\r\n  /**\r\n  * Set the level as number to which we will preload tiles up to.\r\n  * @param {number} preload The level to preload tiles up to.\r\n  * @observable\r\n  * @api\r\n  */\r\n  VectorTileLayer.prototype.setPreload = function setPreload (preload) {\r\n    this.set(TileProperty.PRELOAD, preload);\r\n  };\r\n\r\n  /**\r\n  * Set whether we use interim tiles on error.\r\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\r\n  * @observable\r\n  * @api\r\n  */\r\n  VectorTileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\r\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\r\n  };\n\n  return VectorTileLayer;\n}(VectorLayer));\r\n\r\n\r\n/**\r\n * Return the associated {@link module:ol/source/VectorTile vectortilesource} of the layer.\r\n * @function\r\n * @return {import(\"../source/VectorTile.js\").default} Source.\r\n * @api\r\n */\r\nVectorTileLayer.prototype.getSource;\r\nexport default VectorTileLayer;\r\n\r\n//# sourceMappingURL=VectorTile.js.map","/**\r\n * @module ol/webgl\r\n */\r\n\r\n\r\n/**\r\n * Constants taken from goog.webgl\r\n */\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var ONE = 1;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var SRC_ALPHA = 0x0302;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var COLOR_ATTACHMENT0 = 0x8CE0;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var COLOR_BUFFER_BIT = 0x00004000;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var TRIANGLES = 0x0004;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var TRIANGLE_STRIP = 0x0005;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var ONE_MINUS_SRC_ALPHA = 0x0303;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var ARRAY_BUFFER = 0x8892;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var ELEMENT_ARRAY_BUFFER = 0x8893;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var STREAM_DRAW = 0x88E0;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var STATIC_DRAW = 0x88E4;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var DYNAMIC_DRAW = 0x88E8;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var CULL_FACE = 0x0B44;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var BLEND = 0x0BE2;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var STENCIL_TEST = 0x0B90;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var DEPTH_TEST = 0x0B71;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var SCISSOR_TEST = 0x0C11;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var UNSIGNED_BYTE = 0x1401;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var UNSIGNED_SHORT = 0x1403;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var UNSIGNED_INT = 0x1405;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var FLOAT = 0x1406;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var RGBA = 0x1908;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var FRAGMENT_SHADER = 0x8B30;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var VERTEX_SHADER = 0x8B31;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var LINK_STATUS = 0x8B82;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var LINEAR = 0x2601;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var TEXTURE_MAG_FILTER = 0x2800;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var TEXTURE_MIN_FILTER = 0x2801;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var TEXTURE_WRAP_S = 0x2802;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var TEXTURE_WRAP_T = 0x2803;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var TEXTURE_2D = 0x0DE1;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var TEXTURE0 = 0x84C0;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var CLAMP_TO_EDGE = 0x812F;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var COMPILE_STATUS = 0x8B81;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var FRAMEBUFFER = 0x8D40;\r\n\r\n\r\n/** end of goog.webgl constants\r\n */\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Array<string>}\r\n */\r\nvar CONTEXT_IDS = [\r\n  'experimental-webgl',\r\n  'webgl',\r\n  'webkit-3d',\r\n  'moz-webgl'\r\n];\r\n\r\n\r\n/**\r\n * @param {HTMLCanvasElement} canvas Canvas.\r\n * @param {Object=} opt_attributes Attributes.\r\n * @return {WebGLRenderingContext} WebGL rendering context.\r\n */\r\nexport function getContext(canvas, opt_attributes) {\r\n  var ii = CONTEXT_IDS.length;\r\n  for (var i = 0; i < ii; ++i) {\r\n    try {\r\n      var context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\r\n      if (context) {\r\n        return /** @type {!WebGLRenderingContext} */ (context);\r\n      }\r\n    } catch (e) {\r\n      // pass\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n\r\n/**\r\n * Include debuggable shader sources.  Default is `true`. This should be set to\r\n * `false` for production builds.\r\n * @type {boolean}\r\n */\r\nexport var DEBUG = true;\r\n\r\n\r\n/**\r\n * The maximum supported WebGL texture size in pixels. If WebGL is not\r\n * supported, the value is set to `undefined`.\r\n * @type {number|undefined}\r\n */\r\nvar MAX_TEXTURE_SIZE; // value is set below\r\n\r\n\r\n/**\r\n * List of supported WebGL extensions.\r\n * @type {Array<string>}\r\n */\r\nvar EXTENSIONS; // value is set below\r\n\r\n\r\n/**\r\n * True if both OpenLayers and browser support WebGL.\r\n * @type {boolean}\r\n * @api\r\n */\r\nvar HAS = false;\r\n\r\n//TODO Remove side effects\r\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\r\n  try {\r\n    var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\r\n    var gl = getContext(canvas, {failIfMajorPerformanceCaveat: true});\r\n    if (gl) {\r\n      HAS = true;\r\n      MAX_TEXTURE_SIZE = /** @type {number} */ (gl.getParameter(gl.MAX_TEXTURE_SIZE));\r\n      EXTENSIONS = gl.getSupportedExtensions();\r\n    }\r\n  } catch (e) {\r\n    // pass\r\n  }\r\n}\r\n\r\nexport {HAS, MAX_TEXTURE_SIZE, EXTENSIONS};\r\n\r\n//# sourceMappingURL=webgl.js.map","/**\r\n * @module ol/webgl/Shader\r\n */\r\nimport {abstract} from '../util.js';\r\n\r\n/**\r\n * @abstract\r\n */\r\nvar WebGLShader = function WebGLShader(source) {\r\n\r\n  /**\r\n   * @private\r\n   * @type {string}\r\n   */\r\n  this.source_ = source;\r\n\r\n};\r\n\r\n/**\r\n * @return {boolean} Is animated?\r\n */\r\nWebGLShader.prototype.isAnimated = function isAnimated () {\r\n  return false;\r\n};\r\n\r\n/**\r\n * @abstract\r\n * @return {number} Type.\r\n */\r\nWebGLShader.prototype.getType = function getType () {\r\n  return abstract();\r\n};\r\n\r\n/**\r\n * @return {string} Source.\r\n */\r\nWebGLShader.prototype.getSource = function getSource () {\r\n  return this.source_;\r\n};\r\n\r\n\r\nexport default WebGLShader;\r\n\r\n//# sourceMappingURL=Shader.js.map","/**\r\n * @module ol/webgl/Fragment\r\n */\r\n\r\nimport {FRAGMENT_SHADER} from '../webgl.js';\r\nimport WebGLShader from '../webgl/Shader.js';\r\n\r\nvar WebGLFragment = /*@__PURE__*/(function (WebGLShader) {\n  function WebGLFragment(source) {\r\n    WebGLShader.call(this, source);\r\n  }\n\n  if ( WebGLShader ) WebGLFragment.__proto__ = WebGLShader;\n  WebGLFragment.prototype = Object.create( WebGLShader && WebGLShader.prototype );\n  WebGLFragment.prototype.constructor = WebGLFragment;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLFragment.prototype.getType = function getType () {\r\n    return FRAGMENT_SHADER;\r\n  };\n\n  return WebGLFragment;\n}(WebGLShader));\r\n\r\n\r\nexport default WebGLFragment;\r\n\r\n//# sourceMappingURL=Fragment.js.map","/**\r\n * @module ol/webgl/Vertex\r\n */\r\n\r\nimport {VERTEX_SHADER} from '../webgl.js';\r\nimport WebGLShader from '../webgl/Shader.js';\r\n\r\nvar WebGLVertex = /*@__PURE__*/(function (WebGLShader) {\n  function WebGLVertex(source) {\r\n    WebGLShader.call(this, source);\r\n  }\n\n  if ( WebGLShader ) WebGLVertex.__proto__ = WebGLShader;\n  WebGLVertex.prototype = Object.create( WebGLShader && WebGLShader.prototype );\n  WebGLVertex.prototype.constructor = WebGLVertex;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLVertex.prototype.getType = function getType () {\r\n    return VERTEX_SHADER;\r\n  };\n\n  return WebGLVertex;\n}(WebGLShader));\r\n\r\n\r\nexport default WebGLVertex;\r\n\r\n//# sourceMappingURL=Vertex.js.map","/**\r\n * @module ol/render/webgl/circlereplay/defaultshader\r\n */\r\n// This file is automatically generated, do not edit.\r\n// Run `make shaders` to generate, and commit the result.\r\n\r\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\r\nimport WebGLFragment from '../../../webgl/Fragment.js';\r\nimport WebGLVertex from '../../../webgl/Vertex.js';\r\n\r\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\r\n  'precision mediump float;\\nvarying vec2 v_center;\\nvarying vec2 v_offset;\\nvarying float v_halfWidth;\\nvarying float v_pixelRatio;\\n\\n\\n\\nuniform float u_opacity;\\nuniform vec4 u_fillColor;\\nuniform vec4 u_strokeColor;\\nuniform vec2 u_size;\\n\\nvoid main(void) {\\n  vec2 windowCenter = vec2((v_center.x + 1.0) / 2.0 * u_size.x * v_pixelRatio,\\n      (v_center.y + 1.0) / 2.0 * u_size.y * v_pixelRatio);\\n  vec2 windowOffset = vec2((v_offset.x + 1.0) / 2.0 * u_size.x * v_pixelRatio,\\n      (v_offset.y + 1.0) / 2.0 * u_size.y * v_pixelRatio);\\n  float radius = length(windowCenter - windowOffset);\\n  float dist = length(windowCenter - gl_FragCoord.xy);\\n  if (dist > radius + v_halfWidth) {\\n    if (u_strokeColor.a == 0.0) {\\n      gl_FragColor = u_fillColor;\\n    } else {\\n      gl_FragColor = u_strokeColor;\\n    }\\n    gl_FragColor.a = gl_FragColor.a - (dist - (radius + v_halfWidth));\\n  } else if (u_fillColor.a == 0.0) {\\n    // Hooray, no fill, just stroke. We can use real antialiasing.\\n    gl_FragColor = u_strokeColor;\\n    if (dist < radius - v_halfWidth) {\\n      gl_FragColor.a = gl_FragColor.a - (radius - v_halfWidth - dist);\\n    }\\n  } else {\\n    gl_FragColor = u_fillColor;\\n    float strokeDist = radius - v_halfWidth;\\n    float antialias = 2.0 * v_pixelRatio;\\n    if (dist > strokeDist) {\\n      gl_FragColor = u_strokeColor;\\n    } else if (dist >= strokeDist - antialias) {\\n      float step = smoothstep(strokeDist - antialias, strokeDist, dist);\\n      gl_FragColor = mix(u_fillColor, u_strokeColor, step);\\n    }\\n  }\\n  gl_FragColor.a = gl_FragColor.a * u_opacity;\\n  if (gl_FragColor.a <= 0.0) {\\n    discard;\\n  }\\n}\\n' :\r\n  'precision mediump float;varying vec2 a;varying vec2 b;varying float c;varying float d;uniform float m;uniform vec4 n;uniform vec4 o;uniform vec2 p;void main(void){vec2 windowCenter=vec2((a.x+1.0)/2.0*p.x*d,(a.y+1.0)/2.0*p.y*d);vec2 windowOffset=vec2((b.x+1.0)/2.0*p.x*d,(b.y+1.0)/2.0*p.y*d);float radius=length(windowCenter-windowOffset);float dist=length(windowCenter-gl_FragCoord.xy);if(dist>radius+c){if(o.a==0.0){gl_FragColor=n;}else{gl_FragColor=o;}gl_FragColor.a=gl_FragColor.a-(dist-(radius+c));}else if(n.a==0.0){gl_FragColor=o;if(dist<radius-c){gl_FragColor.a=gl_FragColor.a-(radius-c-dist);}} else{gl_FragColor=n;float strokeDist=radius-c;float antialias=2.0*d;if(dist>strokeDist){gl_FragColor=o;}else if(dist>=strokeDist-antialias){float step=smoothstep(strokeDist-antialias,strokeDist,dist);gl_FragColor=mix(n,o,step);}} gl_FragColor.a=gl_FragColor.a*m;if(gl_FragColor.a<=0.0){discard;}}');\r\n\r\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\r\n  'varying vec2 v_center;\\nvarying vec2 v_offset;\\nvarying float v_halfWidth;\\nvarying float v_pixelRatio;\\n\\n\\nattribute vec2 a_position;\\nattribute float a_instruction;\\nattribute float a_radius;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\nuniform float u_lineWidth;\\nuniform float u_pixelRatio;\\n\\nvoid main(void) {\\n  mat4 offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  v_center = vec4(u_projectionMatrix * vec4(a_position, 0.0, 1.0)).xy;\\n  v_pixelRatio = u_pixelRatio;\\n  float lineWidth = u_lineWidth * u_pixelRatio;\\n  v_halfWidth = lineWidth / 2.0;\\n  if (lineWidth == 0.0) {\\n    lineWidth = 2.0 * u_pixelRatio;\\n  }\\n  vec2 offset;\\n  // Radius with anitaliasing (roughly).\\n  float radius = a_radius + 3.0 * u_pixelRatio;\\n  // Until we get gl_VertexID in WebGL, we store an instruction.\\n  if (a_instruction == 0.0) {\\n    // Offsetting the edges of the triangle by lineWidth / 2 is necessary, however\\n    // we should also leave some space for the antialiasing, thus we offset by lineWidth.\\n    offset = vec2(-1.0, 1.0);\\n  } else if (a_instruction == 1.0) {\\n    offset = vec2(-1.0, -1.0);\\n  } else if (a_instruction == 2.0) {\\n    offset = vec2(1.0, -1.0);\\n  } else {\\n    offset = vec2(1.0, 1.0);\\n  }\\n\\n  gl_Position = u_projectionMatrix * vec4(a_position + offset * radius, 0.0, 1.0) +\\n      offsetMatrix * vec4(offset * lineWidth, 0.0, 0.0);\\n  v_offset = vec4(u_projectionMatrix * vec4(a_position.x + a_radius, a_position.y,\\n      0.0, 1.0)).xy;\\n\\n  if (distance(v_center, v_offset) > 20000.0) {\\n    gl_Position = vec4(v_center, 0.0, 1.0);\\n  }\\n}\\n\\n\\n' :\r\n  'varying vec2 a;varying vec2 b;varying float c;varying float d;attribute vec2 e;attribute float f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;uniform float k;uniform float l;void main(void){mat4 offsetMatrix=i*j;a=vec4(h*vec4(e,0.0,1.0)).xy;d=l;float lineWidth=k*l;c=lineWidth/2.0;if(lineWidth==0.0){lineWidth=2.0*l;}vec2 offset;float radius=g+3.0*l;if(f==0.0){offset=vec2(-1.0,1.0);}else if(f==1.0){offset=vec2(-1.0,-1.0);}else if(f==2.0){offset=vec2(1.0,-1.0);}else{offset=vec2(1.0,1.0);}gl_Position=h*vec4(e+offset*radius,0.0,1.0)+offsetMatrix*vec4(offset*lineWidth,0.0,0.0);b=vec4(h*vec4(e.x+g,e.y,0.0,1.0)).xy;if(distance(a,b)>20000.0){gl_Position=vec4(a,0.0,1.0);}}');\r\n\r\n//# sourceMappingURL=defaultshader.js.map","/**\r\n * @module ol/render/webgl/circlereplay/defaultshader/Locations\r\n */\r\n// This file is automatically generated, do not edit\r\n// Run `make shaders` to generate, and commit the result.\r\n\r\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\r\n\r\nvar Locations = function Locations(gl, program) {\r\n\r\n  /**\r\n   * @type {WebGLUniformLocation}\r\n   */\r\n  this.u_projectionMatrix = gl.getUniformLocation(\r\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\r\n\r\n  /**\r\n   * @type {WebGLUniformLocation}\r\n   */\r\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\r\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\r\n\r\n  /**\r\n   * @type {WebGLUniformLocation}\r\n   */\r\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\r\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\r\n\r\n  /**\r\n   * @type {WebGLUniformLocation}\r\n   */\r\n  this.u_lineWidth = gl.getUniformLocation(\r\n    program, DEBUG_WEBGL ? 'u_lineWidth' : 'k');\r\n\r\n  /**\r\n   * @type {WebGLUniformLocation}\r\n   */\r\n  this.u_pixelRatio = gl.getUniformLocation(\r\n    program, DEBUG_WEBGL ? 'u_pixelRatio' : 'l');\r\n\r\n  /**\r\n   * @type {WebGLUniformLocation}\r\n   */\r\n  this.u_opacity = gl.getUniformLocation(\r\n    program, DEBUG_WEBGL ? 'u_opacity' : 'm');\r\n\r\n  /**\r\n   * @type {WebGLUniformLocation}\r\n   */\r\n  this.u_fillColor = gl.getUniformLocation(\r\n    program, DEBUG_WEBGL ? 'u_fillColor' : 'n');\r\n\r\n  /**\r\n   * @type {WebGLUniformLocation}\r\n   */\r\n  this.u_strokeColor = gl.getUniformLocation(\r\n    program, DEBUG_WEBGL ? 'u_strokeColor' : 'o');\r\n\r\n  /**\r\n   * @type {WebGLUniformLocation}\r\n   */\r\n  this.u_size = gl.getUniformLocation(\r\n    program, DEBUG_WEBGL ? 'u_size' : 'p');\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.a_position = gl.getAttribLocation(\r\n    program, DEBUG_WEBGL ? 'a_position' : 'e');\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.a_instruction = gl.getAttribLocation(\r\n    program, DEBUG_WEBGL ? 'a_instruction' : 'f');\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.a_radius = gl.getAttribLocation(\r\n    program, DEBUG_WEBGL ? 'a_radius' : 'g');\r\n\r\n};\r\n\r\nexport default Locations;\r\n\r\n//# sourceMappingURL=Locations.js.map","/**\r\n * @module ol/vec/mat4\r\n */\r\n\r\n\r\n/**\r\n * @return {Array<number>} 4x4 matrix representing a 3D identity transform.\r\n */\r\nexport function create() {\r\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\r\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\r\n * @return {Array<number>} 2D transformation matrix as flattened 4x4 matrix.\r\n */\r\nexport function fromTransform(mat4, transform) {\r\n  mat4[0] = transform[0];\r\n  mat4[1] = transform[1];\r\n  mat4[4] = transform[2];\r\n  mat4[5] = transform[3];\r\n  mat4[12] = transform[4];\r\n  mat4[13] = transform[5];\r\n  return mat4;\r\n}\r\n\r\n//# sourceMappingURL=mat4.js.map","/**\r\n * @module ol/render/webgl/Replay\r\n */\r\nimport {abstract} from '../../util.js';\r\nimport {getCenter} from '../../extent.js';\r\nimport VectorContext from '../VectorContext.js';\r\nimport {\r\n  create as createTransform,\r\n  reset as resetTransform,\r\n  rotate as rotateTransform,\r\n  scale as scaleTransform,\r\n  translate as translateTransform\r\n} from '../../transform.js';\r\nimport {create, fromTransform} from '../../vec/mat4.js';\r\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, TRIANGLES,\r\n  UNSIGNED_INT, UNSIGNED_SHORT} from '../../webgl.js';\r\n\r\nvar WebGLReplay = /*@__PURE__*/(function (VectorContext) {\n  function WebGLReplay(tolerance, maxExtent) {\r\n    VectorContext.call(this);\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.tolerance = tolerance;\r\n\r\n    /**\r\n     * @protected\r\n     * @const\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.maxExtent = maxExtent;\r\n\r\n    /**\r\n     * The origin of the coordinate system for the point coordinates sent to\r\n     * the GPU. To eliminate jitter caused by precision problems in the GPU\r\n     * we use the \"Rendering Relative to Eye\" technique described in the \"3D\r\n     * Engine Design for Virtual Globes\" book.\r\n     * @protected\r\n     * @type {import(\"../../coordinate.js\").Coordinate}\r\n     */\r\n    this.origin = getCenter(maxExtent);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.projectionMatrix_ = createTransform();\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.offsetRotateMatrix_ = createTransform();\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.offsetScaleMatrix_ = createTransform();\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.tmpMat4_ = create();\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array<number>}\r\n     */\r\n    this.indices = [];\r\n\r\n    /**\r\n     * @protected\r\n     * @type {?import(\"../../webgl/Buffer.js\").default}\r\n     */\r\n    this.indicesBuffer = null;\r\n\r\n    /**\r\n     * Start index per feature (the index).\r\n     * @protected\r\n     * @type {Array<number>}\r\n     */\r\n    this.startIndices = [];\r\n\r\n    /**\r\n     * Start index per feature (the feature).\r\n     * @protected\r\n     * @type {Array<import(\"../../Feature.js\").default|import(\"../Feature.js\").default>}\r\n     */\r\n    this.startIndicesFeature = [];\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array<number>}\r\n     */\r\n    this.vertices = [];\r\n\r\n    /**\r\n     * @protected\r\n     * @type {?import(\"../../webgl/Buffer.js\").default}\r\n     */\r\n    this.verticesBuffer = null;\r\n\r\n    /**\r\n     * Optional parameter for PolygonReplay instances.\r\n     * @protected\r\n     * @type {import(\"./LineStringReplay.js\").default|undefined}\r\n     */\r\n    this.lineStringReplay = undefined;\r\n\r\n  }\n\n  if ( VectorContext ) WebGLReplay.__proto__ = VectorContext;\n  WebGLReplay.prototype = Object.create( VectorContext && VectorContext.prototype );\n  WebGLReplay.prototype.constructor = WebGLReplay;\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {import(\"../../webgl/Context.js\").default} context WebGL context.\r\n   * @return {function()} Delete resources function.\r\n   */\r\n  WebGLReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\r\n    return abstract();\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\r\n   */\r\n  WebGLReplay.prototype.finish = function finish (context) {\r\n    abstract();\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @protected\r\n   * @param {WebGLRenderingContext} gl gl.\r\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\r\n   * @param {import(\"../../size.js\").Size} size Size.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @return {import(\"./circlereplay/defaultshader/Locations.js\").default|\r\n     import(\"./linestringreplay/defaultshader/Locations.js\").default|\r\n     import(\"./polygonreplay/defaultshader/Locations.js\").default|\r\n     import(\"./texturereplay/defaultshader/Locations.js\").default} Locations.\r\n   */\r\n  WebGLReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {\r\n    return abstract();\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @protected\r\n   * @param {WebGLRenderingContext} gl gl.\r\n   * @param {import(\"./circlereplay/defaultshader/Locations.js\").default|\r\n     import(\"./linestringreplay/defaultshader/Locations.js\").default|\r\n     import(\"./polygonreplay/defaultshader/Locations.js\").default|\r\n     import(\"./texturereplay/defaultshader/Locations.js\").default} locations Locations.\r\n   */\r\n  WebGLReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {\r\n    abstract();\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @protected\r\n   * @param {WebGLRenderingContext} gl gl.\r\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\r\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\r\n   * @param {boolean} hitDetection Hit detection mode.\r\n   */\r\n  WebGLReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {\r\n    abstract();\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @protected\r\n   * @param {WebGLRenderingContext} gl gl.\r\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\r\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\r\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\r\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Hit extent: Only features intersecting this extent are checked.\r\n   * @return {T|undefined} Callback result.\r\n   * @template T\r\n   */\r\n  WebGLReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\r\n    return abstract();\r\n  };\r\n\r\n  /**\r\n   * @protected\r\n   * @param {WebGLRenderingContext} gl gl.\r\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\r\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\r\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\r\n   * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\r\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Hit extent: Only features intersecting this extent are checked.\r\n   * @return {T|undefined} Callback result.\r\n   * @template T\r\n   */\r\n  WebGLReplay.prototype.drawHitDetectionReplay = function drawHitDetectionReplay (gl, context, skippedFeaturesHash, featureCallback, oneByOne, opt_hitExtent) {\r\n    if (!oneByOne) {\r\n      // draw all hit-detection features in \"once\" (by texture group)\r\n      return this.drawHitDetectionReplayAll(gl, context,\r\n        skippedFeaturesHash, featureCallback);\r\n    } else {\r\n      // draw hit-detection features one by one\r\n      return this.drawHitDetectionReplayOneByOne(gl, context,\r\n        skippedFeaturesHash, featureCallback, opt_hitExtent);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @protected\r\n   * @param {WebGLRenderingContext} gl gl.\r\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\r\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\r\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\r\n   * @return {T|undefined} Callback result.\r\n   * @template T\r\n   */\r\n  WebGLReplay.prototype.drawHitDetectionReplayAll = function drawHitDetectionReplayAll (gl, context, skippedFeaturesHash, featureCallback) {\r\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n    this.drawReplay(gl, context, skippedFeaturesHash, true);\r\n\r\n    var result = featureCallback(null);\r\n    if (result) {\r\n      return result;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\r\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} rotation Rotation.\r\n   * @param {import(\"../../size.js\").Size} size Size.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {number} opacity Global opacity.\r\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\r\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\r\n   * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\r\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Hit extent: Only features intersecting this extent are checked.\r\n   * @return {T|undefined} Callback result.\r\n   * @template T\r\n   */\r\n  WebGLReplay.prototype.replay = function replay (\r\n    context,\r\n    center,\r\n    resolution,\r\n    rotation,\r\n    size,\r\n    pixelRatio,\r\n    opacity,\r\n    skippedFeaturesHash,\r\n    featureCallback,\r\n    oneByOne,\r\n    opt_hitExtent\r\n  ) {\r\n    var gl = context.getGL();\r\n    var tmpStencil, tmpStencilFunc, tmpStencilMaskVal, tmpStencilRef, tmpStencilMask,\r\n        tmpStencilOpFail, tmpStencilOpPass, tmpStencilOpZFail;\r\n\r\n    if (this.lineStringReplay) {\r\n      tmpStencil = gl.isEnabled(gl.STENCIL_TEST);\r\n      tmpStencilFunc = gl.getParameter(gl.STENCIL_FUNC);\r\n      tmpStencilMaskVal = gl.getParameter(gl.STENCIL_VALUE_MASK);\r\n      tmpStencilRef = gl.getParameter(gl.STENCIL_REF);\r\n      tmpStencilMask = gl.getParameter(gl.STENCIL_WRITEMASK);\r\n      tmpStencilOpFail = gl.getParameter(gl.STENCIL_FAIL);\r\n      tmpStencilOpPass = gl.getParameter(gl.STENCIL_PASS_DEPTH_PASS);\r\n      tmpStencilOpZFail = gl.getParameter(gl.STENCIL_PASS_DEPTH_FAIL);\r\n\r\n      gl.enable(gl.STENCIL_TEST);\r\n      gl.clear(gl.STENCIL_BUFFER_BIT);\r\n      gl.stencilMask(255);\r\n      gl.stencilFunc(gl.ALWAYS, 1, 255);\r\n      gl.stencilOp(gl.KEEP, gl.KEEP, gl.REPLACE);\r\n\r\n      this.lineStringReplay.replay(context,\r\n        center, resolution, rotation, size, pixelRatio,\r\n        opacity, skippedFeaturesHash,\r\n        featureCallback, oneByOne, opt_hitExtent);\r\n\r\n      gl.stencilMask(0);\r\n      gl.stencilFunc(gl.NOTEQUAL, 1, 255);\r\n    }\r\n\r\n    context.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\r\n\r\n    context.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\r\n\r\n    var locations = this.setUpProgram(gl, context, size, pixelRatio);\r\n\r\n    // set the \"uniform\" values\r\n    var projectionMatrix = resetTransform(this.projectionMatrix_);\r\n    scaleTransform(projectionMatrix, 2 / (resolution * size[0]), 2 / (resolution * size[1]));\r\n    rotateTransform(projectionMatrix, -rotation);\r\n    translateTransform(projectionMatrix, -(center[0] - this.origin[0]), -(center[1] - this.origin[1]));\r\n\r\n    var offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\r\n    scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\r\n\r\n    var offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\r\n    if (rotation !== 0) {\r\n      rotateTransform(offsetRotateMatrix, -rotation);\r\n    }\r\n\r\n    gl.uniformMatrix4fv(locations.u_projectionMatrix, false,\r\n      fromTransform(this.tmpMat4_, projectionMatrix));\r\n    gl.uniformMatrix4fv(locations.u_offsetScaleMatrix, false,\r\n      fromTransform(this.tmpMat4_, offsetScaleMatrix));\r\n    gl.uniformMatrix4fv(locations.u_offsetRotateMatrix, false,\r\n      fromTransform(this.tmpMat4_, offsetRotateMatrix));\r\n    gl.uniform1f(locations.u_opacity, opacity);\r\n\r\n    // draw!\r\n    var result;\r\n    if (featureCallback === undefined) {\r\n      this.drawReplay(gl, context, skippedFeaturesHash, false);\r\n    } else {\r\n      // draw feature by feature for the hit-detection\r\n      result = this.drawHitDetectionReplay(gl, context, skippedFeaturesHash,\r\n        featureCallback, oneByOne, opt_hitExtent);\r\n    }\r\n\r\n    // disable the vertex attrib arrays\r\n    this.shutDownProgram(gl, locations);\r\n\r\n    if (this.lineStringReplay) {\r\n      if (!tmpStencil) {\r\n        gl.disable(gl.STENCIL_TEST);\r\n      }\r\n      gl.clear(gl.STENCIL_BUFFER_BIT);\r\n      gl.stencilFunc(/** @type {number} */ (tmpStencilFunc),\r\n        /** @type {number} */ (tmpStencilRef), /** @type {number} */ (tmpStencilMaskVal));\r\n      gl.stencilMask(/** @type {number} */ (tmpStencilMask));\r\n      gl.stencilOp(/** @type {number} */ (tmpStencilOpFail),\r\n        /** @type {number} */ (tmpStencilOpZFail), /** @type {number} */ (tmpStencilOpPass));\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  /**\r\n   * @protected\r\n   * @param {WebGLRenderingContext} gl gl.\r\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\r\n   * @param {number} start Start index.\r\n   * @param {number} end End index.\r\n   */\r\n  WebGLReplay.prototype.drawElements = function drawElements (gl, context, start, end) {\r\n    var elementType = context.hasOESElementIndexUint ?\r\n      UNSIGNED_INT : UNSIGNED_SHORT;\r\n    var elementSize = context.hasOESElementIndexUint ? 4 : 2;\r\n\r\n    var numItems = end - start;\r\n    var offsetInBytes = start * elementSize;\r\n    gl.drawElements(TRIANGLES, numItems, elementType, offsetInBytes);\r\n  };\n\n  return WebGLReplay;\n}(VectorContext));\r\n\r\n\r\nexport default WebGLReplay;\r\n\r\n//# sourceMappingURL=Replay.js.map","/**\r\n * @module ol/render/webgl\r\n */\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nexport var DEFAULT_FONT = '10px sans-serif';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {import(\"../color.js\").Color}\r\n */\r\nexport var DEFAULT_FILLSTYLE = [0.0, 0.0, 0.0, 1.0];\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nexport var DEFAULT_LINECAP = 'round';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Array<number>}\r\n */\r\nexport var DEFAULT_LINEDASH = [];\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var DEFAULT_LINEDASHOFFSET = 0;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nexport var DEFAULT_LINEJOIN = 'round';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var DEFAULT_MITERLIMIT = 10;\r\n\r\n/**\r\n * @const\r\n * @type {import(\"../color.js\").Color}\r\n */\r\nexport var DEFAULT_STROKESTYLE = [0.0, 0.0, 0.0, 1.0];\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var DEFAULT_TEXTALIGN = 0.5;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var DEFAULT_TEXTBASELINE = 0.5;\r\n\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var DEFAULT_LINEWIDTH = 1;\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nexport var EPSILON = Number.EPSILON || 2.220446049250313e-16;\r\n\r\n/**\r\n * Calculates the orientation of a triangle based on the determinant method.\r\n * @param {number} x1 First X coordinate.\r\n * @param {number} y1 First Y coordinate.\r\n * @param {number} x2 Second X coordinate.\r\n * @param {number} y2 Second Y coordinate.\r\n * @param {number} x3 Third X coordinate.\r\n * @param {number} y3 Third Y coordinate.\r\n * @return {boolean|undefined} Triangle is clockwise.\r\n */\r\nexport var triangleIsCounterClockwise = function(x1, y1, x2, y2, x3, y3) {\r\n  var area = (x2 - x1) * (y3 - y1) - (x3 - x1) * (y2 - y1);\r\n  return (area <= EPSILON && area >= -EPSILON) ?\r\n    undefined : area > 0;\r\n};\r\n\r\n\r\n//# sourceMappingURL=webgl.js.map","/**\r\n * @module ol/webgl/Buffer\r\n */\r\nimport {STATIC_DRAW, STREAM_DRAW, DYNAMIC_DRAW} from '../webgl.js';\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nvar BufferUsage = {\r\n  STATIC_DRAW: STATIC_DRAW,\r\n  STREAM_DRAW: STREAM_DRAW,\r\n  DYNAMIC_DRAW: DYNAMIC_DRAW\r\n};\r\n\r\n\r\nvar WebGLBuffer = function WebGLBuffer(opt_arr, opt_usage) {\r\n\r\n  /**\r\n   * @private\r\n   * @type {Array<number>}\r\n   */\r\n  this.arr_ = opt_arr !== undefined ? opt_arr : [];\r\n\r\n  /**\r\n   * @private\r\n   * @type {number}\r\n   */\r\n  this.usage_ = opt_usage !== undefined ? opt_usage : BufferUsage.STATIC_DRAW;\r\n\r\n};\r\n\r\n/**\r\n * @return {Array<number>} Array.\r\n */\r\nWebGLBuffer.prototype.getArray = function getArray () {\r\n  return this.arr_;\r\n};\r\n\r\n/**\r\n * @return {number} Usage.\r\n */\r\nWebGLBuffer.prototype.getUsage = function getUsage () {\r\n  return this.usage_;\r\n};\r\n\r\nexport default WebGLBuffer;\r\n\r\n//# sourceMappingURL=Buffer.js.map","/**\r\n * @module ol/render/webgl/CircleReplay\r\n */\r\nimport {getUid} from '../../util.js';\r\nimport {equals} from '../../array.js';\r\nimport {asArray} from '../../color.js';\r\nimport {intersects} from '../../extent.js';\r\nimport {isEmpty} from '../../obj.js';\r\nimport {translate} from '../../geom/flat/transform.js';\r\nimport {fragment, vertex} from './circlereplay/defaultshader.js';\r\nimport Locations from './circlereplay/defaultshader/Locations.js';\r\nimport WebGLReplay from './Replay.js';\r\nimport {DEFAULT_LINEDASH, DEFAULT_LINEDASHOFFSET, DEFAULT_STROKESTYLE,\r\n  DEFAULT_FILLSTYLE, DEFAULT_LINEWIDTH} from '../webgl.js';\r\nimport {FLOAT} from '../../webgl.js';\r\nimport WebGLBuffer from '../../webgl/Buffer.js';\r\n\r\nvar WebGLCircleReplay = /*@__PURE__*/(function (WebGLReplay) {\n  function WebGLCircleReplay(tolerance, maxExtent) {\r\n    WebGLReplay.call(this, tolerance, maxExtent);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./circlereplay/defaultshader/Locations.js\").default}\r\n     */\r\n    this.defaultLocations_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<Array<Array<number>|number>>}\r\n     */\r\n    this.styles_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.styleIndices_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.radius_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {{fillColor: (Array<number>|null),\r\n     *         strokeColor: (Array<number>|null),\r\n     *         lineDash: Array<number>,\r\n     *         lineDashOffset: (number|undefined),\r\n     *         lineWidth: (number|undefined),\r\n     *         changed: boolean}|null}\r\n     */\r\n    this.state_ = {\r\n      fillColor: null,\r\n      strokeColor: null,\r\n      lineDash: null,\r\n      lineDashOffset: undefined,\r\n      lineWidth: undefined,\r\n      changed: false\r\n    };\r\n\r\n  }\n\n  if ( WebGLReplay ) WebGLCircleReplay.__proto__ = WebGLReplay;\n  WebGLCircleReplay.prototype = Object.create( WebGLReplay && WebGLReplay.prototype );\n  WebGLCircleReplay.prototype.constructor = WebGLCircleReplay;\r\n\r\n  /**\r\n   * @private\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   */\r\n  WebGLCircleReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\r\n    var numVertices = this.vertices.length;\r\n    var numIndices = this.indices.length;\r\n    var n = numVertices / 4;\r\n    var i, ii;\r\n    for (i = offset, ii = end; i < ii; i += stride) {\r\n      this.vertices[numVertices++] = flatCoordinates[i];\r\n      this.vertices[numVertices++] = flatCoordinates[i + 1];\r\n      this.vertices[numVertices++] = 0;\r\n      this.vertices[numVertices++] = this.radius_;\r\n\r\n      this.vertices[numVertices++] = flatCoordinates[i];\r\n      this.vertices[numVertices++] = flatCoordinates[i + 1];\r\n      this.vertices[numVertices++] = 1;\r\n      this.vertices[numVertices++] = this.radius_;\r\n\r\n      this.vertices[numVertices++] = flatCoordinates[i];\r\n      this.vertices[numVertices++] = flatCoordinates[i + 1];\r\n      this.vertices[numVertices++] = 2;\r\n      this.vertices[numVertices++] = this.radius_;\r\n\r\n      this.vertices[numVertices++] = flatCoordinates[i];\r\n      this.vertices[numVertices++] = flatCoordinates[i + 1];\r\n      this.vertices[numVertices++] = 3;\r\n      this.vertices[numVertices++] = this.radius_;\r\n\r\n      this.indices[numIndices++] = n;\r\n      this.indices[numIndices++] = n + 1;\r\n      this.indices[numIndices++] = n + 2;\r\n\r\n      this.indices[numIndices++] = n + 2;\r\n      this.indices[numIndices++] = n + 3;\r\n      this.indices[numIndices++] = n;\r\n\r\n      n += 4;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLCircleReplay.prototype.drawCircle = function drawCircle (circleGeometry, feature) {\r\n    var radius = circleGeometry.getRadius();\r\n    var stride = circleGeometry.getStride();\r\n    if (radius) {\r\n      this.startIndices.push(this.indices.length);\r\n      this.startIndicesFeature.push(feature);\r\n      if (this.state_.changed) {\r\n        this.styleIndices_.push(this.indices.length);\r\n        this.state_.changed = false;\r\n      }\r\n\r\n      this.radius_ = radius;\r\n      var flatCoordinates = circleGeometry.getFlatCoordinates();\r\n      flatCoordinates = translate(flatCoordinates, 0, 2,\r\n        stride, -this.origin[0], -this.origin[1]);\r\n      this.drawCoordinates_(flatCoordinates, 0, 2, stride);\r\n    } else {\r\n      if (this.state_.changed) {\r\n        this.styles_.pop();\r\n        if (this.styles_.length) {\r\n          var lastState = this.styles_[this.styles_.length - 1];\r\n          this.state_.fillColor = /** @type {Array<number>} */ (lastState[0]);\r\n          this.state_.strokeColor = /** @type {Array<number>} */ (lastState[1]);\r\n          this.state_.lineWidth = /** @type {number} */ (lastState[2]);\r\n          this.state_.changed = false;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   **/\r\n  WebGLCircleReplay.prototype.finish = function finish (context) {\r\n    // create, bind, and populate the vertices buffer\r\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\r\n\r\n    // create, bind, and populate the indices buffer\r\n    this.indicesBuffer = new WebGLBuffer(this.indices);\r\n\r\n    this.startIndices.push(this.indices.length);\r\n\r\n    //Clean up, if there is nothing to draw\r\n    if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\r\n      this.styles_ = [];\r\n    }\r\n\r\n    this.vertices = null;\r\n    this.indices = null;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLCircleReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\r\n    // We only delete our stuff here. The shaders and the program may\r\n    // be used by other CircleReplay instances (for other layers). And\r\n    // they will be deleted when disposing of the import(\"../../webgl/Context.js\").WebGLContext\r\n    // object.\r\n    var verticesBuffer = this.verticesBuffer;\r\n    var indicesBuffer = this.indicesBuffer;\r\n    return function() {\r\n      context.deleteBuffer(verticesBuffer);\r\n      context.deleteBuffer(indicesBuffer);\r\n    };\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLCircleReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {\r\n    // get the program\r\n    var program = context.getProgram(fragment, vertex);\r\n\r\n    // get the locations\r\n    var locations;\r\n    if (!this.defaultLocations_) {\r\n      locations = new Locations(gl, program);\r\n      this.defaultLocations_ = locations;\r\n    } else {\r\n      locations = this.defaultLocations_;\r\n    }\r\n\r\n    context.useProgram(program);\r\n\r\n    // enable the vertex attrib arrays\r\n    gl.enableVertexAttribArray(locations.a_position);\r\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\r\n      false, 16, 0);\r\n\r\n    gl.enableVertexAttribArray(locations.a_instruction);\r\n    gl.vertexAttribPointer(locations.a_instruction, 1, FLOAT,\r\n      false, 16, 8);\r\n\r\n    gl.enableVertexAttribArray(locations.a_radius);\r\n    gl.vertexAttribPointer(locations.a_radius, 1, FLOAT,\r\n      false, 16, 12);\r\n\r\n    // Enable renderer specific uniforms.\r\n    gl.uniform2fv(locations.u_size, size);\r\n    gl.uniform1f(locations.u_pixelRatio, pixelRatio);\r\n\r\n    return locations;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLCircleReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {\r\n    gl.disableVertexAttribArray(locations.a_position);\r\n    gl.disableVertexAttribArray(locations.a_instruction);\r\n    gl.disableVertexAttribArray(locations.a_radius);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLCircleReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {\r\n    if (!isEmpty(skippedFeaturesHash)) {\r\n      this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\r\n    } else {\r\n      //Draw by style groups to minimize drawElements() calls.\r\n      var i, start, end, nextStyle;\r\n      end = this.startIndices[this.startIndices.length - 1];\r\n      for (i = this.styleIndices_.length - 1; i >= 0; --i) {\r\n        start = this.styleIndices_[i];\r\n        nextStyle = this.styles_[i];\r\n        this.setFillStyle_(gl, /** @type {Array<number>} */ (nextStyle[0]));\r\n        this.setStrokeStyle_(gl, /** @type {Array<number>} */ (nextStyle[1]),\r\n          /** @type {number} */ (nextStyle[2]));\r\n        this.drawElements(gl, context, start, end);\r\n        end = start;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLCircleReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\r\n    var i, start, end, nextStyle, groupStart, feature, featureIndex;\r\n    featureIndex = this.startIndices.length - 2;\r\n    end = this.startIndices[featureIndex + 1];\r\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\r\n      nextStyle = this.styles_[i];\r\n      this.setFillStyle_(gl, /** @type {Array<number>} */ (nextStyle[0]));\r\n      this.setStrokeStyle_(gl, /** @type {Array<number>} */ (nextStyle[1]),\r\n        /** @type {number} */ (nextStyle[2]));\r\n      groupStart = this.styleIndices_[i];\r\n\r\n      while (featureIndex >= 0 &&\r\n          this.startIndices[featureIndex] >= groupStart) {\r\n        start = this.startIndices[featureIndex];\r\n        feature = this.startIndicesFeature[featureIndex];\r\n\r\n        if (skippedFeaturesHash[getUid(feature)] === undefined &&\r\n            feature.getGeometry() &&\r\n            (opt_hitExtent === undefined || intersects(\r\n              /** @type {Array<number>} */ (opt_hitExtent),\r\n              feature.getGeometry().getExtent()))) {\r\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n          this.drawElements(gl, context, start, end);\r\n\r\n          var result = featureCallback(feature);\r\n\r\n          if (result) {\r\n            return result;\r\n          }\r\n\r\n        }\r\n        featureIndex--;\r\n        end = start;\r\n      }\r\n    }\r\n    return undefined;\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {WebGLRenderingContext} gl gl.\r\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\r\n   * @param {Object} skippedFeaturesHash Ids of features to skip.\r\n   */\r\n  WebGLCircleReplay.prototype.drawReplaySkipping_ = function drawReplaySkipping_ (gl, context, skippedFeaturesHash) {\r\n    var i, start, end, nextStyle, groupStart, feature, featureIndex, featureStart;\r\n    featureIndex = this.startIndices.length - 2;\r\n    end = start = this.startIndices[featureIndex + 1];\r\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\r\n      nextStyle = this.styles_[i];\r\n      this.setFillStyle_(gl, /** @type {Array<number>} */ (nextStyle[0]));\r\n      this.setStrokeStyle_(gl, /** @type {Array<number>} */ (nextStyle[1]),\r\n        /** @type {number} */ (nextStyle[2]));\r\n      groupStart = this.styleIndices_[i];\r\n\r\n      while (featureIndex >= 0 &&\r\n          this.startIndices[featureIndex] >= groupStart) {\r\n        featureStart = this.startIndices[featureIndex];\r\n        feature = this.startIndicesFeature[featureIndex];\r\n\r\n        if (skippedFeaturesHash[getUid(feature)]) {\r\n          if (start !== end) {\r\n            this.drawElements(gl, context, start, end);\r\n          }\r\n          end = featureStart;\r\n        }\r\n        featureIndex--;\r\n        start = featureStart;\r\n      }\r\n      if (start !== end) {\r\n        this.drawElements(gl, context, start, end);\r\n      }\r\n      start = end = groupStart;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {WebGLRenderingContext} gl gl.\r\n   * @param {Array<number>} color Color.\r\n   */\r\n  WebGLCircleReplay.prototype.setFillStyle_ = function setFillStyle_ (gl, color) {\r\n    gl.uniform4fv(this.defaultLocations_.u_fillColor, color);\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {WebGLRenderingContext} gl gl.\r\n   * @param {Array<number>} color Color.\r\n   * @param {number} lineWidth Line width.\r\n   */\r\n  WebGLCircleReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (gl, color, lineWidth) {\r\n    gl.uniform4fv(this.defaultLocations_.u_strokeColor, color);\r\n    gl.uniform1f(this.defaultLocations_.u_lineWidth, lineWidth);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLCircleReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\r\n    var strokeStyleColor, strokeStyleWidth;\r\n    if (strokeStyle) {\r\n      var strokeStyleLineDash = strokeStyle.getLineDash();\r\n      this.state_.lineDash = strokeStyleLineDash ?\r\n        strokeStyleLineDash : DEFAULT_LINEDASH;\r\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\r\n      this.state_.lineDashOffset = strokeStyleLineDashOffset ?\r\n        strokeStyleLineDashOffset : DEFAULT_LINEDASHOFFSET;\r\n      strokeStyleColor = strokeStyle.getColor();\r\n      if (!(strokeStyleColor instanceof CanvasGradient) &&\r\n          !(strokeStyleColor instanceof CanvasPattern)) {\r\n        strokeStyleColor = asArray(strokeStyleColor).map(function(c, i) {\r\n          return i != 3 ? c / 255 : c;\r\n        }) || DEFAULT_STROKESTYLE;\r\n      } else {\r\n        strokeStyleColor = DEFAULT_STROKESTYLE;\r\n      }\r\n      strokeStyleWidth = strokeStyle.getWidth();\r\n      strokeStyleWidth = strokeStyleWidth !== undefined ?\r\n        strokeStyleWidth : DEFAULT_LINEWIDTH;\r\n    } else {\r\n      strokeStyleColor = [0, 0, 0, 0];\r\n      strokeStyleWidth = 0;\r\n    }\r\n    var fillStyleColor = fillStyle ? fillStyle.getColor() : [0, 0, 0, 0];\r\n    if (!(fillStyleColor instanceof CanvasGradient) &&\r\n        !(fillStyleColor instanceof CanvasPattern)) {\r\n      fillStyleColor = asArray(fillStyleColor).map(function(c, i) {\r\n        return i != 3 ? c / 255 : c;\r\n      }) || DEFAULT_FILLSTYLE;\r\n    } else {\r\n      fillStyleColor = DEFAULT_FILLSTYLE;\r\n    }\r\n    if (!this.state_.strokeColor || !equals(this.state_.strokeColor, strokeStyleColor) ||\r\n        !this.state_.fillColor || !equals(this.state_.fillColor, fillStyleColor) ||\r\n        this.state_.lineWidth !== strokeStyleWidth) {\r\n      this.state_.changed = true;\r\n      this.state_.fillColor = fillStyleColor;\r\n      this.state_.strokeColor = strokeStyleColor;\r\n      this.state_.lineWidth = strokeStyleWidth;\r\n      this.styles_.push([fillStyleColor, strokeStyleColor, strokeStyleWidth]);\r\n    }\r\n  };\n\n  return WebGLCircleReplay;\n}(WebGLReplay));\r\n\r\n\r\nexport default WebGLCircleReplay;\r\n\r\n//# sourceMappingURL=CircleReplay.js.map","/**\r\n * @module ol/render/webgl/texturereplay/defaultshader\r\n */\r\n// This file is automatically generated, do not edit.\r\n// Run `make shaders` to generate, and commit the result.\r\n\r\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\r\nimport WebGLFragment from '../../../webgl/Fragment.js';\r\nimport WebGLVertex from '../../../webgl/Vertex.js';\r\n\r\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\r\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\nvarying float v_opacity;\\n\\nuniform float u_opacity;\\nuniform sampler2D u_image;\\n\\nvoid main(void) {\\n  vec4 texColor = texture2D(u_image, v_texCoord);\\n  gl_FragColor.rgb = texColor.rgb;\\n  float alpha = texColor.a * v_opacity * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\r\n  'precision mediump float;varying vec2 a;varying float b;uniform float k;uniform sampler2D l;void main(void){vec4 texColor=texture2D(l,a);gl_FragColor.rgb=texColor.rgb;float alpha=texColor.a*b*k;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\r\n\r\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\r\n  'varying vec2 v_texCoord;\\nvarying float v_opacity;\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\nattribute vec2 a_offsets;\\nattribute float a_opacity;\\nattribute float a_rotateWithView;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\n\\nvoid main(void) {\\n  mat4 offsetMatrix = u_offsetScaleMatrix;\\n  if (a_rotateWithView == 1.0) {\\n    offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  }\\n  vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n  v_texCoord = a_texCoord;\\n  v_opacity = a_opacity;\\n}\\n\\n\\n' :\r\n  'varying vec2 a;varying float b;attribute vec2 c;attribute vec2 d;attribute vec2 e;attribute float f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;void main(void){mat4 offsetMatrix=i;if(g==1.0){offsetMatrix=i*j;}vec4 offsets=offsetMatrix*vec4(e,0.0,0.0);gl_Position=h*vec4(c,0.0,1.0)+offsets;a=d;b=f;}');\r\n\r\n//# sourceMappingURL=defaultshader.js.map","/**\r\n * @module ol/render/webgl/texturereplay/defaultshader/Locations\r\n */\r\n// This file is automatically generated, do not edit\r\n// Run `make shaders` to generate, and commit the result.\r\n\r\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\r\n\r\nvar Locations = function Locations(gl, program) {\r\n\r\n  /**\r\n   * @type {WebGLUniformLocation}\r\n   */\r\n  this.u_projectionMatrix = gl.getUniformLocation(\r\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\r\n\r\n  /**\r\n   * @type {WebGLUniformLocation}\r\n   */\r\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\r\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\r\n\r\n  /**\r\n   * @type {WebGLUniformLocation}\r\n   */\r\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\r\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\r\n\r\n  /**\r\n   * @type {WebGLUniformLocation}\r\n   */\r\n  this.u_opacity = gl.getUniformLocation(\r\n    program, DEBUG_WEBGL ? 'u_opacity' : 'k');\r\n\r\n  /**\r\n   * @type {WebGLUniformLocation}\r\n   */\r\n  this.u_image = gl.getUniformLocation(\r\n    program, DEBUG_WEBGL ? 'u_image' : 'l');\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.a_position = gl.getAttribLocation(\r\n    program, DEBUG_WEBGL ? 'a_position' : 'c');\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.a_texCoord = gl.getAttribLocation(\r\n    program, DEBUG_WEBGL ? 'a_texCoord' : 'd');\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.a_offsets = gl.getAttribLocation(\r\n    program, DEBUG_WEBGL ? 'a_offsets' : 'e');\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.a_opacity = gl.getAttribLocation(\r\n    program, DEBUG_WEBGL ? 'a_opacity' : 'f');\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.a_rotateWithView = gl.getAttribLocation(\r\n    program, DEBUG_WEBGL ? 'a_rotateWithView' : 'g');\r\n\r\n};\r\n\r\nexport default Locations;\r\n\r\n//# sourceMappingURL=Locations.js.map","/**\r\n * @module ol/webgl/ContextEventType\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  LOST: 'webglcontextlost',\r\n  RESTORED: 'webglcontextrestored'\r\n};\r\n\r\n//# sourceMappingURL=ContextEventType.js.map","/**\r\n * @module ol/webgl/Context\r\n */\r\nimport {getUid} from '../util.js';\r\nimport {EXTENSIONS as WEBGL_EXTENSIONS} from '../webgl.js';\r\nimport Disposable from '../Disposable.js';\r\nimport {includes} from '../array.js';\r\nimport {listen, unlistenAll} from '../events.js';\r\nimport {clear} from '../obj.js';\r\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, TEXTURE_2D, TEXTURE_WRAP_S, TEXTURE_WRAP_T} from '../webgl.js';\r\nimport ContextEventType from '../webgl/ContextEventType.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} BufferCacheEntry\r\n * @property {import(\"./Buffer.js\").default} buf\r\n * @property {WebGLBuffer} buffer\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * A WebGL context for accessing low-level WebGL capabilities.\r\n */\r\nvar WebGLContext = /*@__PURE__*/(function (Disposable) {\n  function WebGLContext(canvas, gl) {\r\n    Disposable.call(this);\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement}\r\n     */\r\n    this.canvas_ = canvas;\r\n\r\n    /**\r\n     * @private\r\n     * @type {WebGLRenderingContext}\r\n     */\r\n    this.gl_ = gl;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, BufferCacheEntry>}\r\n     */\r\n    this.bufferCache_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, WebGLShader>}\r\n     */\r\n    this.shaderCache_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, WebGLProgram>}\r\n     */\r\n    this.programCache_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {WebGLProgram}\r\n     */\r\n    this.currentProgram_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {WebGLFramebuffer}\r\n     */\r\n    this.hitDetectionFramebuffer_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {WebGLTexture}\r\n     */\r\n    this.hitDetectionTexture_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {WebGLRenderbuffer}\r\n     */\r\n    this.hitDetectionRenderbuffer_ = null;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    this.hasOESElementIndexUint = includes(WEBGL_EXTENSIONS, 'OES_element_index_uint');\r\n\r\n    // use the OES_element_index_uint extension if available\r\n    if (this.hasOESElementIndexUint) {\r\n      gl.getExtension('OES_element_index_uint');\r\n    }\r\n\r\n    listen(this.canvas_, ContextEventType.LOST,\r\n      this.handleWebGLContextLost, this);\r\n    listen(this.canvas_, ContextEventType.RESTORED,\r\n      this.handleWebGLContextRestored, this);\r\n\r\n  }\n\n  if ( Disposable ) WebGLContext.__proto__ = Disposable;\n  WebGLContext.prototype = Object.create( Disposable && Disposable.prototype );\n  WebGLContext.prototype.constructor = WebGLContext;\r\n\r\n  /**\r\n   * Just bind the buffer if it's in the cache. Otherwise create\r\n   * the WebGL buffer, bind it, populate it, and add an entry to\r\n   * the cache.\r\n   * @param {number} target Target.\r\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\r\n   */\r\n  WebGLContext.prototype.bindBuffer = function bindBuffer (target, buf) {\r\n    var gl = this.getGL();\r\n    var arr = buf.getArray();\r\n    var bufferKey = getUid(buf);\r\n    if (bufferKey in this.bufferCache_) {\r\n      var bufferCacheEntry = this.bufferCache_[bufferKey];\r\n      gl.bindBuffer(target, bufferCacheEntry.buffer);\r\n    } else {\r\n      var buffer = gl.createBuffer();\r\n      gl.bindBuffer(target, buffer);\r\n      var /** @type {ArrayBufferView} */ arrayBuffer;\r\n      if (target == ARRAY_BUFFER) {\r\n        arrayBuffer = new Float32Array(arr);\r\n      } else if (target == ELEMENT_ARRAY_BUFFER) {\r\n        arrayBuffer = this.hasOESElementIndexUint ?\r\n          new Uint32Array(arr) : new Uint16Array(arr);\r\n      }\r\n      gl.bufferData(target, arrayBuffer, buf.getUsage());\r\n      this.bufferCache_[bufferKey] = {\r\n        buf: buf,\r\n        buffer: buffer\r\n      };\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\r\n   */\r\n  WebGLContext.prototype.deleteBuffer = function deleteBuffer (buf) {\r\n    var gl = this.getGL();\r\n    var bufferKey = getUid(buf);\r\n    var bufferCacheEntry = this.bufferCache_[bufferKey];\r\n    if (!gl.isContextLost()) {\r\n      gl.deleteBuffer(bufferCacheEntry.buffer);\r\n    }\r\n    delete this.bufferCache_[bufferKey];\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLContext.prototype.disposeInternal = function disposeInternal () {\r\n    unlistenAll(this.canvas_);\r\n    var gl = this.getGL();\r\n    if (!gl.isContextLost()) {\r\n      for (var key in this.bufferCache_) {\r\n        gl.deleteBuffer(this.bufferCache_[key].buffer);\r\n      }\r\n      for (var key$1 in this.programCache_) {\r\n        gl.deleteProgram(this.programCache_[key$1]);\r\n      }\r\n      for (var key$2 in this.shaderCache_) {\r\n        gl.deleteShader(this.shaderCache_[key$2]);\r\n      }\r\n      // delete objects for hit-detection\r\n      gl.deleteFramebuffer(this.hitDetectionFramebuffer_);\r\n      gl.deleteRenderbuffer(this.hitDetectionRenderbuffer_);\r\n      gl.deleteTexture(this.hitDetectionTexture_);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @return {HTMLCanvasElement} Canvas.\r\n   */\r\n  WebGLContext.prototype.getCanvas = function getCanvas () {\r\n    return this.canvas_;\r\n  };\r\n\r\n  /**\r\n   * Get the WebGL rendering context\r\n   * @return {WebGLRenderingContext} The rendering context.\r\n   * @api\r\n   */\r\n  WebGLContext.prototype.getGL = function getGL () {\r\n    return this.gl_;\r\n  };\r\n\r\n  /**\r\n   * Get the frame buffer for hit detection.\r\n   * @return {WebGLFramebuffer} The hit detection frame buffer.\r\n   */\r\n  WebGLContext.prototype.getHitDetectionFramebuffer = function getHitDetectionFramebuffer () {\r\n    if (!this.hitDetectionFramebuffer_) {\r\n      this.initHitDetectionFramebuffer_();\r\n    }\r\n    return this.hitDetectionFramebuffer_;\r\n  };\r\n\r\n  /**\r\n   * Get shader from the cache if it's in the cache. Otherwise, create\r\n   * the WebGL shader, compile it, and add entry to cache.\r\n   * @param {import(\"./Shader.js\").default} shaderObject Shader object.\r\n   * @return {WebGLShader} Shader.\r\n   */\r\n  WebGLContext.prototype.getShader = function getShader (shaderObject) {\r\n    var shaderKey = getUid(shaderObject);\r\n    if (shaderKey in this.shaderCache_) {\r\n      return this.shaderCache_[shaderKey];\r\n    } else {\r\n      var gl = this.getGL();\r\n      var shader = gl.createShader(shaderObject.getType());\r\n      gl.shaderSource(shader, shaderObject.getSource());\r\n      gl.compileShader(shader);\r\n      this.shaderCache_[shaderKey] = shader;\r\n      return shader;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Get the program from the cache if it's in the cache. Otherwise create\r\n   * the WebGL program, attach the shaders to it, and add an entry to the\r\n   * cache.\r\n   * @param {import(\"./Fragment.js\").default} fragmentShaderObject Fragment shader.\r\n   * @param {import(\"./Vertex.js\").default} vertexShaderObject Vertex shader.\r\n   * @return {WebGLProgram} Program.\r\n   */\r\n  WebGLContext.prototype.getProgram = function getProgram (fragmentShaderObject, vertexShaderObject) {\r\n    var programKey = getUid(fragmentShaderObject) + '/' + getUid(vertexShaderObject);\r\n    if (programKey in this.programCache_) {\r\n      return this.programCache_[programKey];\r\n    } else {\r\n      var gl = this.getGL();\r\n      var program = gl.createProgram();\r\n      gl.attachShader(program, this.getShader(fragmentShaderObject));\r\n      gl.attachShader(program, this.getShader(vertexShaderObject));\r\n      gl.linkProgram(program);\r\n      this.programCache_[programKey] = program;\r\n      return program;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * FIXME empty description for jsdoc\r\n   */\r\n  WebGLContext.prototype.handleWebGLContextLost = function handleWebGLContextLost () {\r\n    clear(this.bufferCache_);\r\n    clear(this.shaderCache_);\r\n    clear(this.programCache_);\r\n    this.currentProgram_ = null;\r\n    this.hitDetectionFramebuffer_ = null;\r\n    this.hitDetectionTexture_ = null;\r\n    this.hitDetectionRenderbuffer_ = null;\r\n  };\r\n\r\n  /**\r\n   * FIXME empty description for jsdoc\r\n   */\r\n  WebGLContext.prototype.handleWebGLContextRestored = function handleWebGLContextRestored () {\r\n  };\r\n\r\n  /**\r\n   * Creates a 1x1 pixel framebuffer for the hit-detection.\r\n   * @private\r\n   */\r\n  WebGLContext.prototype.initHitDetectionFramebuffer_ = function initHitDetectionFramebuffer_ () {\r\n    var gl = this.gl_;\r\n    var framebuffer = gl.createFramebuffer();\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n\r\n    var texture = createEmptyTexture(gl, 1, 1);\r\n    var renderbuffer = gl.createRenderbuffer();\r\n    gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\r\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, 1, 1);\r\n    gl.framebufferTexture2D(\r\n      gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\r\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT,\r\n      gl.RENDERBUFFER, renderbuffer);\r\n\r\n    gl.bindTexture(gl.TEXTURE_2D, null);\r\n    gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n    this.hitDetectionFramebuffer_ = framebuffer;\r\n    this.hitDetectionTexture_ = texture;\r\n    this.hitDetectionRenderbuffer_ = renderbuffer;\r\n  };\r\n\r\n  /**\r\n   * Use a program.  If the program is already in use, this will return `false`.\r\n   * @param {WebGLProgram} program Program.\r\n   * @return {boolean} Changed.\r\n   * @api\r\n   */\r\n  WebGLContext.prototype.useProgram = function useProgram (program) {\r\n    if (program == this.currentProgram_) {\r\n      return false;\r\n    } else {\r\n      var gl = this.getGL();\r\n      gl.useProgram(program);\r\n      this.currentProgram_ = program;\r\n      return true;\r\n    }\r\n  };\n\n  return WebGLContext;\n}(Disposable));\r\n\r\n\r\n/**\r\n * @param {WebGLRenderingContext} gl WebGL rendering context.\r\n * @param {number=} opt_wrapS wrapS.\r\n * @param {number=} opt_wrapT wrapT.\r\n * @return {WebGLTexture} The texture.\r\n */\r\nfunction createTextureInternal(gl, opt_wrapS, opt_wrapT) {\r\n  var texture = gl.createTexture();\r\n  gl.bindTexture(gl.TEXTURE_2D, texture);\r\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n\r\n  if (opt_wrapS !== undefined) {\r\n    gl.texParameteri(\r\n      TEXTURE_2D, TEXTURE_WRAP_S, opt_wrapS);\r\n  }\r\n  if (opt_wrapT !== undefined) {\r\n    gl.texParameteri(\r\n      TEXTURE_2D, TEXTURE_WRAP_T, opt_wrapT);\r\n  }\r\n\r\n  return texture;\r\n}\r\n\r\n\r\n/**\r\n * @param {WebGLRenderingContext} gl WebGL rendering context.\r\n * @param {number} width Width.\r\n * @param {number} height Height.\r\n * @param {number=} opt_wrapS wrapS.\r\n * @param {number=} opt_wrapT wrapT.\r\n * @return {WebGLTexture} The texture.\r\n */\r\nexport function createEmptyTexture(gl, width, height, opt_wrapS, opt_wrapT) {\r\n  var texture = createTextureInternal(gl, opt_wrapS, opt_wrapT);\r\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n  return texture;\r\n}\r\n\r\n\r\n/**\r\n * @param {WebGLRenderingContext} gl WebGL rendering context.\r\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\r\n * @param {number=} opt_wrapS wrapS.\r\n * @param {number=} opt_wrapT wrapT.\r\n * @return {WebGLTexture} The texture.\r\n */\r\nexport function createTexture(gl, image, opt_wrapS, opt_wrapT) {\r\n  var texture = createTextureInternal(gl, opt_wrapS, opt_wrapT);\r\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n  return texture;\r\n}\r\n\r\nexport default WebGLContext;\r\n\r\n//# sourceMappingURL=Context.js.map","/**\r\n * @module ol/render/webgl/TextureReplay\r\n */\r\nimport {abstract, getUid} from '../../util.js';\r\nimport {intersects} from '../../extent.js';\r\nimport {isEmpty} from '../../obj.js';\r\nimport {fragment, vertex} from './texturereplay/defaultshader.js';\r\nimport Locations from './texturereplay/defaultshader/Locations.js';\r\nimport WebGLReplay from './Replay.js';\r\nimport {CLAMP_TO_EDGE, FLOAT, TEXTURE_2D} from '../../webgl.js';\r\nimport {createTexture} from '../../webgl/Context.js';\r\n\r\nvar WebGLTextureReplay = /*@__PURE__*/(function (WebGLReplay) {\n  function WebGLTextureReplay(tolerance, maxExtent) {\r\n    WebGLReplay.call(this, tolerance, maxExtent);\r\n\r\n    /**\r\n     * @type {number|undefined}\r\n     * @protected\r\n     */\r\n    this.anchorX = undefined;\r\n\r\n    /**\r\n     * @type {number|undefined}\r\n     * @protected\r\n     */\r\n    this.anchorY = undefined;\r\n\r\n    /**\r\n     * @type {Array<number>}\r\n     * @protected\r\n     */\r\n    this.groupIndices = [];\r\n\r\n    /**\r\n     * @type {Array<number>}\r\n     * @protected\r\n     */\r\n    this.hitDetectionGroupIndices = [];\r\n\r\n    /**\r\n     * @type {number|undefined}\r\n     * @protected\r\n     */\r\n    this.height = undefined;\r\n\r\n    /**\r\n     * @type {number|undefined}\r\n     * @protected\r\n     */\r\n    this.imageHeight = undefined;\r\n\r\n    /**\r\n     * @type {number|undefined}\r\n     * @protected\r\n     */\r\n    this.imageWidth = undefined;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"./texturereplay/defaultshader/Locations.js\").default}\r\n     */\r\n    this.defaultLocations = null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number|undefined}\r\n     */\r\n    this.opacity = undefined;\r\n\r\n    /**\r\n     * @type {number|undefined}\r\n     * @protected\r\n     */\r\n    this.originX = undefined;\r\n\r\n    /**\r\n     * @type {number|undefined}\r\n     * @protected\r\n     */\r\n    this.originY = undefined;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.rotateWithView = undefined;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number|undefined}\r\n     */\r\n    this.rotation = undefined;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number|undefined}\r\n     */\r\n    this.scale = undefined;\r\n\r\n    /**\r\n     * @type {number|undefined}\r\n     * @protected\r\n     */\r\n    this.width = undefined;\r\n  }\n\n  if ( WebGLReplay ) WebGLTextureReplay.__proto__ = WebGLReplay;\n  WebGLTextureReplay.prototype = Object.create( WebGLReplay && WebGLReplay.prototype );\n  WebGLTextureReplay.prototype.constructor = WebGLTextureReplay;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLTextureReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\r\n    var verticesBuffer = this.verticesBuffer;\r\n    var indicesBuffer = this.indicesBuffer;\r\n    var textures = this.getTextures(true);\r\n    var gl = context.getGL();\r\n    return function() {\r\n      if (!gl.isContextLost()) {\r\n        var i, ii;\r\n        for (i = 0, ii = textures.length; i < ii; ++i) {\r\n          gl.deleteTexture(textures[i]);\r\n        }\r\n      }\r\n      context.deleteBuffer(verticesBuffer);\r\n      context.deleteBuffer(indicesBuffer);\r\n    };\r\n  };\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   * @return {number} My end.\r\n   * @protected\r\n   */\r\n  WebGLTextureReplay.prototype.drawCoordinates = function drawCoordinates (flatCoordinates, offset, end, stride) {\r\n    var anchorX = /** @type {number} */ (this.anchorX);\r\n    var anchorY = /** @type {number} */ (this.anchorY);\r\n    var height = /** @type {number} */ (this.height);\r\n    var imageHeight = /** @type {number} */ (this.imageHeight);\r\n    var imageWidth = /** @type {number} */ (this.imageWidth);\r\n    var opacity = /** @type {number} */ (this.opacity);\r\n    var originX = /** @type {number} */ (this.originX);\r\n    var originY = /** @type {number} */ (this.originY);\r\n    var rotateWithView = this.rotateWithView ? 1.0 : 0.0;\r\n    // this.rotation_ is anti-clockwise, but rotation is clockwise\r\n    var rotation = /** @type {number} */ (-this.rotation);\r\n    var scale = /** @type {number} */ (this.scale);\r\n    var width = /** @type {number} */ (this.width);\r\n    var cos = Math.cos(rotation);\r\n    var sin = Math.sin(rotation);\r\n    var numIndices = this.indices.length;\r\n    var numVertices = this.vertices.length;\r\n    var i, n, offsetX, offsetY, x, y;\r\n    for (i = offset; i < end; i += stride) {\r\n      x = flatCoordinates[i] - this.origin[0];\r\n      y = flatCoordinates[i + 1] - this.origin[1];\r\n\r\n      // There are 4 vertices per [x, y] point, one for each corner of the\r\n      // rectangle we're going to draw. We'd use 1 vertex per [x, y] point if\r\n      // WebGL supported Geometry Shaders (which can emit new vertices), but that\r\n      // is not currently the case.\r\n      //\r\n      // And each vertex includes 8 values: the x and y coordinates, the x and\r\n      // y offsets used to calculate the position of the corner, the u and\r\n      // v texture coordinates for the corner, the opacity, and whether the\r\n      // the image should be rotated with the view (rotateWithView).\r\n\r\n      n = numVertices / 8;\r\n\r\n      // bottom-left corner\r\n      offsetX = -scale * anchorX;\r\n      offsetY = -scale * (height - anchorY);\r\n      this.vertices[numVertices++] = x;\r\n      this.vertices[numVertices++] = y;\r\n      this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\r\n      this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\r\n      this.vertices[numVertices++] = originX / imageWidth;\r\n      this.vertices[numVertices++] = (originY + height) / imageHeight;\r\n      this.vertices[numVertices++] = opacity;\r\n      this.vertices[numVertices++] = rotateWithView;\r\n\r\n      // bottom-right corner\r\n      offsetX = scale * (width - anchorX);\r\n      offsetY = -scale * (height - anchorY);\r\n      this.vertices[numVertices++] = x;\r\n      this.vertices[numVertices++] = y;\r\n      this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\r\n      this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\r\n      this.vertices[numVertices++] = (originX + width) / imageWidth;\r\n      this.vertices[numVertices++] = (originY + height) / imageHeight;\r\n      this.vertices[numVertices++] = opacity;\r\n      this.vertices[numVertices++] = rotateWithView;\r\n\r\n      // top-right corner\r\n      offsetX = scale * (width - anchorX);\r\n      offsetY = scale * anchorY;\r\n      this.vertices[numVertices++] = x;\r\n      this.vertices[numVertices++] = y;\r\n      this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\r\n      this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\r\n      this.vertices[numVertices++] = (originX + width) / imageWidth;\r\n      this.vertices[numVertices++] = originY / imageHeight;\r\n      this.vertices[numVertices++] = opacity;\r\n      this.vertices[numVertices++] = rotateWithView;\r\n\r\n      // top-left corner\r\n      offsetX = -scale * anchorX;\r\n      offsetY = scale * anchorY;\r\n      this.vertices[numVertices++] = x;\r\n      this.vertices[numVertices++] = y;\r\n      this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\r\n      this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\r\n      this.vertices[numVertices++] = originX / imageWidth;\r\n      this.vertices[numVertices++] = originY / imageHeight;\r\n      this.vertices[numVertices++] = opacity;\r\n      this.vertices[numVertices++] = rotateWithView;\r\n\r\n      this.indices[numIndices++] = n;\r\n      this.indices[numIndices++] = n + 1;\r\n      this.indices[numIndices++] = n + 2;\r\n      this.indices[numIndices++] = n;\r\n      this.indices[numIndices++] = n + 2;\r\n      this.indices[numIndices++] = n + 3;\r\n    }\r\n\r\n    return numVertices;\r\n  };\r\n\r\n  /**\r\n   * @protected\r\n   * @param {Array<WebGLTexture>} textures Textures.\r\n   * @param {Array<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>} images Images.\r\n   * @param {!Object<string, WebGLTexture>} texturePerImage Texture cache.\r\n   * @param {WebGLRenderingContext} gl Gl.\r\n   */\r\n  WebGLTextureReplay.prototype.createTextures = function createTextures (textures, images, texturePerImage, gl) {\r\n    var texture, image, uid, i;\r\n    var ii = images.length;\r\n    for (i = 0; i < ii; ++i) {\r\n      image = images[i];\r\n\r\n      uid = getUid(image);\r\n      if (uid in texturePerImage) {\r\n        texture = texturePerImage[uid];\r\n      } else {\r\n        texture = createTexture(\r\n          gl, image, CLAMP_TO_EDGE, CLAMP_TO_EDGE);\r\n        texturePerImage[uid] = texture;\r\n      }\r\n      textures[i] = texture;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLTextureReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {\r\n    // get the program\r\n    var program = context.getProgram(fragment, vertex);\r\n\r\n    // get the locations\r\n    var locations;\r\n    if (!this.defaultLocations) {\r\n      locations = new Locations(gl, program);\r\n      this.defaultLocations = locations;\r\n    } else {\r\n      locations = this.defaultLocations;\r\n    }\r\n\r\n    // use the program (FIXME: use the return value)\r\n    context.useProgram(program);\r\n\r\n    // enable the vertex attrib arrays\r\n    gl.enableVertexAttribArray(locations.a_position);\r\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\r\n      false, 32, 0);\r\n\r\n    gl.enableVertexAttribArray(locations.a_offsets);\r\n    gl.vertexAttribPointer(locations.a_offsets, 2, FLOAT,\r\n      false, 32, 8);\r\n\r\n    gl.enableVertexAttribArray(locations.a_texCoord);\r\n    gl.vertexAttribPointer(locations.a_texCoord, 2, FLOAT,\r\n      false, 32, 16);\r\n\r\n    gl.enableVertexAttribArray(locations.a_opacity);\r\n    gl.vertexAttribPointer(locations.a_opacity, 1, FLOAT,\r\n      false, 32, 24);\r\n\r\n    gl.enableVertexAttribArray(locations.a_rotateWithView);\r\n    gl.vertexAttribPointer(locations.a_rotateWithView, 1, FLOAT,\r\n      false, 32, 28);\r\n\r\n    return locations;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLTextureReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {\r\n    gl.disableVertexAttribArray(locations.a_position);\r\n    gl.disableVertexAttribArray(locations.a_offsets);\r\n    gl.disableVertexAttribArray(locations.a_texCoord);\r\n    gl.disableVertexAttribArray(locations.a_opacity);\r\n    gl.disableVertexAttribArray(locations.a_rotateWithView);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLTextureReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {\r\n    var textures = hitDetection ? this.getHitDetectionTextures() : this.getTextures();\r\n    var groupIndices = hitDetection ? this.hitDetectionGroupIndices : this.groupIndices;\r\n\r\n    if (!isEmpty(skippedFeaturesHash)) {\r\n      this.drawReplaySkipping(gl, context, skippedFeaturesHash, textures, groupIndices);\r\n    } else {\r\n      var i, ii, start;\r\n      for (i = 0, ii = textures.length, start = 0; i < ii; ++i) {\r\n        gl.bindTexture(TEXTURE_2D, textures[i]);\r\n        var end = groupIndices[i];\r\n        this.drawElements(gl, context, start, end);\r\n        start = end;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Draw the replay while paying attention to skipped features.\r\n   *\r\n   * This functions creates groups of features that can be drawn to together,\r\n   * so that the number of `drawElements` calls is minimized.\r\n   *\r\n   * For example given the following texture groups:\r\n   *\r\n   *    Group 1: A B C\r\n   *    Group 2: D [E] F G\r\n   *\r\n   * If feature E should be skipped, the following `drawElements` calls will be\r\n   * made:\r\n   *\r\n   *    drawElements with feature A, B and C\r\n   *    drawElements with feature D\r\n   *    drawElements with feature F and G\r\n   *\r\n   * @protected\r\n   * @param {WebGLRenderingContext} gl gl.\r\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\r\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\r\n   *  to skip.\r\n   * @param {Array<WebGLTexture>} textures Textures.\r\n   * @param {Array<number>} groupIndices Texture group indices.\r\n   */\r\n  WebGLTextureReplay.prototype.drawReplaySkipping = function drawReplaySkipping (gl, context, skippedFeaturesHash, textures, groupIndices) {\r\n    var featureIndex = 0;\r\n\r\n    var i, ii;\r\n    for (i = 0, ii = textures.length; i < ii; ++i) {\r\n      gl.bindTexture(TEXTURE_2D, textures[i]);\r\n      var groupStart = (i > 0) ? groupIndices[i - 1] : 0;\r\n      var groupEnd = groupIndices[i];\r\n\r\n      var start = groupStart;\r\n      var end = groupStart;\r\n      while (featureIndex < this.startIndices.length &&\r\n          this.startIndices[featureIndex] <= groupEnd) {\r\n        var feature = this.startIndicesFeature[featureIndex];\r\n\r\n        if (skippedFeaturesHash[getUid(feature)] !== undefined) {\r\n          // feature should be skipped\r\n          if (start !== end) {\r\n            // draw the features so far\r\n            this.drawElements(gl, context, start, end);\r\n          }\r\n          // continue with the next feature\r\n          start = (featureIndex === this.startIndices.length - 1) ?\r\n            groupEnd : this.startIndices[featureIndex + 1];\r\n          end = start;\r\n        } else {\r\n          // the feature is not skipped, augment the end index\r\n          end = (featureIndex === this.startIndices.length - 1) ?\r\n            groupEnd : this.startIndices[featureIndex + 1];\r\n        }\r\n        featureIndex++;\r\n      }\r\n\r\n      if (start !== end) {\r\n        // draw the remaining features (in case there was no skipped feature\r\n        // in this texture group, all features of a group are drawn together)\r\n        this.drawElements(gl, context, start, end);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLTextureReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\r\n    var i, groupStart, start, end, feature;\r\n    var featureIndex = this.startIndices.length - 1;\r\n    var hitDetectionTextures = this.getHitDetectionTextures();\r\n    for (i = hitDetectionTextures.length - 1; i >= 0; --i) {\r\n      gl.bindTexture(TEXTURE_2D, hitDetectionTextures[i]);\r\n      groupStart = (i > 0) ? this.hitDetectionGroupIndices[i - 1] : 0;\r\n      end = this.hitDetectionGroupIndices[i];\r\n\r\n      // draw all features for this texture group\r\n      while (featureIndex >= 0 &&\r\n          this.startIndices[featureIndex] >= groupStart) {\r\n        start = this.startIndices[featureIndex];\r\n        feature = this.startIndicesFeature[featureIndex];\r\n\r\n        if (skippedFeaturesHash[getUid(feature)] === undefined &&\r\n            feature.getGeometry() &&\r\n            (opt_hitExtent === undefined || intersects(\r\n              /** @type {Array<number>} */ (opt_hitExtent),\r\n              feature.getGeometry().getExtent()))) {\r\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n          this.drawElements(gl, context, start, end);\r\n\r\n          var result = featureCallback(feature);\r\n          if (result) {\r\n            return result;\r\n          }\r\n        }\r\n\r\n        end = start;\r\n        featureIndex--;\r\n      }\r\n    }\r\n    return undefined;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLTextureReplay.prototype.finish = function finish (context) {\r\n    this.anchorX = undefined;\r\n    this.anchorY = undefined;\r\n    this.height = undefined;\r\n    this.imageHeight = undefined;\r\n    this.imageWidth = undefined;\r\n    this.indices = null;\r\n    this.opacity = undefined;\r\n    this.originX = undefined;\r\n    this.originY = undefined;\r\n    this.rotateWithView = undefined;\r\n    this.rotation = undefined;\r\n    this.scale = undefined;\r\n    this.vertices = null;\r\n    this.width = undefined;\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @protected\r\n   * @param {boolean=} opt_all Return hit detection textures with regular ones.\r\n   * @return {Array<WebGLTexture>} Textures.\r\n   */\r\n  WebGLTextureReplay.prototype.getTextures = function getTextures (opt_all) {\r\n    return abstract();\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @protected\r\n   * @return {Array<WebGLTexture>} Textures.\r\n   */\r\n  WebGLTextureReplay.prototype.getHitDetectionTextures = function getHitDetectionTextures () {\r\n    return abstract();\r\n  };\n\n  return WebGLTextureReplay;\n}(WebGLReplay));\r\n\r\n\r\nexport default WebGLTextureReplay;\r\n\r\n//# sourceMappingURL=TextureReplay.js.map","/**\r\n * @module ol/render/webgl/ImageReplay\r\n */\r\nimport {getUid} from '../../util.js';\r\nimport WebGLTextureReplay from './TextureReplay.js';\r\nimport WebGLBuffer from '../../webgl/Buffer.js';\r\n\r\nvar WebGLImageReplay = /*@__PURE__*/(function (WebGLTextureReplay) {\n  function WebGLImageReplay(tolerance, maxExtent) {\r\n    WebGLTextureReplay.call(this, tolerance, maxExtent);\r\n\r\n    /**\r\n     * @type {Array<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>}\r\n     * @protected\r\n     */\r\n    this.images_ = [];\r\n\r\n    /**\r\n     * @type {Array<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>}\r\n     * @protected\r\n     */\r\n    this.hitDetectionImages_ = [];\r\n\r\n    /**\r\n     * @type {Array<WebGLTexture>}\r\n     * @private\r\n     */\r\n    this.textures_ = [];\r\n\r\n    /**\r\n     * @type {Array<WebGLTexture>}\r\n     * @private\r\n     */\r\n    this.hitDetectionTextures_ = [];\r\n\r\n  }\n\n  if ( WebGLTextureReplay ) WebGLImageReplay.__proto__ = WebGLTextureReplay;\n  WebGLImageReplay.prototype = Object.create( WebGLTextureReplay && WebGLTextureReplay.prototype );\n  WebGLImageReplay.prototype.constructor = WebGLImageReplay;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLImageReplay.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {\r\n    this.startIndices.push(this.indices.length);\r\n    this.startIndicesFeature.push(feature);\r\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\r\n    var stride = multiPointGeometry.getStride();\r\n    this.drawCoordinates(\r\n      flatCoordinates, 0, flatCoordinates.length, stride);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLImageReplay.prototype.drawPoint = function drawPoint (pointGeometry, feature) {\r\n    this.startIndices.push(this.indices.length);\r\n    this.startIndicesFeature.push(feature);\r\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\r\n    var stride = pointGeometry.getStride();\r\n    this.drawCoordinates(\r\n      flatCoordinates, 0, flatCoordinates.length, stride);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLImageReplay.prototype.finish = function finish (context) {\r\n    var gl = context.getGL();\r\n\r\n    this.groupIndices.push(this.indices.length);\r\n    this.hitDetectionGroupIndices.push(this.indices.length);\r\n\r\n    // create, bind, and populate the vertices buffer\r\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\r\n\r\n    var indices = this.indices;\r\n\r\n    // create, bind, and populate the indices buffer\r\n    this.indicesBuffer = new WebGLBuffer(indices);\r\n\r\n    // create textures\r\n    /** @type {Object<string, WebGLTexture>} */\r\n    var texturePerImage = {};\r\n\r\n    this.createTextures(this.textures_, this.images_, texturePerImage, gl);\r\n\r\n    this.createTextures(this.hitDetectionTextures_, this.hitDetectionImages_,\r\n      texturePerImage, gl);\r\n\r\n    this.images_ = null;\r\n    this.hitDetectionImages_ = null;\r\n    WebGLTextureReplay.prototype.finish.call(this, context);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLImageReplay.prototype.setImageStyle = function setImageStyle (imageStyle) {\r\n    var anchor = imageStyle.getAnchor();\r\n    var image = imageStyle.getImage(1);\r\n    var imageSize = imageStyle.getImageSize();\r\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\r\n    var opacity = imageStyle.getOpacity();\r\n    var origin = imageStyle.getOrigin();\r\n    var rotateWithView = imageStyle.getRotateWithView();\r\n    var rotation = imageStyle.getRotation();\r\n    var size = imageStyle.getSize();\r\n    var scale = imageStyle.getScale();\r\n\r\n    var currentImage;\r\n    if (this.images_.length === 0) {\r\n      this.images_.push(image);\r\n    } else {\r\n      currentImage = this.images_[this.images_.length - 1];\r\n      if (getUid(currentImage) != getUid(image)) {\r\n        this.groupIndices.push(this.indices.length);\r\n        this.images_.push(image);\r\n      }\r\n    }\r\n\r\n    if (this.hitDetectionImages_.length === 0) {\r\n      this.hitDetectionImages_.push(hitDetectionImage);\r\n    } else {\r\n      currentImage =\r\n          this.hitDetectionImages_[this.hitDetectionImages_.length - 1];\r\n      if (getUid(currentImage) != getUid(hitDetectionImage)) {\r\n        this.hitDetectionGroupIndices.push(this.indices.length);\r\n        this.hitDetectionImages_.push(hitDetectionImage);\r\n      }\r\n    }\r\n\r\n    this.anchorX = anchor[0];\r\n    this.anchorY = anchor[1];\r\n    this.height = size[1];\r\n    this.imageHeight = imageSize[1];\r\n    this.imageWidth = imageSize[0];\r\n    this.opacity = opacity;\r\n    this.originX = origin[0];\r\n    this.originY = origin[1];\r\n    this.rotation = rotation;\r\n    this.rotateWithView = rotateWithView;\r\n    this.scale = scale;\r\n    this.width = size[0];\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLImageReplay.prototype.getTextures = function getTextures (opt_all) {\r\n    return opt_all ? this.textures_.concat(this.hitDetectionTextures_) : this.textures_;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLImageReplay.prototype.getHitDetectionTextures = function getHitDetectionTextures () {\r\n    return this.hitDetectionTextures_;\r\n  };\n\n  return WebGLImageReplay;\n}(WebGLTextureReplay));\r\n\r\n\r\nexport default WebGLImageReplay;\r\n\r\n//# sourceMappingURL=ImageReplay.js.map","/**\r\n * @module ol/geom/flat/topology\r\n */\r\nimport {linearRing as linearRingArea} from './area.js';\r\n\r\n/**\r\n * Check if the linestring is a boundary.\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @return {boolean} The linestring is a boundary.\r\n */\r\nexport function lineStringIsClosed(flatCoordinates, offset, end, stride) {\r\n  var lastCoord = end - stride;\r\n  if (flatCoordinates[offset] === flatCoordinates[lastCoord] &&\r\n      flatCoordinates[offset + 1] === flatCoordinates[lastCoord + 1] && (end - offset) / stride > 3) {\r\n    return !!linearRingArea(flatCoordinates, offset, end, stride);\r\n  }\r\n  return false;\r\n}\r\n\r\n//# sourceMappingURL=topology.js.map","/**\r\n * @module ol/render/webgl/linestringreplay/defaultshader\r\n */\r\n// This file is automatically generated, do not edit.\r\n// Run `make shaders` to generate, and commit the result.\r\n\r\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\r\nimport WebGLFragment from '../../../webgl/Fragment.js';\r\nimport WebGLVertex from '../../../webgl/Vertex.js';\r\n\r\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\r\n  'precision mediump float;\\nvarying float v_round;\\nvarying vec2 v_roundVertex;\\nvarying float v_halfWidth;\\n\\n\\n\\nuniform float u_opacity;\\nuniform vec4 u_color;\\nuniform vec2 u_size;\\nuniform float u_pixelRatio;\\n\\nvoid main(void) {\\n  if (v_round > 0.0) {\\n    vec2 windowCoords = vec2((v_roundVertex.x + 1.0) / 2.0 * u_size.x * u_pixelRatio,\\n        (v_roundVertex.y + 1.0) / 2.0 * u_size.y * u_pixelRatio);\\n    if (length(windowCoords - gl_FragCoord.xy) > v_halfWidth * u_pixelRatio) {\\n      discard;\\n    }\\n  }\\n  gl_FragColor = u_color;\\n  float alpha = u_color.a * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\r\n  'precision mediump float;varying float a;varying vec2 aVertex;varying float c;uniform float m;uniform vec4 n;uniform vec2 o;uniform float p;void main(void){if(a>0.0){vec2 windowCoords=vec2((aVertex.x+1.0)/2.0*o.x*p,(aVertex.y+1.0)/2.0*o.y*p);if(length(windowCoords-gl_FragCoord.xy)>c*p){discard;}} gl_FragColor=n;float alpha=n.a*m;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\r\n\r\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\r\n  'varying float v_round;\\nvarying vec2 v_roundVertex;\\nvarying float v_halfWidth;\\n\\n\\nattribute vec2 a_lastPos;\\nattribute vec2 a_position;\\nattribute vec2 a_nextPos;\\nattribute float a_direction;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\nuniform float u_lineWidth;\\nuniform float u_miterLimit;\\n\\nbool nearlyEquals(in float value, in float ref) {\\n  float epsilon = 0.000000000001;\\n  return value >= ref - epsilon && value <= ref + epsilon;\\n}\\n\\nvoid alongNormal(out vec2 offset, in vec2 nextP, in float turnDir, in float direction) {\\n  vec2 dirVect = nextP - a_position;\\n  vec2 normal = normalize(vec2(-turnDir * dirVect.y, turnDir * dirVect.x));\\n  offset = u_lineWidth / 2.0 * normal * direction;\\n}\\n\\nvoid miterUp(out vec2 offset, out float round, in bool isRound, in float direction) {\\n  float halfWidth = u_lineWidth / 2.0;\\n  vec2 tangent = normalize(normalize(a_nextPos - a_position) + normalize(a_position - a_lastPos));\\n  vec2 normal = vec2(-tangent.y, tangent.x);\\n  vec2 dirVect = a_nextPos - a_position;\\n  vec2 tmpNormal = normalize(vec2(-dirVect.y, dirVect.x));\\n  float miterLength = abs(halfWidth / dot(normal, tmpNormal));\\n  offset = normal * direction * miterLength;\\n  round = 0.0;\\n  if (isRound) {\\n    round = 1.0;\\n  } else if (miterLength > u_miterLimit + u_lineWidth) {\\n    offset = halfWidth * tmpNormal * direction;\\n  }\\n}\\n\\nbool miterDown(out vec2 offset, in vec4 projPos, in mat4 offsetMatrix, in float direction) {\\n  bool degenerate = false;\\n  vec2 tangent = normalize(normalize(a_nextPos - a_position) + normalize(a_position - a_lastPos));\\n  vec2 normal = vec2(-tangent.y, tangent.x);\\n  vec2 dirVect = a_lastPos - a_position;\\n  vec2 tmpNormal = normalize(vec2(-dirVect.y, dirVect.x));\\n  vec2 longOffset, shortOffset, longVertex;\\n  vec4 shortProjVertex;\\n  float halfWidth = u_lineWidth / 2.0;\\n  if (length(a_nextPos - a_position) > length(a_lastPos - a_position)) {\\n    longOffset = tmpNormal * direction * halfWidth;\\n    shortOffset = normalize(vec2(dirVect.y, -dirVect.x)) * direction * halfWidth;\\n    longVertex = a_nextPos;\\n    shortProjVertex = u_projectionMatrix * vec4(a_lastPos, 0.0, 1.0);\\n  } else {\\n    shortOffset = tmpNormal * direction * halfWidth;\\n    longOffset = normalize(vec2(dirVect.y, -dirVect.x)) * direction * halfWidth;\\n    longVertex = a_lastPos;\\n    shortProjVertex = u_projectionMatrix * vec4(a_nextPos, 0.0, 1.0);\\n  }\\n  //Intersection algorithm based on theory by Paul Bourke (http://paulbourke.net/geometry/pointlineplane/).\\n  vec4 p1 = u_projectionMatrix * vec4(longVertex, 0.0, 1.0) + offsetMatrix * vec4(longOffset, 0.0, 0.0);\\n  vec4 p2 = projPos + offsetMatrix * vec4(longOffset, 0.0, 0.0);\\n  vec4 p3 = shortProjVertex + offsetMatrix * vec4(-shortOffset, 0.0, 0.0);\\n  vec4 p4 = shortProjVertex + offsetMatrix * vec4(shortOffset, 0.0, 0.0);\\n  float denom = (p4.y - p3.y) * (p2.x - p1.x) - (p4.x - p3.x) * (p2.y - p1.y);\\n  float firstU = ((p4.x - p3.x) * (p1.y - p3.y) - (p4.y - p3.y) * (p1.x - p3.x)) / denom;\\n  float secondU = ((p2.x - p1.x) * (p1.y - p3.y) - (p2.y - p1.y) * (p1.x - p3.x)) / denom;\\n  float epsilon = 0.000000000001;\\n  if (firstU > epsilon && firstU < 1.0 - epsilon && secondU > epsilon && secondU < 1.0 - epsilon) {\\n    shortProjVertex.x = p1.x + firstU * (p2.x - p1.x);\\n    shortProjVertex.y = p1.y + firstU * (p2.y - p1.y);\\n    offset = shortProjVertex.xy;\\n    degenerate = true;\\n  } else {\\n    float miterLength = abs(halfWidth / dot(normal, tmpNormal));\\n    offset = normal * direction * miterLength;\\n  }\\n  return degenerate;\\n}\\n\\nvoid squareCap(out vec2 offset, out float round, in bool isRound, in vec2 nextP,\\n    in float turnDir, in float direction) {\\n  round = 0.0;\\n  vec2 dirVect = a_position - nextP;\\n  vec2 firstNormal = normalize(dirVect);\\n  vec2 secondNormal = vec2(turnDir * firstNormal.y * direction, -turnDir * firstNormal.x * direction);\\n  vec2 hypotenuse = normalize(firstNormal - secondNormal);\\n  vec2 normal = vec2(turnDir * hypotenuse.y * direction, -turnDir * hypotenuse.x * direction);\\n  float length = sqrt(v_halfWidth * v_halfWidth * 2.0);\\n  offset = normal * length;\\n  if (isRound) {\\n    round = 1.0;\\n  }\\n}\\n\\nvoid main(void) {\\n  bool degenerate = false;\\n  float direction = float(sign(a_direction));\\n  mat4 offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  vec2 offset;\\n  vec4 projPos = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\\n  bool round = nearlyEquals(mod(a_direction, 2.0), 0.0);\\n\\n  v_round = 0.0;\\n  v_halfWidth = u_lineWidth / 2.0;\\n  v_roundVertex = projPos.xy;\\n\\n  if (nearlyEquals(mod(a_direction, 3.0), 0.0) || nearlyEquals(mod(a_direction, 17.0), 0.0)) {\\n    alongNormal(offset, a_nextPos, 1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 5.0), 0.0) || nearlyEquals(mod(a_direction, 13.0), 0.0)) {\\n    alongNormal(offset, a_lastPos, -1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 23.0), 0.0)) {\\n    miterUp(offset, v_round, round, direction);\\n  } else if (nearlyEquals(mod(a_direction, 19.0), 0.0)) {\\n    degenerate = miterDown(offset, projPos, offsetMatrix, direction);\\n  } else if (nearlyEquals(mod(a_direction, 7.0), 0.0)) {\\n    squareCap(offset, v_round, round, a_nextPos, 1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 11.0), 0.0)) {\\n    squareCap(offset, v_round, round, a_lastPos, -1.0, direction);\\n  }\\n  if (!degenerate) {\\n    vec4 offsets = offsetMatrix * vec4(offset, 0.0, 0.0);\\n    gl_Position = projPos + offsets;\\n  } else {\\n    gl_Position = vec4(offset, 0.0, 1.0);\\n  }\\n}\\n\\n\\n' :\r\n  'varying float a;varying vec2 aVertex;varying float c;attribute vec2 d;attribute vec2 e;attribute vec2 f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;uniform float k;uniform float l;bool nearlyEquals(in float value,in float ref){float epsilon=0.000000000001;return value>=ref-epsilon&&value<=ref+epsilon;}void alongNormal(out vec2 offset,in vec2 nextP,in float turnDir,in float direction){vec2 dirVect=nextP-e;vec2 normal=normalize(vec2(-turnDir*dirVect.y,turnDir*dirVect.x));offset=k/2.0*normal*direction;}void miterUp(out vec2 offset,out float round,in bool isRound,in float direction){float halfWidth=k/2.0;vec2 tangent=normalize(normalize(f-e)+normalize(e-d));vec2 normal=vec2(-tangent.y,tangent.x);vec2 dirVect=f-e;vec2 tmpNormal=normalize(vec2(-dirVect.y,dirVect.x));float miterLength=abs(halfWidth/dot(normal,tmpNormal));offset=normal*direction*miterLength;round=0.0;if(isRound){round=1.0;}else if(miterLength>l+k){offset=halfWidth*tmpNormal*direction;}} bool miterDown(out vec2 offset,in vec4 projPos,in mat4 offsetMatrix,in float direction){bool degenerate=false;vec2 tangent=normalize(normalize(f-e)+normalize(e-d));vec2 normal=vec2(-tangent.y,tangent.x);vec2 dirVect=d-e;vec2 tmpNormal=normalize(vec2(-dirVect.y,dirVect.x));vec2 longOffset,shortOffset,longVertex;vec4 shortProjVertex;float halfWidth=k/2.0;if(length(f-e)>length(d-e)){longOffset=tmpNormal*direction*halfWidth;shortOffset=normalize(vec2(dirVect.y,-dirVect.x))*direction*halfWidth;longVertex=f;shortProjVertex=h*vec4(d,0.0,1.0);}else{shortOffset=tmpNormal*direction*halfWidth;longOffset=normalize(vec2(dirVect.y,-dirVect.x))*direction*halfWidth;longVertex=d;shortProjVertex=h*vec4(f,0.0,1.0);}vec4 p1=h*vec4(longVertex,0.0,1.0)+offsetMatrix*vec4(longOffset,0.0,0.0);vec4 p2=projPos+offsetMatrix*vec4(longOffset,0.0,0.0);vec4 p3=shortProjVertex+offsetMatrix*vec4(-shortOffset,0.0,0.0);vec4 p4=shortProjVertex+offsetMatrix*vec4(shortOffset,0.0,0.0);float denom=(p4.y-p3.y)*(p2.x-p1.x)-(p4.x-p3.x)*(p2.y-p1.y);float firstU=((p4.x-p3.x)*(p1.y-p3.y)-(p4.y-p3.y)*(p1.x-p3.x))/denom;float secondU=((p2.x-p1.x)*(p1.y-p3.y)-(p2.y-p1.y)*(p1.x-p3.x))/denom;float epsilon=0.000000000001;if(firstU>epsilon&&firstU<1.0-epsilon&&secondU>epsilon&&secondU<1.0-epsilon){shortProjVertex.x=p1.x+firstU*(p2.x-p1.x);shortProjVertex.y=p1.y+firstU*(p2.y-p1.y);offset=shortProjVertex.xy;degenerate=true;}else{float miterLength=abs(halfWidth/dot(normal,tmpNormal));offset=normal*direction*miterLength;}return degenerate;}void squareCap(out vec2 offset,out float round,in bool isRound,in vec2 nextP,in float turnDir,in float direction){round=0.0;vec2 dirVect=e-nextP;vec2 firstNormal=normalize(dirVect);vec2 secondNormal=vec2(turnDir*firstNormal.y*direction,-turnDir*firstNormal.x*direction);vec2 hypotenuse=normalize(firstNormal-secondNormal);vec2 normal=vec2(turnDir*hypotenuse.y*direction,-turnDir*hypotenuse.x*direction);float length=sqrt(c*c*2.0);offset=normal*length;if(isRound){round=1.0;}} void main(void){bool degenerate=false;float direction=float(sign(g));mat4 offsetMatrix=i*j;vec2 offset;vec4 projPos=h*vec4(e,0.0,1.0);bool round=nearlyEquals(mod(g,2.0),0.0);a=0.0;c=k/2.0;aVertex=projPos.xy;if(nearlyEquals(mod(g,3.0),0.0)||nearlyEquals(mod(g,17.0),0.0)){alongNormal(offset,f,1.0,direction);}else if(nearlyEquals(mod(g,5.0),0.0)||nearlyEquals(mod(g,13.0),0.0)){alongNormal(offset,d,-1.0,direction);}else if(nearlyEquals(mod(g,23.0),0.0)){miterUp(offset,a,round,direction);}else if(nearlyEquals(mod(g,19.0),0.0)){degenerate=miterDown(offset,projPos,offsetMatrix,direction);}else if(nearlyEquals(mod(g,7.0),0.0)){squareCap(offset,a,round,f,1.0,direction);}else if(nearlyEquals(mod(g,11.0),0.0)){squareCap(offset,a,round,d,-1.0,direction);}if(!degenerate){vec4 offsets=offsetMatrix*vec4(offset,0.0,0.0);gl_Position=projPos+offsets;}else{gl_Position=vec4(offset,0.0,1.0);}}');\r\n\r\n//# sourceMappingURL=defaultshader.js.map","/**\r\n * @module ol/render/webgl/linestringreplay/defaultshader/Locations\r\n */\r\n// This file is automatically generated, do not edit\r\n// Run `make shaders` to generate, and commit the result.\r\n\r\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\r\n\r\nvar Locations = function Locations(gl, program) {\r\n\r\n  /**\r\n   * @type {WebGLUniformLocation}\r\n   */\r\n  this.u_projectionMatrix = gl.getUniformLocation(\r\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\r\n\r\n  /**\r\n   * @type {WebGLUniformLocation}\r\n   */\r\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\r\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\r\n\r\n  /**\r\n   * @type {WebGLUniformLocation}\r\n   */\r\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\r\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\r\n\r\n  /**\r\n   * @type {WebGLUniformLocation}\r\n   */\r\n  this.u_lineWidth = gl.getUniformLocation(\r\n    program, DEBUG_WEBGL ? 'u_lineWidth' : 'k');\r\n\r\n  /**\r\n   * @type {WebGLUniformLocation}\r\n   */\r\n  this.u_miterLimit = gl.getUniformLocation(\r\n    program, DEBUG_WEBGL ? 'u_miterLimit' : 'l');\r\n\r\n  /**\r\n   * @type {WebGLUniformLocation}\r\n   */\r\n  this.u_opacity = gl.getUniformLocation(\r\n    program, DEBUG_WEBGL ? 'u_opacity' : 'm');\r\n\r\n  /**\r\n   * @type {WebGLUniformLocation}\r\n   */\r\n  this.u_color = gl.getUniformLocation(\r\n    program, DEBUG_WEBGL ? 'u_color' : 'n');\r\n\r\n  /**\r\n   * @type {WebGLUniformLocation}\r\n   */\r\n  this.u_size = gl.getUniformLocation(\r\n    program, DEBUG_WEBGL ? 'u_size' : 'o');\r\n\r\n  /**\r\n   * @type {WebGLUniformLocation}\r\n   */\r\n  this.u_pixelRatio = gl.getUniformLocation(\r\n    program, DEBUG_WEBGL ? 'u_pixelRatio' : 'p');\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.a_lastPos = gl.getAttribLocation(\r\n    program, DEBUG_WEBGL ? 'a_lastPos' : 'd');\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.a_position = gl.getAttribLocation(\r\n    program, DEBUG_WEBGL ? 'a_position' : 'e');\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.a_nextPos = gl.getAttribLocation(\r\n    program, DEBUG_WEBGL ? 'a_nextPos' : 'f');\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.a_direction = gl.getAttribLocation(\r\n    program, DEBUG_WEBGL ? 'a_direction' : 'g');\r\n\r\n};\r\n\r\nexport default Locations;\r\n\r\n//# sourceMappingURL=Locations.js.map","/**\r\n * @module ol/render/webgl/LineStringReplay\r\n */\r\nimport {getUid} from '../../util.js';\r\nimport {equals} from '../../array.js';\r\nimport {asArray} from '../../color.js';\r\nimport {intersects} from '../../extent.js';\r\nimport {linearRingIsClockwise} from '../../geom/flat/orient.js';\r\nimport {translate} from '../../geom/flat/transform.js';\r\nimport {lineStringIsClosed} from '../../geom/flat/topology.js';\r\nimport {isEmpty} from '../../obj.js';\r\nimport {DEFAULT_LINECAP, DEFAULT_LINEDASH, DEFAULT_LINEDASHOFFSET,\r\n  DEFAULT_LINEJOIN, DEFAULT_LINEWIDTH, DEFAULT_MITERLIMIT, DEFAULT_STROKESTYLE,\r\n  triangleIsCounterClockwise} from '../webgl.js';\r\nimport WebGLReplay from './Replay.js';\r\nimport {fragment, vertex} from './linestringreplay/defaultshader.js';\r\nimport Locations from './linestringreplay/defaultshader/Locations.js';\r\nimport {FLOAT} from '../../webgl.js';\r\nimport WebGLBuffer from '../../webgl/Buffer.js';\r\n\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nvar Instruction = {\r\n  ROUND: 2,\r\n  BEGIN_LINE: 3,\r\n  END_LINE: 5,\r\n  BEGIN_LINE_CAP: 7,\r\n  END_LINE_CAP: 11,\r\n  BEVEL_FIRST: 13,\r\n  BEVEL_SECOND: 17,\r\n  MITER_BOTTOM: 19,\r\n  MITER_TOP: 23\r\n};\r\n\r\n\r\nvar WebGLLineStringReplay = /*@__PURE__*/(function (WebGLReplay) {\n  function WebGLLineStringReplay(tolerance, maxExtent) {\r\n    WebGLReplay.call(this, tolerance, maxExtent);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./linestringreplay/defaultshader/Locations.js\").default}\r\n     */\r\n    this.defaultLocations_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<Array<?>>}\r\n     */\r\n    this.styles_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.styleIndices_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {{strokeColor: (Array<number>|null),\r\n     *         lineCap: (string|undefined),\r\n     *         lineDash: Array<number>,\r\n     *         lineDashOffset: (number|undefined),\r\n     *         lineJoin: (string|undefined),\r\n     *         lineWidth: (number|undefined),\r\n     *         miterLimit: (number|undefined),\r\n     *         changed: boolean}|null}\r\n     */\r\n    this.state_ = {\r\n      strokeColor: null,\r\n      lineCap: undefined,\r\n      lineDash: null,\r\n      lineDashOffset: undefined,\r\n      lineJoin: undefined,\r\n      lineWidth: undefined,\r\n      miterLimit: undefined,\r\n      changed: false\r\n    };\r\n\r\n  }\n\n  if ( WebGLReplay ) WebGLLineStringReplay.__proto__ = WebGLReplay;\n  WebGLLineStringReplay.prototype = Object.create( WebGLReplay && WebGLReplay.prototype );\n  WebGLLineStringReplay.prototype.constructor = WebGLLineStringReplay;\r\n\r\n  /**\r\n   * Draw one segment.\r\n   * @private\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   */\r\n  WebGLLineStringReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\r\n\r\n    var i, ii;\r\n    var numVertices = this.vertices.length;\r\n    var numIndices = this.indices.length;\r\n    //To save a vertex, the direction of a point is a product of the sign (1 or -1), a prime from\r\n    //Instruction, and a rounding factor (1 or 2). If the product is even,\r\n    //we round it. If it is odd, we don't.\r\n    var lineJoin = this.state_.lineJoin === 'bevel' ? 0 :\r\n      this.state_.lineJoin === 'miter' ? 1 : 2;\r\n    var lineCap = this.state_.lineCap === 'butt' ? 0 :\r\n      this.state_.lineCap === 'square' ? 1 : 2;\r\n    var closed = lineStringIsClosed(flatCoordinates, offset, end, stride);\r\n    var startCoords, sign, n;\r\n    var lastIndex = numIndices;\r\n    var lastSign = 1;\r\n    //We need the adjacent vertices to define normals in joins. p0 = last, p1 = current, p2 = next.\r\n    var p0, p1, p2;\r\n\r\n    for (i = offset, ii = end; i < ii; i += stride) {\r\n\r\n      n = numVertices / 7;\r\n\r\n      p0 = p1;\r\n      p1 = p2 || [flatCoordinates[i], flatCoordinates[i + 1]];\r\n      //First vertex.\r\n      if (i === offset) {\r\n        p2 = [flatCoordinates[i + stride], flatCoordinates[i + stride + 1]];\r\n        if (end - offset === stride * 2 && equals(p1, p2)) {\r\n          break;\r\n        }\r\n        if (closed) {\r\n          //A closed line! Complete the circle.\r\n          p0 = [flatCoordinates[end - stride * 2],\r\n            flatCoordinates[end - stride * 2 + 1]];\r\n\r\n          startCoords = p2;\r\n        } else {\r\n          //Add the first two/four vertices.\r\n\r\n          if (lineCap) {\r\n            numVertices = this.addVertices_([0, 0], p1, p2,\r\n              lastSign * Instruction.BEGIN_LINE_CAP * lineCap, numVertices);\r\n\r\n            numVertices = this.addVertices_([0, 0], p1, p2,\r\n              -lastSign * Instruction.BEGIN_LINE_CAP * lineCap, numVertices);\r\n\r\n            this.indices[numIndices++] = n + 2;\r\n            this.indices[numIndices++] = n;\r\n            this.indices[numIndices++] = n + 1;\r\n\r\n            this.indices[numIndices++] = n + 1;\r\n            this.indices[numIndices++] = n + 3;\r\n            this.indices[numIndices++] = n + 2;\r\n\r\n          }\r\n\r\n          numVertices = this.addVertices_([0, 0], p1, p2,\r\n            lastSign * Instruction.BEGIN_LINE * (lineCap || 1), numVertices);\r\n\r\n          numVertices = this.addVertices_([0, 0], p1, p2,\r\n            -lastSign * Instruction.BEGIN_LINE * (lineCap || 1), numVertices);\r\n\r\n          lastIndex = numVertices / 7 - 1;\r\n\r\n          continue;\r\n        }\r\n      } else if (i === end - stride) {\r\n        //Last vertex.\r\n        if (closed) {\r\n          //Same as the first vertex.\r\n          p2 = startCoords;\r\n          break;\r\n        } else {\r\n          p0 = p0 || [0, 0];\r\n\r\n          numVertices = this.addVertices_(p0, p1, [0, 0],\r\n            lastSign * Instruction.END_LINE * (lineCap || 1), numVertices);\r\n\r\n          numVertices = this.addVertices_(p0, p1, [0, 0],\r\n            -lastSign * Instruction.END_LINE * (lineCap || 1), numVertices);\r\n\r\n          this.indices[numIndices++] = n;\r\n          this.indices[numIndices++] = lastIndex - 1;\r\n          this.indices[numIndices++] = lastIndex;\r\n\r\n          this.indices[numIndices++] = lastIndex;\r\n          this.indices[numIndices++] = n + 1;\r\n          this.indices[numIndices++] = n;\r\n\r\n          if (lineCap) {\r\n            numVertices = this.addVertices_(p0, p1, [0, 0],\r\n              lastSign * Instruction.END_LINE_CAP * lineCap, numVertices);\r\n\r\n            numVertices = this.addVertices_(p0, p1, [0, 0],\r\n              -lastSign * Instruction.END_LINE_CAP * lineCap, numVertices);\r\n\r\n            this.indices[numIndices++] = n + 2;\r\n            this.indices[numIndices++] = n;\r\n            this.indices[numIndices++] = n + 1;\r\n\r\n            this.indices[numIndices++] = n + 1;\r\n            this.indices[numIndices++] = n + 3;\r\n            this.indices[numIndices++] = n + 2;\r\n\r\n          }\r\n\r\n          break;\r\n        }\r\n      } else {\r\n        p2 = [flatCoordinates[i + stride], flatCoordinates[i + stride + 1]];\r\n      }\r\n\r\n      // We group CW and straight lines, thus the not so inituitive CCW checking function.\r\n      sign = triangleIsCounterClockwise(p0[0], p0[1], p1[0], p1[1], p2[0], p2[1])\r\n        ? -1 : 1;\r\n\r\n      numVertices = this.addVertices_(p0, p1, p2,\r\n        sign * Instruction.BEVEL_FIRST * (lineJoin || 1), numVertices);\r\n\r\n      numVertices = this.addVertices_(p0, p1, p2,\r\n        sign * Instruction.BEVEL_SECOND * (lineJoin || 1), numVertices);\r\n\r\n      numVertices = this.addVertices_(p0, p1, p2,\r\n        -sign * Instruction.MITER_BOTTOM * (lineJoin || 1), numVertices);\r\n\r\n      if (i > offset) {\r\n        this.indices[numIndices++] = n;\r\n        this.indices[numIndices++] = lastIndex - 1;\r\n        this.indices[numIndices++] = lastIndex;\r\n\r\n        this.indices[numIndices++] = n + 2;\r\n        this.indices[numIndices++] = n;\r\n        this.indices[numIndices++] = lastSign * sign > 0 ? lastIndex : lastIndex - 1;\r\n      }\r\n\r\n      this.indices[numIndices++] = n;\r\n      this.indices[numIndices++] = n + 2;\r\n      this.indices[numIndices++] = n + 1;\r\n\r\n      lastIndex = n + 2;\r\n      lastSign = sign;\r\n\r\n      //Add miter\r\n      if (lineJoin) {\r\n        numVertices = this.addVertices_(p0, p1, p2,\r\n          sign * Instruction.MITER_TOP * lineJoin, numVertices);\r\n\r\n        this.indices[numIndices++] = n + 1;\r\n        this.indices[numIndices++] = n + 3;\r\n        this.indices[numIndices++] = n;\r\n      }\r\n    }\r\n\r\n    if (closed) {\r\n      n = n || numVertices / 7;\r\n      sign = linearRingIsClockwise([p0[0], p0[1], p1[0], p1[1], p2[0], p2[1]], 0, 6, 2)\r\n        ? 1 : -1;\r\n\r\n      numVertices = this.addVertices_(p0, p1, p2,\r\n        sign * Instruction.BEVEL_FIRST * (lineJoin || 1), numVertices);\r\n\r\n      numVertices = this.addVertices_(p0, p1, p2,\r\n        -sign * Instruction.MITER_BOTTOM * (lineJoin || 1), numVertices);\r\n\r\n      this.indices[numIndices++] = n;\r\n      this.indices[numIndices++] = lastIndex - 1;\r\n      this.indices[numIndices++] = lastIndex;\r\n\r\n      this.indices[numIndices++] = n + 1;\r\n      this.indices[numIndices++] = n;\r\n      this.indices[numIndices++] = lastSign * sign > 0 ? lastIndex : lastIndex - 1;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Array<number>} p0 Last coordinates.\r\n   * @param {Array<number>} p1 Current coordinates.\r\n   * @param {Array<number>} p2 Next coordinates.\r\n   * @param {number} product Sign, instruction, and rounding product.\r\n   * @param {number} numVertices Vertex counter.\r\n   * @return {number} Vertex counter.\r\n   * @private\r\n   */\r\n  WebGLLineStringReplay.prototype.addVertices_ = function addVertices_ (p0, p1, p2, product, numVertices) {\r\n    this.vertices[numVertices++] = p0[0];\r\n    this.vertices[numVertices++] = p0[1];\r\n    this.vertices[numVertices++] = p1[0];\r\n    this.vertices[numVertices++] = p1[1];\r\n    this.vertices[numVertices++] = p2[0];\r\n    this.vertices[numVertices++] = p2[1];\r\n    this.vertices[numVertices++] = product;\r\n\r\n    return numVertices;\r\n  };\r\n\r\n  /**\r\n   * Check if the linestring can be drawn (i. e. valid).\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   * @return {boolean} The linestring can be drawn.\r\n   * @private\r\n   */\r\n  WebGLLineStringReplay.prototype.isValid_ = function isValid_ (flatCoordinates, offset, end, stride) {\r\n    var range = end - offset;\r\n    if (range < stride * 2) {\r\n      return false;\r\n    } else if (range === stride * 2) {\r\n      var firstP = [flatCoordinates[offset], flatCoordinates[offset + 1]];\r\n      var lastP = [flatCoordinates[offset + stride], flatCoordinates[offset + stride + 1]];\r\n      return !equals(firstP, lastP);\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLLineStringReplay.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {\r\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\r\n    var stride = lineStringGeometry.getStride();\r\n    if (this.isValid_(flatCoordinates, 0, flatCoordinates.length, stride)) {\r\n      flatCoordinates = translate(flatCoordinates, 0, flatCoordinates.length,\r\n        stride, -this.origin[0], -this.origin[1]);\r\n      if (this.state_.changed) {\r\n        this.styleIndices_.push(this.indices.length);\r\n        this.state_.changed = false;\r\n      }\r\n      this.startIndices.push(this.indices.length);\r\n      this.startIndicesFeature.push(feature);\r\n      this.drawCoordinates_(\r\n        flatCoordinates, 0, flatCoordinates.length, stride);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {\r\n    var indexCount = this.indices.length;\r\n    var ends = multiLineStringGeometry.getEnds();\r\n    ends.unshift(0);\r\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\r\n    var stride = multiLineStringGeometry.getStride();\r\n    var i, ii;\r\n    if (ends.length > 1) {\r\n      for (i = 1, ii = ends.length; i < ii; ++i) {\r\n        if (this.isValid_(flatCoordinates, ends[i - 1], ends[i], stride)) {\r\n          var lineString = translate(flatCoordinates, ends[i - 1], ends[i],\r\n            stride, -this.origin[0], -this.origin[1]);\r\n          this.drawCoordinates_(\r\n            lineString, 0, lineString.length, stride);\r\n        }\r\n      }\r\n    }\r\n    if (this.indices.length > indexCount) {\r\n      this.startIndices.push(indexCount);\r\n      this.startIndicesFeature.push(feature);\r\n      if (this.state_.changed) {\r\n        this.styleIndices_.push(indexCount);\r\n        this.state_.changed = false;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {Array<Array<number>>} holeFlatCoordinates Hole flat coordinates.\r\n   * @param {number} stride Stride.\r\n   */\r\n  WebGLLineStringReplay.prototype.drawPolygonCoordinates = function drawPolygonCoordinates (flatCoordinates, holeFlatCoordinates, stride) {\r\n    if (!lineStringIsClosed(flatCoordinates, 0, flatCoordinates.length, stride)) {\r\n      flatCoordinates.push(flatCoordinates[0]);\r\n      flatCoordinates.push(flatCoordinates[1]);\r\n    }\r\n    this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\r\n    if (holeFlatCoordinates.length) {\r\n      var i, ii;\r\n      for (i = 0, ii = holeFlatCoordinates.length; i < ii; ++i) {\r\n        if (!lineStringIsClosed(holeFlatCoordinates[i], 0, holeFlatCoordinates[i].length, stride)) {\r\n          holeFlatCoordinates[i].push(holeFlatCoordinates[i][0]);\r\n          holeFlatCoordinates[i].push(holeFlatCoordinates[i][1]);\r\n        }\r\n        this.drawCoordinates_(holeFlatCoordinates[i], 0,\r\n          holeFlatCoordinates[i].length, stride);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\r\n   * @param {number=} opt_index Index count.\r\n   */\r\n  WebGLLineStringReplay.prototype.setPolygonStyle = function setPolygonStyle (feature, opt_index) {\r\n    var index = opt_index === undefined ? this.indices.length : opt_index;\r\n    this.startIndices.push(index);\r\n    this.startIndicesFeature.push(feature);\r\n    if (this.state_.changed) {\r\n      this.styleIndices_.push(index);\r\n      this.state_.changed = false;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @return {number} Current index.\r\n   */\r\n  WebGLLineStringReplay.prototype.getCurrentIndex = function getCurrentIndex () {\r\n    return this.indices.length;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   **/\r\n  WebGLLineStringReplay.prototype.finish = function finish (context) {\r\n    // create, bind, and populate the vertices buffer\r\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\r\n\r\n    // create, bind, and populate the indices buffer\r\n    this.indicesBuffer = new WebGLBuffer(this.indices);\r\n\r\n    this.startIndices.push(this.indices.length);\r\n\r\n    //Clean up, if there is nothing to draw\r\n    if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\r\n      this.styles_ = [];\r\n    }\r\n\r\n    this.vertices = null;\r\n    this.indices = null;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLLineStringReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\r\n    var verticesBuffer = this.verticesBuffer;\r\n    var indicesBuffer = this.indicesBuffer;\r\n    return function() {\r\n      context.deleteBuffer(verticesBuffer);\r\n      context.deleteBuffer(indicesBuffer);\r\n    };\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLLineStringReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {\r\n    // get the program\r\n    var program = context.getProgram(fragment, vertex);\r\n\r\n    // get the locations\r\n    var locations;\r\n    if (!this.defaultLocations_) {\r\n      locations = new Locations(gl, program);\r\n      this.defaultLocations_ = locations;\r\n    } else {\r\n      locations = this.defaultLocations_;\r\n    }\r\n\r\n    context.useProgram(program);\r\n\r\n    // enable the vertex attrib arrays\r\n    gl.enableVertexAttribArray(locations.a_lastPos);\r\n    gl.vertexAttribPointer(locations.a_lastPos, 2, FLOAT,\r\n      false, 28, 0);\r\n\r\n    gl.enableVertexAttribArray(locations.a_position);\r\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\r\n      false, 28, 8);\r\n\r\n    gl.enableVertexAttribArray(locations.a_nextPos);\r\n    gl.vertexAttribPointer(locations.a_nextPos, 2, FLOAT,\r\n      false, 28, 16);\r\n\r\n    gl.enableVertexAttribArray(locations.a_direction);\r\n    gl.vertexAttribPointer(locations.a_direction, 1, FLOAT,\r\n      false, 28, 24);\r\n\r\n    // Enable renderer specific uniforms.\r\n    gl.uniform2fv(locations.u_size, size);\r\n    gl.uniform1f(locations.u_pixelRatio, pixelRatio);\r\n\r\n    return locations;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLLineStringReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {\r\n    gl.disableVertexAttribArray(locations.a_lastPos);\r\n    gl.disableVertexAttribArray(locations.a_position);\r\n    gl.disableVertexAttribArray(locations.a_nextPos);\r\n    gl.disableVertexAttribArray(locations.a_direction);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLLineStringReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {\r\n    //Save GL parameters.\r\n    var tmpDepthFunc = /** @type {number} */ (gl.getParameter(gl.DEPTH_FUNC));\r\n    var tmpDepthMask = /** @type {boolean} */ (gl.getParameter(gl.DEPTH_WRITEMASK));\r\n\r\n    if (!hitDetection) {\r\n      gl.enable(gl.DEPTH_TEST);\r\n      gl.depthMask(true);\r\n      gl.depthFunc(gl.NOTEQUAL);\r\n    }\r\n\r\n    if (!isEmpty(skippedFeaturesHash)) {\r\n      this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\r\n    } else {\r\n      //Draw by style groups to minimize drawElements() calls.\r\n      var i, start, end, nextStyle;\r\n      end = this.startIndices[this.startIndices.length - 1];\r\n      for (i = this.styleIndices_.length - 1; i >= 0; --i) {\r\n        start = this.styleIndices_[i];\r\n        nextStyle = this.styles_[i];\r\n        this.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\r\n        this.drawElements(gl, context, start, end);\r\n        gl.clear(gl.DEPTH_BUFFER_BIT);\r\n        end = start;\r\n      }\r\n    }\r\n    if (!hitDetection) {\r\n      gl.disable(gl.DEPTH_TEST);\r\n      gl.clear(gl.DEPTH_BUFFER_BIT);\r\n      //Restore GL parameters.\r\n      gl.depthMask(tmpDepthMask);\r\n      gl.depthFunc(tmpDepthFunc);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {WebGLRenderingContext} gl gl.\r\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\r\n   * @param {Object} skippedFeaturesHash Ids of features to skip.\r\n   */\r\n  WebGLLineStringReplay.prototype.drawReplaySkipping_ = function drawReplaySkipping_ (gl, context, skippedFeaturesHash) {\r\n    var i, start, end, nextStyle, groupStart, feature, featureIndex, featureStart;\r\n    featureIndex = this.startIndices.length - 2;\r\n    end = start = this.startIndices[featureIndex + 1];\r\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\r\n      nextStyle = this.styles_[i];\r\n      this.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\r\n      groupStart = this.styleIndices_[i];\r\n\r\n      while (featureIndex >= 0 &&\r\n          this.startIndices[featureIndex] >= groupStart) {\r\n        featureStart = this.startIndices[featureIndex];\r\n        feature = this.startIndicesFeature[featureIndex];\r\n\r\n        if (skippedFeaturesHash[getUid(feature)]) {\r\n          if (start !== end) {\r\n            this.drawElements(gl, context, start, end);\r\n            gl.clear(gl.DEPTH_BUFFER_BIT);\r\n          }\r\n          end = featureStart;\r\n        }\r\n        featureIndex--;\r\n        start = featureStart;\r\n      }\r\n      if (start !== end) {\r\n        this.drawElements(gl, context, start, end);\r\n        gl.clear(gl.DEPTH_BUFFER_BIT);\r\n      }\r\n      start = end = groupStart;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLLineStringReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\r\n    var i, start, end, nextStyle, groupStart, feature, featureIndex;\r\n    featureIndex = this.startIndices.length - 2;\r\n    end = this.startIndices[featureIndex + 1];\r\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\r\n      nextStyle = this.styles_[i];\r\n      this.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\r\n      groupStart = this.styleIndices_[i];\r\n\r\n      while (featureIndex >= 0 &&\r\n          this.startIndices[featureIndex] >= groupStart) {\r\n        start = this.startIndices[featureIndex];\r\n        feature = this.startIndicesFeature[featureIndex];\r\n\r\n        if (skippedFeaturesHash[getUid(feature)] === undefined &&\r\n            feature.getGeometry() &&\r\n            (opt_hitExtent === undefined || intersects(\r\n              /** @type {Array<number>} */ (opt_hitExtent),\r\n              feature.getGeometry().getExtent()))) {\r\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n          this.drawElements(gl, context, start, end);\r\n\r\n          var result = featureCallback(feature);\r\n\r\n          if (result) {\r\n            return result;\r\n          }\r\n\r\n        }\r\n        featureIndex--;\r\n        end = start;\r\n      }\r\n    }\r\n    return undefined;\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {WebGLRenderingContext} gl gl.\r\n   * @param {Array<number>} color Color.\r\n   * @param {number} lineWidth Line width.\r\n   * @param {number} miterLimit Miter limit.\r\n   */\r\n  WebGLLineStringReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (gl, color, lineWidth, miterLimit) {\r\n    gl.uniform4fv(this.defaultLocations_.u_color, color);\r\n    gl.uniform1f(this.defaultLocations_.u_lineWidth, lineWidth);\r\n    gl.uniform1f(this.defaultLocations_.u_miterLimit, miterLimit);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLLineStringReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\r\n    var strokeStyleLineCap = strokeStyle.getLineCap();\r\n    this.state_.lineCap = strokeStyleLineCap !== undefined ?\r\n      strokeStyleLineCap : DEFAULT_LINECAP;\r\n    var strokeStyleLineDash = strokeStyle.getLineDash();\r\n    this.state_.lineDash = strokeStyleLineDash ?\r\n      strokeStyleLineDash : DEFAULT_LINEDASH;\r\n    var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\r\n    this.state_.lineDashOffset = strokeStyleLineDashOffset ?\r\n      strokeStyleLineDashOffset : DEFAULT_LINEDASHOFFSET;\r\n    var strokeStyleLineJoin = strokeStyle.getLineJoin();\r\n    this.state_.lineJoin = strokeStyleLineJoin !== undefined ?\r\n      strokeStyleLineJoin : DEFAULT_LINEJOIN;\r\n    var strokeStyleColor = strokeStyle.getColor();\r\n    if (!(strokeStyleColor instanceof CanvasGradient) &&\r\n        !(strokeStyleColor instanceof CanvasPattern)) {\r\n      strokeStyleColor = asArray(strokeStyleColor).map(function(c, i) {\r\n        return i != 3 ? c / 255 : c;\r\n      }) || DEFAULT_STROKESTYLE;\r\n    } else {\r\n      strokeStyleColor = DEFAULT_STROKESTYLE;\r\n    }\r\n    var strokeStyleWidth = strokeStyle.getWidth();\r\n    strokeStyleWidth = strokeStyleWidth !== undefined ?\r\n      strokeStyleWidth : DEFAULT_LINEWIDTH;\r\n    var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\r\n    strokeStyleMiterLimit = strokeStyleMiterLimit !== undefined ?\r\n      strokeStyleMiterLimit : DEFAULT_MITERLIMIT;\r\n    if (!this.state_.strokeColor || !equals(this.state_.strokeColor, strokeStyleColor) ||\r\n        this.state_.lineWidth !== strokeStyleWidth || this.state_.miterLimit !== strokeStyleMiterLimit) {\r\n      this.state_.changed = true;\r\n      this.state_.strokeColor = strokeStyleColor;\r\n      this.state_.lineWidth = strokeStyleWidth;\r\n      this.state_.miterLimit = strokeStyleMiterLimit;\r\n      this.styles_.push([strokeStyleColor, strokeStyleWidth, strokeStyleMiterLimit]);\r\n    }\r\n  };\n\n  return WebGLLineStringReplay;\n}(WebGLReplay));\r\n\r\n\r\nexport default WebGLLineStringReplay;\r\n\r\n//# sourceMappingURL=LineStringReplay.js.map","/**\r\n * @module ol/render/webgl/polygonreplay/defaultshader\r\n */\r\n// This file is automatically generated, do not edit.\r\n// Run `make shaders` to generate, and commit the result.\r\n\r\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\r\nimport WebGLFragment from '../../../webgl/Fragment.js';\r\nimport WebGLVertex from '../../../webgl/Vertex.js';\r\n\r\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\r\n  'precision mediump float;\\n\\n\\n\\nuniform vec4 u_color;\\nuniform float u_opacity;\\n\\nvoid main(void) {\\n  gl_FragColor = u_color;\\n  float alpha = u_color.a * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\r\n  'precision mediump float;uniform vec4 e;uniform float f;void main(void){gl_FragColor=e;float alpha=e.a*f;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\r\n\r\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\r\n  '\\n\\nattribute vec2 a_position;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\n\\nvoid main(void) {\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\\n}\\n\\n\\n' :\r\n  'attribute vec2 a;uniform mat4 b;uniform mat4 c;uniform mat4 d;void main(void){gl_Position=b*vec4(a,0.0,1.0);}');\r\n\r\n//# sourceMappingURL=defaultshader.js.map","/**\r\n * @module ol/render/webgl/polygonreplay/defaultshader/Locations\r\n */\r\n// This file is automatically generated, do not edit\r\n// Run `make shaders` to generate, and commit the result.\r\n\r\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\r\n\r\nvar Locations = function Locations(gl, program) {\r\n\r\n  /**\r\n   * @type {WebGLUniformLocation}\r\n   */\r\n  this.u_projectionMatrix = gl.getUniformLocation(\r\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'b');\r\n\r\n  /**\r\n   * @type {WebGLUniformLocation}\r\n   */\r\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\r\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'c');\r\n\r\n  /**\r\n   * @type {WebGLUniformLocation}\r\n   */\r\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\r\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'd');\r\n\r\n  /**\r\n   * @type {WebGLUniformLocation}\r\n   */\r\n  this.u_color = gl.getUniformLocation(\r\n    program, DEBUG_WEBGL ? 'u_color' : 'e');\r\n\r\n  /**\r\n   * @type {WebGLUniformLocation}\r\n   */\r\n  this.u_opacity = gl.getUniformLocation(\r\n    program, DEBUG_WEBGL ? 'u_opacity' : 'f');\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.a_position = gl.getAttribLocation(\r\n    program, DEBUG_WEBGL ? 'a_position' : 'a');\r\n\r\n};\r\n\r\nexport default Locations;\r\n\r\n//# sourceMappingURL=Locations.js.map","/**\r\n * @module ol/structs/LinkedList\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} Item\r\n * @property {Item} [prev]\r\n * @property {Item} [next]\r\n * @property {?} data\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Creates an empty linked list structure.\r\n */\r\nvar LinkedList = function LinkedList(opt_circular) {\r\n\r\n  /**\r\n   * @private\r\n   * @type {Item|undefined}\r\n   */\r\n  this.first_;\r\n\r\n  /**\r\n   * @private\r\n   * @type {Item|undefined}\r\n   */\r\n  this.last_;\r\n\r\n  /**\r\n   * @private\r\n   * @type {Item|undefined}\r\n   */\r\n  this.head_;\r\n\r\n  /**\r\n   * @private\r\n   * @type {boolean}\r\n   */\r\n  this.circular_ = opt_circular === undefined ? true : opt_circular;\r\n\r\n  /**\r\n   * @private\r\n   * @type {number}\r\n   */\r\n  this.length_ = 0;\r\n\r\n};\r\n\r\n/**\r\n * Inserts an item into the linked list right after the current one.\r\n *\r\n * @param {?} data Item data.\r\n */\r\nLinkedList.prototype.insertItem = function insertItem (data) {\r\n\r\n  /** @type {Item} */\r\n  var item = {\r\n    prev: undefined,\r\n    next: undefined,\r\n    data: data\r\n  };\r\n\r\n  var head = this.head_;\r\n\r\n  //Initialize the list.\r\n  if (!head) {\r\n    this.first_ = item;\r\n    this.last_ = item;\r\n    if (this.circular_) {\r\n      item.next = item;\r\n      item.prev = item;\r\n    }\r\n  } else {\r\n    //Link the new item to the adjacent ones.\r\n    var next = head.next;\r\n    item.prev = head;\r\n    item.next = next;\r\n    head.next = item;\r\n    if (next) {\r\n      next.prev = item;\r\n    }\r\n\r\n    if (head === this.last_) {\r\n      this.last_ = item;\r\n    }\r\n  }\r\n  this.head_ = item;\r\n  this.length_++;\r\n};\r\n\r\n/**\r\n * Removes the current item from the list. Sets the cursor to the next item,\r\n * if possible.\r\n */\r\nLinkedList.prototype.removeItem = function removeItem () {\r\n  var head = this.head_;\r\n  if (head) {\r\n    var next = head.next;\r\n    var prev = head.prev;\r\n    if (next) {\r\n      next.prev = prev;\r\n    }\r\n    if (prev) {\r\n      prev.next = next;\r\n    }\r\n    this.head_ = next || prev;\r\n\r\n    if (this.first_ === this.last_) {\r\n      this.head_ = undefined;\r\n      this.first_ = undefined;\r\n      this.last_ = undefined;\r\n    } else if (this.first_ === head) {\r\n      this.first_ = this.head_;\r\n    } else if (this.last_ === head) {\r\n      this.last_ = prev ? this.head_.prev : this.head_;\r\n    }\r\n    this.length_--;\r\n  }\r\n};\r\n\r\n/**\r\n * Sets the cursor to the first item, and returns the associated data.\r\n *\r\n * @return {?} Item data.\r\n */\r\nLinkedList.prototype.firstItem = function firstItem () {\r\n  this.head_ = this.first_;\r\n  if (this.head_) {\r\n    return this.head_.data;\r\n  }\r\n  return undefined;\r\n};\r\n\r\n/**\r\n* Sets the cursor to the last item, and returns the associated data.\r\n*\r\n* @return {?} Item data.\r\n*/\r\nLinkedList.prototype.lastItem = function lastItem () {\r\n  this.head_ = this.last_;\r\n  if (this.head_) {\r\n    return this.head_.data;\r\n  }\r\n  return undefined;\r\n};\r\n\r\n/**\r\n * Sets the cursor to the next item, and returns the associated data.\r\n *\r\n * @return {?} Item data.\r\n */\r\nLinkedList.prototype.nextItem = function nextItem () {\r\n  if (this.head_ && this.head_.next) {\r\n    this.head_ = this.head_.next;\r\n    return this.head_.data;\r\n  }\r\n  return undefined;\r\n};\r\n\r\n/**\r\n * Returns the next item's data without moving the cursor.\r\n *\r\n * @return {?} Item data.\r\n */\r\nLinkedList.prototype.getNextItem = function getNextItem () {\r\n  if (this.head_ && this.head_.next) {\r\n    return this.head_.next.data;\r\n  }\r\n  return undefined;\r\n};\r\n\r\n/**\r\n * Sets the cursor to the previous item, and returns the associated data.\r\n *\r\n * @return {?} Item data.\r\n */\r\nLinkedList.prototype.prevItem = function prevItem () {\r\n  if (this.head_ && this.head_.prev) {\r\n    this.head_ = this.head_.prev;\r\n    return this.head_.data;\r\n  }\r\n  return undefined;\r\n};\r\n\r\n/**\r\n * Returns the previous item's data without moving the cursor.\r\n *\r\n * @return {?} Item data.\r\n */\r\nLinkedList.prototype.getPrevItem = function getPrevItem () {\r\n  if (this.head_ && this.head_.prev) {\r\n    return this.head_.prev.data;\r\n  }\r\n  return undefined;\r\n};\r\n\r\n/**\r\n * Returns the current item's data.\r\n *\r\n * @return {?} Item data.\r\n */\r\nLinkedList.prototype.getCurrItem = function getCurrItem () {\r\n  if (this.head_) {\r\n    return this.head_.data;\r\n  }\r\n  return undefined;\r\n};\r\n\r\n/**\r\n * Sets the first item of the list. This only works for circular lists, and sets\r\n * the last item accordingly.\r\n */\r\nLinkedList.prototype.setFirstItem = function setFirstItem () {\r\n  if (this.circular_ && this.head_) {\r\n    this.first_ = this.head_;\r\n    this.last_ = this.head_.prev;\r\n  }\r\n};\r\n\r\n/**\r\n * Concatenates two lists.\r\n * @param {LinkedList} list List to merge into the current list.\r\n */\r\nLinkedList.prototype.concat = function concat (list) {\r\n  if (list.head_) {\r\n    if (this.head_) {\r\n      var end = this.head_.next;\r\n      this.head_.next = list.first_;\r\n      list.first_.prev = this.head_;\r\n      end.prev = list.last_;\r\n      list.last_.next = end;\r\n      this.length_ += list.length_;\r\n    } else {\r\n      this.head_ = list.head_;\r\n      this.first_ = list.first_;\r\n      this.last_ = list.last_;\r\n      this.length_ = list.length_;\r\n    }\r\n    list.head_ = undefined;\r\n    list.first_ = undefined;\r\n    list.last_ = undefined;\r\n    list.length_ = 0;\r\n  }\r\n};\r\n\r\n/**\r\n * Returns the current length of the list.\r\n *\r\n * @return {number} Length.\r\n */\r\nLinkedList.prototype.getLength = function getLength () {\r\n  return this.length_;\r\n};\r\n\r\n\r\nexport default LinkedList;\r\n\r\n//# sourceMappingURL=LinkedList.js.map","/**\r\n * @module ol/render/webgl/PolygonReplay\r\n */\r\nimport {getUid} from '../../util.js';\r\nimport {equals} from '../../array.js';\r\nimport {asArray} from '../../color.js';\r\nimport {intersects} from '../../extent.js';\r\nimport {isEmpty} from '../../obj.js';\r\nimport {linearRingContainsXY} from '../../geom/flat/contains.js';\r\nimport {linearRingIsClockwise} from '../../geom/flat/orient.js';\r\nimport {translate} from '../../geom/flat/transform.js';\r\nimport {fragment, vertex} from './polygonreplay/defaultshader.js';\r\nimport Locations from './polygonreplay/defaultshader/Locations.js';\r\nimport WebGLLineStringReplay from './LineStringReplay.js';\r\nimport WebGLReplay from './Replay.js';\r\nimport {triangleIsCounterClockwise, EPSILON, DEFAULT_FILLSTYLE} from '../webgl.js';\r\nimport Stroke from '../../style/Stroke.js';\r\nimport LinkedList from '../../structs/LinkedList.js';\r\nimport RBush from '../../structs/RBush.js';\r\nimport {FLOAT} from '../../webgl.js';\r\nimport WebGLBuffer from '../../webgl/Buffer.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} PolygonVertex\r\n * @property {number} x\r\n * @property {number} y\r\n * @property {number} i\r\n * @property {boolean} [reflex]\r\n */\r\n\r\n/**\r\n * @typedef {Object} PolygonSegment\r\n * @property {PolygonVertex} p0\r\n * @property {PolygonVertex} p1\r\n */\r\n\r\n\r\nvar WebGLPolygonReplay = /*@__PURE__*/(function (WebGLReplay) {\n  function WebGLPolygonReplay(tolerance, maxExtent) {\r\n    WebGLReplay.call(this, tolerance, maxExtent);\r\n\r\n    this.lineStringReplay = new WebGLLineStringReplay(\r\n      tolerance, maxExtent);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./polygonreplay/defaultshader/Locations.js\").default}\r\n     */\r\n    this.defaultLocations_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<Array<number>>}\r\n     */\r\n    this.styles_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.styleIndices_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {{fillColor: (Array<number>|null),\r\n     *         changed: boolean}|null}\r\n     */\r\n    this.state_ = {\r\n      fillColor: null,\r\n      changed: false\r\n    };\r\n\r\n  }\n\n  if ( WebGLReplay ) WebGLPolygonReplay.__proto__ = WebGLReplay;\n  WebGLPolygonReplay.prototype = Object.create( WebGLReplay && WebGLReplay.prototype );\n  WebGLPolygonReplay.prototype.constructor = WebGLPolygonReplay;\r\n\r\n  /**\r\n   * Draw one polygon.\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {Array<Array<number>>} holeFlatCoordinates Hole flat coordinates.\r\n   * @param {number} stride Stride.\r\n   * @private\r\n   */\r\n  WebGLPolygonReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, holeFlatCoordinates, stride) {\r\n    // Triangulate the polygon\r\n    var outerRing = new LinkedList();\r\n    var rtree = new RBush();\r\n    // Initialize the outer ring\r\n    this.processFlatCoordinates_(flatCoordinates, stride, outerRing, rtree, true);\r\n    var maxCoords = this.getMaxCoords_(outerRing);\r\n\r\n    // Eliminate holes, if there are any\r\n    if (holeFlatCoordinates.length) {\r\n      var i, ii;\r\n      var holeLists = [];\r\n      for (i = 0, ii = holeFlatCoordinates.length; i < ii; ++i) {\r\n        var holeList = {\r\n          list: new LinkedList(),\r\n          maxCoords: undefined,\r\n          rtree: new RBush()\r\n        };\r\n        holeLists.push(holeList);\r\n        this.processFlatCoordinates_(holeFlatCoordinates[i],\r\n          stride, holeList.list, holeList.rtree, false);\r\n        this.classifyPoints_(holeList.list, holeList.rtree, true);\r\n        holeList.maxCoords = this.getMaxCoords_(holeList.list);\r\n      }\r\n      holeLists.sort(function(a, b) {\r\n        return b.maxCoords[0] === a.maxCoords[0] ?\r\n          a.maxCoords[1] - b.maxCoords[1] : b.maxCoords[0] - a.maxCoords[0];\r\n      });\r\n      for (i = 0; i < holeLists.length; ++i) {\r\n        var currList = holeLists[i].list;\r\n        var start = currList.firstItem();\r\n        var currItem = start;\r\n        var intersection = (void 0);\r\n        do {\r\n          //TODO: Triangulate holes when they intersect the outer ring.\r\n          if (this.getIntersections_(currItem, rtree).length) {\r\n            intersection = true;\r\n            break;\r\n          }\r\n          currItem = currList.nextItem();\r\n        } while (start !== currItem);\r\n        if (!intersection) {\r\n          if (this.bridgeHole_(currList, holeLists[i].maxCoords[0], outerRing, maxCoords[0], rtree)) {\r\n            rtree.concat(holeLists[i].rtree);\r\n            this.classifyPoints_(outerRing, rtree, false);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.classifyPoints_(outerRing, rtree, false);\r\n    }\r\n    this.triangulate_(outerRing, rtree);\r\n  };\r\n\r\n  /**\r\n   * Inserts flat coordinates in a linked list and adds them to the vertex buffer.\r\n   * @private\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} stride Stride.\r\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list.\r\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\r\n   * @param {boolean} clockwise Coordinate order should be clockwise.\r\n   */\r\n  WebGLPolygonReplay.prototype.processFlatCoordinates_ = function processFlatCoordinates_ (flatCoordinates, stride, list, rtree, clockwise) {\r\n    var isClockwise = linearRingIsClockwise(flatCoordinates,\r\n      0, flatCoordinates.length, stride);\r\n    var i, ii;\r\n    var n = this.vertices.length / 2;\r\n    /** @type {PolygonVertex} */\r\n    var start;\r\n    /** @type {PolygonVertex} */\r\n    var p0;\r\n    /** @type {PolygonVertex} */\r\n    var p1;\r\n    var extents = [];\r\n    var segments = [];\r\n    if (clockwise === isClockwise) {\r\n      start = this.createPoint_(flatCoordinates[0], flatCoordinates[1], n++);\r\n      p0 = start;\r\n      for (i = stride, ii = flatCoordinates.length; i < ii; i += stride) {\r\n        p1 = this.createPoint_(flatCoordinates[i], flatCoordinates[i + 1], n++);\r\n        segments.push(this.insertItem_(p0, p1, list));\r\n        extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\r\n          Math.max(p0.y, p1.y)]);\r\n        p0 = p1;\r\n      }\r\n      segments.push(this.insertItem_(p1, start, list));\r\n      extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\r\n        Math.max(p0.y, p1.y)]);\r\n    } else {\r\n      var end = flatCoordinates.length - stride;\r\n      start = this.createPoint_(flatCoordinates[end], flatCoordinates[end + 1], n++);\r\n      p0 = start;\r\n      for (i = end - stride, ii = 0; i >= ii; i -= stride) {\r\n        p1 = this.createPoint_(flatCoordinates[i], flatCoordinates[i + 1], n++);\r\n        segments.push(this.insertItem_(p0, p1, list));\r\n        extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\r\n          Math.max(p0.y, p1.y)]);\r\n        p0 = p1;\r\n      }\r\n      segments.push(this.insertItem_(p1, start, list));\r\n      extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\r\n        Math.max(p0.y, p1.y)]);\r\n    }\r\n    rtree.load(extents, segments);\r\n  };\r\n\r\n  /**\r\n   * Returns the rightmost coordinates of a polygon on the X axis.\r\n   * @private\r\n   * @param {import(\"../../structs/LinkedList.js\").default} list Polygons ring.\r\n   * @return {Array<number>} Max X coordinates.\r\n   */\r\n  WebGLPolygonReplay.prototype.getMaxCoords_ = function getMaxCoords_ (list) {\r\n    var start = list.firstItem();\r\n    var seg = start;\r\n    var maxCoords = [seg.p0.x, seg.p0.y];\r\n\r\n    do {\r\n      seg = list.nextItem();\r\n      if (seg.p0.x > maxCoords[0]) {\r\n        maxCoords = [seg.p0.x, seg.p0.y];\r\n      }\r\n    } while (seg !== start);\r\n\r\n    return maxCoords;\r\n  };\r\n\r\n  /**\r\n   * Classifies the points of a polygon list as convex, reflex. Removes collinear vertices.\r\n   * @private\r\n   * @param {import(\"../../structs/LinkedList.js\").default} list Polygon ring.\r\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\r\n   * @param {boolean} ccw The orientation of the polygon is counter-clockwise.\r\n   * @return {boolean} There were reclassified points.\r\n   */\r\n  WebGLPolygonReplay.prototype.classifyPoints_ = function classifyPoints_ (list, rtree, ccw) {\r\n    var start = list.firstItem();\r\n    var s0 = start;\r\n    var s1 = list.nextItem();\r\n    var pointsReclassified = false;\r\n    do {\r\n      var reflex = ccw ? triangleIsCounterClockwise(s1.p1.x,\r\n        s1.p1.y, s0.p1.x, s0.p1.y, s0.p0.x, s0.p0.y) :\r\n        triangleIsCounterClockwise(s0.p0.x, s0.p0.y, s0.p1.x,\r\n          s0.p1.y, s1.p1.x, s1.p1.y);\r\n      if (reflex === undefined) {\r\n        this.removeItem_(s0, s1, list, rtree);\r\n        pointsReclassified = true;\r\n        if (s1 === start) {\r\n          start = list.getNextItem();\r\n        }\r\n        s1 = s0;\r\n        list.prevItem();\r\n      } else if (s0.p1.reflex !== reflex) {\r\n        s0.p1.reflex = reflex;\r\n        pointsReclassified = true;\r\n      }\r\n      s0 = s1;\r\n      s1 = list.nextItem();\r\n    } while (s0 !== start);\r\n    return pointsReclassified;\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {import(\"../../structs/LinkedList.js\").default} hole Linked list of the hole.\r\n   * @param {number} holeMaxX Maximum X value of the hole.\r\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\r\n   * @param {number} listMaxX Maximum X value of the polygon.\r\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\r\n   * @return {boolean} Bridging was successful.\r\n   */\r\n  WebGLPolygonReplay.prototype.bridgeHole_ = function bridgeHole_ (hole, holeMaxX, list, listMaxX, rtree) {\r\n    var seg = hole.firstItem();\r\n    while (seg.p1.x !== holeMaxX) {\r\n      seg = hole.nextItem();\r\n    }\r\n\r\n    var p1 = seg.p1;\r\n    /** @type {PolygonVertex} */\r\n    var p2 = {x: listMaxX, y: p1.y, i: -1};\r\n    var minDist = Infinity;\r\n    var i, ii, bestPoint;\r\n    /** @type {PolygonVertex} */\r\n    var p5;\r\n\r\n    var intersectingSegments = this.getIntersections_({p0: p1, p1: p2}, rtree, true);\r\n    for (i = 0, ii = intersectingSegments.length; i < ii; ++i) {\r\n      var currSeg = intersectingSegments[i];\r\n      var intersection = this.calculateIntersection_(p1, p2, currSeg.p0,\r\n        currSeg.p1, true);\r\n      var dist = Math.abs(p1.x - intersection[0]);\r\n      if (dist < minDist && triangleIsCounterClockwise(p1.x, p1.y,\r\n        currSeg.p0.x, currSeg.p0.y, currSeg.p1.x, currSeg.p1.y) !== undefined) {\r\n        minDist = dist;\r\n        p5 = {x: intersection[0], y: intersection[1], i: -1};\r\n        seg = currSeg;\r\n      }\r\n    }\r\n    if (minDist === Infinity) {\r\n      return false;\r\n    }\r\n    bestPoint = seg.p1;\r\n\r\n    if (minDist > 0) {\r\n      var pointsInTriangle = this.getPointsInTriangle_(p1, p5, seg.p1, rtree);\r\n      if (pointsInTriangle.length) {\r\n        var theta = Infinity;\r\n        for (i = 0, ii = pointsInTriangle.length; i < ii; ++i) {\r\n          var currPoint = pointsInTriangle[i];\r\n          var currTheta = Math.atan2(p1.y - currPoint.y, p2.x - currPoint.x);\r\n          if (currTheta < theta || (currTheta === theta && currPoint.x < bestPoint.x)) {\r\n            theta = currTheta;\r\n            bestPoint = currPoint;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    seg = list.firstItem();\r\n    while (seg.p1.x !== bestPoint.x || seg.p1.y !== bestPoint.y) {\r\n      seg = list.nextItem();\r\n    }\r\n\r\n    //We clone the bridge points as they can have different convexity.\r\n    var p0Bridge = {x: p1.x, y: p1.y, i: p1.i, reflex: undefined};\r\n    var p1Bridge = {x: seg.p1.x, y: seg.p1.y, i: seg.p1.i, reflex: undefined};\r\n\r\n    hole.getNextItem().p0 = p0Bridge;\r\n    this.insertItem_(p1, seg.p1, hole, rtree);\r\n    this.insertItem_(p1Bridge, p0Bridge, hole, rtree);\r\n    seg.p1 = p1Bridge;\r\n    hole.setFirstItem();\r\n    list.concat(hole);\r\n\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\r\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\r\n   */\r\n  WebGLPolygonReplay.prototype.triangulate_ = function triangulate_ (list, rtree) {\r\n    var ccw = false;\r\n    var simple = this.isSimple_(list, rtree);\r\n\r\n    // Start clipping ears\r\n    while (list.getLength() > 3) {\r\n      if (simple) {\r\n        if (!this.clipEars_(list, rtree, simple, ccw)) {\r\n          if (!this.classifyPoints_(list, rtree, ccw)) {\r\n            // Due to the behavior of OL's PIP algorithm, the ear clipping cannot\r\n            // introduce touching segments. However, the original data may have some.\r\n            if (!this.resolveSelfIntersections_(list, rtree, true)) {\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (!this.clipEars_(list, rtree, simple, ccw)) {\r\n          // We ran out of ears, try to reclassify.\r\n          if (!this.classifyPoints_(list, rtree, ccw)) {\r\n            // We have a bad polygon, try to resolve local self-intersections.\r\n            if (!this.resolveSelfIntersections_(list, rtree)) {\r\n              simple = this.isSimple_(list, rtree);\r\n              if (!simple) {\r\n                // We have a really bad polygon, try more time consuming methods.\r\n                this.splitPolygon_(list, rtree);\r\n                break;\r\n              } else {\r\n                ccw = !this.isClockwise_(list);\r\n                this.classifyPoints_(list, rtree, ccw);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (list.getLength() === 3) {\r\n      var numIndices = this.indices.length;\r\n      this.indices[numIndices++] = list.getPrevItem().p0.i;\r\n      this.indices[numIndices++] = list.getCurrItem().p0.i;\r\n      this.indices[numIndices++] = list.getNextItem().p0.i;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\r\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\r\n   * @param {boolean} simple The polygon is simple.\r\n   * @param {boolean} ccw Orientation of the polygon is counter-clockwise.\r\n   * @return {boolean} There were processed ears.\r\n   */\r\n  WebGLPolygonReplay.prototype.clipEars_ = function clipEars_ (list, rtree, simple, ccw) {\r\n    var numIndices = this.indices.length;\r\n    var start = list.firstItem();\r\n    var s0 = list.getPrevItem();\r\n    var s1 = start;\r\n    var s2 = list.nextItem();\r\n    var s3 = list.getNextItem();\r\n    var p0, p1, p2;\r\n    var processedEars = false;\r\n    do {\r\n      p0 = s1.p0;\r\n      p1 = s1.p1;\r\n      p2 = s2.p1;\r\n      if (p1.reflex === false) {\r\n        // We might have a valid ear\r\n        var variableCriterion = (void 0);\r\n        if (simple) {\r\n          variableCriterion = this.getPointsInTriangle_(p0, p1, p2, rtree, true).length === 0;\r\n        } else {\r\n          variableCriterion = ccw ? this.diagonalIsInside_(s3.p1, p2, p1, p0,\r\n            s0.p0) : this.diagonalIsInside_(s0.p0, p0, p1, p2, s3.p1);\r\n        }\r\n        if ((simple || this.getIntersections_({p0: p0, p1: p2}, rtree).length === 0) &&\r\n            variableCriterion) {\r\n          //The diagonal is completely inside the polygon\r\n          if (simple || p0.reflex === false || p2.reflex === false ||\r\n              linearRingIsClockwise([s0.p0.x, s0.p0.y, p0.x,\r\n                p0.y, p1.x, p1.y, p2.x, p2.y, s3.p1.x, s3.p1.y], 0, 10, 2) === !ccw) {\r\n            //The diagonal is persumably valid, we have an ear\r\n            this.indices[numIndices++] = p0.i;\r\n            this.indices[numIndices++] = p1.i;\r\n            this.indices[numIndices++] = p2.i;\r\n            this.removeItem_(s1, s2, list, rtree);\r\n            if (s2 === start) {\r\n              start = s3;\r\n            }\r\n            processedEars = true;\r\n          }\r\n        }\r\n      }\r\n      // Else we have a reflex point.\r\n      s0 = list.getPrevItem();\r\n      s1 = list.getCurrItem();\r\n      s2 = list.nextItem();\r\n      s3 = list.getNextItem();\r\n    } while (s1 !== start && list.getLength() > 3);\r\n\r\n    return processedEars;\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\r\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\r\n   * @param {boolean=} opt_touch Resolve touching segments.\r\n   * @return {boolean} There were resolved intersections.\r\n  */\r\n  WebGLPolygonReplay.prototype.resolveSelfIntersections_ = function resolveSelfIntersections_ (list, rtree, opt_touch) {\r\n    var start = list.firstItem();\r\n    list.nextItem();\r\n    var s0 = start;\r\n    var s1 = list.nextItem();\r\n    var resolvedIntersections = false;\r\n\r\n    do {\r\n      var intersection = this.calculateIntersection_(s0.p0, s0.p1, s1.p0, s1.p1,\r\n        opt_touch);\r\n      if (intersection) {\r\n        var breakCond = false;\r\n        var numVertices = this.vertices.length;\r\n        var numIndices = this.indices.length;\r\n        var n = numVertices / 2;\r\n        var seg = list.prevItem();\r\n        list.removeItem();\r\n        rtree.remove(seg);\r\n        breakCond = (seg === start);\r\n        var p = (void 0);\r\n        if (opt_touch) {\r\n          if (intersection[0] === s0.p0.x && intersection[1] === s0.p0.y) {\r\n            list.prevItem();\r\n            p = s0.p0;\r\n            s1.p0 = p;\r\n            rtree.remove(s0);\r\n            breakCond = breakCond || (s0 === start);\r\n          } else {\r\n            p = s1.p1;\r\n            s0.p1 = p;\r\n            rtree.remove(s1);\r\n            breakCond = breakCond || (s1 === start);\r\n          }\r\n          list.removeItem();\r\n        } else {\r\n          p = this.createPoint_(intersection[0], intersection[1], n);\r\n          s0.p1 = p;\r\n          s1.p0 = p;\r\n          rtree.update([Math.min(s0.p0.x, s0.p1.x), Math.min(s0.p0.y, s0.p1.y),\r\n            Math.max(s0.p0.x, s0.p1.x), Math.max(s0.p0.y, s0.p1.y)], s0);\r\n          rtree.update([Math.min(s1.p0.x, s1.p1.x), Math.min(s1.p0.y, s1.p1.y),\r\n            Math.max(s1.p0.x, s1.p1.x), Math.max(s1.p0.y, s1.p1.y)], s1);\r\n        }\r\n\r\n        this.indices[numIndices++] = seg.p0.i;\r\n        this.indices[numIndices++] = seg.p1.i;\r\n        this.indices[numIndices++] = p.i;\r\n\r\n        resolvedIntersections = true;\r\n        if (breakCond) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      s0 = list.getPrevItem();\r\n      s1 = list.nextItem();\r\n    } while (s0 !== start);\r\n    return resolvedIntersections;\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\r\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\r\n   * @return {boolean} The polygon is simple.\r\n   */\r\n  WebGLPolygonReplay.prototype.isSimple_ = function isSimple_ (list, rtree) {\r\n    var start = list.firstItem();\r\n    var seg = start;\r\n    do {\r\n      if (this.getIntersections_(seg, rtree).length) {\r\n        return false;\r\n      }\r\n      seg = list.nextItem();\r\n    } while (seg !== start);\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\r\n   * @return {boolean} Orientation is clockwise.\r\n   */\r\n  WebGLPolygonReplay.prototype.isClockwise_ = function isClockwise_ (list) {\r\n    var length = list.getLength() * 2;\r\n    var flatCoordinates = new Array(length);\r\n    var start = list.firstItem();\r\n    var seg = start;\r\n    var i = 0;\r\n    do {\r\n      flatCoordinates[i++] = seg.p0.x;\r\n      flatCoordinates[i++] = seg.p0.y;\r\n      seg = list.nextItem();\r\n    } while (seg !== start);\r\n    return linearRingIsClockwise(flatCoordinates, 0, length, 2);\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\r\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\r\n   */\r\n  WebGLPolygonReplay.prototype.splitPolygon_ = function splitPolygon_ (list, rtree) {\r\n    var start = list.firstItem();\r\n    var s0 = start;\r\n    do {\r\n      var intersections = this.getIntersections_(s0, rtree);\r\n      if (intersections.length) {\r\n        var s1 = intersections[0];\r\n        var n = this.vertices.length / 2;\r\n        var intersection = this.calculateIntersection_(s0.p0,\r\n          s0.p1, s1.p0, s1.p1);\r\n        var p = this.createPoint_(intersection[0], intersection[1], n);\r\n        var newPolygon = new LinkedList();\r\n        var newRtree = new RBush();\r\n        this.insertItem_(p, s0.p1, newPolygon, newRtree);\r\n        s0.p1 = p;\r\n        rtree.update([Math.min(s0.p0.x, p.x), Math.min(s0.p0.y, p.y),\r\n          Math.max(s0.p0.x, p.x), Math.max(s0.p0.y, p.y)], s0);\r\n        var currItem = list.nextItem();\r\n        while (currItem !== s1) {\r\n          this.insertItem_(currItem.p0, currItem.p1, newPolygon, newRtree);\r\n          rtree.remove(currItem);\r\n          list.removeItem();\r\n          currItem = list.getCurrItem();\r\n        }\r\n        this.insertItem_(s1.p0, p, newPolygon, newRtree);\r\n        s1.p0 = p;\r\n        rtree.update([Math.min(s1.p1.x, p.x), Math.min(s1.p1.y, p.y),\r\n          Math.max(s1.p1.x, p.x), Math.max(s1.p1.y, p.y)], s1);\r\n        this.classifyPoints_(list, rtree, false);\r\n        this.triangulate_(list, rtree);\r\n        this.classifyPoints_(newPolygon, newRtree, false);\r\n        this.triangulate_(newPolygon, newRtree);\r\n        break;\r\n      }\r\n      s0 = list.nextItem();\r\n    } while (s0 !== start);\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {number} x X coordinate.\r\n   * @param {number} y Y coordinate.\r\n   * @param {number} i Index.\r\n   * @return {PolygonVertex} List item.\r\n   */\r\n  WebGLPolygonReplay.prototype.createPoint_ = function createPoint_ (x, y, i) {\r\n    var numVertices = this.vertices.length;\r\n    this.vertices[numVertices++] = x;\r\n    this.vertices[numVertices++] = y;\r\n    /** @type {PolygonVertex} */\r\n    var p = {\r\n      x: x,\r\n      y: y,\r\n      i: i,\r\n      reflex: undefined\r\n    };\r\n    return p;\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {PolygonVertex} p0 First point of segment.\r\n   * @param {PolygonVertex} p1 Second point of segment.\r\n   * @param {import(\"../../structs/LinkedList.js\").default} list Polygon ring.\r\n   * @param {import(\"../../structs/RBush.js\").default=} opt_rtree Insert the segment into the R-Tree.\r\n   * @return {PolygonSegment} segment.\r\n   */\r\n  WebGLPolygonReplay.prototype.insertItem_ = function insertItem_ (p0, p1, list, opt_rtree) {\r\n    var seg = {\r\n      p0: p0,\r\n      p1: p1\r\n    };\r\n    list.insertItem(seg);\r\n    if (opt_rtree) {\r\n      opt_rtree.insert([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y),\r\n        Math.max(p0.x, p1.x), Math.max(p0.y, p1.y)], seg);\r\n    }\r\n    return seg;\r\n  };\r\n\r\n  /**\r\n    * @private\r\n    * @param {PolygonSegment} s0 Segment before the remove candidate.\r\n    * @param {PolygonSegment} s1 Remove candidate segment.\r\n    * @param {import(\"../../structs/LinkedList.js\").default} list Polygon ring.\r\n    * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\r\n    */\r\n  WebGLPolygonReplay.prototype.removeItem_ = function removeItem_ (s0, s1, list, rtree) {\r\n    if (list.getCurrItem() === s1) {\r\n      list.removeItem();\r\n      s0.p1 = s1.p1;\r\n      rtree.remove(s1);\r\n      rtree.update([Math.min(s0.p0.x, s0.p1.x), Math.min(s0.p0.y, s0.p1.y),\r\n        Math.max(s0.p0.x, s0.p1.x), Math.max(s0.p0.y, s0.p1.y)], s0);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {PolygonVertex} p0 First point.\r\n   * @param {PolygonVertex} p1 Second point.\r\n   * @param {PolygonVertex} p2 Third point.\r\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\r\n   * @param {boolean=} opt_reflex Only include reflex points.\r\n   * @return {Array<PolygonVertex>} Points in the triangle.\r\n   */\r\n  WebGLPolygonReplay.prototype.getPointsInTriangle_ = function getPointsInTriangle_ (p0, p1, p2, rtree, opt_reflex) {\r\n    var result = [];\r\n    var segmentsInExtent = rtree.getInExtent([Math.min(p0.x, p1.x, p2.x),\r\n      Math.min(p0.y, p1.y, p2.y), Math.max(p0.x, p1.x, p2.x), Math.max(p0.y,\r\n        p1.y, p2.y)]);\r\n    for (var i = 0, ii = segmentsInExtent.length; i < ii; ++i) {\r\n      for (var j in segmentsInExtent[i]) {\r\n        var p = segmentsInExtent[i][j];\r\n        if (typeof p === 'object' && (!opt_reflex || p.reflex)) {\r\n          if ((p.x !== p0.x || p.y !== p0.y) && (p.x !== p1.x || p.y !== p1.y) &&\r\n              (p.x !== p2.x || p.y !== p2.y) && result.indexOf(p) === -1 &&\r\n              linearRingContainsXY([p0.x, p0.y, p1.x, p1.y, p2.x, p2.y], 0, 6, 2, p.x, p.y)) {\r\n            result.push(p);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {PolygonSegment} segment Segment.\r\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\r\n   * @param {boolean=} opt_touch Touching segments should be considered an intersection.\r\n   * @return {Array<PolygonSegment>} Intersecting segments.\r\n   */\r\n  WebGLPolygonReplay.prototype.getIntersections_ = function getIntersections_ (segment, rtree, opt_touch) {\r\n    var p0 = segment.p0;\r\n    var p1 = segment.p1;\r\n    var segmentsInExtent = rtree.getInExtent([Math.min(p0.x, p1.x),\r\n      Math.min(p0.y, p1.y), Math.max(p0.x, p1.x), Math.max(p0.y, p1.y)]);\r\n    var result = [];\r\n    for (var i = 0, ii = segmentsInExtent.length; i < ii; ++i) {\r\n      var currSeg = segmentsInExtent[i];\r\n      if (segment !== currSeg && (opt_touch || currSeg.p0 !== p1 || currSeg.p1 !== p0) &&\r\n          this.calculateIntersection_(p0, p1, currSeg.p0, currSeg.p1, opt_touch)) {\r\n        result.push(currSeg);\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  /**\r\n   * Line intersection algorithm by Paul Bourke.\r\n   * See http://paulbourke.net/geometry/pointlineplane/.\r\n   *\r\n   * @private\r\n   * @param {PolygonVertex} p0 First point.\r\n   * @param {PolygonVertex} p1 Second point.\r\n   * @param {PolygonVertex} p2 Third point.\r\n   * @param {PolygonVertex} p3 Fourth point.\r\n   * @param {boolean=} opt_touch Touching segments should be considered an intersection.\r\n   * @return {Array<number>|undefined} Intersection coordinates.\r\n   */\r\n  WebGLPolygonReplay.prototype.calculateIntersection_ = function calculateIntersection_ (p0, p1, p2, p3, opt_touch) {\r\n    var denom = (p3.y - p2.y) * (p1.x - p0.x) - (p3.x - p2.x) * (p1.y - p0.y);\r\n    if (denom !== 0) {\r\n      var ua = ((p3.x - p2.x) * (p0.y - p2.y) - (p3.y - p2.y) * (p0.x - p2.x)) / denom;\r\n      var ub = ((p1.x - p0.x) * (p0.y - p2.y) - (p1.y - p0.y) * (p0.x - p2.x)) / denom;\r\n      if ((!opt_touch && ua > EPSILON && ua < 1 - EPSILON &&\r\n          ub > EPSILON && ub < 1 - EPSILON) || (opt_touch &&\r\n          ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1)) {\r\n        return [p0.x + ua * (p1.x - p0.x), p0.y + ua * (p1.y - p0.y)];\r\n      }\r\n    }\r\n    return undefined;\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {PolygonVertex} p0 Point before the start of the diagonal.\r\n   * @param {PolygonVertex} p1 Start point of the diagonal.\r\n   * @param {PolygonVertex} p2 Ear candidate.\r\n   * @param {PolygonVertex} p3 End point of the diagonal.\r\n   * @param {PolygonVertex} p4 Point after the end of the diagonal.\r\n   * @return {boolean} Diagonal is inside the polygon.\r\n   */\r\n  WebGLPolygonReplay.prototype.diagonalIsInside_ = function diagonalIsInside_ (p0, p1, p2, p3, p4) {\r\n    if (p1.reflex === undefined || p3.reflex === undefined) {\r\n      return false;\r\n    }\r\n    var p1IsLeftOf = (p2.x - p3.x) * (p1.y - p3.y) > (p2.y - p3.y) * (p1.x - p3.x);\r\n    var p1IsRightOf = (p4.x - p3.x) * (p1.y - p3.y) < (p4.y - p3.y) * (p1.x - p3.x);\r\n    var p3IsLeftOf = (p0.x - p1.x) * (p3.y - p1.y) > (p0.y - p1.y) * (p3.x - p1.x);\r\n    var p3IsRightOf = (p2.x - p1.x) * (p3.y - p1.y) < (p2.y - p1.y) * (p3.x - p1.x);\r\n    var p1InCone = p3.reflex ? p1IsRightOf || p1IsLeftOf : p1IsRightOf && p1IsLeftOf;\r\n    var p3InCone = p1.reflex ? p3IsRightOf || p3IsLeftOf : p3IsRightOf && p3IsLeftOf;\r\n    return p1InCone && p3InCone;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {\r\n    var endss = multiPolygonGeometry.getEndss();\r\n    var stride = multiPolygonGeometry.getStride();\r\n    var currIndex = this.indices.length;\r\n    var currLineIndex = this.lineStringReplay.getCurrentIndex();\r\n    var flatCoordinates = multiPolygonGeometry.getFlatCoordinates();\r\n    var i, ii, j, jj;\r\n    var start = 0;\r\n    for (i = 0, ii = endss.length; i < ii; ++i) {\r\n      var ends = endss[i];\r\n      if (ends.length > 0) {\r\n        var outerRing = translate(flatCoordinates, start, ends[0],\r\n          stride, -this.origin[0], -this.origin[1]);\r\n        if (outerRing.length) {\r\n          var holes = [];\r\n          var holeFlatCoords = (void 0);\r\n          for (j = 1, jj = ends.length; j < jj; ++j) {\r\n            if (ends[j] !== ends[j - 1]) {\r\n              holeFlatCoords = translate(flatCoordinates, ends[j - 1],\r\n                ends[j], stride, -this.origin[0], -this.origin[1]);\r\n              holes.push(holeFlatCoords);\r\n            }\r\n          }\r\n          this.lineStringReplay.drawPolygonCoordinates(outerRing, holes, stride);\r\n          this.drawCoordinates_(outerRing, holes, stride);\r\n        }\r\n      }\r\n      start = ends[ends.length - 1];\r\n    }\r\n    if (this.indices.length > currIndex) {\r\n      this.startIndices.push(currIndex);\r\n      this.startIndicesFeature.push(feature);\r\n      if (this.state_.changed) {\r\n        this.styleIndices_.push(currIndex);\r\n        this.state_.changed = false;\r\n      }\r\n    }\r\n    if (this.lineStringReplay.getCurrentIndex() > currLineIndex) {\r\n      this.lineStringReplay.setPolygonStyle(feature, currLineIndex);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLPolygonReplay.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {\r\n    var ends = polygonGeometry.getEnds();\r\n    var stride = polygonGeometry.getStride();\r\n    if (ends.length > 0) {\r\n      var flatCoordinates = polygonGeometry.getFlatCoordinates().map(Number);\r\n      var outerRing = translate(flatCoordinates, 0, ends[0],\r\n        stride, -this.origin[0], -this.origin[1]);\r\n      if (outerRing.length) {\r\n        var holes = [];\r\n        var i, ii, holeFlatCoords;\r\n        for (i = 1, ii = ends.length; i < ii; ++i) {\r\n          if (ends[i] !== ends[i - 1]) {\r\n            holeFlatCoords = translate(flatCoordinates, ends[i - 1],\r\n              ends[i], stride, -this.origin[0], -this.origin[1]);\r\n            holes.push(holeFlatCoords);\r\n          }\r\n        }\r\n\r\n        this.startIndices.push(this.indices.length);\r\n        this.startIndicesFeature.push(feature);\r\n        if (this.state_.changed) {\r\n          this.styleIndices_.push(this.indices.length);\r\n          this.state_.changed = false;\r\n        }\r\n        this.lineStringReplay.setPolygonStyle(feature);\r\n\r\n        this.lineStringReplay.drawPolygonCoordinates(outerRing, holes, stride);\r\n        this.drawCoordinates_(outerRing, holes, stride);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   **/\r\n  WebGLPolygonReplay.prototype.finish = function finish (context) {\r\n    // create, bind, and populate the vertices buffer\r\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\r\n\r\n    // create, bind, and populate the indices buffer\r\n    this.indicesBuffer = new WebGLBuffer(this.indices);\r\n\r\n    this.startIndices.push(this.indices.length);\r\n\r\n    this.lineStringReplay.finish(context);\r\n\r\n    //Clean up, if there is nothing to draw\r\n    if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\r\n      this.styles_ = [];\r\n    }\r\n\r\n    this.vertices = null;\r\n    this.indices = null;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLPolygonReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\r\n    var verticesBuffer = this.verticesBuffer;\r\n    var indicesBuffer = this.indicesBuffer;\r\n    var lineDeleter = this.lineStringReplay.getDeleteResourcesFunction(context);\r\n    return function() {\r\n      context.deleteBuffer(verticesBuffer);\r\n      context.deleteBuffer(indicesBuffer);\r\n      lineDeleter();\r\n    };\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLPolygonReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {\r\n    // get the program\r\n    var program = context.getProgram(fragment, vertex);\r\n\r\n    // get the locations\r\n    var locations;\r\n    if (!this.defaultLocations_) {\r\n      locations = new Locations(gl, program);\r\n      this.defaultLocations_ = locations;\r\n    } else {\r\n      locations = this.defaultLocations_;\r\n    }\r\n\r\n    context.useProgram(program);\r\n\r\n    // enable the vertex attrib arrays\r\n    gl.enableVertexAttribArray(locations.a_position);\r\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\r\n      false, 8, 0);\r\n\r\n    return locations;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLPolygonReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {\r\n    gl.disableVertexAttribArray(locations.a_position);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLPolygonReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {\r\n    //Save GL parameters.\r\n    var tmpDepthFunc = /** @type {number} */ (gl.getParameter(gl.DEPTH_FUNC));\r\n    var tmpDepthMask = /** @type {boolean} */ (gl.getParameter(gl.DEPTH_WRITEMASK));\r\n\r\n    if (!hitDetection) {\r\n      gl.enable(gl.DEPTH_TEST);\r\n      gl.depthMask(true);\r\n      gl.depthFunc(gl.NOTEQUAL);\r\n    }\r\n\r\n    if (!isEmpty(skippedFeaturesHash)) {\r\n      this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\r\n    } else {\r\n      //Draw by style groups to minimize drawElements() calls.\r\n      var i, start, end, nextStyle;\r\n      end = this.startIndices[this.startIndices.length - 1];\r\n      for (i = this.styleIndices_.length - 1; i >= 0; --i) {\r\n        start = this.styleIndices_[i];\r\n        nextStyle = this.styles_[i];\r\n        this.setFillStyle_(gl, nextStyle);\r\n        this.drawElements(gl, context, start, end);\r\n        end = start;\r\n      }\r\n    }\r\n    if (!hitDetection) {\r\n      gl.disable(gl.DEPTH_TEST);\r\n      gl.clear(gl.DEPTH_BUFFER_BIT);\r\n      //Restore GL parameters.\r\n      gl.depthMask(tmpDepthMask);\r\n      gl.depthFunc(tmpDepthFunc);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLPolygonReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\r\n    var i, start, end, nextStyle, groupStart, feature, featureIndex;\r\n    featureIndex = this.startIndices.length - 2;\r\n    end = this.startIndices[featureIndex + 1];\r\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\r\n      nextStyle = this.styles_[i];\r\n      this.setFillStyle_(gl, nextStyle);\r\n      groupStart = this.styleIndices_[i];\r\n\r\n      while (featureIndex >= 0 &&\r\n          this.startIndices[featureIndex] >= groupStart) {\r\n        start = this.startIndices[featureIndex];\r\n        feature = this.startIndicesFeature[featureIndex];\r\n\r\n        if (skippedFeaturesHash[getUid(feature)] === undefined &&\r\n            feature.getGeometry() &&\r\n            (opt_hitExtent === undefined || intersects(\r\n              /** @type {Array<number>} */ (opt_hitExtent),\r\n              feature.getGeometry().getExtent()))) {\r\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n          this.drawElements(gl, context, start, end);\r\n\r\n          var result = featureCallback(feature);\r\n\r\n          if (result) {\r\n            return result;\r\n          }\r\n\r\n        }\r\n        featureIndex--;\r\n        end = start;\r\n      }\r\n    }\r\n    return undefined;\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {WebGLRenderingContext} gl gl.\r\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\r\n   * @param {Object} skippedFeaturesHash Ids of features to skip.\r\n   */\r\n  WebGLPolygonReplay.prototype.drawReplaySkipping_ = function drawReplaySkipping_ (gl, context, skippedFeaturesHash) {\r\n    var i, start, end, nextStyle, groupStart, feature, featureIndex, featureStart;\r\n    featureIndex = this.startIndices.length - 2;\r\n    end = start = this.startIndices[featureIndex + 1];\r\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\r\n      nextStyle = this.styles_[i];\r\n      this.setFillStyle_(gl, nextStyle);\r\n      groupStart = this.styleIndices_[i];\r\n\r\n      while (featureIndex >= 0 &&\r\n          this.startIndices[featureIndex] >= groupStart) {\r\n        featureStart = this.startIndices[featureIndex];\r\n        feature = this.startIndicesFeature[featureIndex];\r\n\r\n        if (skippedFeaturesHash[getUid(feature)]) {\r\n          if (start !== end) {\r\n            this.drawElements(gl, context, start, end);\r\n            gl.clear(gl.DEPTH_BUFFER_BIT);\r\n          }\r\n          end = featureStart;\r\n        }\r\n        featureIndex--;\r\n        start = featureStart;\r\n      }\r\n      if (start !== end) {\r\n        this.drawElements(gl, context, start, end);\r\n        gl.clear(gl.DEPTH_BUFFER_BIT);\r\n      }\r\n      start = end = groupStart;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {WebGLRenderingContext} gl gl.\r\n   * @param {Array<number>} color Color.\r\n   */\r\n  WebGLPolygonReplay.prototype.setFillStyle_ = function setFillStyle_ (gl, color) {\r\n    gl.uniform4fv(this.defaultLocations_.u_color, color);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLPolygonReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\r\n    var fillStyleColor = fillStyle ? fillStyle.getColor() : [0, 0, 0, 0];\r\n    if (!(fillStyleColor instanceof CanvasGradient) &&\r\n        !(fillStyleColor instanceof CanvasPattern)) {\r\n      fillStyleColor = asArray(fillStyleColor).map(function(c, i) {\r\n        return i != 3 ? c / 255 : c;\r\n      }) || DEFAULT_FILLSTYLE;\r\n    } else {\r\n      fillStyleColor = DEFAULT_FILLSTYLE;\r\n    }\r\n    if (!this.state_.fillColor || !equals(fillStyleColor, this.state_.fillColor)) {\r\n      this.state_.fillColor = fillStyleColor;\r\n      this.state_.changed = true;\r\n      this.styles_.push(fillStyleColor);\r\n    }\r\n    //Provide a null stroke style, if no strokeStyle is provided. Required for the draw interaction to work.\r\n    if (strokeStyle) {\r\n      this.lineStringReplay.setFillStrokeStyle(null, strokeStyle);\r\n    } else {\r\n      var nullStrokeStyle = new Stroke({\r\n        color: [0, 0, 0, 0],\r\n        width: 0\r\n      });\r\n      this.lineStringReplay.setFillStrokeStyle(null, nullStrokeStyle);\r\n    }\r\n  };\n\n  return WebGLPolygonReplay;\n}(WebGLReplay));\r\n\r\n\r\nexport default WebGLPolygonReplay;\r\n\r\n//# sourceMappingURL=PolygonReplay.js.map","/**\r\n * @module ol/style/Atlas\r\n */\r\nimport {createCanvasContext2D} from '../dom.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} AtlasBlock\r\n * @property {number} x\r\n * @property {number} y\r\n * @property {number} width\r\n * @property {number} height\r\n */\r\n\r\n/**\r\n * Provides information for an image inside an atlas.\r\n * `offsetX` and `offsetY` are the position of the image inside the atlas image `image`.\r\n * @typedef {Object} AtlasInfo\r\n * @property {number} offsetX\r\n * @property {number} offsetY\r\n * @property {HTMLCanvasElement} image\r\n */\r\n\r\n\r\n/**\r\n * @classesc\r\n * This class facilitates the creation of image atlases.\r\n *\r\n * Images added to an atlas will be rendered onto a single\r\n * atlas canvas. The distribution of images on the canvas is\r\n * managed with the bin packing algorithm described in:\r\n * http://www.blackpawn.com/texts/lightmaps/\r\n *\r\n * @param {number} size The size in pixels of the sprite image.\r\n * @param {number} space The space in pixels between images.\r\n *    Because texture coordinates are float values, the edges of\r\n *    images might not be completely correct (in a way that the\r\n *    edges overlap when being rendered). To avoid this we add a\r\n *    padding around each image.\r\n */\r\nvar Atlas = function Atlas(size, space) {\r\n\r\n  /**\r\n   * @private\r\n   * @type {number}\r\n   */\r\n  this.space_ = space;\r\n\r\n  /**\r\n   * @private\r\n   * @type {Array<AtlasBlock>}\r\n   */\r\n  this.emptyBlocks_ = [{x: 0, y: 0, width: size, height: size}];\r\n\r\n  /**\r\n   * @private\r\n   * @type {Object<string, AtlasInfo>}\r\n   */\r\n  this.entries_ = {};\r\n\r\n  /**\r\n   * @private\r\n   * @type {CanvasRenderingContext2D}\r\n   */\r\n  this.context_ = createCanvasContext2D(size, size);\r\n\r\n  /**\r\n   * @private\r\n   * @type {HTMLCanvasElement}\r\n   */\r\n  this.canvas_ = this.context_.canvas;\r\n};\r\n\r\n/**\r\n * @param {string} id The identifier of the entry to check.\r\n * @return {?AtlasInfo} The atlas info.\r\n */\r\nAtlas.prototype.get = function get (id) {\r\n  return this.entries_[id] || null;\r\n};\r\n\r\n/**\r\n * @param {string} id The identifier of the entry to add.\r\n * @param {number} width The width.\r\n * @param {number} height The height.\r\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\r\n *  Called to render the new image onto an atlas image.\r\n * @param {Object=} opt_this Value to use as `this` when executing\r\n *  `renderCallback`.\r\n * @return {?AtlasInfo} The position and atlas image for the entry.\r\n */\r\nAtlas.prototype.add = function add (id, width, height, renderCallback, opt_this) {\r\n  for (var i = 0, ii = this.emptyBlocks_.length; i < ii; ++i) {\r\n    var block = this.emptyBlocks_[i];\r\n    if (block.width >= width + this.space_ &&\r\n        block.height >= height + this.space_) {\r\n      // we found a block that is big enough for our entry\r\n      var entry = {\r\n        offsetX: block.x + this.space_,\r\n        offsetY: block.y + this.space_,\r\n        image: this.canvas_\r\n      };\r\n      this.entries_[id] = entry;\r\n\r\n      // render the image on the atlas image\r\n      renderCallback.call(opt_this, this.context_,\r\n        block.x + this.space_, block.y + this.space_);\r\n\r\n      // split the block after the insertion, either horizontally or vertically\r\n      this.split_(i, block, width + this.space_, height + this.space_);\r\n\r\n      return entry;\r\n    }\r\n  }\r\n\r\n  // there is no space for the new entry in this atlas\r\n  return null;\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {number} index The index of the block.\r\n * @param {AtlasBlock} block The block to split.\r\n * @param {number} width The width of the entry to insert.\r\n * @param {number} height The height of the entry to insert.\r\n */\r\nAtlas.prototype.split_ = function split_ (index, block, width, height) {\r\n  var deltaWidth = block.width - width;\r\n  var deltaHeight = block.height - height;\r\n\r\n  /** @type {AtlasBlock} */\r\n  var newBlock1;\r\n  /** @type {AtlasBlock} */\r\n  var newBlock2;\r\n\r\n  if (deltaWidth > deltaHeight) {\r\n    // split vertically\r\n    // block right of the inserted entry\r\n    newBlock1 = {\r\n      x: block.x + width,\r\n      y: block.y,\r\n      width: block.width - width,\r\n      height: block.height\r\n    };\r\n\r\n    // block below the inserted entry\r\n    newBlock2 = {\r\n      x: block.x,\r\n      y: block.y + height,\r\n      width: width,\r\n      height: block.height - height\r\n    };\r\n    this.updateBlocks_(index, newBlock1, newBlock2);\r\n  } else {\r\n    // split horizontally\r\n    // block right of the inserted entry\r\n    newBlock1 = {\r\n      x: block.x + width,\r\n      y: block.y,\r\n      width: block.width - width,\r\n      height: height\r\n    };\r\n\r\n    // block below the inserted entry\r\n    newBlock2 = {\r\n      x: block.x,\r\n      y: block.y + height,\r\n      width: block.width,\r\n      height: block.height - height\r\n    };\r\n    this.updateBlocks_(index, newBlock1, newBlock2);\r\n  }\r\n};\r\n\r\n/**\r\n * Remove the old block and insert new blocks at the same array position.\r\n * The new blocks are inserted at the same position, so that splitted\r\n * blocks (that are potentially smaller) are filled first.\r\n * @private\r\n * @param {number} index The index of the block to remove.\r\n * @param {AtlasBlock} newBlock1 The 1st block to add.\r\n * @param {AtlasBlock} newBlock2 The 2nd block to add.\r\n */\r\nAtlas.prototype.updateBlocks_ = function updateBlocks_ (index, newBlock1, newBlock2) {\r\n  var args = /** @type {Array<*>} */ ([index, 1]);\r\n  if (newBlock1.width > 0 && newBlock1.height > 0) {\r\n    args.push(newBlock1);\r\n  }\r\n  if (newBlock2.width > 0 && newBlock2.height > 0) {\r\n    args.push(newBlock2);\r\n  }\r\n  this.emptyBlocks_.splice.apply(this.emptyBlocks_, args);\r\n};\r\n\r\nexport default Atlas;\r\n\r\n//# sourceMappingURL=Atlas.js.map","/**\r\n * @module ol/style/AtlasManager\r\n */\r\nimport {MAX_TEXTURE_SIZE as WEBGL_MAX_TEXTURE_SIZE} from '../webgl.js';\r\nimport {VOID} from '../functions.js';\r\nimport Atlas from './Atlas.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [initialSize=256] The size in pixels of the first atlas image.\r\n * @property {number} [maxSize] The maximum size in pixels of atlas images. Default is\r\n * `webgl/MAX_TEXTURE_SIZE` or 2048 if WebGL is not supported.\r\n * @property {number} [space=1] The space in pixels between images.\r\n */\r\n\r\n\r\n/**\r\n * Provides information for an image inside an atlas manager.\r\n * `offsetX` and `offsetY` is the position of the image inside\r\n * the atlas image `image` and the position of the hit-detection image\r\n * inside the hit-detection atlas image `hitImage`.\r\n * @typedef {Object} AtlasManagerInfo\r\n * @property {number} offsetX\r\n * @property {number} offsetY\r\n * @property {HTMLCanvasElement} image\r\n * @property {HTMLCanvasElement} hitImage\r\n */\r\n\r\n\r\n/**\r\n * The size in pixels of the first atlas image.\r\n * @type {number}\r\n */\r\nvar INITIAL_ATLAS_SIZE = 256;\r\n\r\n/**\r\n * The maximum size in pixels of atlas images.\r\n * @type {number}\r\n */\r\nvar MAX_ATLAS_SIZE = -1;\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Manages the creation of image atlases.\r\n *\r\n * Images added to this manager will be inserted into an atlas, which\r\n * will be used for rendering.\r\n * The `size` given in the constructor is the size for the first\r\n * atlas. After that, when new atlases are created, they will have\r\n * twice the size as the latest atlas (until `maxSize` is reached).\r\n *\r\n * If an application uses many images or very large images, it is recommended\r\n * to set a higher `size` value to avoid the creation of too many atlases.\r\n * @api\r\n */\r\nvar AtlasManager = function AtlasManager(opt_options) {\r\n\r\n  var options = opt_options || {};\r\n\r\n  /**\r\n   * The size in pixels of the latest atlas image.\r\n   * @private\r\n   * @type {number}\r\n   */\r\n  this.currentSize_ = options.initialSize !== undefined ?\r\n    options.initialSize : INITIAL_ATLAS_SIZE;\r\n\r\n  /**\r\n   * The maximum size in pixels of atlas images.\r\n   * @private\r\n   * @type {number}\r\n   */\r\n  this.maxSize_ = options.maxSize !== undefined ?\r\n    options.maxSize : MAX_ATLAS_SIZE != -1 ?\r\n      MAX_ATLAS_SIZE : WEBGL_MAX_TEXTURE_SIZE !== undefined ?\r\n        WEBGL_MAX_TEXTURE_SIZE : 2048;\r\n\r\n  /**\r\n   * The size in pixels between images.\r\n   * @private\r\n   * @type {number}\r\n   */\r\n  this.space_ = options.space !== undefined ? options.space : 1;\r\n\r\n  /**\r\n   * @private\r\n   * @type {Array<import(\"./Atlas.js\").default>}\r\n   */\r\n  this.atlases_ = [new Atlas(this.currentSize_, this.space_)];\r\n\r\n  /**\r\n   * The size in pixels of the latest atlas image for hit-detection images.\r\n   * @private\r\n   * @type {number}\r\n   */\r\n  this.currentHitSize_ = this.currentSize_;\r\n\r\n  /**\r\n   * @private\r\n   * @type {Array<import(\"./Atlas.js\").default>}\r\n   */\r\n  this.hitAtlases_ = [new Atlas(this.currentHitSize_, this.space_)];\r\n};\r\n\r\n/**\r\n * @param {string} id The identifier of the entry to check.\r\n * @return {?AtlasManagerInfo} The position and atlas image for the\r\n *  entry, or `null` if the entry is not part of the atlas manager.\r\n */\r\nAtlasManager.prototype.getInfo = function getInfo (id) {\r\n  /** @type {?import(\"./Atlas.js\").AtlasInfo} */\r\n  var info = this.getInfo_(this.atlases_, id);\r\n\r\n  if (!info) {\r\n    return null;\r\n  }\r\n  var hitInfo = /** @type {import(\"./Atlas.js\").AtlasInfo} */ (this.getInfo_(this.hitAtlases_, id));\r\n\r\n  return this.mergeInfos_(info, hitInfo);\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {Array<import(\"./Atlas.js\").default>} atlases The atlases to search.\r\n * @param {string} id The identifier of the entry to check.\r\n * @return {?import(\"./Atlas.js\").AtlasInfo} The position and atlas image for the entry,\r\n *  or `null` if the entry is not part of the atlases.\r\n */\r\nAtlasManager.prototype.getInfo_ = function getInfo_ (atlases, id) {\r\n  for (var i = 0, ii = atlases.length; i < ii; ++i) {\r\n    var atlas = atlases[i];\r\n    var info = atlas.get(id);\r\n    if (info) {\r\n      return info;\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {import(\"./Atlas.js\").AtlasInfo} info The info for the real image.\r\n * @param {import(\"./Atlas.js\").AtlasInfo} hitInfo The info for the hit-detection\r\n *  image.\r\n * @return {?AtlasManagerInfo} The position and atlas image for the\r\n *  entry, or `null` if the entry is not part of the atlases.\r\n */\r\nAtlasManager.prototype.mergeInfos_ = function mergeInfos_ (info, hitInfo) {\r\n  return (\r\n    /** @type {AtlasManagerInfo} */ ({\r\n      offsetX: info.offsetX,\r\n      offsetY: info.offsetY,\r\n      image: info.image,\r\n      hitImage: hitInfo.image\r\n    })\r\n  );\r\n};\r\n\r\n/**\r\n * Add an image to the atlas manager.\r\n *\r\n * If an entry for the given id already exists, the entry will\r\n * be overridden (but the space on the atlas graphic will not be freed).\r\n *\r\n * If `renderHitCallback` is provided, the image (or the hit-detection version\r\n * of the image) will be rendered into a separate hit-detection atlas image.\r\n *\r\n * @param {string} id The identifier of the entry to add.\r\n * @param {number} width The width.\r\n * @param {number} height The height.\r\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\r\n *  Called to render the new image onto an atlas image.\r\n * @param {function(CanvasRenderingContext2D, number, number)=} opt_renderHitCallback Called to render a hit-detection image onto a hit\r\n *  detection atlas image.\r\n * @param {Object=} opt_this Value to use as `this` when executing\r\n *  `renderCallback` and `renderHitCallback`.\r\n * @return {?AtlasManagerInfo}The position and atlas image for the\r\n *  entry, or `null` if the image is too big.\r\n */\r\nAtlasManager.prototype.add = function add (id, width, height, renderCallback, opt_renderHitCallback, opt_this) {\r\n  if (width + this.space_ > this.maxSize_ ||\r\n      height + this.space_ > this.maxSize_) {\r\n    return null;\r\n  }\r\n\r\n  /** @type {?import(\"./Atlas.js\").AtlasInfo} */\r\n  var info = this.add_(false, id, width, height, renderCallback, opt_this);\r\n  if (!info) {\r\n    return null;\r\n  }\r\n\r\n  // even if no hit-detection entry is requested, we insert a fake entry into\r\n  // the hit-detection atlas, to make sure that the offset is the same for\r\n  // the original image and the hit-detection image.\r\n  var renderHitCallback = opt_renderHitCallback !== undefined ?\r\n    opt_renderHitCallback : VOID;\r\n\r\n  var hitInfo = /** @type {import(\"./Atlas.js\").AtlasInfo} */ (this.add_(true,\r\n    id, width, height, renderHitCallback, opt_this));\r\n\r\n  return this.mergeInfos_(info, hitInfo);\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {boolean} isHitAtlas If the hit-detection atlases are used.\r\n * @param {string} id The identifier of the entry to add.\r\n * @param {number} width The width.\r\n * @param {number} height The height.\r\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\r\n *  Called to render the new image onto an atlas image.\r\n * @param {Object=} opt_this Value to use as `this` when executing\r\n *  `renderCallback` and `renderHitCallback`.\r\n * @return {?import(\"./Atlas.js\").AtlasInfo}The position and atlas image for the entry,\r\n *  or `null` if the image is too big.\r\n */\r\nAtlasManager.prototype.add_ = function add_ (isHitAtlas, id, width, height, renderCallback, opt_this) {\r\n  var atlases = (isHitAtlas) ? this.hitAtlases_ : this.atlases_;\r\n  var atlas, info, i, ii;\r\n  for (i = 0, ii = atlases.length; i < ii; ++i) {\r\n    atlas = atlases[i];\r\n    info = atlas.add(id, width, height, renderCallback, opt_this);\r\n    if (info) {\r\n      return info;\r\n    } else if (!info && i === ii - 1) {\r\n      // the entry could not be added to one of the existing atlases,\r\n      // create a new atlas that is twice as big and try to add to this one.\r\n      var size = (void 0);\r\n      if (isHitAtlas) {\r\n        size = Math.min(this.currentHitSize_ * 2, this.maxSize_);\r\n        this.currentHitSize_ = size;\r\n      } else {\r\n        size = Math.min(this.currentSize_ * 2, this.maxSize_);\r\n        this.currentSize_ = size;\r\n      }\r\n      atlas = new Atlas(size, this.space_);\r\n      atlases.push(atlas);\r\n      // run the loop another time\r\n      ++ii;\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default AtlasManager;\r\n\r\n//# sourceMappingURL=AtlasManager.js.map","/**\r\n * @module ol/render/webgl/ReplayGroup\r\n */\r\n\r\nimport {numberSafeCompareFunction} from '../../array.js';\r\nimport {buffer, createOrUpdateFromCoordinate} from '../../extent.js';\r\nimport {isEmpty} from '../../obj.js';\r\nimport {ORDER} from '../replay.js';\r\nimport ReplayGroup from '../ReplayGroup.js';\r\nimport WebGLCircleReplay from './CircleReplay.js';\r\nimport WebGLImageReplay from './ImageReplay.js';\r\nimport WebGLLineStringReplay from './LineStringReplay.js';\r\nimport WebGLPolygonReplay from './PolygonReplay.js';\r\nimport WebGLTextReplay from './TextReplay.js';\r\n\r\n/**\r\n * @type {Array<number>}\r\n */\r\nvar HIT_DETECTION_SIZE = [1, 1];\r\n\r\n/**\r\n * @type {Object<import(\"../ReplayType.js\").default, typeof import(\"./Replay.js\").default>}\r\n */\r\nvar BATCH_CONSTRUCTORS = {\r\n  'Circle': WebGLCircleReplay,\r\n  'Image': WebGLImageReplay,\r\n  'LineString': WebGLLineStringReplay,\r\n  'Polygon': WebGLPolygonReplay,\r\n  'Text': WebGLTextReplay\r\n};\r\n\r\n\r\nvar WebGLReplayGroup = /*@__PURE__*/(function (ReplayGroup) {\n  function WebGLReplayGroup(tolerance, maxExtent, opt_renderBuffer) {\r\n    ReplayGroup.call(this);\r\n\r\n    /**\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     * @private\r\n     */\r\n    this.maxExtent_ = maxExtent;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.tolerance_ = tolerance;\r\n\r\n    /**\r\n     * @type {number|undefined}\r\n     * @private\r\n     */\r\n    this.renderBuffer_ = opt_renderBuffer;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string,\r\n     *        Object<import(\"../ReplayType.js\").default, import(\"./Replay.js\").default>>}\r\n     */\r\n    this.replaysByZIndex_ = {};\r\n\r\n  }\n\n  if ( ReplayGroup ) WebGLReplayGroup.__proto__ = ReplayGroup;\n  WebGLReplayGroup.prototype = Object.create( ReplayGroup && ReplayGroup.prototype );\n  WebGLReplayGroup.prototype.constructor = WebGLReplayGroup;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\r\n    return [];\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../../webgl/Context.js\").default} context WebGL context.\r\n   * @return {function()} Delete resources function.\r\n   */\r\n  WebGLReplayGroup.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\r\n    var functions = [];\r\n    var zKey;\r\n    for (zKey in this.replaysByZIndex_) {\r\n      var replays = this.replaysByZIndex_[zKey];\r\n      for (var replayKey in replays) {\r\n        functions.push(\r\n          replays[replayKey].getDeleteResourcesFunction(context));\r\n      }\r\n    }\r\n    return function() {\n      var arguments$1 = arguments;\n\r\n      var length = functions.length;\r\n      var result;\r\n      for (var i = 0; i < length; i++) {\r\n        result = functions[i].apply(this, arguments$1);\r\n      }\r\n      return result;\r\n    };\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\r\n   */\r\n  WebGLReplayGroup.prototype.finish = function finish (context) {\r\n    var zKey;\r\n    for (zKey in this.replaysByZIndex_) {\r\n      var replays = this.replaysByZIndex_[zKey];\r\n      for (var replayKey in replays) {\r\n        replays[replayKey].finish(context);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\r\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\r\n    var replays = this.replaysByZIndex_[zIndexKey];\r\n    if (replays === undefined) {\r\n      replays = {};\r\n      this.replaysByZIndex_[zIndexKey] = replays;\r\n    }\r\n    var replay = replays[replayType];\r\n    if (replay === undefined) {\r\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\r\n      replay = new Constructor(this.tolerance_, this.maxExtent_);\r\n      replays[replayType] = replay;\r\n    }\r\n    return replay;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLReplayGroup.prototype.isEmpty = function isEmpty$1 () {\r\n    return isEmpty(this.replaysByZIndex_);\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\r\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} rotation Rotation.\r\n   * @param {import(\"../../size.js\").Size} size Size.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {number} opacity Global opacity.\r\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\r\n   */\r\n  WebGLReplayGroup.prototype.replay = function replay (\r\n    context,\r\n    center,\r\n    resolution,\r\n    rotation,\r\n    size,\r\n    pixelRatio,\r\n    opacity,\r\n    skippedFeaturesHash\r\n  ) {\r\n    /** @type {Array<number>} */\r\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\r\n    zs.sort(numberSafeCompareFunction);\r\n\r\n    var i, ii, j, jj, replays, replay;\r\n    for (i = 0, ii = zs.length; i < ii; ++i) {\r\n      replays = this.replaysByZIndex_[zs[i].toString()];\r\n      for (j = 0, jj = ORDER.length; j < jj; ++j) {\r\n        replay = replays[ORDER[j]];\r\n        if (replay !== undefined) {\r\n          replay.replay(context,\r\n            center, resolution, rotation, size, pixelRatio,\r\n            opacity, skippedFeaturesHash,\r\n            undefined, false);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\r\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} rotation Rotation.\r\n   * @param {import(\"../../size.js\").Size} size Size.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {number} opacity Global opacity.\r\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\r\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\r\n   * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\r\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Hit extent: Only features intersecting\r\n   *  this extent are checked.\r\n   * @return {T|undefined} Callback result.\r\n   * @template T\r\n   */\r\n  WebGLReplayGroup.prototype.replayHitDetection_ = function replayHitDetection_ (\r\n    context,\r\n    center,\r\n    resolution,\r\n    rotation,\r\n    size,\r\n    pixelRatio,\r\n    opacity,\r\n    skippedFeaturesHash,\r\n    featureCallback,\r\n    oneByOne,\r\n    opt_hitExtent\r\n  ) {\r\n    /** @type {Array<number>} */\r\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\r\n    zs.sort(function(a, b) {\r\n      return b - a;\r\n    });\r\n\r\n    var i, ii, j, replays, replay, result;\r\n    for (i = 0, ii = zs.length; i < ii; ++i) {\r\n      replays = this.replaysByZIndex_[zs[i].toString()];\r\n      for (j = ORDER.length - 1; j >= 0; --j) {\r\n        replay = replays[ORDER[j]];\r\n        if (replay !== undefined) {\r\n          result = replay.replay(context,\r\n            center, resolution, rotation, size, pixelRatio, opacity,\r\n            skippedFeaturesHash, featureCallback, oneByOne, opt_hitExtent);\r\n          if (result) {\r\n            return result;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return undefined;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\r\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} rotation Rotation.\r\n   * @param {import(\"../../size.js\").Size} size Size.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {number} opacity Global opacity.\r\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\r\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} callback Feature callback.\r\n   * @return {T|undefined} Callback result.\r\n   * @template T\r\n   */\r\n  WebGLReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\r\n    coordinate,\r\n    context,\r\n    center,\r\n    resolution,\r\n    rotation,\r\n    size,\r\n    pixelRatio,\r\n    opacity,\r\n    skippedFeaturesHash,\r\n    callback\r\n  ) {\r\n    var gl = context.getGL();\r\n    gl.bindFramebuffer(\r\n      gl.FRAMEBUFFER, context.getHitDetectionFramebuffer());\r\n\r\n\r\n    /**\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    var hitExtent;\r\n    if (this.renderBuffer_ !== undefined) {\r\n      // build an extent around the coordinate, so that only features that\r\n      // intersect this extent are checked\r\n      hitExtent = buffer(createOrUpdateFromCoordinate(coordinate), resolution * this.renderBuffer_);\r\n    }\r\n\r\n    return this.replayHitDetection_(context,\r\n      coordinate, resolution, rotation, HIT_DETECTION_SIZE,\r\n      pixelRatio, opacity, skippedFeaturesHash,\r\n      /**\r\n       * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\r\n       * @return {?} Callback result.\r\n       */\r\n      function(feature) {\r\n        var imageData = new Uint8Array(4);\r\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\r\n\r\n        if (imageData[3] > 0) {\r\n          var result = callback(feature);\r\n          if (result) {\r\n            return result;\r\n          }\r\n        }\r\n      }, true, hitExtent);\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\r\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} rotation Rotation.\r\n   * @param {import(\"../../size.js\").Size} size Size.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {number} opacity Global opacity.\r\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\r\n   * @return {boolean} Is there a feature at the given coordinate?\r\n   */\r\n  WebGLReplayGroup.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (\r\n    coordinate,\r\n    context,\r\n    center,\r\n    resolution,\r\n    rotation,\r\n    size,\r\n    pixelRatio,\r\n    opacity,\r\n    skippedFeaturesHash\r\n  ) {\r\n    var gl = context.getGL();\r\n    gl.bindFramebuffer(\r\n      gl.FRAMEBUFFER, context.getHitDetectionFramebuffer());\r\n\r\n    var hasFeature = this.replayHitDetection_(context,\r\n      coordinate, resolution, rotation, HIT_DETECTION_SIZE,\r\n      pixelRatio, opacity, skippedFeaturesHash,\r\n      /**\r\n       * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\r\n       * @return {boolean} Is there a feature?\r\n       */\r\n      function(feature) {\r\n        var imageData = new Uint8Array(4);\r\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\r\n        return imageData[3] > 0;\r\n      }, false);\r\n\r\n    return hasFeature !== undefined;\r\n  };\n\n  return WebGLReplayGroup;\n}(ReplayGroup));\r\n\r\n\r\nexport default WebGLReplayGroup;\r\n\r\n//# sourceMappingURL=ReplayGroup.js.map","/**\r\n * @module ol/render/webgl/TextReplay\r\n */\r\nimport {getUid} from '../../util.js';\r\nimport {asColorLike} from '../../colorlike.js';\r\nimport {createCanvasContext2D} from '../../dom.js';\r\nimport GeometryType from '../../geom/GeometryType.js';\r\nimport {CANVAS_LINE_DASH} from '../../has.js';\r\nimport {TEXT_ALIGN} from '../replay.js';\r\nimport {DEFAULT_FILLSTYLE, DEFAULT_FONT, DEFAULT_LINECAP, DEFAULT_LINEDASH,\r\n  DEFAULT_LINEDASHOFFSET, DEFAULT_LINEJOIN, DEFAULT_LINEWIDTH, DEFAULT_MITERLIMIT,\r\n  DEFAULT_STROKESTYLE, DEFAULT_TEXTALIGN, DEFAULT_TEXTBASELINE} from '../webgl.js';\r\nimport WebGLTextureReplay from './TextureReplay.js';\r\nimport AtlasManager from '../../style/AtlasManager.js';\r\nimport WebGLBuffer from '../../webgl/Buffer.js';\r\n\r\n/**\r\n * @typedef {Object} GlyphAtlas\r\n * @property {import(\"../../style/AtlasManager.js\").default} atlas\r\n * @property {Object<string, number>} width\r\n * @property {number} height\r\n */\r\n\r\n\r\nvar WebGLTextReplay = /*@__PURE__*/(function (WebGLTextureReplay) {\n  function WebGLTextReplay(tolerance, maxExtent) {\r\n    WebGLTextureReplay.call(this, tolerance, maxExtent);\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<HTMLCanvasElement>}\r\n     */\r\n    this.images_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<WebGLTexture>}\r\n     */\r\n    this.textures_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement}\r\n     */\r\n    this.measureCanvas_ = createCanvasContext2D(0, 0).canvas;\r\n\r\n    /**\r\n     * @private\r\n     * @type {{strokeColor: (import(\"../../colorlike.js\").ColorLike|null),\r\n     *         lineCap: (string|undefined),\r\n     *         lineDash: Array<number>,\r\n     *         lineDashOffset: (number|undefined),\r\n     *         lineJoin: (string|undefined),\r\n     *         lineWidth: number,\r\n     *         miterLimit: (number|undefined),\r\n     *         fillColor: (import(\"../../colorlike.js\").ColorLike|null),\r\n     *         font: (string|undefined),\r\n     *         scale: (number|undefined)}}\r\n     */\r\n    this.state_ = {\r\n      strokeColor: null,\r\n      lineCap: undefined,\r\n      lineDash: null,\r\n      lineDashOffset: undefined,\r\n      lineJoin: undefined,\r\n      lineWidth: 0,\r\n      miterLimit: undefined,\r\n      fillColor: null,\r\n      font: undefined,\r\n      scale: undefined\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.text_ = '';\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.textAlign_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.textBaseline_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.offsetX_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.offsetY_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<string, GlyphAtlas>}\r\n     */\r\n    this.atlases_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {GlyphAtlas|undefined}\r\n     */\r\n    this.currAtlas_ = undefined;\r\n\r\n    this.scale = 1;\r\n\r\n    this.opacity = 1;\r\n\r\n  }\n\n  if ( WebGLTextureReplay ) WebGLTextReplay.__proto__ = WebGLTextureReplay;\n  WebGLTextReplay.prototype = Object.create( WebGLTextureReplay && WebGLTextureReplay.prototype );\n  WebGLTextReplay.prototype.constructor = WebGLTextReplay;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLTextReplay.prototype.drawText = function drawText (geometry, feature) {\r\n    if (this.text_) {\r\n      var flatCoordinates = null;\r\n      var offset = 0;\r\n      var end = 2;\r\n      var stride = 2;\r\n      switch (geometry.getType()) {\r\n        case GeometryType.POINT:\r\n        case GeometryType.MULTI_POINT:\r\n          flatCoordinates = geometry.getFlatCoordinates();\r\n          end = flatCoordinates.length;\r\n          stride = geometry.getStride();\r\n          break;\r\n        case GeometryType.CIRCLE:\r\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\r\n          break;\r\n        case GeometryType.LINE_STRING:\r\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\r\n          break;\r\n        case GeometryType.MULTI_LINE_STRING:\r\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\r\n          end = flatCoordinates.length;\r\n          break;\r\n        case GeometryType.POLYGON:\r\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\r\n          break;\r\n        case GeometryType.MULTI_POLYGON:\r\n          flatCoordinates = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\r\n          end = flatCoordinates.length;\r\n          break;\r\n        default:\r\n      }\r\n      this.startIndices.push(this.indices.length);\r\n      this.startIndicesFeature.push(feature);\r\n\r\n      var glyphAtlas = this.currAtlas_;\r\n      var lines = this.text_.split('\\n');\r\n      var textSize = this.getTextSize_(lines);\r\n      var i, ii, j, jj, currX, currY, charArr, charInfo;\r\n      var anchorX = Math.round(textSize[0] * this.textAlign_ - this.offsetX_);\r\n      var anchorY = Math.round(textSize[1] * this.textBaseline_ - this.offsetY_);\r\n      var lineWidth = (this.state_.lineWidth / 2) * this.state_.scale;\r\n\r\n      for (i = 0, ii = lines.length; i < ii; ++i) {\r\n        currX = 0;\r\n        currY = glyphAtlas.height * i;\r\n        charArr = lines[i].split('');\r\n\r\n        for (j = 0, jj = charArr.length; j < jj; ++j) {\r\n          charInfo = glyphAtlas.atlas.getInfo(charArr[j]);\r\n\r\n          if (charInfo) {\r\n            var image = charInfo.image;\r\n\r\n            this.anchorX = anchorX - currX;\r\n            this.anchorY = anchorY - currY;\r\n            this.originX = j === 0 ? charInfo.offsetX - lineWidth : charInfo.offsetX;\r\n            this.originY = charInfo.offsetY;\r\n            this.height = glyphAtlas.height;\r\n            this.width = j === 0 || j === charArr.length - 1 ?\r\n              glyphAtlas.width[charArr[j]] + lineWidth : glyphAtlas.width[charArr[j]];\r\n            this.imageHeight = image.height;\r\n            this.imageWidth = image.width;\r\n\r\n            if (this.images_.length === 0) {\r\n              this.images_.push(image);\r\n            } else {\r\n              var currentImage = this.images_[this.images_.length - 1];\r\n              if (getUid(currentImage) != getUid(image)) {\r\n                this.groupIndices.push(this.indices.length);\r\n                this.images_.push(image);\r\n              }\r\n            }\r\n\r\n            this.drawText_(flatCoordinates, offset, end, stride);\r\n          }\r\n          currX += this.width;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {Array<string>} lines Label to draw split to lines.\r\n   * @return {Array<number>} Size of the label in pixels.\r\n   */\r\n  WebGLTextReplay.prototype.getTextSize_ = function getTextSize_ (lines) {\r\n    var self = this;\r\n    var glyphAtlas = this.currAtlas_;\r\n    var textHeight = lines.length * glyphAtlas.height;\r\n    //Split every line to an array of chars, sum up their width, and select the longest.\r\n    var textWidth = lines.map(function(str) {\r\n      var sum = 0;\r\n      for (var i = 0, ii = str.length; i < ii; ++i) {\r\n        var curr = str[i];\r\n        if (!glyphAtlas.width[curr]) {\r\n          self.addCharToAtlas_(curr);\r\n        }\r\n        sum += glyphAtlas.width[curr] ? glyphAtlas.width[curr] : 0;\r\n      }\r\n      return sum;\r\n    }).reduce(function(max, curr) {\r\n      return Math.max(max, curr);\r\n    });\r\n\r\n    return [textWidth, textHeight];\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   */\r\n  WebGLTextReplay.prototype.drawText_ = function drawText_ (flatCoordinates, offset, end, stride) {\r\n    for (var i = offset, ii = end; i < ii; i += stride) {\r\n      this.drawCoordinates(flatCoordinates, offset, end, stride);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {string} char Character.\r\n   */\r\n  WebGLTextReplay.prototype.addCharToAtlas_ = function addCharToAtlas_ (char) {\r\n    if (char.length === 1) {\r\n      var glyphAtlas = this.currAtlas_;\r\n      var state = this.state_;\r\n      var mCtx = this.measureCanvas_.getContext('2d');\r\n      mCtx.font = state.font;\r\n      var width = Math.ceil(mCtx.measureText(char).width * state.scale);\r\n\r\n      var info = glyphAtlas.atlas.add(char, width, glyphAtlas.height,\r\n        function(ctx, x, y) {\r\n          //Parameterize the canvas\r\n          ctx.font = /** @type {string} */ (state.font);\r\n          ctx.fillStyle = state.fillColor;\r\n          ctx.strokeStyle = state.strokeColor;\r\n          ctx.lineWidth = state.lineWidth;\r\n          ctx.lineCap = /** @type {CanvasLineCap} */ (state.lineCap);\r\n          ctx.lineJoin = /** @type {CanvasLineJoin} */ (state.lineJoin);\r\n          ctx.miterLimit = /** @type {number} */ (state.miterLimit);\r\n          ctx.textAlign = 'left';\r\n          ctx.textBaseline = 'top';\r\n          if (CANVAS_LINE_DASH && state.lineDash) {\r\n            //FIXME: use pixelRatio\r\n            ctx.setLineDash(state.lineDash);\r\n            ctx.lineDashOffset = /** @type {number} */ (state.lineDashOffset);\r\n          }\r\n          if (state.scale !== 1) {\r\n            //FIXME: use pixelRatio\r\n            ctx.setTransform(/** @type {number} */ (state.scale), 0, 0,\r\n              /** @type {number} */ (state.scale), 0, 0);\r\n          }\r\n\r\n          //Draw the character on the canvas\r\n          if (state.strokeColor) {\r\n            ctx.strokeText(char, x, y);\r\n          }\r\n          if (state.fillColor) {\r\n            ctx.fillText(char, x, y);\r\n          }\r\n        });\r\n\r\n      if (info) {\r\n        glyphAtlas.width[char] = width;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLTextReplay.prototype.finish = function finish (context) {\r\n    var gl = context.getGL();\r\n\r\n    this.groupIndices.push(this.indices.length);\r\n    this.hitDetectionGroupIndices = this.groupIndices;\r\n\r\n    // create, bind, and populate the vertices buffer\r\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\r\n\r\n    // create, bind, and populate the indices buffer\r\n    this.indicesBuffer = new WebGLBuffer(this.indices);\r\n\r\n    // create textures\r\n    /** @type {Object<string, WebGLTexture>} */\r\n    var texturePerImage = {};\r\n\r\n    this.createTextures(this.textures_, this.images_, texturePerImage, gl);\r\n\r\n    this.state_ = {\r\n      strokeColor: null,\r\n      lineCap: undefined,\r\n      lineDash: null,\r\n      lineDashOffset: undefined,\r\n      lineJoin: undefined,\r\n      lineWidth: 0,\r\n      miterLimit: undefined,\r\n      fillColor: null,\r\n      font: undefined,\r\n      scale: undefined\r\n    };\r\n    this.text_ = '';\r\n    this.textAlign_ = undefined;\r\n    this.textBaseline_ = undefined;\r\n    this.offsetX_ = undefined;\r\n    this.offsetY_ = undefined;\r\n    this.images_ = null;\r\n    this.atlases_ = {};\r\n    this.currAtlas_ = undefined;\r\n    WebGLTextureReplay.prototype.finish.call(this, context);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLTextReplay.prototype.setTextStyle = function setTextStyle (textStyle) {\r\n    var state = this.state_;\r\n    var textFillStyle = textStyle.getFill();\r\n    var textStrokeStyle = textStyle.getStroke();\r\n    if (!textStyle || !textStyle.getText() || (!textFillStyle && !textStrokeStyle)) {\r\n      this.text_ = '';\r\n    } else {\r\n      if (!textFillStyle) {\r\n        state.fillColor = null;\r\n      } else {\r\n        var textFillStyleColor = textFillStyle.getColor();\r\n        state.fillColor = asColorLike(textFillStyleColor ?\r\n          textFillStyleColor : DEFAULT_FILLSTYLE);\r\n      }\r\n      if (!textStrokeStyle) {\r\n        state.strokeColor = null;\r\n        state.lineWidth = 0;\r\n      } else {\r\n        var textStrokeStyleColor = textStrokeStyle.getColor();\r\n        state.strokeColor = asColorLike(textStrokeStyleColor ?\r\n          textStrokeStyleColor : DEFAULT_STROKESTYLE);\r\n        state.lineWidth = textStrokeStyle.getWidth() || DEFAULT_LINEWIDTH;\r\n        state.lineCap = textStrokeStyle.getLineCap() || DEFAULT_LINECAP;\r\n        state.lineDashOffset = textStrokeStyle.getLineDashOffset() || DEFAULT_LINEDASHOFFSET;\r\n        state.lineJoin = textStrokeStyle.getLineJoin() || DEFAULT_LINEJOIN;\r\n        state.miterLimit = textStrokeStyle.getMiterLimit() || DEFAULT_MITERLIMIT;\r\n        var lineDash = textStrokeStyle.getLineDash();\r\n        state.lineDash = lineDash ? lineDash.slice() : DEFAULT_LINEDASH;\r\n      }\r\n      state.font = textStyle.getFont() || DEFAULT_FONT;\r\n      state.scale = textStyle.getScale() || 1;\r\n      this.text_ = /** @type {string} */ (textStyle.getText());\r\n      var textAlign = TEXT_ALIGN[textStyle.getTextAlign()];\r\n      var textBaseline = TEXT_ALIGN[textStyle.getTextBaseline()];\r\n      this.textAlign_ = textAlign === undefined ?\r\n        DEFAULT_TEXTALIGN : textAlign;\r\n      this.textBaseline_ = textBaseline === undefined ?\r\n        DEFAULT_TEXTBASELINE : textBaseline;\r\n      this.offsetX_ = textStyle.getOffsetX() || 0;\r\n      this.offsetY_ = textStyle.getOffsetY() || 0;\r\n      this.rotateWithView = !!textStyle.getRotateWithView();\r\n      this.rotation = textStyle.getRotation() || 0;\r\n\r\n      this.currAtlas_ = this.getAtlas_(state);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {Object} state Font attributes.\r\n   * @return {GlyphAtlas} Glyph atlas.\r\n   */\r\n  WebGLTextReplay.prototype.getAtlas_ = function getAtlas_ (state) {\r\n    var params = [];\r\n    for (var i in state) {\r\n      if (state[i] || state[i] === 0) {\r\n        if (Array.isArray(state[i])) {\r\n          params = params.concat(state[i]);\r\n        } else {\r\n          params.push(state[i]);\r\n        }\r\n      }\r\n    }\r\n    var hash = this.calculateHash_(params);\r\n    if (!this.atlases_[hash]) {\r\n      var mCtx = this.measureCanvas_.getContext('2d');\r\n      mCtx.font = state.font;\r\n      var height = Math.ceil((mCtx.measureText('M').width * 1.5 +\r\n          state.lineWidth / 2) * state.scale);\r\n\r\n      this.atlases_[hash] = {\r\n        atlas: new AtlasManager({\r\n          space: state.lineWidth + 1\r\n        }),\r\n        width: {},\r\n        height: height\r\n      };\r\n    }\r\n    return this.atlases_[hash];\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {Array<string|number>} params Array of parameters.\r\n   * @return {string} Hash string.\r\n   */\r\n  WebGLTextReplay.prototype.calculateHash_ = function calculateHash_ (params) {\r\n    //TODO: Create a more performant, reliable, general hash function.\r\n    var hash = '';\r\n    for (var i = 0, ii = params.length; i < ii; ++i) {\r\n      hash += params[i];\r\n    }\r\n    return hash;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLTextReplay.prototype.getTextures = function getTextures (opt_all) {\r\n    return this.textures_;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLTextReplay.prototype.getHitDetectionTextures = function getHitDetectionTextures () {\r\n    return this.textures_;\r\n  };\n\n  return WebGLTextReplay;\n}(WebGLTextureReplay));\r\n\r\n\r\nexport default WebGLTextReplay;\r\n\r\n//# sourceMappingURL=TextReplay.js.map","/**\r\n * @module ol/render/webgl/Immediate\r\n */\r\n\r\nimport {intersects} from '../../extent.js';\r\nimport GeometryType from '../../geom/GeometryType.js';\r\nimport ReplayType from '../ReplayType.js';\r\nimport VectorContext from '../VectorContext.js';\r\nimport WebGLReplayGroup from './ReplayGroup.js';\r\n\r\nvar WebGLImmediateRenderer = /*@__PURE__*/(function (VectorContext) {\n  function WebGLImmediateRenderer(context, center, resolution, rotation, size, extent, pixelRatio) {\r\n    VectorContext.call(this);\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    this.context_ = context;\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    this.center_ = center;\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    this.extent_ = extent;\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    this.pixelRatio_ = pixelRatio;\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    this.size_ = size;\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    this.rotation_ = rotation;\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    this.resolution_ = resolution;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../style/Image.js\").default}\r\n     */\r\n    this.imageStyle_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../style/Fill.js\").default}\r\n     */\r\n    this.fillStyle_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../style/Stroke.js\").default}\r\n     */\r\n    this.strokeStyle_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../style/Text.js\").default}\r\n     */\r\n    this.textStyle_ = null;\r\n\r\n  }\n\n  if ( VectorContext ) WebGLImmediateRenderer.__proto__ = VectorContext;\n  WebGLImmediateRenderer.prototype = Object.create( VectorContext && VectorContext.prototype );\n  WebGLImmediateRenderer.prototype.constructor = WebGLImmediateRenderer;\r\n\r\n  /**\r\n   * @param {import(\"./ReplayGroup.js\").default} replayGroup Replay group.\r\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  WebGLImmediateRenderer.prototype.drawText_ = function drawText_ (replayGroup, geometry) {\r\n    var context = this.context_;\r\n    var replay = /** @type {import(\"./TextReplay.js\").default} */ (\r\n      replayGroup.getReplay(0, ReplayType.TEXT));\r\n    replay.setTextStyle(this.textStyle_);\r\n    replay.drawText(geometry, null);\r\n    replay.finish(context);\r\n    // default colors\r\n    var opacity = 1;\r\n    /** @type {Object<string, boolean>} */\r\n    var skippedFeatures = {};\r\n    var featureCallback;\r\n    var oneByOne = false;\r\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\r\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\r\n      oneByOne);\r\n    replay.getDeleteResourcesFunction(context)();\r\n  };\r\n\r\n  /**\r\n   * Set the rendering style.  Note that since this is an immediate rendering API,\r\n   * any `zIndex` on the provided style will be ignored.\r\n   *\r\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\r\n   * @override\r\n   * @api\r\n   */\r\n  WebGLImmediateRenderer.prototype.setStyle = function setStyle (style) {\r\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\r\n    this.setImageStyle(style.getImage());\r\n    this.setTextStyle(style.getText());\r\n  };\r\n\r\n  /**\r\n   * Render a geometry into the canvas.  Call\r\n   * {@link ol/render/webgl/Immediate#setStyle} first to set the rendering style.\r\n   *\r\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\r\n   * @override\r\n   * @api\r\n   */\r\n  WebGLImmediateRenderer.prototype.drawGeometry = function drawGeometry (geometry) {\r\n    var type = geometry.getType();\r\n    switch (type) {\r\n      case GeometryType.POINT:\r\n        this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry), null);\r\n        break;\r\n      case GeometryType.LINE_STRING:\r\n        this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry), null);\r\n        break;\r\n      case GeometryType.POLYGON:\r\n        this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry), null);\r\n        break;\r\n      case GeometryType.MULTI_POINT:\r\n        this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry), null);\r\n        break;\r\n      case GeometryType.MULTI_LINE_STRING:\r\n        this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry), null);\r\n        break;\r\n      case GeometryType.MULTI_POLYGON:\r\n        this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry), null);\r\n        break;\r\n      case GeometryType.GEOMETRY_COLLECTION:\r\n        this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry), null);\r\n        break;\r\n      case GeometryType.CIRCLE:\r\n        this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry), null);\r\n        break;\r\n      default:\r\n        // pass\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  WebGLImmediateRenderer.prototype.drawFeature = function drawFeature (feature, style) {\r\n    var geometry = style.getGeometryFunction()(feature);\r\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\r\n      return;\r\n    }\r\n    this.setStyle(style);\r\n    this.drawGeometry(geometry);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection (geometry, data) {\r\n    var geometries = geometry.getGeometriesArray();\r\n    var i, ii;\r\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\r\n      this.drawGeometry(geometries[i]);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLImmediateRenderer.prototype.drawPoint = function drawPoint (geometry, data) {\r\n    var context = this.context_;\r\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\r\n    var replay = /** @type {import(\"./ImageReplay.js\").default} */ (\r\n      replayGroup.getReplay(0, ReplayType.IMAGE));\r\n    replay.setImageStyle(this.imageStyle_);\r\n    replay.drawPoint(geometry, data);\r\n    replay.finish(context);\r\n    // default colors\r\n    var opacity = 1;\r\n    /** @type {Object<string, boolean>} */\r\n    var skippedFeatures = {};\r\n    var featureCallback;\r\n    var oneByOne = false;\r\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\r\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\r\n      oneByOne);\r\n    replay.getDeleteResourcesFunction(context)();\r\n\r\n    if (this.textStyle_) {\r\n      this.drawText_(replayGroup, geometry);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint (geometry, data) {\r\n    var context = this.context_;\r\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\r\n    var replay = /** @type {import(\"./ImageReplay.js\").default} */ (\r\n      replayGroup.getReplay(0, ReplayType.IMAGE));\r\n    replay.setImageStyle(this.imageStyle_);\r\n    replay.drawMultiPoint(geometry, data);\r\n    replay.finish(context);\r\n    var opacity = 1;\r\n    /** @type {Object<string, boolean>} */\r\n    var skippedFeatures = {};\r\n    var featureCallback;\r\n    var oneByOne = false;\r\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\r\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\r\n      oneByOne);\r\n    replay.getDeleteResourcesFunction(context)();\r\n\r\n    if (this.textStyle_) {\r\n      this.drawText_(replayGroup, geometry);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLImmediateRenderer.prototype.drawLineString = function drawLineString (geometry, data) {\r\n    var context = this.context_;\r\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\r\n    var replay = /** @type {import(\"./LineStringReplay.js\").default} */ (\r\n      replayGroup.getReplay(0, ReplayType.LINE_STRING));\r\n    replay.setFillStrokeStyle(null, this.strokeStyle_);\r\n    replay.drawLineString(geometry, data);\r\n    replay.finish(context);\r\n    var opacity = 1;\r\n    /** @type {Object<string, boolean>} */\r\n    var skippedFeatures = {};\r\n    var featureCallback;\r\n    var oneByOne = false;\r\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\r\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\r\n      oneByOne);\r\n    replay.getDeleteResourcesFunction(context)();\r\n\r\n    if (this.textStyle_) {\r\n      this.drawText_(replayGroup, geometry);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString (geometry, data) {\r\n    var context = this.context_;\r\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\r\n    var replay = /** @type {import(\"./LineStringReplay.js\").default} */ (\r\n      replayGroup.getReplay(0, ReplayType.LINE_STRING));\r\n    replay.setFillStrokeStyle(null, this.strokeStyle_);\r\n    replay.drawMultiLineString(geometry, data);\r\n    replay.finish(context);\r\n    var opacity = 1;\r\n    /** @type {Object<string, boolean>} */\r\n    var skippedFeatures = {};\r\n    var featureCallback;\r\n    var oneByOne = false;\r\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\r\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\r\n      oneByOne);\r\n    replay.getDeleteResourcesFunction(context)();\r\n\r\n    if (this.textStyle_) {\r\n      this.drawText_(replayGroup, geometry);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLImmediateRenderer.prototype.drawPolygon = function drawPolygon (geometry, data) {\r\n    var context = this.context_;\r\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\r\n    var replay = /** @type {import(\"./PolygonReplay.js\").default} */ (\r\n      replayGroup.getReplay(0, ReplayType.POLYGON));\r\n    replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\r\n    replay.drawPolygon(geometry, data);\r\n    replay.finish(context);\r\n    var opacity = 1;\r\n    /** @type {Object<string, boolean>} */\r\n    var skippedFeatures = {};\r\n    var featureCallback;\r\n    var oneByOne = false;\r\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\r\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\r\n      oneByOne);\r\n    replay.getDeleteResourcesFunction(context)();\r\n\r\n    if (this.textStyle_) {\r\n      this.drawText_(replayGroup, geometry);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon (geometry, data) {\r\n    var context = this.context_;\r\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\r\n    var replay = /** @type {import(\"./PolygonReplay.js\").default} */ (\r\n      replayGroup.getReplay(0, ReplayType.POLYGON));\r\n    replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\r\n    replay.drawMultiPolygon(geometry, data);\r\n    replay.finish(context);\r\n    var opacity = 1;\r\n    /** @type {Object<string, boolean>} */\r\n    var skippedFeatures = {};\r\n    var featureCallback;\r\n    var oneByOne = false;\r\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\r\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\r\n      oneByOne);\r\n    replay.getDeleteResourcesFunction(context)();\r\n\r\n    if (this.textStyle_) {\r\n      this.drawText_(replayGroup, geometry);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLImmediateRenderer.prototype.drawCircle = function drawCircle (geometry, data) {\r\n    var context = this.context_;\r\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\r\n    var replay = /** @type {import(\"./CircleReplay.js\").default} */ (\r\n      replayGroup.getReplay(0, ReplayType.CIRCLE));\r\n    replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\r\n    replay.drawCircle(geometry, data);\r\n    replay.finish(context);\r\n    var opacity = 1;\r\n    /** @type {Object<string, boolean>} */\r\n    var skippedFeatures = {};\r\n    var featureCallback;\r\n    var oneByOne = false;\r\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\r\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\r\n      oneByOne);\r\n    replay.getDeleteResourcesFunction(context)();\r\n\r\n    if (this.textStyle_) {\r\n      this.drawText_(replayGroup, geometry);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLImmediateRenderer.prototype.setImageStyle = function setImageStyle (imageStyle) {\r\n    this.imageStyle_ = imageStyle;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\r\n    this.fillStyle_ = fillStyle;\r\n    this.strokeStyle_ = strokeStyle;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLImmediateRenderer.prototype.setTextStyle = function setTextStyle (textStyle) {\r\n    this.textStyle_ = textStyle;\r\n  };\n\n  return WebGLImmediateRenderer;\n}(VectorContext));\r\n\r\n\r\nexport default WebGLImmediateRenderer;\r\n\r\n//# sourceMappingURL=Immediate.js.map","/**\r\n * @module ol/renderer/webgl/defaultmapshader\r\n */\r\n// This file is automatically generated, do not edit.\r\n// Run `make shaders` to generate, and commit the result.\r\n\r\nimport {DEBUG as DEBUG_WEBGL} from '../../webgl.js';\r\nimport WebGLFragment from '../../webgl/Fragment.js';\r\nimport WebGLVertex from '../../webgl/Vertex.js';\r\n\r\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\r\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\n\\n\\nuniform float u_opacity;\\nuniform sampler2D u_texture;\\n\\nvoid main(void) {\\n  vec4 texColor = texture2D(u_texture, v_texCoord);\\n  gl_FragColor.rgb = texColor.rgb;\\n  gl_FragColor.a = texColor.a * u_opacity;\\n}\\n' :\r\n  'precision mediump float;varying vec2 a;uniform float f;uniform sampler2D g;void main(void){vec4 texColor=texture2D(g,a);gl_FragColor.rgb=texColor.rgb;gl_FragColor.a=texColor.a*f;}');\r\n\r\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\r\n  'varying vec2 v_texCoord;\\n\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\n\\nuniform mat4 u_texCoordMatrix;\\nuniform mat4 u_projectionMatrix;\\n\\nvoid main(void) {\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0., 1.);\\n  v_texCoord = (u_texCoordMatrix * vec4(a_texCoord, 0., 1.)).st;\\n}\\n\\n\\n' :\r\n  'varying vec2 a;attribute vec2 b;attribute vec2 c;uniform mat4 d;uniform mat4 e;void main(void){gl_Position=e*vec4(b,0.,1.);a=(d*vec4(c,0.,1.)).st;}');\r\n\r\n//# sourceMappingURL=defaultmapshader.js.map","/**\r\n * @module ol/renderer/webgl/defaultmapshader/Locations\r\n */\r\n// This file is automatically generated, do not edit\r\n// Run `make shaders` to generate, and commit the result.\r\n\r\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\r\n\r\nvar Locations = function Locations(gl, program) {\r\n\r\n  /**\r\n   * @type {WebGLUniformLocation}\r\n   */\r\n  this.u_texCoordMatrix = gl.getUniformLocation(\r\n    program, DEBUG_WEBGL ? 'u_texCoordMatrix' : 'd');\r\n\r\n  /**\r\n   * @type {WebGLUniformLocation}\r\n   */\r\n  this.u_projectionMatrix = gl.getUniformLocation(\r\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'e');\r\n\r\n  /**\r\n   * @type {WebGLUniformLocation}\r\n   */\r\n  this.u_opacity = gl.getUniformLocation(\r\n    program, DEBUG_WEBGL ? 'u_opacity' : 'f');\r\n\r\n  /**\r\n   * @type {WebGLUniformLocation}\r\n   */\r\n  this.u_texture = gl.getUniformLocation(\r\n    program, DEBUG_WEBGL ? 'u_texture' : 'g');\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.a_position = gl.getAttribLocation(\r\n    program, DEBUG_WEBGL ? 'a_position' : 'b');\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.a_texCoord = gl.getAttribLocation(\r\n    program, DEBUG_WEBGL ? 'a_texCoord' : 'c');\r\n\r\n};\r\n\r\nexport default Locations;\r\n\r\n//# sourceMappingURL=Locations.js.map","/**\r\n * @module ol/renderer/webgl/Layer\r\n */\r\nimport {abstract} from '../../util.js';\r\nimport RenderEvent from '../../render/Event.js';\r\nimport RenderEventType from '../../render/EventType.js';\r\nimport WebGLImmediateRenderer from '../../render/webgl/Immediate.js';\r\nimport LayerRenderer from '../Layer.js';\r\nimport {fragment, vertex} from './defaultmapshader.js';\r\nimport Locations from './defaultmapshader/Locations.js';\r\nimport {create as createTransform} from '../../transform.js';\r\nimport {create, fromTransform} from '../../vec/mat4.js';\r\nimport {ARRAY_BUFFER, FRAMEBUFFER, FLOAT, TEXTURE_2D,\r\n  TRIANGLE_STRIP, COLOR_ATTACHMENT0} from '../../webgl.js';\r\nimport WebGLBuffer from '../../webgl/Buffer.js';\r\nimport {createEmptyTexture} from '../../webgl/Context.js';\r\n\r\n/**\r\n * @abstract\r\n */\r\nvar WebGLLayerRenderer = /*@__PURE__*/(function (LayerRenderer) {\n  function WebGLLayerRenderer(mapRenderer, layer) {\r\n\r\n    LayerRenderer.call(this, layer);\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"./Map.js\").default}\r\n     */\r\n    this.mapRenderer = mapRenderer;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../webgl/Buffer.js\").default}\r\n     */\r\n    this.arrayBuffer_ = new WebGLBuffer([\r\n      -1, -1, 0, 0,\r\n      1, -1, 1, 0,\r\n      -1, 1, 0, 1,\r\n      1, 1, 1, 1\r\n    ]);\r\n\r\n    /**\r\n     * @protected\r\n     * @type {WebGLTexture}\r\n     */\r\n    this.texture = null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {WebGLFramebuffer}\r\n     */\r\n    this.framebuffer = null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number|undefined}\r\n     */\r\n    this.framebufferDimension = undefined;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.texCoordMatrix = createTransform();\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.projectionMatrix = createTransform();\r\n\r\n    /**\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    this.tmpMat4_ = create();\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./defaultmapshader/Locations.js\").default}\r\n     */\r\n    this.defaultLocations_ = null;\r\n\r\n  }\n\n  if ( LayerRenderer ) WebGLLayerRenderer.__proto__ = LayerRenderer;\n  WebGLLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  WebGLLayerRenderer.prototype.constructor = WebGLLayerRenderer;\r\n\r\n  /**\r\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @param {number} framebufferDimension Framebuffer dimension.\r\n   * @protected\r\n   */\r\n  WebGLLayerRenderer.prototype.bindFramebuffer = function bindFramebuffer (frameState, framebufferDimension) {\r\n\r\n    var gl = this.mapRenderer.getGL();\r\n\r\n    if (this.framebufferDimension === undefined ||\r\n        this.framebufferDimension != framebufferDimension) {\r\n      /**\r\n       * @param {WebGLRenderingContext} gl GL.\r\n       * @param {WebGLFramebuffer} framebuffer Framebuffer.\r\n       * @param {WebGLTexture} texture Texture.\r\n       */\r\n      var postRenderFunction = function(gl, framebuffer, texture) {\r\n        if (!gl.isContextLost()) {\r\n          gl.deleteFramebuffer(framebuffer);\r\n          gl.deleteTexture(texture);\r\n        }\r\n      }.bind(null, gl, this.framebuffer, this.texture);\r\n\r\n      frameState.postRenderFunctions.push(\r\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\r\n      );\r\n\r\n      var texture = createEmptyTexture(\r\n        gl, framebufferDimension, framebufferDimension);\r\n\r\n      var framebuffer = gl.createFramebuffer();\r\n      gl.bindFramebuffer(FRAMEBUFFER, framebuffer);\r\n      gl.framebufferTexture2D(FRAMEBUFFER,\r\n        COLOR_ATTACHMENT0, TEXTURE_2D, texture, 0);\r\n\r\n      this.texture = texture;\r\n      this.framebuffer = framebuffer;\r\n      this.framebufferDimension = framebufferDimension;\r\n\r\n    } else {\r\n      gl.bindFramebuffer(FRAMEBUFFER, this.framebuffer);\r\n    }\r\n\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\r\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\r\n   */\r\n  WebGLLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\r\n\r\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState);\r\n\r\n    context.bindBuffer(ARRAY_BUFFER, this.arrayBuffer_);\r\n\r\n    var gl = context.getGL();\r\n\r\n    var program = context.getProgram(fragment, vertex);\r\n\r\n    var locations;\r\n    if (!this.defaultLocations_) {\r\n      locations = new Locations(gl, program);\r\n      this.defaultLocations_ = locations;\r\n    } else {\r\n      locations = this.defaultLocations_;\r\n    }\r\n\r\n    if (context.useProgram(program)) {\r\n      gl.enableVertexAttribArray(locations.a_position);\r\n      gl.vertexAttribPointer(\r\n        locations.a_position, 2, FLOAT, false, 16, 0);\r\n      gl.enableVertexAttribArray(locations.a_texCoord);\r\n      gl.vertexAttribPointer(\r\n        locations.a_texCoord, 2, FLOAT, false, 16, 8);\r\n      gl.uniform1i(locations.u_texture, 0);\r\n    }\r\n\r\n    gl.uniformMatrix4fv(locations.u_texCoordMatrix, false,\r\n      fromTransform(this.tmpMat4_, this.getTexCoordMatrix()));\r\n    gl.uniformMatrix4fv(locations.u_projectionMatrix, false,\r\n      fromTransform(this.tmpMat4_, this.getProjectionMatrix()));\r\n    gl.uniform1f(locations.u_opacity, layerState.opacity);\r\n    gl.bindTexture(TEXTURE_2D, this.getTexture());\r\n    gl.drawArrays(TRIANGLE_STRIP, 0, 4);\r\n\r\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState);\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\r\n   * @param {import(\"../../webgl/Context.js\").default} context WebGL context.\r\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @private\r\n   */\r\n  WebGLLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState) {\r\n    var layer = this.getLayer();\r\n    if (layer.hasListener(type)) {\r\n      var viewState = frameState.viewState;\r\n      var resolution = viewState.resolution;\r\n      var pixelRatio = frameState.pixelRatio;\r\n      var extent = frameState.extent;\r\n      var center = viewState.center;\r\n      var rotation = viewState.rotation;\r\n      var size = frameState.size;\r\n\r\n      var render = new WebGLImmediateRenderer(\r\n        context, center, resolution, rotation, size, extent, pixelRatio);\r\n      var composeEvent = new RenderEvent(\r\n        type, render, frameState, null, context);\r\n      layer.dispatchEvent(composeEvent);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @return {!import(\"../../transform.js\").Transform} Matrix.\r\n   */\r\n  WebGLLayerRenderer.prototype.getTexCoordMatrix = function getTexCoordMatrix () {\r\n    return this.texCoordMatrix;\r\n  };\r\n\r\n  /**\r\n   * @return {WebGLTexture} Texture.\r\n   */\r\n  WebGLLayerRenderer.prototype.getTexture = function getTexture () {\r\n    return this.texture;\r\n  };\r\n\r\n  /**\r\n   * @return {!import(\"../../transform.js\").Transform} Matrix.\r\n   */\r\n  WebGLLayerRenderer.prototype.getProjectionMatrix = function getProjectionMatrix () {\r\n    return this.projectionMatrix;\r\n  };\r\n\r\n  /**\r\n   * Handle webglcontextlost.\r\n   */\r\n  WebGLLayerRenderer.prototype.handleWebGLContextLost = function handleWebGLContextLost () {\r\n    this.texture = null;\r\n    this.framebuffer = null;\r\n    this.framebufferDimension = undefined;\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\r\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\r\n   * @return {boolean} whether composeFrame should be called.\r\n   */\r\n  WebGLLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState, context) {\r\n    return abstract();\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\r\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\r\n   * @param {function(this: S, import(\"../../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\r\n   *     callback.\r\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\r\n   * @return {T|undefined} Callback result.\r\n   * @template S,T,U\r\n   */\r\n  WebGLLayerRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, callback, thisArg) {\r\n    return abstract();\r\n  };\n\n  return WebGLLayerRenderer;\n}(LayerRenderer));\r\n\r\n\r\nexport default WebGLLayerRenderer;\r\n\r\n//# sourceMappingURL=Layer.js.map","/**\r\n * @module ol/renderer/webgl/ImageLayer\r\n */\r\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\r\nimport LayerType from '../../LayerType.js';\r\nimport ViewHint from '../../ViewHint.js';\r\nimport {createCanvasContext2D} from '../../dom.js';\r\nimport {getIntersection, isEmpty} from '../../extent.js';\r\nimport WebGLLayerRenderer from './Layer.js';\r\nimport {\r\n  create as createTransform,\r\n  rotate as rotateTransform,\r\n  translate as translateTransform,\r\n  scale as scaleTransform,\r\n  reset as resetTransform,\r\n  apply as applyTransform,\r\n  invert as invertTransform,\r\n  multiply as multiplyTransform\r\n} from '../../transform.js';\r\nimport {CLAMP_TO_EDGE} from '../../webgl.js';\r\nimport {createTexture} from '../../webgl/Context.js';\r\n\r\n/**\r\n * @classdesc\r\n * WebGL renderer for image layers.\r\n * @api\r\n */\r\nvar WebGLImageLayerRenderer = /*@__PURE__*/(function (WebGLLayerRenderer) {\n  function WebGLImageLayerRenderer(mapRenderer, imageLayer) {\r\n\r\n    WebGLLayerRenderer.call(this, mapRenderer, imageLayer);\r\n\r\n    /**\r\n     * The last rendered image.\r\n     * @private\r\n     * @type {?import(\"../../ImageBase.js\").default}\r\n     */\r\n    this.image_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {CanvasRenderingContext2D}\r\n     */\r\n    this.hitCanvasContext_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../../transform.js\").Transform}\r\n     */\r\n    this.hitTransformationMatrix_ = null;\r\n\r\n  }\n\n  if ( WebGLLayerRenderer ) WebGLImageLayerRenderer.__proto__ = WebGLLayerRenderer;\n  WebGLImageLayerRenderer.prototype = Object.create( WebGLLayerRenderer && WebGLLayerRenderer.prototype );\n  WebGLImageLayerRenderer.prototype.constructor = WebGLImageLayerRenderer;\r\n\r\n  /**\r\n   * @param {import(\"../../ImageBase.js\").default} image Image.\r\n   * @private\r\n   * @return {WebGLTexture} Texture.\r\n   */\r\n  WebGLImageLayerRenderer.prototype.createTexture_ = function createTexture_ (image) {\r\n\r\n    // We meet the conditions to work with non-power of two textures.\r\n    // http://www.khronos.org/webgl/wiki/WebGL_and_OpenGL_Differences#Non-Power_of_Two_Texture_Support\r\n    // http://learningwebgl.com/blog/?p=2101\r\n\r\n    var imageElement = image.getImage();\r\n    var gl = this.mapRenderer.getGL();\r\n\r\n    return createTexture(\r\n      gl, imageElement, CLAMP_TO_EDGE, CLAMP_TO_EDGE);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState, context) {\r\n\r\n    var gl = this.mapRenderer.getGL();\r\n\r\n    var pixelRatio = frameState.pixelRatio;\r\n    var viewState = frameState.viewState;\r\n    var viewCenter = viewState.center;\r\n    var viewResolution = viewState.resolution;\r\n    var viewRotation = viewState.rotation;\r\n\r\n    var image = this.image_;\r\n    var texture = this.texture;\r\n    var imageLayer = /** @type {import(\"../../layer/Image.js\").default} */ (this.getLayer());\r\n    var imageSource = /** @type {import(\"../../source/Image.js\").default} */ (imageLayer.getSource());\r\n\r\n    var hints = frameState.viewHints;\r\n\r\n    var renderedExtent = frameState.extent;\r\n    if (layerState.extent !== undefined) {\r\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\r\n    }\r\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\r\n        !isEmpty(renderedExtent)) {\r\n      var projection = viewState.projection;\r\n      if (!ENABLE_RASTER_REPROJECTION) {\r\n        var sourceProjection = imageSource.getProjection();\r\n        if (sourceProjection) {\r\n          projection = sourceProjection;\r\n        }\r\n      }\r\n      var image_ = imageSource.getImage(renderedExtent, viewResolution,\r\n        pixelRatio, projection);\r\n      if (image_) {\r\n        var loaded = this.loadImage(image_);\r\n        if (loaded) {\r\n          image = image_;\r\n          texture = this.createTexture_(image_);\r\n          if (this.texture) {\r\n            /**\r\n             * @param {WebGLRenderingContext} gl GL.\r\n             * @param {WebGLTexture} texture Texture.\r\n             */\r\n            var postRenderFunction = function(gl, texture) {\r\n              if (!gl.isContextLost()) {\r\n                gl.deleteTexture(texture);\r\n              }\r\n            }.bind(null, gl, this.texture);\r\n            frameState.postRenderFunctions.push(\r\n              /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (image) {\r\n      var canvas = this.mapRenderer.getContext().getCanvas();\r\n\r\n      this.updateProjectionMatrix_(canvas.width, canvas.height,\r\n        pixelRatio, viewCenter, viewResolution, viewRotation,\r\n        image.getExtent());\r\n      this.hitTransformationMatrix_ = null;\r\n\r\n      // Translate and scale to flip the Y coord.\r\n      var texCoordMatrix = this.texCoordMatrix;\r\n      resetTransform(texCoordMatrix);\r\n      scaleTransform(texCoordMatrix, 1, -1);\r\n      translateTransform(texCoordMatrix, 0, -1);\r\n\r\n      this.image_ = image;\r\n      this.texture = texture;\r\n    }\r\n\r\n    return !!image;\r\n  };\r\n\r\n  /**\r\n   * @param {number} canvasWidth Canvas width.\r\n   * @param {number} canvasHeight Canvas height.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../../coordinate.js\").Coordinate} viewCenter View center.\r\n   * @param {number} viewResolution View resolution.\r\n   * @param {number} viewRotation View rotation.\r\n   * @param {import(\"../../extent.js\").Extent} imageExtent Image extent.\r\n   * @private\r\n   */\r\n  WebGLImageLayerRenderer.prototype.updateProjectionMatrix_ = function updateProjectionMatrix_ (\r\n    canvasWidth,\r\n    canvasHeight,\r\n    pixelRatio,\r\n    viewCenter,\r\n    viewResolution,\r\n    viewRotation,\r\n    imageExtent\r\n  ) {\r\n\r\n    var canvasExtentWidth = canvasWidth * viewResolution;\r\n    var canvasExtentHeight = canvasHeight * viewResolution;\r\n\r\n    var projectionMatrix = this.projectionMatrix;\r\n    resetTransform(projectionMatrix);\r\n    scaleTransform(projectionMatrix,\r\n      pixelRatio * 2 / canvasExtentWidth,\r\n      pixelRatio * 2 / canvasExtentHeight);\r\n    rotateTransform(projectionMatrix, -viewRotation);\r\n    translateTransform(projectionMatrix,\r\n      imageExtent[0] - viewCenter[0],\r\n      imageExtent[1] - viewCenter[1]);\r\n    scaleTransform(projectionMatrix,\r\n      (imageExtent[2] - imageExtent[0]) / 2,\r\n      (imageExtent[3] - imageExtent[1]) / 2);\r\n    translateTransform(projectionMatrix, 1, 1);\r\n\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLImageLayerRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, callback, thisArg) {\r\n    if (!this.image_ || !this.image_.getImage()) {\r\n      return undefined;\r\n    }\r\n\r\n    var imageSize =\r\n        [this.image_.getImage().width, this.image_.getImage().height];\r\n\r\n    if (!this.hitTransformationMatrix_) {\r\n      this.hitTransformationMatrix_ = this.getHitTransformationMatrix_(\r\n        frameState.size, imageSize);\r\n    }\r\n\r\n    var pixelOnFrameBuffer = applyTransform(\r\n      this.hitTransformationMatrix_, pixel.slice());\r\n\r\n    if (pixelOnFrameBuffer[0] < 0 || pixelOnFrameBuffer[0] > imageSize[0] ||\r\n        pixelOnFrameBuffer[1] < 0 || pixelOnFrameBuffer[1] > imageSize[1]) {\r\n      // outside the image, no need to check\r\n      return undefined;\r\n    }\r\n\r\n    if (!this.hitCanvasContext_) {\r\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\r\n    }\r\n\r\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\r\n    this.hitCanvasContext_.drawImage(this.image_.getImage(),\r\n      pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1, 0, 0, 1, 1);\r\n\r\n    var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\r\n    if (imageData[3] > 0) {\r\n      return callback.call(thisArg, this.getLayer(), imageData);\r\n    } else {\r\n      return undefined;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * The transformation matrix to get the pixel on the image for a\r\n   * pixel on the map.\r\n   * @param {import(\"../../size.js\").Size} mapSize The map size.\r\n   * @param {import(\"../../size.js\").Size} imageSize The image size.\r\n   * @return {import(\"../../transform.js\").Transform} The transformation matrix.\r\n   * @private\r\n   */\r\n  WebGLImageLayerRenderer.prototype.getHitTransformationMatrix_ = function getHitTransformationMatrix_ (mapSize, imageSize) {\r\n    // the first matrix takes a map pixel, flips the y-axis and scales to\r\n    // a range between -1 ... 1\r\n    var mapCoordTransform = createTransform();\r\n    translateTransform(mapCoordTransform, -1, -1);\r\n    scaleTransform(mapCoordTransform, 2 / mapSize[0], 2 / mapSize[1]);\r\n    translateTransform(mapCoordTransform, 0, mapSize[1]);\r\n    scaleTransform(mapCoordTransform, 1, -1);\r\n\r\n    // the second matrix is the inverse of the projection matrix used in the\r\n    // shader for drawing\r\n    var projectionMatrixInv = invertTransform(this.projectionMatrix.slice());\r\n\r\n    // the third matrix scales to the image dimensions and flips the y-axis again\r\n    var transform = createTransform();\r\n    translateTransform(transform, 0, imageSize[1]);\r\n    scaleTransform(transform, 1, -1);\r\n    scaleTransform(transform, imageSize[0] / 2, imageSize[1] / 2);\r\n    translateTransform(transform, 1, 1);\r\n\r\n    multiplyTransform(transform, projectionMatrixInv);\r\n    multiplyTransform(transform, mapCoordTransform);\r\n\r\n    return transform;\r\n  };\n\n  return WebGLImageLayerRenderer;\n}(WebGLLayerRenderer));\r\n\r\n\r\n/**\r\n * Determine if this renderer handles the provided layer.\r\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\r\n * @return {boolean} The renderer can render the layer.\r\n */\r\nWebGLImageLayerRenderer['handles'] = function(layer) {\r\n  return layer.getType() === LayerType.IMAGE;\r\n};\r\n\r\n\r\n/**\r\n * Create a layer renderer.\r\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\r\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\r\n * @return {WebGLImageLayerRenderer} The layer renderer.\r\n */\r\nWebGLImageLayerRenderer['create'] = function(mapRenderer, layer) {\r\n  return new WebGLImageLayerRenderer(\r\n    /** @type {import(\"./Map.js\").default} */ (mapRenderer),\r\n    /** @type {import(\"../../layer/Image.js\").default} */ (layer)\r\n  );\r\n};\r\n\r\n\r\nexport default WebGLImageLayerRenderer;\r\n\r\n//# sourceMappingURL=ImageLayer.js.map","/**\r\n * @module ol/renderer/webgl/Map\r\n */\r\n\r\nimport {stableSort} from '../../array.js';\r\nimport {CLASS_UNSELECTABLE} from '../../css.js';\r\nimport {createCanvasContext2D} from '../../dom.js';\r\nimport {listen} from '../../events.js';\r\nimport {visibleAtResolution} from '../../layer/Layer.js';\r\nimport RenderEvent from '../../render/Event.js';\r\nimport RenderEventType from '../../render/EventType.js';\r\nimport WebGLImmediateRenderer from '../../render/webgl/Immediate.js';\r\nimport MapRenderer, {sortByZIndex} from '../Map.js';\r\nimport SourceState from '../../source/State.js';\r\nimport LRUCache from '../../structs/LRUCache.js';\r\nimport PriorityQueue from '../../structs/PriorityQueue.js';\r\nimport {BLEND, CLAMP_TO_EDGE, COLOR_BUFFER_BIT, CULL_FACE, DEPTH_TEST, FRAMEBUFFER,\r\n  getContext, LINEAR, ONE, ONE_MINUS_SRC_ALPHA, RGBA, SCISSOR_TEST, SRC_ALPHA,\r\n  STENCIL_TEST, TEXTURE0, TEXTURE_2D, TEXTURE_MAG_FILTER, TEXTURE_MIN_FILTER,\r\n  TEXTURE_WRAP_S, TEXTURE_WRAP_T, UNSIGNED_BYTE} from '../../webgl.js';\r\nimport WebGLContext from '../../webgl/Context.js';\r\nimport ContextEventType from '../../webgl/ContextEventType.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} TextureCacheEntry\r\n * @property {number} magFilter\r\n * @property {number} minFilter\r\n * @property {WebGLTexture} texture\r\n */\r\n\r\n\r\n/**\r\n * Texture cache high water mark.\r\n * @type {number}\r\n */\r\nvar WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK = 1024;\r\n\r\n\r\n/**\r\n * @classdesc\r\n * WebGL map renderer.\r\n * @api\r\n */\r\nvar WebGLMapRenderer = /*@__PURE__*/(function (MapRenderer) {\n  function WebGLMapRenderer(map) {\r\n    MapRenderer.call(this, map);\r\n\r\n    var container = map.getViewport();\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement}\r\n     */\r\n    this.canvas_ = /** @type {HTMLCanvasElement} */\r\n      (document.createElement('canvas'));\r\n    this.canvas_.style.width = '100%';\r\n    this.canvas_.style.height = '100%';\r\n    this.canvas_.style.display = 'block';\r\n    this.canvas_.className = CLASS_UNSELECTABLE;\r\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.clipTileCanvasWidth_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.clipTileCanvasHeight_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {CanvasRenderingContext2D}\r\n     */\r\n    this.clipTileContext_ = createCanvasContext2D();\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.renderedVisible_ = true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {WebGLRenderingContext}\r\n     */\r\n    this.gl_ = getContext(this.canvas_, {\r\n      antialias: true,\r\n      depth: true,\r\n      failIfMajorPerformanceCaveat: true,\r\n      preserveDrawingBuffer: false,\r\n      stencil: true\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../webgl/Context.js\").default}\r\n     */\r\n    this.context_ = new WebGLContext(this.canvas_, this.gl_);\r\n\r\n    listen(this.canvas_, ContextEventType.LOST,\r\n      this.handleWebGLContextLost, this);\r\n    listen(this.canvas_, ContextEventType.RESTORED,\r\n      this.handleWebGLContextRestored, this);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../structs/LRUCache.js\").default<TextureCacheEntry|null>}\r\n     */\r\n    this.textureCache_ = new LRUCache();\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../coordinate.js\").Coordinate}\r\n     */\r\n    this.focus_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../structs/PriorityQueue.js\").default<Array>}\r\n     */\r\n    this.tileTextureQueue_ = new PriorityQueue(\r\n      /**\r\n       * @param {Array<*>} element Element.\r\n       * @return {number} Priority.\r\n       * @this {WebGLMapRenderer}\r\n       */\r\n      (function(element) {\r\n        var tileCenter = /** @type {import(\"../../coordinate.js\").Coordinate} */ (element[1]);\r\n        var tileResolution = /** @type {number} */ (element[2]);\r\n        var deltaX = tileCenter[0] - this.focus_[0];\r\n        var deltaY = tileCenter[1] - this.focus_[1];\r\n        return 65536 * Math.log(tileResolution) +\r\n              Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\r\n      }).bind(this),\r\n      /**\r\n       * @param {Array<*>} element Element.\r\n       * @return {string} Key.\r\n       */\r\n      function(element) {\r\n        return (\r\n          /** @type {import(\"../../Tile.js\").default} */ (element[0]).getKey()\r\n        );\r\n      });\r\n\r\n\r\n    /**\r\n     * @param {import(\"../../PluggableMap.js\").default} map Map.\r\n     * @param {?import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n     * @return {boolean} false.\r\n     * @this {WebGLMapRenderer}\r\n     */\r\n    this.loadNextTileTexture_ =\r\n        function(map, frameState) {\r\n          if (!this.tileTextureQueue_.isEmpty()) {\r\n            this.tileTextureQueue_.reprioritize();\r\n            var element = this.tileTextureQueue_.dequeue();\r\n            var tile = /** @type {import(\"../../Tile.js\").default} */ (element[0]);\r\n            var tileSize = /** @type {import(\"../../size.js\").Size} */ (element[3]);\r\n            var tileGutter = /** @type {number} */ (element[4]);\r\n            this.bindTileTexture(\r\n              tile, tileSize, tileGutter, LINEAR, LINEAR);\r\n          }\r\n          return false;\r\n        }.bind(this);\r\n\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.textureCacheFrameMarkerCount_ = 0;\r\n\r\n    this.initializeGL_();\r\n  }\n\n  if ( MapRenderer ) WebGLMapRenderer.__proto__ = MapRenderer;\n  WebGLMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  WebGLMapRenderer.prototype.constructor = WebGLMapRenderer;\r\n\r\n  /**\r\n   * @param {import(\"../../Tile.js\").default} tile Tile.\r\n   * @param {import(\"../../size.js\").Size} tileSize Tile size.\r\n   * @param {number} tileGutter Tile gutter.\r\n   * @param {number} magFilter Mag filter.\r\n   * @param {number} minFilter Min filter.\r\n   */\r\n  WebGLMapRenderer.prototype.bindTileTexture = function bindTileTexture (tile, tileSize, tileGutter, magFilter, minFilter) {\r\n    var gl = this.getGL();\r\n    var tileKey = tile.getKey();\r\n    if (this.textureCache_.containsKey(tileKey)) {\r\n      var textureCacheEntry = this.textureCache_.get(tileKey);\r\n      gl.bindTexture(TEXTURE_2D, textureCacheEntry.texture);\r\n      if (textureCacheEntry.magFilter != magFilter) {\r\n        gl.texParameteri(\r\n          TEXTURE_2D, TEXTURE_MAG_FILTER, magFilter);\r\n        textureCacheEntry.magFilter = magFilter;\r\n      }\r\n      if (textureCacheEntry.minFilter != minFilter) {\r\n        gl.texParameteri(\r\n          TEXTURE_2D, TEXTURE_MIN_FILTER, minFilter);\r\n        textureCacheEntry.minFilter = minFilter;\r\n      }\r\n    } else {\r\n      var texture = gl.createTexture();\r\n      var imageTile = /** @type {import(\"../../ImageTile.js\").default} */ (tile);\r\n      gl.bindTexture(TEXTURE_2D, texture);\r\n      if (tileGutter > 0) {\r\n        var clipTileCanvas = this.clipTileContext_.canvas;\r\n        var clipTileContext = this.clipTileContext_;\r\n        if (this.clipTileCanvasWidth_ !== tileSize[0] ||\r\n            this.clipTileCanvasHeight_ !== tileSize[1]) {\r\n          clipTileCanvas.width = tileSize[0];\r\n          clipTileCanvas.height = tileSize[1];\r\n          this.clipTileCanvasWidth_ = tileSize[0];\r\n          this.clipTileCanvasHeight_ = tileSize[1];\r\n        } else {\r\n          clipTileContext.clearRect(0, 0, tileSize[0], tileSize[1]);\r\n        }\r\n        clipTileContext.drawImage(imageTile.getImage(), tileGutter, tileGutter,\r\n          tileSize[0], tileSize[1], 0, 0, tileSize[0], tileSize[1]);\r\n        gl.texImage2D(TEXTURE_2D, 0,\r\n          RGBA, RGBA,\r\n          UNSIGNED_BYTE, clipTileCanvas);\r\n      } else {\r\n        gl.texImage2D(TEXTURE_2D, 0,\r\n          RGBA, RGBA,\r\n          UNSIGNED_BYTE, imageTile.getImage());\r\n      }\r\n      gl.texParameteri(\r\n        TEXTURE_2D, TEXTURE_MAG_FILTER, magFilter);\r\n      gl.texParameteri(\r\n        TEXTURE_2D, TEXTURE_MIN_FILTER, minFilter);\r\n      gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_S,\r\n        CLAMP_TO_EDGE);\r\n      gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_T,\r\n        CLAMP_TO_EDGE);\r\n      this.textureCache_.set(tileKey, {\r\n        texture: texture,\r\n        magFilter: magFilter,\r\n        minFilter: minFilter\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\r\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n   */\r\n  WebGLMapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\r\n    var map = this.getMap();\r\n    if (map.hasListener(type)) {\r\n      var context = this.context_;\r\n\r\n      var extent = frameState.extent;\r\n      var size = frameState.size;\r\n      var viewState = frameState.viewState;\r\n      var pixelRatio = frameState.pixelRatio;\r\n\r\n      var resolution = viewState.resolution;\r\n      var center = viewState.center;\r\n      var rotation = viewState.rotation;\r\n\r\n      var vectorContext = new WebGLImmediateRenderer(context,\r\n        center, resolution, rotation, size, extent, pixelRatio);\r\n      var composeEvent = new RenderEvent(type, vectorContext,\r\n        frameState, null, context);\r\n      map.dispatchEvent(composeEvent);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLMapRenderer.prototype.disposeInternal = function disposeInternal () {\r\n    var gl = this.getGL();\r\n    if (!gl.isContextLost()) {\r\n      this.textureCache_.forEach(\r\n        /**\r\n         * @param {?TextureCacheEntry} textureCacheEntry\r\n         *     Texture cache entry.\r\n         */\r\n        function(textureCacheEntry) {\r\n          if (textureCacheEntry) {\r\n            gl.deleteTexture(textureCacheEntry.texture);\r\n          }\r\n        });\r\n    }\r\n    this.context_.dispose();\r\n    MapRenderer.prototype.disposeInternal.call(this);\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../../PluggableMap.js\").default} map Map.\r\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @private\r\n   */\r\n  WebGLMapRenderer.prototype.expireCache_ = function expireCache_ (map, frameState) {\r\n    var gl = this.getGL();\r\n    var textureCacheEntry;\r\n    while (this.textureCache_.getCount() - this.textureCacheFrameMarkerCount_ >\r\n        WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK) {\r\n      textureCacheEntry = this.textureCache_.peekLast();\r\n      if (!textureCacheEntry) {\r\n        if (+this.textureCache_.peekLastKey() == frameState.index) {\r\n          break;\r\n        } else {\r\n          --this.textureCacheFrameMarkerCount_;\r\n        }\r\n      } else {\r\n        gl.deleteTexture(textureCacheEntry.texture);\r\n      }\r\n      this.textureCache_.pop();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @return {import(\"../../webgl/Context.js\").default} The context.\r\n   */\r\n  WebGLMapRenderer.prototype.getContext = function getContext () {\r\n    return this.context_;\r\n  };\r\n\r\n  /**\r\n   * @return {WebGLRenderingContext} GL.\r\n   */\r\n  WebGLMapRenderer.prototype.getGL = function getGL () {\r\n    return this.gl_;\r\n  };\r\n\r\n  /**\r\n   * @return {import(\"../../structs/PriorityQueue.js\").default<Array>} Tile texture queue.\r\n   */\r\n  WebGLMapRenderer.prototype.getTileTextureQueue = function getTileTextureQueue () {\r\n    return this.tileTextureQueue_;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../../events/Event.js\").default} event Event.\r\n   * @protected\r\n   */\r\n  WebGLMapRenderer.prototype.handleWebGLContextLost = function handleWebGLContextLost (event) {\r\n    event.preventDefault();\r\n    this.textureCache_.clear();\r\n    this.textureCacheFrameMarkerCount_ = 0;\r\n\r\n    var renderers = this.getLayerRenderers();\r\n    for (var id in renderers) {\r\n      var renderer = /** @type {import(\"./Layer.js\").default} */ (renderers[id]);\r\n      renderer.handleWebGLContextLost();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  WebGLMapRenderer.prototype.handleWebGLContextRestored = function handleWebGLContextRestored () {\r\n    this.initializeGL_();\r\n    this.getMap().render();\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  WebGLMapRenderer.prototype.initializeGL_ = function initializeGL_ () {\r\n    var gl = this.gl_;\r\n    gl.activeTexture(TEXTURE0);\r\n    gl.blendFuncSeparate(\r\n      SRC_ALPHA, ONE_MINUS_SRC_ALPHA,\r\n      ONE, ONE_MINUS_SRC_ALPHA);\r\n    gl.disable(CULL_FACE);\r\n    gl.disable(DEPTH_TEST);\r\n    gl.disable(SCISSOR_TEST);\r\n    gl.disable(STENCIL_TEST);\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../../Tile.js\").default} tile Tile.\r\n   * @return {boolean} Is tile texture loaded.\r\n   */\r\n  WebGLMapRenderer.prototype.isTileTextureLoaded = function isTileTextureLoaded (tile) {\r\n    return this.textureCache_.containsKey(tile.getKey());\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\r\n\r\n    var context = this.getContext();\r\n    var gl = this.getGL();\r\n\r\n    if (gl.isContextLost()) {\r\n      return false;\r\n    }\r\n\r\n    if (!frameState) {\r\n      if (this.renderedVisible_) {\r\n        this.canvas_.style.display = 'none';\r\n        this.renderedVisible_ = false;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    this.focus_ = frameState.focus;\r\n\r\n    this.textureCache_.set((-frameState.index).toString(), null);\r\n    ++this.textureCacheFrameMarkerCount_;\r\n\r\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\r\n\r\n    /** @type {Array<import(\"../../layer/Layer.js\").State>} */\r\n    var layerStatesToDraw = [];\r\n    var layerStatesArray = frameState.layerStatesArray;\r\n    stableSort(layerStatesArray, sortByZIndex);\r\n\r\n    var viewResolution = frameState.viewState.resolution;\r\n    var i, ii;\r\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\r\n      var layerState = layerStatesArray[i];\r\n      if (visibleAtResolution(layerState, viewResolution) &&\r\n          layerState.sourceState == SourceState.READY) {\r\n        var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layerState.layer));\r\n        if (layerRenderer.prepareFrame(frameState, layerState, context)) {\r\n          layerStatesToDraw.push(layerState);\r\n        }\r\n      }\r\n    }\r\n\r\n    var width = frameState.size[0] * frameState.pixelRatio;\r\n    var height = frameState.size[1] * frameState.pixelRatio;\r\n    if (this.canvas_.width != width || this.canvas_.height != height) {\r\n      this.canvas_.width = width;\r\n      this.canvas_.height = height;\r\n    }\r\n\r\n    gl.bindFramebuffer(FRAMEBUFFER, null);\r\n\r\n    gl.clearColor(0, 0, 0, 0);\r\n    gl.clear(COLOR_BUFFER_BIT);\r\n    gl.enable(BLEND);\r\n    gl.viewport(0, 0, this.canvas_.width, this.canvas_.height);\r\n\r\n    for (i = 0, ii = layerStatesToDraw.length; i < ii; ++i) {\r\n      var layerState$1 = layerStatesToDraw[i];\r\n      var layerRenderer$1 = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layerState$1.layer));\r\n      layerRenderer$1.composeFrame(frameState, layerState$1, context);\r\n    }\r\n\r\n    if (!this.renderedVisible_) {\r\n      this.canvas_.style.display = '';\r\n      this.renderedVisible_ = true;\r\n    }\r\n\r\n    this.calculateMatrices2D(frameState);\r\n\r\n    if (this.textureCache_.getCount() - this.textureCacheFrameMarkerCount_ >\r\n        WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK) {\r\n      frameState.postRenderFunctions.push(\r\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (this.expireCache_.bind(this))\r\n      );\r\n    }\r\n\r\n    if (!this.tileTextureQueue_.isEmpty()) {\r\n      frameState.postRenderFunctions.push(this.loadNextTileTexture_);\r\n      frameState.animate = true;\r\n    }\r\n\r\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\r\n\r\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\r\n    this.scheduleExpireIconCache(frameState);\r\n\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLMapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\r\n    coordinate,\r\n    frameState,\r\n    hitTolerance,\r\n    callback,\r\n    thisArg,\r\n    layerFilter,\r\n    thisArg2\r\n  ) {\r\n    var result;\r\n\r\n    if (this.getGL().isContextLost()) {\r\n      return false;\r\n    }\r\n\r\n    var viewState = frameState.viewState;\r\n\r\n    var layerStates = frameState.layerStatesArray;\r\n    var numLayers = layerStates.length;\r\n    var i;\r\n    for (i = numLayers - 1; i >= 0; --i) {\r\n      var layerState = layerStates[i];\r\n      var layer = layerState.layer;\r\n      if (visibleAtResolution(layerState, viewState.resolution) &&\r\n          layerFilter.call(thisArg2, layer)) {\r\n        var layerRenderer = this.getLayerRenderer(layer);\r\n        result = layerRenderer.forEachFeatureAtCoordinate(\r\n          coordinate, frameState, hitTolerance, callback);\r\n        if (result) {\r\n          return result;\r\n        }\r\n      }\r\n    }\r\n    return undefined;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLMapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\r\n    var hasFeature = false;\r\n\r\n    if (this.getGL().isContextLost()) {\r\n      return false;\r\n    }\r\n\r\n    var viewState = frameState.viewState;\r\n\r\n    var layerStates = frameState.layerStatesArray;\r\n    var numLayers = layerStates.length;\r\n    var i;\r\n    for (i = numLayers - 1; i >= 0; --i) {\r\n      var layerState = layerStates[i];\r\n      var layer = layerState.layer;\r\n      if (visibleAtResolution(layerState, viewState.resolution) &&\r\n          layerFilter.call(thisArg, layer)) {\r\n        var layerRenderer = this.getLayerRenderer(layer);\r\n        hasFeature =\r\n            layerRenderer.hasFeatureAtCoordinate(coordinate, frameState);\r\n        if (hasFeature) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return hasFeature;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\r\n    if (this.getGL().isContextLost()) {\r\n      return false;\r\n    }\r\n\r\n    var viewState = frameState.viewState;\r\n    var result;\r\n\r\n    var layerStates = frameState.layerStatesArray;\r\n    var numLayers = layerStates.length;\r\n    var i;\r\n    for (i = numLayers - 1; i >= 0; --i) {\r\n      var layerState = layerStates[i];\r\n      var layer = layerState.layer;\r\n      if (visibleAtResolution(layerState, viewState.resolution) &&\r\n          layerFilter.call(thisArg, layer)) {\r\n        var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\r\n        result = layerRenderer.forEachLayerAtPixel(\r\n          pixel, frameState, callback, thisArg);\r\n        if (result) {\r\n          return result;\r\n        }\r\n      }\r\n    }\r\n    return undefined;\r\n  };\n\n  return WebGLMapRenderer;\n}(MapRenderer));\r\n\r\n\r\nexport default WebGLMapRenderer;\r\n\r\n//# sourceMappingURL=Map.js.map","/**\r\n * @module ol/Tile\r\n */\r\nimport TileState from './TileState.js';\r\nimport {easeIn} from './easing.js';\r\nimport EventTarget from './events/Target.js';\r\nimport EventType from './events/EventType.js';\r\n\r\n\r\n/**\r\n * A function that takes an {@link module:ol/Tile} for the tile and a\r\n * `{string}` for the url as arguments. The default is\r\n * ```js\r\n * source.setTileLoadFunction(function(tile, src) {\r\n *   tile.getImage().src = src;\r\n * });\r\n * ```\r\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\r\n * error handling:\r\n *\r\n * ```js\r\n * import TileState from 'ol/TileState';\r\n *\r\n * source.setTileLoadFunction(function(tile, src) {\r\n *   var xhr = new XMLHttpRequest();\r\n *   xhr.responseType = 'blob';\r\n *   xhr.addEventListener('loadend', function (evt) {\r\n *     var data = this.response;\r\n *     if (data !== undefined) {\r\n *       tile.getImage().src = URL.createObjectURL(data);\r\n *     } else {\r\n *       tile.setState(TileState.ERROR);\r\n *     }\r\n *   });\r\n *   xhr.addEventListener('error', function () {\r\n *     tile.setState(TileState.ERROR);\r\n *   });\r\n *   xhr.open('GET', src);\r\n *   xhr.send();\r\n * });\r\n * ```\r\n *\r\n * @typedef {function(Tile, string)} LoadFunction\r\n * @api\r\n */\r\n\r\n/**\r\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\r\n * the url that provides a tile for a given tile coordinate.\r\n *\r\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\r\n * coordinate, a `{number}` representing the pixel ratio and a\r\n * {@link module:ol/proj/Projection} for the projection  as arguments\r\n * and returns a `{string}` representing the tile URL, or undefined if no tile\r\n * should be requested for the passed tile coordinate.\r\n *\r\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\r\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [transition=250] A duration for tile opacity\r\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Base class for tiles.\r\n *\r\n * @abstract\r\n */\r\nvar Tile = /*@__PURE__*/(function (EventTarget) {\n  function Tile(tileCoord, state, opt_options) {\r\n    EventTarget.call(this);\r\n\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    /**\r\n     * @type {import(\"./tilecoord.js\").TileCoord}\r\n     */\r\n    this.tileCoord = tileCoord;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {TileState}\r\n     */\r\n    this.state = state;\r\n\r\n    /**\r\n     * An \"interim\" tile for this tile. The interim tile may be used while this\r\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\r\n     * on the source.\r\n     * @type {Tile}\r\n     */\r\n    this.interimTile = null;\r\n\r\n    /**\r\n     * A key assigned to the tile. This is used by the tile source to determine\r\n     * if this tile can effectively be used, or if a new tile should be created\r\n     * and this one be used as an interim tile for this new tile.\r\n     * @type {string}\r\n     */\r\n    this.key = '';\r\n\r\n    /**\r\n     * The duration for the opacity transition.\r\n     * @type {number}\r\n     */\r\n    this.transition_ = options.transition === undefined ? 250 : options.transition;\r\n\r\n    /**\r\n     * Lookup of start times for rendering transitions.  If the start time is\r\n     * equal to -1, the transition is complete.\r\n     * @type {Object<string, number>}\r\n     */\r\n    this.transitionStarts_ = {};\r\n\r\n  }\n\n  if ( EventTarget ) Tile.__proto__ = EventTarget;\n  Tile.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Tile.prototype.constructor = Tile;\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  Tile.prototype.changed = function changed () {\r\n    this.dispatchEvent(EventType.CHANGE);\r\n  };\r\n\r\n  /**\r\n   * @return {string} Key.\r\n   */\r\n  Tile.prototype.getKey = function getKey () {\r\n    return this.key + '/' + this.tileCoord;\r\n  };\r\n\r\n  /**\r\n   * Get the interim tile most suitable for rendering using the chain of interim\r\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\r\n   * such tile exists, the original tile is returned.\r\n   * @return {!Tile} Best tile for rendering.\r\n   */\r\n  Tile.prototype.getInterimTile = function getInterimTile () {\r\n    if (!this.interimTile) {\r\n      //empty chain\r\n      return this;\r\n    }\r\n    var tile = this.interimTile;\r\n\r\n    // find the first loaded tile and return it. Since the chain is sorted in\r\n    // decreasing order of creation time, there is no need to search the remainder\r\n    // of the list (all those tiles correspond to older requests and will be\r\n    // cleaned up by refreshInterimChain)\r\n    do {\r\n      if (tile.getState() == TileState.LOADED) {\r\n        return tile;\r\n      }\r\n      tile = tile.interimTile;\r\n    } while (tile);\r\n\r\n    // we can not find a better tile\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Goes through the chain of interim tiles and discards sections of the chain\r\n   * that are no longer relevant.\r\n   */\r\n  Tile.prototype.refreshInterimChain = function refreshInterimChain () {\r\n    if (!this.interimTile) {\r\n      return;\r\n    }\r\n\r\n    var tile = this.interimTile;\r\n    var prev = /** @type {Tile} */ (this);\r\n\r\n    do {\r\n      if (tile.getState() == TileState.LOADED) {\r\n        //we have a loaded tile, we can discard the rest of the list\r\n        //we would could abort any LOADING tile request\r\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\r\n        tile.interimTile = null;\r\n        break;\r\n      } else if (tile.getState() == TileState.LOADING) {\r\n        //keep this LOADING tile any loaded tiles later in the chain are\r\n        //older than this tile, so we're still interested in the request\r\n        prev = tile;\r\n      } else if (tile.getState() == TileState.IDLE) {\r\n        //the head of the list is the most current tile, we don't need\r\n        //to start any other requests for this chain\r\n        prev.interimTile = tile.interimTile;\r\n      } else {\r\n        prev = tile;\r\n      }\r\n      tile = prev.interimTile;\r\n    } while (tile);\r\n  };\r\n\r\n  /**\r\n   * Get the tile coordinate for this tile.\r\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\r\n   * @api\r\n   */\r\n  Tile.prototype.getTileCoord = function getTileCoord () {\r\n    return this.tileCoord;\r\n  };\r\n\r\n  /**\r\n   * @return {TileState} State.\r\n   */\r\n  Tile.prototype.getState = function getState () {\r\n    return this.state;\r\n  };\r\n\r\n  /**\r\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\r\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\r\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\r\n   * the tile queue and will block other requests.\r\n   * @param {TileState} state State.\r\n   * @api\r\n   */\r\n  Tile.prototype.setState = function setState (state) {\r\n    this.state = state;\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * Load the image or retry if loading previously failed.\r\n   * Loading is taken care of by the tile queue, and calling this method is\r\n   * only needed for preloading or for reloading in case of an error.\r\n   * @abstract\r\n   * @api\r\n   */\r\n  Tile.prototype.load = function load () {};\r\n\r\n  /**\r\n   * Get the alpha value for rendering.\r\n   * @param {string} id An id for the renderer.\r\n   * @param {number} time The render frame time.\r\n   * @return {number} A number between 0 and 1.\r\n   */\r\n  Tile.prototype.getAlpha = function getAlpha (id, time) {\r\n    if (!this.transition_) {\r\n      return 1;\r\n    }\r\n\r\n    var start = this.transitionStarts_[id];\r\n    if (!start) {\r\n      start = time;\r\n      this.transitionStarts_[id] = start;\r\n    } else if (start === -1) {\r\n      return 1;\r\n    }\r\n\r\n    var delta = time - start + (1000 / 60); // avoid rendering at 0\r\n    if (delta >= this.transition_) {\r\n      return 1;\r\n    }\r\n    return easeIn(delta / this.transition_);\r\n  };\r\n\r\n  /**\r\n   * Determine if a tile is in an alpha transition.  A tile is considered in\r\n   * transition if tile.getAlpha() has not yet been called or has been called\r\n   * and returned 1.\r\n   * @param {string} id An id for the renderer.\r\n   * @return {boolean} The tile is in transition.\r\n   */\r\n  Tile.prototype.inTransition = function inTransition (id) {\r\n    if (!this.transition_) {\r\n      return false;\r\n    }\r\n    return this.transitionStarts_[id] !== -1;\r\n  };\r\n\r\n  /**\r\n   * Mark a transition as complete.\r\n   * @param {string} id An id for the renderer.\r\n   */\r\n  Tile.prototype.endTransition = function endTransition (id) {\r\n    if (this.transition_) {\r\n      this.transitionStarts_[id] = -1;\r\n    }\r\n  };\n\n  return Tile;\n}(EventTarget));\r\n\r\n\r\nexport default Tile;\r\n\r\n//# sourceMappingURL=Tile.js.map","/**\r\n * @module ol/ImageTile\r\n */\r\nimport Tile from './Tile.js';\r\nimport TileState from './TileState.js';\r\nimport {createCanvasContext2D} from './dom.js';\r\nimport {listenOnce, unlistenByKey} from './events.js';\r\nimport EventType from './events/EventType.js';\r\n\r\n\r\nvar ImageTile = /*@__PURE__*/(function (Tile) {\n  function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\r\n\r\n    Tile.call(this, tileCoord, state, opt_options);\r\n\r\n    /**\r\n     * @private\r\n     * @type {?string}\r\n     */\r\n    this.crossOrigin_ = crossOrigin;\r\n\r\n    /**\r\n     * Image URI\r\n     *\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.src_ = src;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLImageElement|HTMLCanvasElement}\r\n     */\r\n    this.image_ = new Image();\r\n    if (crossOrigin !== null) {\r\n      this.image_.crossOrigin = crossOrigin;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<import(\"./events.js\").EventsKey>}\r\n     */\r\n    this.imageListenerKeys_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./Tile.js\").LoadFunction}\r\n     */\r\n    this.tileLoadFunction_ = tileLoadFunction;\r\n\r\n  }\n\n  if ( Tile ) ImageTile.__proto__ = Tile;\n  ImageTile.prototype = Object.create( Tile && Tile.prototype );\n  ImageTile.prototype.constructor = ImageTile;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  ImageTile.prototype.disposeInternal = function disposeInternal () {\r\n    if (this.state == TileState.LOADING) {\r\n      this.unlistenImage_();\r\n      this.image_ = getBlankImage();\r\n    }\r\n    if (this.interimTile) {\r\n      this.interimTile.dispose();\r\n    }\r\n    this.state = TileState.ABORT;\r\n    this.changed();\r\n    Tile.prototype.disposeInternal.call(this);\r\n  };\r\n\r\n  /**\r\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\r\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\r\n   * @api\r\n   */\r\n  ImageTile.prototype.getImage = function getImage () {\r\n    return this.image_;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  ImageTile.prototype.getKey = function getKey () {\r\n    return this.src_;\r\n  };\r\n\r\n  /**\r\n   * Tracks loading or read errors.\r\n   *\r\n   * @private\r\n   */\r\n  ImageTile.prototype.handleImageError_ = function handleImageError_ () {\r\n    this.state = TileState.ERROR;\r\n    this.unlistenImage_();\r\n    this.image_ = getBlankImage();\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * Tracks successful image load.\r\n   *\r\n   * @private\r\n   */\r\n  ImageTile.prototype.handleImageLoad_ = function handleImageLoad_ () {\r\n    var image = /** @type {HTMLImageElement} */ (this.image_);\r\n    if (image.naturalWidth && image.naturalHeight) {\r\n      this.state = TileState.LOADED;\r\n    } else {\r\n      this.state = TileState.EMPTY;\r\n    }\r\n    this.unlistenImage_();\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  ImageTile.prototype.load = function load () {\r\n    if (this.state == TileState.ERROR) {\r\n      this.state = TileState.IDLE;\r\n      this.image_ = new Image();\r\n      if (this.crossOrigin_ !== null) {\r\n        this.image_.crossOrigin = this.crossOrigin_;\r\n      }\r\n    }\r\n    if (this.state == TileState.IDLE) {\r\n      this.state = TileState.LOADING;\r\n      this.changed();\r\n      this.imageListenerKeys_ = [\r\n        listenOnce(this.image_, EventType.ERROR,\r\n          this.handleImageError_, this),\r\n        listenOnce(this.image_, EventType.LOAD,\r\n          this.handleImageLoad_, this)\r\n      ];\r\n      this.tileLoadFunction_(this, this.src_);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Discards event handlers which listen for load completion or errors.\r\n   *\r\n   * @private\r\n   */\r\n  ImageTile.prototype.unlistenImage_ = function unlistenImage_ () {\r\n    this.imageListenerKeys_.forEach(unlistenByKey);\r\n    this.imageListenerKeys_ = null;\r\n  };\n\n  return ImageTile;\n}(Tile));\r\n\r\n\r\n/**\r\n * Get a 1-pixel blank image.\r\n * @return {HTMLCanvasElement} Blank image.\r\n */\r\nfunction getBlankImage() {\r\n  var ctx = createCanvasContext2D(1, 1);\r\n  ctx.fillStyle = 'rgba(0,0,0,0)';\r\n  ctx.fillRect(0, 0, 1, 1);\r\n  return ctx.canvas;\r\n}\r\n\r\nexport default ImageTile;\r\n\r\n//# sourceMappingURL=ImageTile.js.map","/**\r\n * @module ol/tilecoord\r\n */\r\n\r\n\r\n/**\r\n * An array of three numbers representing the location of a tile in a tile\r\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\r\n * @typedef {Array<number>} TileCoord\r\n * @api\r\n */\r\n\r\n\r\n/**\r\n * @param {number} z Z.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\r\n * @return {TileCoord} Tile coordinate.\r\n */\r\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\r\n  if (opt_tileCoord !== undefined) {\r\n    opt_tileCoord[0] = z;\r\n    opt_tileCoord[1] = x;\r\n    opt_tileCoord[2] = y;\r\n    return opt_tileCoord;\r\n  } else {\r\n    return [z, x, y];\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {number} z Z.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @return {string} Key.\r\n */\r\nexport function getKeyZXY(z, x, y) {\r\n  return z + '/' + x + '/' + y;\r\n}\r\n\r\n\r\n/**\r\n * Get the key for a tile coord.\r\n * @param {TileCoord} tileCoord The tile coord.\r\n * @return {string} Key.\r\n */\r\nexport function getKey(tileCoord) {\r\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\r\n}\r\n\r\n\r\n/**\r\n * Get a tile coord given a key.\r\n * @param {string} key The tile coord key.\r\n * @return {TileCoord} The tile coord.\r\n */\r\nexport function fromKey(key) {\r\n  return key.split('/').map(Number);\r\n}\r\n\r\n\r\n/**\r\n * @param {TileCoord} tileCoord Tile coord.\r\n * @return {number} Hash.\r\n */\r\nexport function hash(tileCoord) {\r\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\r\n}\r\n\r\n\r\n/**\r\n * @param {TileCoord} tileCoord Tile coord.\r\n * @return {string} Quad key.\r\n */\r\nexport function quadKey(tileCoord) {\r\n  var z = tileCoord[0];\r\n  var digits = new Array(z);\r\n  var mask = 1 << (z - 1);\r\n  var i, charCode;\r\n  for (i = 0; i < z; ++i) {\r\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\r\n    charCode = 48;\r\n    if (tileCoord[1] & mask) {\r\n      charCode += 1;\r\n    }\r\n    if (tileCoord[2] & mask) {\r\n      charCode += 2;\r\n    }\r\n    digits[i] = String.fromCharCode(charCode);\r\n    mask >>= 1;\r\n  }\r\n  return digits.join('');\r\n}\r\n\r\n\r\n/**\r\n * @param {TileCoord} tileCoord Tile coordinate.\r\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\r\n * @return {boolean} Tile coordinate is within extent and zoom level range.\r\n */\r\nexport function withinExtentAndZ(tileCoord, tileGrid) {\r\n  var z = tileCoord[0];\r\n  var x = tileCoord[1];\r\n  var y = tileCoord[2];\r\n\r\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\r\n    return false;\r\n  }\r\n  var extent = tileGrid.getExtent();\r\n  var tileRange;\r\n  if (!extent) {\r\n    tileRange = tileGrid.getFullTileRange(z);\r\n  } else {\r\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\r\n  }\r\n  if (!tileRange) {\r\n    return true;\r\n  } else {\r\n    return tileRange.containsXY(x, y);\r\n  }\r\n}\r\n\r\n//# sourceMappingURL=tilecoord.js.map","/**\r\n * @module ol/TileCache\r\n */\r\nimport LRUCache from './structs/LRUCache.js';\r\nimport {fromKey, getKey} from './tilecoord.js';\r\n\r\nvar TileCache = /*@__PURE__*/(function (LRUCache) {\n  function TileCache(opt_highWaterMark) {\r\n\r\n    LRUCache.call(this, opt_highWaterMark);\r\n\r\n  }\n\n  if ( LRUCache ) TileCache.__proto__ = LRUCache;\n  TileCache.prototype = Object.create( LRUCache && LRUCache.prototype );\n  TileCache.prototype.constructor = TileCache;\r\n\r\n  /**\r\n   * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\r\n   */\r\n  TileCache.prototype.expireCache = function expireCache (usedTiles) {\r\n    while (this.canExpireCache()) {\r\n      var tile = this.peekLast();\r\n      var zKey = tile.tileCoord[0].toString();\r\n      if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\r\n        break;\r\n      } else {\r\n        this.pop().dispose();\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\r\n   */\r\n  TileCache.prototype.pruneExceptNewestZ = function pruneExceptNewestZ () {\r\n    if (this.getCount() === 0) {\r\n      return;\r\n    }\r\n    var key = this.peekFirstKey();\r\n    var tileCoord = fromKey(key);\r\n    var z = tileCoord[0];\r\n    this.forEach(function(tile) {\r\n      if (tile.tileCoord[0] !== z) {\r\n        this.remove(getKey(tile.tileCoord));\r\n        tile.dispose();\r\n      }\r\n    }, this);\r\n  };\n\n  return TileCache;\n}(LRUCache));\r\n\r\n\r\nexport default TileCache;\r\n\r\n//# sourceMappingURL=TileCache.js.map","/**\r\n * @module ol/tilegrid/TileGrid\r\n */\r\nimport {DEFAULT_TILE_SIZE} from './common.js';\r\nimport {assert} from '../asserts.js';\r\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\r\nimport {isSorted, linearFindNearest} from '../array.js';\r\nimport {createOrUpdate, getTopLeft} from '../extent.js';\r\nimport {clamp} from '../math.js';\r\nimport {toSize} from '../size.js';\r\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\r\n\r\n\r\n/**\r\n * @private\r\n * @type {import(\"../tilecoord.js\").TileCoord}\r\n */\r\nvar tmpTileCoord = [0, 0, 0];\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\r\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\r\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\r\n * @property {number} [minZoom=0] Minimum zoom.\r\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\r\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\r\n * specified, `extent` or `origins` must be provided.\r\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\r\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\r\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\r\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\r\n * `origin` must be provided.\r\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\r\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\r\n * array will have a length of `maxZoom + 1`.\r\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\r\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\r\n * Default is `[256, 256]`.\r\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\r\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\r\n * tile size.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Base class for setting the grid pattern for sources accessing tiled-image\r\n * servers.\r\n * @api\r\n */\r\nvar TileGrid = function TileGrid(options) {\r\n\r\n  /**\r\n   * @protected\r\n   * @type {number}\r\n   */\r\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\r\n\r\n  /**\r\n   * @private\r\n   * @type {!Array<number>}\r\n   */\r\n  this.resolutions_ = options.resolutions;\r\n  assert(isSorted(this.resolutions_, function(a, b) {\r\n    return b - a;\r\n  }, true), 17); // `resolutions` must be sorted in descending order\r\n\r\n\r\n  // check if we've got a consistent zoom factor and origin\r\n  var zoomFactor;\r\n  if (!options.origins) {\r\n    for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\r\n      if (!zoomFactor) {\r\n        zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\r\n      } else {\r\n        if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\r\n          zoomFactor = undefined;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * @private\r\n   * @type {number|undefined}\r\n   */\r\n  this.zoomFactor_ = zoomFactor;\r\n\r\n\r\n  /**\r\n   * @protected\r\n   * @type {number}\r\n   */\r\n  this.maxZoom = this.resolutions_.length - 1;\r\n\r\n  /**\r\n   * @private\r\n   * @type {import(\"../coordinate.js\").Coordinate}\r\n   */\r\n  this.origin_ = options.origin !== undefined ? options.origin : null;\r\n\r\n  /**\r\n   * @private\r\n   * @type {Array<import(\"../coordinate.js\").Coordinate>}\r\n   */\r\n  this.origins_ = null;\r\n  if (options.origins !== undefined) {\r\n    this.origins_ = options.origins;\r\n    assert(this.origins_.length == this.resolutions_.length,\r\n      20); // Number of `origins` and `resolutions` must be equal\r\n  }\r\n\r\n  var extent = options.extent;\r\n\r\n  if (extent !== undefined &&\r\n      !this.origin_ && !this.origins_) {\r\n    this.origin_ = getTopLeft(extent);\r\n  }\r\n\r\n  assert(\r\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\r\n    18); // Either `origin` or `origins` must be configured, never both\r\n\r\n  /**\r\n   * @private\r\n   * @type {Array<number|import(\"../size.js\").Size>}\r\n   */\r\n  this.tileSizes_ = null;\r\n  if (options.tileSizes !== undefined) {\r\n    this.tileSizes_ = options.tileSizes;\r\n    assert(this.tileSizes_.length == this.resolutions_.length,\r\n      19); // Number of `tileSizes` and `resolutions` must be equal\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @type {number|import(\"../size.js\").Size}\r\n   */\r\n  this.tileSize_ = options.tileSize !== undefined ?\r\n    options.tileSize :\r\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\r\n  assert(\r\n    (!this.tileSize_ && this.tileSizes_) ||\r\n      (this.tileSize_ && !this.tileSizes_),\r\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\r\n\r\n  /**\r\n   * @private\r\n   * @type {import(\"../extent.js\").Extent}\r\n   */\r\n  this.extent_ = extent !== undefined ? extent : null;\r\n\r\n\r\n  /**\r\n   * @private\r\n   * @type {Array<import(\"../TileRange.js\").default>}\r\n   */\r\n  this.fullTileRanges_ = null;\r\n\r\n  /**\r\n   * @private\r\n   * @type {import(\"../size.js\").Size}\r\n   */\r\n  this.tmpSize_ = [0, 0];\r\n\r\n  if (options.sizes !== undefined) {\r\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\r\n      var tileRange = new TileRange(\r\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\r\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\r\n      return tileRange;\r\n    }, this);\r\n  } else if (extent) {\r\n    this.calculateTileRanges_(extent);\r\n  }\r\n\r\n};\r\n\r\n/**\r\n * Call a function with each tile coordinate for a given extent and zoom level.\r\n *\r\n * @param {import(\"../extent.js\").Extent} extent Extent.\r\n * @param {number} zoom Integer zoom level.\r\n * @param {function(import(\"../tilecoord.js\").TileCoord)} callback Function called with each tile coordinate.\r\n * @api\r\n */\r\nTileGrid.prototype.forEachTileCoord = function forEachTileCoord (extent, zoom, callback) {\r\n  var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\r\n  for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\r\n    for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\r\n      callback([zoom, i, j]);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n * @param {function(this: T, number, import(\"../TileRange.js\").default): boolean} callback Callback.\r\n * @param {T=} opt_this The object to use as `this` in `callback`.\r\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\r\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\r\n * @return {boolean} Callback succeeded.\r\n * @template T\r\n */\r\nTileGrid.prototype.forEachTileCoordParentTileRange = function forEachTileCoordParentTileRange (tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\r\n  var tileRange, x, y;\r\n  var tileCoordExtent = null;\r\n  var z = tileCoord[0] - 1;\r\n  if (this.zoomFactor_ === 2) {\r\n    x = tileCoord[1];\r\n    y = tileCoord[2];\r\n  } else {\r\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\r\n  }\r\n  while (z >= this.minZoom) {\r\n    if (this.zoomFactor_ === 2) {\r\n      x = Math.floor(x / 2);\r\n      y = Math.floor(y / 2);\r\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\r\n    } else {\r\n      tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\r\n    }\r\n    if (callback.call(opt_this, z, tileRange)) {\r\n      return true;\r\n    }\r\n    --z;\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Get the extent for this tile grid, if it was configured.\r\n * @return {import(\"../extent.js\").Extent} Extent.\r\n */\r\nTileGrid.prototype.getExtent = function getExtent () {\r\n  return this.extent_;\r\n};\r\n\r\n/**\r\n * Get the maximum zoom level for the grid.\r\n * @return {number} Max zoom.\r\n * @api\r\n */\r\nTileGrid.prototype.getMaxZoom = function getMaxZoom () {\r\n  return this.maxZoom;\r\n};\r\n\r\n/**\r\n * Get the minimum zoom level for the grid.\r\n * @return {number} Min zoom.\r\n * @api\r\n */\r\nTileGrid.prototype.getMinZoom = function getMinZoom () {\r\n  return this.minZoom;\r\n};\r\n\r\n/**\r\n * Get the origin for the grid at the given zoom level.\r\n * @param {number} z Integer zoom level.\r\n * @return {import(\"../coordinate.js\").Coordinate} Origin.\r\n * @api\r\n */\r\nTileGrid.prototype.getOrigin = function getOrigin (z) {\r\n  if (this.origin_) {\r\n    return this.origin_;\r\n  } else {\r\n    return this.origins_[z];\r\n  }\r\n};\r\n\r\n/**\r\n * Get the resolution for the given zoom level.\r\n * @param {number} z Integer zoom level.\r\n * @return {number} Resolution.\r\n * @api\r\n */\r\nTileGrid.prototype.getResolution = function getResolution (z) {\r\n  return this.resolutions_[z];\r\n};\r\n\r\n/**\r\n * Get the list of resolutions for the tile grid.\r\n * @return {Array<number>} Resolutions.\r\n * @api\r\n */\r\nTileGrid.prototype.getResolutions = function getResolutions () {\r\n  return this.resolutions_;\r\n};\r\n\r\n/**\r\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\r\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\r\n * @return {import(\"../TileRange.js\").default} Tile range.\r\n */\r\nTileGrid.prototype.getTileCoordChildTileRange = function getTileCoordChildTileRange (tileCoord, opt_tileRange, opt_extent) {\r\n  if (tileCoord[0] < this.maxZoom) {\r\n    if (this.zoomFactor_ === 2) {\r\n      var minX = tileCoord[1] * 2;\r\n      var minY = tileCoord[2] * 2;\r\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\r\n    }\r\n    var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\r\n    return this.getTileRangeForExtentAndZ(\r\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\r\n  }\r\n  return null;\r\n};\r\n\r\n/**\r\n * Get the extent for a tile range.\r\n * @param {number} z Integer zoom level.\r\n * @param {import(\"../TileRange.js\").default} tileRange Tile range.\r\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\r\n * @return {import(\"../extent.js\").Extent} Extent.\r\n */\r\nTileGrid.prototype.getTileRangeExtent = function getTileRangeExtent (z, tileRange, opt_extent) {\r\n  var origin = this.getOrigin(z);\r\n  var resolution = this.getResolution(z);\r\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\r\n  var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\r\n  var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\r\n  var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\r\n  var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\r\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\r\n};\r\n\r\n/**\r\n * Get a tile range for the given extent and integer zoom level.\r\n * @param {import(\"../extent.js\").Extent} extent Extent.\r\n * @param {number} z Integer zoom level.\r\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\r\n * @return {import(\"../TileRange.js\").default} Tile range.\r\n */\r\nTileGrid.prototype.getTileRangeForExtentAndZ = function getTileRangeForExtentAndZ (extent, z, opt_tileRange) {\r\n  var tileCoord = tmpTileCoord;\r\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\r\n  var minX = tileCoord[1];\r\n  var minY = tileCoord[2];\r\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\r\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\r\n};\r\n\r\n/**\r\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n * @return {import(\"../coordinate.js\").Coordinate} Tile center.\r\n */\r\nTileGrid.prototype.getTileCoordCenter = function getTileCoordCenter (tileCoord) {\r\n  var origin = this.getOrigin(tileCoord[0]);\r\n  var resolution = this.getResolution(tileCoord[0]);\r\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\r\n  return [\r\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\r\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\r\n  ];\r\n};\r\n\r\n/**\r\n * Get the extent of a tile coordinate.\r\n *\r\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\r\n * @return {import(\"../extent.js\").Extent} Extent.\r\n * @api\r\n */\r\nTileGrid.prototype.getTileCoordExtent = function getTileCoordExtent (tileCoord, opt_extent) {\r\n  var origin = this.getOrigin(tileCoord[0]);\r\n  var resolution = this.getResolution(tileCoord[0]);\r\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\r\n  var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\r\n  var minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\r\n  var maxX = minX + tileSize[0] * resolution;\r\n  var maxY = minY + tileSize[1] * resolution;\r\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\r\n};\r\n\r\n/**\r\n * Get the tile coordinate for the given map coordinate and resolution.This\r\n * method considers that coordinates that intersect tile boundaries should be\r\n * assigned the higher tile coordinate.\r\n *\r\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n * @param {number} resolution Resolution.\r\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\r\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\r\n * @api\r\n */\r\nTileGrid.prototype.getTileCoordForCoordAndResolution = function getTileCoordForCoordAndResolution (coordinate, resolution, opt_tileCoord) {\r\n  return this.getTileCoordForXYAndResolution_(\r\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\r\n};\r\n\r\n/**\r\n * Note that this method should not be called for resolutions that correspond\r\n * to an integer zoom level.Instead call the `getTileCoordForXYAndZ_` method.\r\n * @param {number} x X.\r\n * @param {number} y Y.\r\n * @param {number} resolution Resolution (for a non-integer zoom level).\r\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\r\n *   intersections go to the higher tile coordinate, let edge intersections\r\n *   go to the lower tile coordinate.\r\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\r\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\r\n * @private\r\n */\r\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function getTileCoordForXYAndResolution_ (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\r\n  var z = this.getZForResolution(resolution);\r\n  var scale = resolution / this.getResolution(z);\r\n  var origin = this.getOrigin(z);\r\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\r\n\r\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\r\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\r\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\r\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\r\n  var tileCoordX = scale * xFromOrigin / tileSize[0];\r\n  var tileCoordY = scale * yFromOrigin / tileSize[1];\r\n\r\n  if (reverseIntersectionPolicy) {\r\n    tileCoordX = Math.ceil(tileCoordX) - 1;\r\n    tileCoordY = Math.ceil(tileCoordY) - 1;\r\n  } else {\r\n    tileCoordX = Math.floor(tileCoordX);\r\n    tileCoordY = Math.floor(tileCoordY);\r\n  }\r\n\r\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\r\n};\r\n\r\n/**\r\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\r\n * they should have separate implementations.This method is for integer zoom\r\n * levels.The other method should only be called for resolutions corresponding\r\n * to non-integer zoom levels.\r\n * @param {number} x Map x coordinate.\r\n * @param {number} y Map y coordinate.\r\n * @param {number} z Integer zoom level.\r\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\r\n *   intersections go to the higher tile coordinate, let edge intersections\r\n *   go to the lower tile coordinate.\r\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\r\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\r\n * @private\r\n */\r\nTileGrid.prototype.getTileCoordForXYAndZ_ = function getTileCoordForXYAndZ_ (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\r\n  var origin = this.getOrigin(z);\r\n  var resolution = this.getResolution(z);\r\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\r\n\r\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\r\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\r\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\r\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\r\n  var tileCoordX = xFromOrigin / tileSize[0];\r\n  var tileCoordY = yFromOrigin / tileSize[1];\r\n\r\n  if (reverseIntersectionPolicy) {\r\n    tileCoordX = Math.ceil(tileCoordX) - 1;\r\n    tileCoordY = Math.ceil(tileCoordY) - 1;\r\n  } else {\r\n    tileCoordX = Math.floor(tileCoordX);\r\n    tileCoordY = Math.floor(tileCoordY);\r\n  }\r\n\r\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\r\n};\r\n\r\n/**\r\n * Get a tile coordinate given a map coordinate and zoom level.\r\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n * @param {number} z Zoom level.\r\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\r\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\r\n * @api\r\n */\r\nTileGrid.prototype.getTileCoordForCoordAndZ = function getTileCoordForCoordAndZ (coordinate, z, opt_tileCoord) {\r\n  return this.getTileCoordForXYAndZ_(\r\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\r\n};\r\n\r\n/**\r\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n * @return {number} Tile resolution.\r\n */\r\nTileGrid.prototype.getTileCoordResolution = function getTileCoordResolution (tileCoord) {\r\n  return this.resolutions_[tileCoord[0]];\r\n};\r\n\r\n/**\r\n * Get the tile size for a zoom level. The type of the return value matches the\r\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\r\n * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\r\n * @param {number} z Z.\r\n * @return {number|import(\"../size.js\").Size} Tile size.\r\n * @api\r\n */\r\nTileGrid.prototype.getTileSize = function getTileSize (z) {\r\n  if (this.tileSize_) {\r\n    return this.tileSize_;\r\n  } else {\r\n    return this.tileSizes_[z];\r\n  }\r\n};\r\n\r\n/**\r\n * @param {number} z Zoom level.\r\n * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\r\n */\r\nTileGrid.prototype.getFullTileRange = function getFullTileRange (z) {\r\n  if (!this.fullTileRanges_) {\r\n    return null;\r\n  } else {\r\n    return this.fullTileRanges_[z];\r\n  }\r\n};\r\n\r\n/**\r\n * @param {number} resolution Resolution.\r\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\r\n *   If 1, the nearest lower resolution will be used. If -1, the nearest\r\n *   higher resolution will be used. Default is 0.\r\n * @return {number} Z.\r\n * @api\r\n */\r\nTileGrid.prototype.getZForResolution = function getZForResolution (resolution, opt_direction) {\r\n  var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\r\n  return clamp(z, this.minZoom, this.maxZoom);\r\n};\r\n\r\n/**\r\n * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\r\n * @private\r\n */\r\nTileGrid.prototype.calculateTileRanges_ = function calculateTileRanges_ (extent) {\r\n  var length = this.resolutions_.length;\r\n  var fullTileRanges = new Array(length);\r\n  for (var z = this.minZoom; z < length; ++z) {\r\n    fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\r\n  }\r\n  this.fullTileRanges_ = fullTileRanges;\r\n};\r\n\r\n\r\nexport default TileGrid;\r\n\r\n//# sourceMappingURL=TileGrid.js.map","/**\r\n * @module ol/tilegrid\r\n */\r\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\r\nimport {toSize} from './size.js';\r\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\r\nimport Corner from './extent/Corner.js';\r\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\r\nimport Units from './proj/Units.js';\r\nimport TileGrid from './tilegrid/TileGrid.js';\r\n\r\n\r\n/**\r\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\r\n * @return {!TileGrid} Default tile grid for the\r\n * passed projection.\r\n */\r\nexport function getForProjection(projection) {\r\n  var tileGrid = projection.getDefaultTileGrid();\r\n  if (!tileGrid) {\r\n    tileGrid = createForProjection(projection);\r\n    projection.setDefaultTileGrid(tileGrid);\r\n  }\r\n  return tileGrid;\r\n}\r\n\r\n\r\n/**\r\n * @param {TileGrid} tileGrid Tile grid.\r\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\r\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\r\n */\r\nexport function wrapX(tileGrid, tileCoord, projection) {\r\n  var z = tileCoord[0];\r\n  var center = tileGrid.getTileCoordCenter(tileCoord);\r\n  var projectionExtent = extentFromProjection(projection);\r\n  if (!containsCoordinate(projectionExtent, center)) {\r\n    var worldWidth = getWidth(projectionExtent);\r\n    var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\r\n    center[0] += worldWidth * worldsAway;\r\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\r\n  } else {\r\n    return tileCoord;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"./extent.js\").Extent} extent Extent.\r\n * @param {number=} opt_maxZoom Maximum zoom level (default is\r\n *     DEFAULT_MAX_ZOOM).\r\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\r\n *     DEFAULT_TILE_SIZE).\r\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\r\n * @return {!TileGrid} TileGrid instance.\r\n */\r\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\r\n  var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\r\n\r\n  var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\r\n\r\n  return new TileGrid({\r\n    extent: extent,\r\n    origin: getCorner(extent, corner),\r\n    resolutions: resolutions,\r\n    tileSize: opt_tileSize\r\n  });\r\n}\r\n\r\n\r\n/**\r\n * @typedef {Object} XYZOptions\r\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\r\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\r\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\r\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\r\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\r\n * @property {number} [minZoom=0] Minimum zoom.\r\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\r\n */\r\n\r\n\r\n/**\r\n * Creates a tile grid with a standard XYZ tiling scheme.\r\n * @param {XYZOptions=} opt_options Tile grid options.\r\n * @return {!TileGrid} Tile grid instance.\r\n * @api\r\n */\r\nexport function createXYZ(opt_options) {\r\n  /** @type {XYZOptions} */\r\n  var xyzOptions = opt_options || {};\r\n\r\n  var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\r\n\r\n  /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\r\n  var gridOptions = {\r\n    extent: extent,\r\n    minZoom: xyzOptions.minZoom,\r\n    tileSize: xyzOptions.tileSize,\r\n    resolutions: resolutionsFromExtent(\r\n      extent,\r\n      xyzOptions.maxZoom,\r\n      xyzOptions.tileSize\r\n    )\r\n  };\r\n  return new TileGrid(gridOptions);\r\n}\r\n\r\n\r\n/**\r\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\r\n * @param {import(\"./extent.js\").Extent} extent Extent.\r\n * @param {number=} opt_maxZoom Maximum zoom level (default is\r\n *     DEFAULT_MAX_ZOOM).\r\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\r\n *     DEFAULT_TILE_SIZE).\r\n * @return {!Array<number>} Resolutions array.\r\n */\r\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\r\n  var maxZoom = opt_maxZoom !== undefined ?\r\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\r\n\r\n  var height = getHeight(extent);\r\n  var width = getWidth(extent);\r\n\r\n  var tileSize = toSize(opt_tileSize !== undefined ?\r\n    opt_tileSize : DEFAULT_TILE_SIZE);\r\n  var maxResolution = Math.max(\r\n    width / tileSize[0], height / tileSize[1]);\r\n\r\n  var length = maxZoom + 1;\r\n  var resolutions = new Array(length);\r\n  for (var z = 0; z < length; ++z) {\r\n    resolutions[z] = maxResolution / Math.pow(2, z);\r\n  }\r\n  return resolutions;\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\r\n * @param {number=} opt_maxZoom Maximum zoom level (default is\r\n *     DEFAULT_MAX_ZOOM).\r\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\r\n *     DEFAULT_TILE_SIZE).\r\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\r\n * @return {!TileGrid} TileGrid instance.\r\n */\r\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\r\n  var extent = extentFromProjection(projection);\r\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\r\n}\r\n\r\n\r\n/**\r\n * Generate a tile grid extent from a projection.  If the projection has an\r\n * extent, it is used.  If not, a global extent is assumed.\r\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\r\n * @return {import(\"./extent.js\").Extent} Extent.\r\n */\r\nexport function extentFromProjection(projection) {\r\n  projection = getProjection(projection);\r\n  var extent = projection.getExtent();\r\n  if (!extent) {\r\n    var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\r\n    extent = createOrUpdate(-half, -half, half, half);\r\n  }\r\n  return extent;\r\n}\r\n\r\n//# sourceMappingURL=tilegrid.js.map","/**\r\n * @module ol/source/Tile\r\n */\r\nimport {abstract} from '../util.js';\r\nimport TileCache from '../TileCache.js';\r\nimport TileState from '../TileState.js';\r\nimport Event from '../events/Event.js';\r\nimport {equivalent} from '../proj.js';\r\nimport {toSize, scale as scaleSize} from '../size.js';\r\nimport Source from './Source.js';\r\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\r\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\r\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\r\n * @property {number} [cacheSize]\r\n * @property {boolean} [opaque]\r\n * @property {number} [tilePixelRatio]\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\r\n * @property {import(\"./State.js\").default} [state]\r\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\r\n * @property {boolean} [wrapX=true]\r\n * @property {number} [transition]\r\n * @property {string} [key]\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Base class for sources providing images divided into a tile grid.\r\n * @abstract\r\n * @api\r\n */\r\nvar TileSource = /*@__PURE__*/(function (Source) {\n  function TileSource(options) {\r\n\r\n    Source.call(this, {\r\n      attributions: options.attributions,\r\n      attributionsCollapsible: options.attributionsCollapsible,\r\n      projection: options.projection,\r\n      state: options.state,\r\n      wrapX: options.wrapX\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\r\n      options.tilePixelRatio : 1;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\r\n     */\r\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../TileCache.js\").default}\r\n     */\r\n    this.tileCache = new TileCache(options.cacheSize);\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../size.js\").Size}\r\n     */\r\n    this.tmpSize = [0, 0];\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.key_ = options.key || '';\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../Tile.js\").Options}\r\n     */\r\n    this.tileOptions = {transition: options.transition};\r\n\r\n  }\n\n  if ( Source ) TileSource.__proto__ = Source;\n  TileSource.prototype = Object.create( Source && Source.prototype );\n  TileSource.prototype.constructor = TileSource;\r\n\r\n  /**\r\n   * @return {boolean} Can expire cache.\r\n   */\r\n  TileSource.prototype.canExpireCache = function canExpireCache () {\r\n    return this.tileCache.canExpireCache();\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\r\n   */\r\n  TileSource.prototype.expireCache = function expireCache (projection, usedTiles) {\r\n    var tileCache = this.getTileCacheForProjection(projection);\r\n    if (tileCache) {\r\n      tileCache.expireCache(usedTiles);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @param {number} z Zoom level.\r\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\r\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\r\n   *     loaded tile.  If the callback returns `false`, the tile will not be\r\n   *     considered loaded.\r\n   * @return {boolean} The tile range is fully covered with loaded tiles.\r\n   */\r\n  TileSource.prototype.forEachLoadedTile = function forEachLoadedTile (projection, z, tileRange, callback) {\r\n    var tileCache = this.getTileCacheForProjection(projection);\r\n    if (!tileCache) {\r\n      return false;\r\n    }\r\n\r\n    var covered = true;\r\n    var tile, tileCoordKey, loaded;\r\n    for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\r\n      for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\r\n        tileCoordKey = getKeyZXY(z, x, y);\r\n        loaded = false;\r\n        if (tileCache.containsKey(tileCoordKey)) {\r\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\r\n          loaded = tile.getState() === TileState.LOADED;\r\n          if (loaded) {\r\n            loaded = (callback(tile) !== false);\r\n          }\r\n        }\r\n        if (!loaded) {\r\n          covered = false;\r\n        }\r\n      }\r\n    }\r\n    return covered;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @return {number} Gutter.\r\n   */\r\n  TileSource.prototype.getGutterForProjection = function getGutterForProjection (projection) {\r\n    return 0;\r\n  };\r\n\r\n  /**\r\n   * Return the key to be used for all tiles in the source.\r\n   * @return {string} The key for all tiles.\r\n   * @protected\r\n   */\r\n  TileSource.prototype.getKey = function getKey () {\r\n    return this.key_;\r\n  };\r\n\r\n  /**\r\n   * Set the value to be used as the key for all tiles in the source.\r\n   * @param {string} key The key for tiles.\r\n   * @protected\r\n   */\r\n  TileSource.prototype.setKey = function setKey (key) {\r\n    if (this.key_ !== key) {\r\n      this.key_ = key;\r\n      this.changed();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @return {boolean} Opaque.\r\n   */\r\n  TileSource.prototype.getOpaque = function getOpaque (projection) {\r\n    return this.opaque_;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  TileSource.prototype.getResolutions = function getResolutions () {\r\n    return this.tileGrid.getResolutions();\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {number} z Tile coordinate z.\r\n   * @param {number} x Tile coordinate x.\r\n   * @param {number} y Tile coordinate y.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @return {!import(\"../Tile.js\").default} Tile.\r\n   */\r\n  TileSource.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\r\n    return abstract();\r\n  };\r\n\r\n  /**\r\n   * Return the tile grid of the tile source.\r\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\r\n   * @api\r\n   */\r\n  TileSource.prototype.getTileGrid = function getTileGrid () {\r\n    return this.tileGrid;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\r\n   */\r\n  TileSource.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\r\n    if (!this.tileGrid) {\r\n      return getTileGridForProjection(projection);\r\n    } else {\r\n      return this.tileGrid;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @return {import(\"../TileCache.js\").default} Tile cache.\r\n   * @protected\r\n   */\r\n  TileSource.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\r\n    var thisProj = this.getProjection();\r\n    if (thisProj && !equivalent(thisProj, projection)) {\r\n      return null;\r\n    } else {\r\n      return this.tileCache;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Get the tile pixel ratio for this source. Subclasses may override this\r\n   * method, which is meant to return a supported pixel ratio that matches the\r\n   * provided `pixelRatio` as close as possible.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @return {number} Tile pixel ratio.\r\n   */\r\n  TileSource.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\r\n    return this.tilePixelRatio_;\r\n  };\r\n\r\n  /**\r\n   * @param {number} z Z.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @return {import(\"../size.js\").Size} Tile size.\r\n   */\r\n  TileSource.prototype.getTilePixelSize = function getTilePixelSize (z, pixelRatio, projection) {\r\n    var tileGrid = this.getTileGridForProjection(projection);\r\n    var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\r\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\r\n    if (tilePixelRatio == 1) {\r\n      return tileSize;\r\n    } else {\r\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\r\n   * is outside the resolution and extent range of the tile grid, `null` will be\r\n   * returned.\r\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\r\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\r\n   *     null if no tile URL should be created for the passed `tileCoord`.\r\n   */\r\n  TileSource.prototype.getTileCoordForTileUrlFunction = function getTileCoordForTileUrlFunction (tileCoord, opt_projection) {\r\n    var projection = opt_projection !== undefined ?\r\n      opt_projection : this.getProjection();\r\n    var tileGrid = this.getTileGridForProjection(projection);\r\n    if (this.getWrapX() && projection.isGlobal()) {\r\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\r\n    }\r\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  TileSource.prototype.refresh = function refresh () {\r\n    this.tileCache.clear();\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * Marks a tile coord as being used, without triggering a load.\r\n   * @abstract\r\n   * @param {number} z Tile coordinate z.\r\n   * @param {number} x Tile coordinate x.\r\n   * @param {number} y Tile coordinate y.\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   */\r\n  TileSource.prototype.useTile = function useTile (z, x, y, projection) {};\n\n  return TileSource;\n}(Source));\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\r\n * type.\r\n */\r\nexport var TileSourceEvent = /*@__PURE__*/(function (Event) {\n  function TileSourceEvent(type, tile) {\r\n\r\n    Event.call(this, type);\r\n\r\n    /**\r\n     * The tile related to the event.\r\n     * @type {import(\"../Tile.js\").default}\r\n     * @api\r\n     */\r\n    this.tile = tile;\r\n\r\n  }\n\n  if ( Event ) TileSourceEvent.__proto__ = Event;\n  TileSourceEvent.prototype = Object.create( Event && Event.prototype );\n  TileSourceEvent.prototype.constructor = TileSourceEvent;\n\n  return TileSourceEvent;\n}(Event));\r\n\r\nexport default TileSource;\r\n\r\n//# sourceMappingURL=Tile.js.map","/**\r\n * @module ol/renderer/webgl/tilelayershader\r\n */\r\n// This file is automatically generated, do not edit.\r\n// Run `make shaders` to generate, and commit the result.\r\n\r\nimport {DEBUG as DEBUG_WEBGL} from '../../webgl.js';\r\nimport WebGLFragment from '../../webgl/Fragment.js';\r\nimport WebGLVertex from '../../webgl/Vertex.js';\r\n\r\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\r\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\n\\n\\nuniform sampler2D u_texture;\\n\\nvoid main(void) {\\n  gl_FragColor = texture2D(u_texture, v_texCoord);\\n}\\n' :\r\n  'precision mediump float;varying vec2 a;uniform sampler2D e;void main(void){gl_FragColor=texture2D(e,a);}');\r\n\r\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\r\n  'varying vec2 v_texCoord;\\n\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\nuniform vec4 u_tileOffset;\\n\\nvoid main(void) {\\n  gl_Position = vec4(a_position * u_tileOffset.xy + u_tileOffset.zw, 0., 1.);\\n  v_texCoord = a_texCoord;\\n}\\n\\n\\n' :\r\n  'varying vec2 a;attribute vec2 b;attribute vec2 c;uniform vec4 d;void main(void){gl_Position=vec4(b*d.xy+d.zw,0.,1.);a=c;}');\r\n\r\n//# sourceMappingURL=tilelayershader.js.map","/**\r\n * @module ol/renderer/webgl/tilelayershader/Locations\r\n */\r\n// This file is automatically generated, do not edit\r\n// Run `make shaders` to generate, and commit the result.\r\n\r\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\r\n\r\nvar Locations = function Locations(gl, program) {\r\n\r\n  /**\r\n   * @type {WebGLUniformLocation}\r\n   */\r\n  this.u_tileOffset = gl.getUniformLocation(\r\n    program, DEBUG_WEBGL ? 'u_tileOffset' : 'd');\r\n\r\n  /**\r\n   * @type {WebGLUniformLocation}\r\n   */\r\n  this.u_texture = gl.getUniformLocation(\r\n    program, DEBUG_WEBGL ? 'u_texture' : 'e');\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.a_position = gl.getAttribLocation(\r\n    program, DEBUG_WEBGL ? 'a_position' : 'b');\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  this.a_texCoord = gl.getAttribLocation(\r\n    program, DEBUG_WEBGL ? 'a_texCoord' : 'c');\r\n\r\n};\r\n\r\nexport default Locations;\r\n\r\n//# sourceMappingURL=Locations.js.map","/**\r\n * @module ol/renderer/webgl/TileLayer\r\n */\r\n// FIXME large resolutions lead to too large framebuffers :-(\r\n// FIXME animated shaders! check in redraw\r\n\r\nimport LayerType from '../../LayerType.js';\r\nimport ImageTile from '../../ImageTile.js';\r\nimport TileRange from '../../TileRange.js';\r\nimport TileState from '../../TileState.js';\r\nimport TileSource from '../../source/Tile.js';\r\nimport {numberSafeCompareFunction} from '../../array.js';\r\nimport {createEmpty, intersects} from '../../extent.js';\r\nimport {roundUpToPowerOfTwo} from '../../math.js';\r\nimport WebGLLayerRenderer from './Layer.js';\r\nimport {fragment, vertex} from './tilelayershader.js';\r\nimport Locations from './tilelayershader/Locations.js';\r\nimport {toSize} from '../../size.js';\r\nimport {\r\n  reset as resetTransform,\r\n  rotate as rotateTransform,\r\n  scale as scaleTransform,\r\n  translate as translateTransform,\r\n  apply as applyTransform\r\n} from '../../transform.js';\r\nimport {COLOR_BUFFER_BIT, BLEND, ARRAY_BUFFER, FLOAT, LINEAR, TRIANGLE_STRIP} from '../../webgl.js';\r\nimport WebGLBuffer from '../../webgl/Buffer.js';\r\n\r\n/**\r\n * @classdesc\r\n * WebGL renderer for tile layers.\r\n * @api\r\n */\r\nvar WebGLTileLayerRenderer = /*@__PURE__*/(function (WebGLLayerRenderer) {\n  function WebGLTileLayerRenderer(mapRenderer, tileLayer) {\r\n\r\n    WebGLLayerRenderer.call(this, mapRenderer, tileLayer);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../webgl/Fragment.js\").default}\r\n     */\r\n    this.fragmentShader_ = fragment;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../webgl/Vertex.js\").default}\r\n     */\r\n    this.vertexShader_ = vertex;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./tilelayershader/Locations.js\").default}\r\n     */\r\n    this.locations_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../webgl/Buffer.js\").default}\r\n     */\r\n    this.renderArrayBuffer_ = new WebGLBuffer([\r\n      0, 0, 0, 1,\r\n      1, 0, 1, 1,\r\n      0, 1, 0, 0,\r\n      1, 1, 1, 0\r\n    ]);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../TileRange.js\").default}\r\n     */\r\n    this.renderedTileRange_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.renderedFramebufferExtent_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.renderedRevision_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../size.js\").Size}\r\n     */\r\n    this.tmpSize_ = [0, 0];\r\n\r\n  }\n\n  if ( WebGLLayerRenderer ) WebGLTileLayerRenderer.__proto__ = WebGLLayerRenderer;\n  WebGLTileLayerRenderer.prototype = Object.create( WebGLLayerRenderer && WebGLLayerRenderer.prototype );\n  WebGLTileLayerRenderer.prototype.constructor = WebGLTileLayerRenderer;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\r\n    var context = this.mapRenderer.getContext();\r\n    context.deleteBuffer(this.renderArrayBuffer_);\r\n    WebGLLayerRenderer.prototype.disposeInternal.call(this);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLTileLayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\r\n    var mapRenderer = this.mapRenderer;\r\n\r\n    return (\r\n      /**\r\n       * @param {number} zoom Zoom level.\r\n       * @param {import(\"../../TileRange.js\").default} tileRange Tile range.\r\n       * @return {boolean} The tile range is fully loaded.\r\n       */\r\n      function(zoom, tileRange) {\r\n        function callback(tile) {\r\n          var loaded = mapRenderer.isTileTextureLoaded(tile);\r\n          if (loaded) {\r\n            if (!tiles[zoom]) {\r\n              tiles[zoom] = {};\r\n            }\r\n            tiles[zoom][tile.tileCoord.toString()] = tile;\r\n          }\r\n          return loaded;\r\n        }\r\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\r\n      }\r\n    );\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLTileLayerRenderer.prototype.handleWebGLContextLost = function handleWebGLContextLost () {\r\n    WebGLLayerRenderer.prototype.handleWebGLContextLost.call(this);\r\n    this.locations_ = null;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState, context) {\r\n\r\n    var mapRenderer = this.mapRenderer;\r\n    var gl = context.getGL();\r\n\r\n    var viewState = frameState.viewState;\r\n    var projection = viewState.projection;\r\n\r\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\r\n    var tileSource = tileLayer.getSource();\r\n    if (!(tileSource instanceof TileSource)) {\r\n      return true;\r\n    }\r\n\r\n    var tileGrid = tileSource.getTileGridForProjection(projection);\r\n    var z = tileGrid.getZForResolution(viewState.resolution);\r\n    var tileResolution = tileGrid.getResolution(z);\r\n\r\n    var tilePixelSize =\r\n        tileSource.getTilePixelSize(z, frameState.pixelRatio, projection);\r\n    var pixelRatio = tilePixelSize[0] /\r\n        toSize(tileGrid.getTileSize(z), this.tmpSize_)[0];\r\n    var tilePixelResolution = tileResolution / pixelRatio;\r\n    var tileGutter = tileSource.getTilePixelRatio(pixelRatio) * tileSource.getGutterForProjection(projection);\r\n\r\n    var center = viewState.center;\r\n    var extent = frameState.extent;\r\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\r\n\r\n    var framebufferExtent;\r\n    if (this.renderedTileRange_ &&\r\n        this.renderedTileRange_.equals(tileRange) &&\r\n        this.renderedRevision_ == tileSource.getRevision()) {\r\n      framebufferExtent = this.renderedFramebufferExtent_;\r\n    } else {\r\n\r\n      var tileRangeSize = tileRange.getSize();\r\n\r\n      var maxDimension = Math.max(\r\n        tileRangeSize[0] * tilePixelSize[0],\r\n        tileRangeSize[1] * tilePixelSize[1]);\r\n      var framebufferDimension = roundUpToPowerOfTwo(maxDimension);\r\n      var framebufferExtentDimension = tilePixelResolution * framebufferDimension;\r\n      var origin = tileGrid.getOrigin(z);\r\n      var minX = origin[0] +\r\n          tileRange.minX * tilePixelSize[0] * tilePixelResolution;\r\n      var minY = origin[1] +\r\n          tileRange.minY * tilePixelSize[1] * tilePixelResolution;\r\n      framebufferExtent = [\r\n        minX, minY,\r\n        minX + framebufferExtentDimension, minY + framebufferExtentDimension\r\n      ];\r\n\r\n      this.bindFramebuffer(frameState, framebufferDimension);\r\n      gl.viewport(0, 0, framebufferDimension, framebufferDimension);\r\n\r\n      gl.clearColor(0, 0, 0, 0);\r\n      gl.clear(COLOR_BUFFER_BIT);\r\n      gl.disable(BLEND);\r\n\r\n      var program = context.getProgram(this.fragmentShader_, this.vertexShader_);\r\n      context.useProgram(program);\r\n      if (!this.locations_) {\r\n        this.locations_ = new Locations(gl, program);\r\n      }\r\n\r\n      context.bindBuffer(ARRAY_BUFFER, this.renderArrayBuffer_);\r\n      gl.enableVertexAttribArray(this.locations_.a_position);\r\n      gl.vertexAttribPointer(\r\n        this.locations_.a_position, 2, FLOAT, false, 16, 0);\r\n      gl.enableVertexAttribArray(this.locations_.a_texCoord);\r\n      gl.vertexAttribPointer(\r\n        this.locations_.a_texCoord, 2, FLOAT, false, 16, 8);\r\n      gl.uniform1i(this.locations_.u_texture, 0);\r\n\r\n      /**\r\n       * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\r\n       */\r\n      var tilesToDrawByZ = {};\r\n      tilesToDrawByZ[z] = {};\r\n\r\n      var findLoadedTiles = this.createLoadedTileFinder(\r\n        tileSource, projection, tilesToDrawByZ);\r\n\r\n      var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\r\n      var allTilesLoaded = true;\r\n      var tmpExtent = createEmpty();\r\n      var tmpTileRange = new TileRange(0, 0, 0, 0);\r\n      var childTileRange, drawable, fullyLoaded, tile, tileState;\r\n      var x, y, tileExtent;\r\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\r\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\r\n\r\n          tile = tileSource.getTile(z, x, y, pixelRatio, projection);\r\n          if (layerState.extent !== undefined) {\r\n            // ignore tiles outside layer extent\r\n            tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\r\n            if (!intersects(tileExtent, layerState.extent)) {\r\n              continue;\r\n            }\r\n          }\r\n          tileState = tile.getState();\r\n          drawable = tileState == TileState.LOADED ||\r\n              tileState == TileState.EMPTY ||\r\n              tileState == TileState.ERROR && !useInterimTilesOnError;\r\n          if (!drawable) {\r\n            tile = tile.getInterimTile();\r\n          }\r\n          tileState = tile.getState();\r\n          if (tileState == TileState.LOADED) {\r\n            if (mapRenderer.isTileTextureLoaded(tile)) {\r\n              tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\r\n              continue;\r\n            }\r\n          } else if (tileState == TileState.EMPTY ||\r\n                     (tileState == TileState.ERROR &&\r\n                      !useInterimTilesOnError)) {\r\n            continue;\r\n          }\r\n\r\n          allTilesLoaded = false;\r\n          fullyLoaded = tileGrid.forEachTileCoordParentTileRange(\r\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\r\n          if (!fullyLoaded) {\r\n            childTileRange = tileGrid.getTileCoordChildTileRange(\r\n              tile.tileCoord, tmpTileRange, tmpExtent);\r\n            if (childTileRange) {\r\n              findLoadedTiles(z + 1, childTileRange);\r\n            }\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n      /** @type {Array<number>} */\r\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\r\n      zs.sort(numberSafeCompareFunction);\r\n      var u_tileOffset = new Float32Array(4);\r\n      for (var i = 0, ii = zs.length; i < ii; ++i) {\r\n        var tilesToDraw = tilesToDrawByZ[zs[i]];\r\n        for (var tileKey in tilesToDraw) {\r\n          tile = tilesToDraw[tileKey];\r\n\r\n          if (!(tile instanceof ImageTile)) {\r\n            continue;\r\n          }\r\n\r\n          tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\r\n          u_tileOffset[0] = 2 * (tileExtent[2] - tileExtent[0]) /\r\n              framebufferExtentDimension;\r\n          u_tileOffset[1] = 2 * (tileExtent[3] - tileExtent[1]) /\r\n              framebufferExtentDimension;\r\n          u_tileOffset[2] = 2 * (tileExtent[0] - framebufferExtent[0]) /\r\n              framebufferExtentDimension - 1;\r\n          u_tileOffset[3] = 2 * (tileExtent[1] - framebufferExtent[1]) /\r\n              framebufferExtentDimension - 1;\r\n          gl.uniform4fv(this.locations_.u_tileOffset, u_tileOffset);\r\n          mapRenderer.bindTileTexture(tile, tilePixelSize,\r\n            tileGutter * pixelRatio, LINEAR, LINEAR);\r\n          gl.drawArrays(TRIANGLE_STRIP, 0, 4);\r\n        }\r\n      }\r\n\r\n      if (allTilesLoaded) {\r\n        this.renderedTileRange_ = tileRange;\r\n        this.renderedFramebufferExtent_ = framebufferExtent;\r\n        this.renderedRevision_ = tileSource.getRevision();\r\n      } else {\r\n        this.renderedTileRange_ = null;\r\n        this.renderedFramebufferExtent_ = null;\r\n        this.renderedRevision_ = -1;\r\n        frameState.animate = true;\r\n      }\r\n\r\n    }\r\n\r\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\r\n    var tileTextureQueue = mapRenderer.getTileTextureQueue();\r\n    this.manageTilePyramid(\r\n      frameState, tileSource, tileGrid, pixelRatio, projection, extent, z,\r\n      tileLayer.getPreload(),\r\n      /**\r\n       * @param {import(\"../../Tile.js\").default} tile Tile.\r\n       */\r\n      function(tile) {\r\n        if (tile.getState() == TileState.LOADED &&\r\n              !mapRenderer.isTileTextureLoaded(tile) &&\r\n              !tileTextureQueue.isKeyQueued(tile.getKey())) {\r\n          tileTextureQueue.enqueue([\r\n            tile,\r\n            tileGrid.getTileCoordCenter(tile.tileCoord),\r\n            tileGrid.getResolution(tile.tileCoord[0]),\r\n            tilePixelSize, tileGutter * pixelRatio\r\n          ]);\r\n        }\r\n      }, this);\r\n    this.scheduleExpireCache(frameState, tileSource);\r\n\r\n    var texCoordMatrix = this.texCoordMatrix;\r\n    resetTransform(texCoordMatrix);\r\n    translateTransform(texCoordMatrix,\r\n      (Math.round(center[0] / tileResolution) * tileResolution - framebufferExtent[0]) /\r\n            (framebufferExtent[2] - framebufferExtent[0]),\r\n      (Math.round(center[1] / tileResolution) * tileResolution - framebufferExtent[1]) /\r\n            (framebufferExtent[3] - framebufferExtent[1]));\r\n    if (viewState.rotation !== 0) {\r\n      rotateTransform(texCoordMatrix, viewState.rotation);\r\n    }\r\n    scaleTransform(texCoordMatrix,\r\n      frameState.size[0] * viewState.resolution /\r\n            (framebufferExtent[2] - framebufferExtent[0]),\r\n      frameState.size[1] * viewState.resolution /\r\n            (framebufferExtent[3] - framebufferExtent[1]));\r\n    translateTransform(texCoordMatrix, -0.5, -0.5);\r\n\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLTileLayerRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, callback, thisArg) {\r\n    if (!this.framebuffer) {\r\n      return undefined;\r\n    }\r\n\r\n    var pixelOnMapScaled = [\r\n      pixel[0] / frameState.size[0],\r\n      (frameState.size[1] - pixel[1]) / frameState.size[1]];\r\n\r\n    var pixelOnFrameBufferScaled = applyTransform(\r\n      this.texCoordMatrix, pixelOnMapScaled.slice());\r\n    var pixelOnFrameBuffer = [\r\n      pixelOnFrameBufferScaled[0] * this.framebufferDimension,\r\n      pixelOnFrameBufferScaled[1] * this.framebufferDimension];\r\n\r\n    var gl = this.mapRenderer.getContext().getGL();\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\r\n    var imageData = new Uint8Array(4);\r\n    gl.readPixels(pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1,\r\n      gl.RGBA, gl.UNSIGNED_BYTE, imageData);\r\n\r\n    if (imageData[3] > 0) {\r\n      return callback.call(thisArg, this.getLayer(), imageData);\r\n    } else {\r\n      return undefined;\r\n    }\r\n  };\n\n  return WebGLTileLayerRenderer;\n}(WebGLLayerRenderer));\r\n\r\n\r\n/**\r\n * Determine if this renderer handles the provided layer.\r\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\r\n * @return {boolean} The renderer can render the layer.\r\n */\r\nWebGLTileLayerRenderer['handles'] = function(layer) {\r\n  return layer.getType() === LayerType.TILE;\r\n};\r\n\r\n\r\n/**\r\n * Create a layer renderer.\r\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\r\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\r\n * @return {WebGLTileLayerRenderer} The layer renderer.\r\n */\r\nWebGLTileLayerRenderer['create'] = function(mapRenderer, layer) {\r\n  return new WebGLTileLayerRenderer(\r\n    /** @type {import(\"./Map.js\").default} */ (mapRenderer),\r\n    /** @type {import(\"../../layer/Tile.js\").default} */ (layer)\r\n  );\r\n};\r\n\r\n\r\nexport default WebGLTileLayerRenderer;\r\n\r\n//# sourceMappingURL=TileLayer.js.map","/**\r\n * @module ol/renderer/webgl/VectorLayer\r\n */\r\nimport {getUid} from '../../util.js';\r\nimport LayerType from '../../LayerType.js';\r\nimport ViewHint from '../../ViewHint.js';\r\nimport {buffer, containsExtent, createEmpty} from '../../extent.js';\r\nimport WebGLReplayGroup from '../../render/webgl/ReplayGroup.js';\r\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\r\nimport WebGLLayerRenderer from './Layer.js';\r\nimport {apply as applyTransform} from '../../transform.js';\r\n\r\n\r\n/**\r\n * @classdesc\r\n * WebGL renderer for vector layers.\r\n * @api\r\n */\r\nvar WebGLVectorLayerRenderer = /*@__PURE__*/(function (WebGLLayerRenderer) {\n  function WebGLVectorLayerRenderer(mapRenderer, vectorLayer) {\r\n\r\n    WebGLLayerRenderer.call(this, mapRenderer, vectorLayer);\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.dirty_ = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.renderedRevision_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.renderedResolution_ = NaN;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.renderedExtent_ = createEmpty();\r\n\r\n    /**\r\n     * @private\r\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\r\n     */\r\n    this.renderedRenderOrder_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../render/webgl/ReplayGroup.js\").default}\r\n     */\r\n    this.replayGroup_ = null;\r\n\r\n    /**\r\n     * The last layer state.\r\n     * @private\r\n     * @type {?import(\"../../layer/Layer.js\").State}\r\n     */\r\n    this.layerState_ = null;\r\n\r\n  }\n\n  if ( WebGLLayerRenderer ) WebGLVectorLayerRenderer.__proto__ = WebGLLayerRenderer;\n  WebGLVectorLayerRenderer.prototype = Object.create( WebGLLayerRenderer && WebGLLayerRenderer.prototype );\n  WebGLVectorLayerRenderer.prototype.constructor = WebGLVectorLayerRenderer;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLVectorLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\r\n    this.layerState_ = layerState;\r\n    var viewState = frameState.viewState;\r\n    var replayGroup = this.replayGroup_;\r\n    var size = frameState.size;\r\n    var pixelRatio = frameState.pixelRatio;\r\n    var gl = this.mapRenderer.getGL();\r\n    if (replayGroup && !replayGroup.isEmpty()) {\r\n      gl.enable(gl.SCISSOR_TEST);\r\n      gl.scissor(0, 0, size[0] * pixelRatio, size[1] * pixelRatio);\r\n      replayGroup.replay(context,\r\n        viewState.center, viewState.resolution, viewState.rotation,\r\n        size, pixelRatio, layerState.opacity,\r\n        layerState.managed ? frameState.skippedFeatureUids : {});\r\n      gl.disable(gl.SCISSOR_TEST);\r\n    }\r\n\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\r\n    var replayGroup = this.replayGroup_;\r\n    if (replayGroup) {\r\n      var context = this.mapRenderer.getContext();\r\n      replayGroup.getDeleteResourcesFunction(context)();\r\n      this.replayGroup_ = null;\r\n    }\r\n    WebGLLayerRenderer.prototype.disposeInternal.call(this);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\r\n    if (!this.replayGroup_ || !this.layerState_) {\r\n      return undefined;\r\n    } else {\r\n      var context = this.mapRenderer.getContext();\r\n      var viewState = frameState.viewState;\r\n      var layer = this.getLayer();\r\n      var layerState = this.layerState_;\r\n      /** @type {!Object<string, boolean>} */\r\n      var features = {};\r\n      return this.replayGroup_.forEachFeatureAtCoordinate(coordinate,\r\n        context, viewState.center, viewState.resolution, viewState.rotation,\r\n        frameState.size, frameState.pixelRatio, layerState.opacity,\r\n        {},\r\n        /**\r\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\r\n         * @return {?} Callback result.\r\n         */\r\n        function(feature) {\r\n          var key = getUid(feature);\r\n          if (!(key in features)) {\r\n            features[key] = true;\r\n            return callback.call(thisArg, feature, layer);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLVectorLayerRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState) {\r\n    if (!this.replayGroup_ || !this.layerState_) {\r\n      return false;\r\n    } else {\r\n      var context = this.mapRenderer.getContext();\r\n      var viewState = frameState.viewState;\r\n      var layerState = this.layerState_;\r\n      return this.replayGroup_.hasFeatureAtCoordinate(coordinate,\r\n        context, viewState.center, viewState.resolution, viewState.rotation,\r\n        frameState.size, frameState.pixelRatio, layerState.opacity,\r\n        frameState.skippedFeatureUids);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLVectorLayerRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, callback, thisArg) {\r\n    var coordinate = applyTransform(\r\n      frameState.pixelToCoordinateTransform, pixel.slice());\r\n    var hasFeature = this.hasFeatureAtCoordinate(coordinate, frameState);\r\n\r\n    if (hasFeature) {\r\n      return callback.call(thisArg, this.getLayer(), null);\r\n    } else {\r\n      return undefined;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle changes in image style state.\r\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\r\n   * @private\r\n   */\r\n  WebGLVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\r\n    this.renderIfReadyAndVisible();\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState, context) {\r\n    var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\r\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (vectorLayer.getSource());\r\n\r\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\r\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\r\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\r\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\r\n\r\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\r\n        (!updateWhileInteracting && interacting)) {\r\n      return true;\r\n    }\r\n\r\n    var frameStateExtent = frameState.extent;\r\n    var viewState = frameState.viewState;\r\n    var projection = viewState.projection;\r\n    var resolution = viewState.resolution;\r\n    var pixelRatio = frameState.pixelRatio;\r\n    var vectorLayerRevision = vectorLayer.getRevision();\r\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\r\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\r\n\r\n    if (vectorLayerRenderOrder === undefined) {\r\n      vectorLayerRenderOrder = defaultRenderOrder;\r\n    }\r\n\r\n    var extent = buffer(frameStateExtent,\r\n      vectorLayerRenderBuffer * resolution);\r\n\r\n    if (!this.dirty_ &&\r\n        this.renderedResolution_ == resolution &&\r\n        this.renderedRevision_ == vectorLayerRevision &&\r\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\r\n        containsExtent(this.renderedExtent_, extent)) {\r\n      return true;\r\n    }\r\n\r\n    if (this.replayGroup_) {\r\n      frameState.postRenderFunctions.push(\r\n        this.replayGroup_.getDeleteResourcesFunction(context));\r\n    }\r\n\r\n    this.dirty_ = false;\r\n\r\n    var replayGroup = new WebGLReplayGroup(\r\n      getRenderTolerance(resolution, pixelRatio),\r\n      extent, vectorLayer.getRenderBuffer());\r\n    vectorSource.loadFeatures(extent, resolution, projection);\r\n    /**\r\n     * @param {import(\"../../Feature.js\").default} feature Feature.\r\n     * @this {WebGLVectorLayerRenderer}\r\n     */\r\n    var render = function(feature) {\r\n      var styles;\r\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\r\n      if (styleFunction) {\r\n        styles = styleFunction(feature, resolution);\r\n      }\r\n      if (styles) {\r\n        var dirty = this.renderFeature(\r\n          feature, resolution, pixelRatio, styles, replayGroup);\r\n        this.dirty_ = this.dirty_ || dirty;\r\n      }\r\n    }.bind(this);\r\n    if (vectorLayerRenderOrder) {\r\n      /** @type {Array<import(\"../../Feature.js\").default>} */\r\n      var features = [];\r\n      vectorSource.forEachFeatureInExtent(extent,\r\n        /**\r\n         * @param {import(\"../../Feature.js\").default} feature Feature.\r\n         */\r\n        function(feature) {\r\n          features.push(feature);\r\n        });\r\n      features.sort(vectorLayerRenderOrder);\r\n      features.forEach(render.bind(this));\r\n    } else {\r\n      vectorSource.forEachFeatureInExtent(extent, render);\r\n    }\r\n    replayGroup.finish(context);\r\n\r\n    this.renderedResolution_ = resolution;\r\n    this.renderedRevision_ = vectorLayerRevision;\r\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\r\n    this.renderedExtent_ = extent;\r\n    this.replayGroup_ = replayGroup;\r\n\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../../Feature.js\").default} feature Feature.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of\r\n   *     styles.\r\n   * @param {import(\"../../render/webgl/ReplayGroup.js\").default} replayGroup Replay group.\r\n   * @return {boolean} `true` if an image is loading.\r\n   */\r\n  WebGLVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, replayGroup) {\r\n    if (!styles) {\r\n      return false;\r\n    }\r\n    var loading = false;\r\n    if (Array.isArray(styles)) {\r\n      for (var i = styles.length - 1, ii = 0; i >= ii; --i) {\r\n        loading = renderFeature(\r\n          replayGroup, feature, styles[i],\r\n          getSquaredRenderTolerance(resolution, pixelRatio),\r\n          this.handleStyleImageChange_, this) || loading;\r\n      }\r\n    } else {\r\n      loading = renderFeature(\r\n        replayGroup, feature, styles,\r\n        getSquaredRenderTolerance(resolution, pixelRatio),\r\n        this.handleStyleImageChange_, this) || loading;\r\n    }\r\n    return loading;\r\n  };\n\n  return WebGLVectorLayerRenderer;\n}(WebGLLayerRenderer));\r\n\r\n\r\n/**\r\n * Determine if this renderer handles the provided layer.\r\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\r\n * @return {boolean} The renderer can render the layer.\r\n */\r\nWebGLVectorLayerRenderer['handles'] = function(layer) {\r\n  return layer.getType() === LayerType.VECTOR;\r\n};\r\n\r\n\r\n/**\r\n * Create a layer renderer.\r\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\r\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\r\n * @return {WebGLVectorLayerRenderer} The layer renderer.\r\n */\r\nWebGLVectorLayerRenderer['create'] = function(mapRenderer, layer) {\r\n  return new WebGLVectorLayerRenderer(\r\n    /** @type {import(\"./Map.js\").default} */ (mapRenderer),\r\n    /** @type {import(\"../../layer/Vector.js\").default} */ (layer)\r\n  );\r\n};\r\n\r\n\r\nexport default WebGLVectorLayerRenderer;\r\n\r\n//# sourceMappingURL=VectorLayer.js.map","/**\r\n * @module ol/tileurlfunction\r\n */\r\nimport {assert} from './asserts.js';\r\nimport {modulo} from './math.js';\r\nimport {hash as tileCoordHash} from './tilecoord.js';\r\n\r\n\r\n/**\r\n * @param {string} template Template.\r\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\r\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\r\n */\r\nexport function createFromTemplate(template, tileGrid) {\r\n  var zRegEx = /\\{z\\}/g;\r\n  var xRegEx = /\\{x\\}/g;\r\n  var yRegEx = /\\{y\\}/g;\r\n  var dashYRegEx = /\\{-y\\}/g;\r\n  return (\r\n    /**\r\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\r\n     * @return {string|undefined} Tile URL.\r\n     */\r\n    function(tileCoord, pixelRatio, projection) {\r\n      if (!tileCoord) {\r\n        return undefined;\r\n      } else {\r\n        return template.replace(zRegEx, tileCoord[0].toString())\r\n          .replace(xRegEx, tileCoord[1].toString())\r\n          .replace(yRegEx, function() {\r\n            var y = -tileCoord[2] - 1;\r\n            return y.toString();\r\n          })\r\n          .replace(dashYRegEx, function() {\r\n            var z = tileCoord[0];\r\n            var range = tileGrid.getFullTileRange(z);\r\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\r\n            var y = range.getHeight() + tileCoord[2];\r\n            return y.toString();\r\n          });\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<string>} templates Templates.\r\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\r\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\r\n */\r\nexport function createFromTemplates(templates, tileGrid) {\r\n  var len = templates.length;\r\n  var tileUrlFunctions = new Array(len);\r\n  for (var i = 0; i < len; ++i) {\r\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\r\n  }\r\n  return createFromTileUrlFunctions(tileUrlFunctions);\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\r\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\r\n */\r\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\r\n  if (tileUrlFunctions.length === 1) {\r\n    return tileUrlFunctions[0];\r\n  }\r\n  return (\r\n    /**\r\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\r\n     * @return {string|undefined} Tile URL.\r\n     */\r\n    function(tileCoord, pixelRatio, projection) {\r\n      if (!tileCoord) {\r\n        return undefined;\r\n      } else {\r\n        var h = tileCoordHash(tileCoord);\r\n        var index = modulo(h, tileUrlFunctions.length);\r\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n * @param {number} pixelRatio Pixel ratio.\r\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\r\n * @return {string|undefined} Tile URL.\r\n */\r\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\r\n  return undefined;\r\n}\r\n\r\n\r\n/**\r\n * @param {string} url URL.\r\n * @return {Array<string>} Array of urls.\r\n */\r\nexport function expandUrl(url) {\r\n  var urls = [];\r\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\r\n  if (match) {\r\n    // char range\r\n    var startCharCode = match[1].charCodeAt(0);\r\n    var stopCharCode = match[2].charCodeAt(0);\r\n    var charCode;\r\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\r\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\r\n    }\r\n    return urls;\r\n  }\r\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\r\n  if (match) {\r\n    // number range\r\n    var stop = parseInt(match[2], 10);\r\n    for (var i = parseInt(match[1], 10); i <= stop; i++) {\r\n      urls.push(url.replace(match[0], i.toString()));\r\n    }\r\n    return urls;\r\n  }\r\n  urls.push(url);\r\n  return urls;\r\n}\r\n\r\n//# sourceMappingURL=tileurlfunction.js.map","/**\r\n * @module ol/net\r\n */\r\nimport {getUid} from './util.js';\r\n\r\n\r\n/**\r\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\r\n * The error callback will be called when no JSONP is executed after 10 seconds.\r\n *\r\n * @param {string} url Request url. A 'callback' query parameter will be\r\n *     appended.\r\n * @param {Function} callback Callback on success.\r\n * @param {function()=} opt_errback Callback on error.\r\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\r\n *     callback. Default is 'callback'.\r\n */\r\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\r\n  var script = document.createElement('script');\r\n  var key = 'olc_' + getUid(callback);\r\n  function cleanup() {\r\n    delete window[key];\r\n    script.parentNode.removeChild(script);\r\n  }\r\n  script.async = true;\r\n  script.src = url + (url.indexOf('?') == -1 ? '?' : '&') +\r\n      (opt_callbackParam || 'callback') + '=' + key;\r\n  var timer = setTimeout(function() {\r\n    cleanup();\r\n    if (opt_errback) {\r\n      opt_errback();\r\n    }\r\n  }, 10000);\r\n  window[key] = function(data) {\r\n    clearTimeout(timer);\r\n    cleanup();\r\n    callback(data);\r\n  };\r\n  document.getElementsByTagName('head')[0].appendChild(script);\r\n}\r\n\r\n//# sourceMappingURL=net.js.map","/**\r\n * @module ol/reproj\r\n */\r\nimport {createCanvasContext2D} from './dom.js';\r\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\r\nimport {solveLinearSystem} from './math.js';\r\nimport {getPointResolution, transform} from './proj.js';\r\n\r\n\r\n/**\r\n * Calculates ideal resolution to use from the source in order to achieve\r\n * pixel mapping as close as possible to 1:1 during reprojection.\r\n * The resolution is calculated regardless of what resolutions\r\n * are actually available in the dataset (TileGrid, Image, ...).\r\n *\r\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\r\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\r\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\r\n * @param {number} targetResolution Target resolution.\r\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\r\n */\r\nexport function calculateSourceResolution(sourceProj, targetProj,\r\n  targetCenter, targetResolution) {\r\n\r\n  var sourceCenter = transform(targetCenter, targetProj, sourceProj);\r\n\r\n  // calculate the ideal resolution of the source data\r\n  var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\r\n\r\n  var targetMetersPerUnit = targetProj.getMetersPerUnit();\r\n  if (targetMetersPerUnit !== undefined) {\r\n    sourceResolution *= targetMetersPerUnit;\r\n  }\r\n  var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\r\n  if (sourceMetersPerUnit !== undefined) {\r\n    sourceResolution /= sourceMetersPerUnit;\r\n  }\r\n\r\n  // Based on the projection properties, the point resolution at the specified\r\n  // coordinates may be slightly different. We need to reverse-compensate this\r\n  // in order to achieve optimal results.\r\n\r\n  var sourceExtent = sourceProj.getExtent();\r\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\r\n    var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\r\n        sourceResolution;\r\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\r\n      sourceResolution /= compensationFactor;\r\n    }\r\n  }\r\n\r\n  return sourceResolution;\r\n}\r\n\r\n\r\n/**\r\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\r\n * in order to mask gaps caused by antialiasing.\r\n *\r\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\r\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\r\n * @param {number} x X coordinate of the point (in pixels).\r\n * @param {number} y Y coordinate of the point (in pixels).\r\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\r\n */\r\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\r\n  var dX = x - centroidX;\r\n  var dY = y - centroidY;\r\n  var distance = Math.sqrt(dX * dX + dY * dY);\r\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\r\n}\r\n\r\n\r\n/**\r\n * Renders the source data into new canvas based on the triangulation.\r\n *\r\n * @param {number} width Width of the canvas.\r\n * @param {number} height Height of the canvas.\r\n * @param {number} pixelRatio Pixel ratio.\r\n * @param {number} sourceResolution Source resolution.\r\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\r\n * @param {number} targetResolution Target resolution.\r\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\r\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\r\n * Calculated triangulation.\r\n * @param {Array<{extent: import(\"./extent.js\").Extent,\r\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\r\n * Array of sources.\r\n * @param {number} gutter Gutter of the sources.\r\n * @param {boolean=} opt_renderEdges Render reprojection edges.\r\n * @return {HTMLCanvasElement} Canvas with reprojected data.\r\n */\r\nexport function render(width, height, pixelRatio,\r\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\r\n  triangulation, sources, gutter, opt_renderEdges) {\r\n\r\n  var context = createCanvasContext2D(Math.round(pixelRatio * width),\r\n    Math.round(pixelRatio * height));\r\n\r\n  if (sources.length === 0) {\r\n    return context.canvas;\r\n  }\r\n\r\n  context.scale(pixelRatio, pixelRatio);\r\n\r\n  var sourceDataExtent = createEmpty();\r\n  sources.forEach(function(src, i, arr) {\r\n    extend(sourceDataExtent, src.extent);\r\n  });\r\n\r\n  var canvasWidthInUnits = getWidth(sourceDataExtent);\r\n  var canvasHeightInUnits = getHeight(sourceDataExtent);\r\n  var stitchContext = createCanvasContext2D(\r\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\r\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\r\n\r\n  var stitchScale = pixelRatio / sourceResolution;\r\n\r\n  sources.forEach(function(src, i, arr) {\r\n    var xPos = src.extent[0] - sourceDataExtent[0];\r\n    var yPos = -(src.extent[3] - sourceDataExtent[3]);\r\n    var srcWidth = getWidth(src.extent);\r\n    var srcHeight = getHeight(src.extent);\r\n\r\n    stitchContext.drawImage(\r\n      src.image,\r\n      gutter, gutter,\r\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\r\n      xPos * stitchScale, yPos * stitchScale,\r\n      srcWidth * stitchScale, srcHeight * stitchScale);\r\n  });\r\n\r\n  var targetTopLeft = getTopLeft(targetExtent);\r\n\r\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\r\n    /* Calculate affine transform (src -> dst)\r\n     * Resulting matrix can be used to transform coordinate\r\n     * from `sourceProjection` to destination pixels.\r\n     *\r\n     * To optimize number of context calls and increase numerical stability,\r\n     * we also do the following operations:\r\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\r\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\r\n     *\r\n     * Src points: xi, yi\r\n     * Dst points: ui, vi\r\n     * Affine coefficients: aij\r\n     *\r\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\r\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\r\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\r\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\r\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\r\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\r\n     */\r\n    var source = triangle.source;\r\n    var target = triangle.target;\r\n    var x0 = source[0][0], y0 = source[0][1];\r\n    var x1 = source[1][0], y1 = source[1][1];\r\n    var x2 = source[2][0], y2 = source[2][1];\r\n    var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\r\n    var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\r\n    var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\r\n    var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\r\n    var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\r\n    var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\r\n\r\n    // Shift all the source points to improve numerical stability\r\n    // of all the subsequent calculations. The [x0, y0] is used here.\r\n    // This is also used to simplify the linear system.\r\n    var sourceNumericalShiftX = x0;\r\n    var sourceNumericalShiftY = y0;\r\n    x0 = 0;\r\n    y0 = 0;\r\n    x1 -= sourceNumericalShiftX;\r\n    y1 -= sourceNumericalShiftY;\r\n    x2 -= sourceNumericalShiftX;\r\n    y2 -= sourceNumericalShiftY;\r\n\r\n    var augmentedMatrix = [\r\n      [x1, y1, 0, 0, u1 - u0],\r\n      [x2, y2, 0, 0, u2 - u0],\r\n      [0, 0, x1, y1, v1 - v0],\r\n      [0, 0, x2, y2, v2 - v0]\r\n    ];\r\n    var affineCoefs = solveLinearSystem(augmentedMatrix);\r\n    if (!affineCoefs) {\r\n      return;\r\n    }\r\n\r\n    context.save();\r\n    context.beginPath();\r\n    var centroidX = (u0 + u1 + u2) / 3;\r\n    var centroidY = (v0 + v1 + v2) / 3;\r\n    var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\r\n    var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\r\n    var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\r\n\r\n    context.moveTo(p1[0], p1[1]);\r\n    context.lineTo(p0[0], p0[1]);\r\n    context.lineTo(p2[0], p2[1]);\r\n    context.clip();\r\n\r\n    context.transform(\r\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\r\n\r\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\r\n      sourceDataExtent[3] - sourceNumericalShiftY);\r\n\r\n    context.scale(sourceResolution / pixelRatio,\r\n      -sourceResolution / pixelRatio);\r\n\r\n    context.drawImage(stitchContext.canvas, 0, 0);\r\n    context.restore();\r\n  });\r\n\r\n  if (opt_renderEdges) {\r\n    context.save();\r\n\r\n    context.strokeStyle = 'black';\r\n    context.lineWidth = 1;\r\n\r\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\r\n      var target = triangle.target;\r\n      var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\r\n      var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\r\n      var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\r\n      var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\r\n      var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\r\n      var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\r\n\r\n      context.beginPath();\r\n      context.moveTo(u1, v1);\r\n      context.lineTo(u0, v0);\r\n      context.lineTo(u2, v2);\r\n      context.closePath();\r\n      context.stroke();\r\n    });\r\n\r\n    context.restore();\r\n  }\r\n  return context.canvas;\r\n}\r\n\r\n//# sourceMappingURL=reproj.js.map","/**\r\n * @module ol/reproj/Triangulation\r\n */\r\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\r\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\r\nimport {modulo} from '../math.js';\r\nimport {getTransform} from '../proj.js';\r\n\r\n\r\n/**\r\n * Single triangle; consists of 3 source points and 3 target points.\r\n * @typedef {Object} Triangle\r\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\r\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\r\n */\r\n\r\n\r\n/**\r\n * Maximum number of subdivision steps during raster reprojection triangulation.\r\n * Prevents high memory usage and large number of proj4 calls (for certain\r\n * transformations and areas). At most `2*(2^this)` triangles are created for\r\n * each triangulated extent (tile/image).\r\n * @type {number}\r\n */\r\nvar MAX_SUBDIVISION = 10;\r\n\r\n\r\n/**\r\n * Maximum allowed size of triangle relative to world width. When transforming\r\n * corners of world extent between certain projections, the resulting\r\n * triangulation seems to have zero error and no subdivision is performed. If\r\n * the triangle width is more than this (relative to world width; 0-1),\r\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\r\n * @type {number}\r\n */\r\nvar MAX_TRIANGLE_WIDTH = 0.25;\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Class containing triangulation of the given target extent.\r\n * Used for determining source data and the reprojection itself.\r\n */\r\nvar Triangulation = function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\r\n\r\n  /**\r\n   * @type {import(\"../proj/Projection.js\").default}\r\n   * @private\r\n   */\r\n  this.sourceProj_ = sourceProj;\r\n\r\n  /**\r\n   * @type {import(\"../proj/Projection.js\").default}\r\n   * @private\r\n   */\r\n  this.targetProj_ = targetProj;\r\n\r\n  /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\r\n  var transformInvCache = {};\r\n  var transformInv = getTransform(this.targetProj_, this.sourceProj_);\r\n\r\n  /**\r\n   * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\r\n   * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\r\n   * @private\r\n   */\r\n  this.transformInv_ = function(c) {\r\n    var key = c[0] + '/' + c[1];\r\n    if (!transformInvCache[key]) {\r\n      transformInvCache[key] = transformInv(c);\r\n    }\r\n    return transformInvCache[key];\r\n  };\r\n\r\n  /**\r\n   * @type {import(\"../extent.js\").Extent}\r\n   * @private\r\n   */\r\n  this.maxSourceExtent_ = maxSourceExtent;\r\n\r\n  /**\r\n   * @type {number}\r\n   * @private\r\n   */\r\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\r\n\r\n  /**\r\n   * @type {Array<Triangle>}\r\n   * @private\r\n   */\r\n  this.triangles_ = [];\r\n\r\n  /**\r\n   * Indicates that the triangulation crosses edge of the source projection.\r\n   * @type {boolean}\r\n   * @private\r\n   */\r\n  this.wrapsXInSource_ = false;\r\n\r\n  /**\r\n   * @type {boolean}\r\n   * @private\r\n   */\r\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\r\n      !!maxSourceExtent &&\r\n      !!this.sourceProj_.getExtent() &&\r\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\r\n\r\n  /**\r\n   * @type {?number}\r\n   * @private\r\n   */\r\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\r\n    getWidth(this.sourceProj_.getExtent()) : null;\r\n\r\n  /**\r\n   * @type {?number}\r\n   * @private\r\n   */\r\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\r\n    getWidth(this.targetProj_.getExtent()) : null;\r\n\r\n  var destinationTopLeft = getTopLeft(targetExtent);\r\n  var destinationTopRight = getTopRight(targetExtent);\r\n  var destinationBottomRight = getBottomRight(targetExtent);\r\n  var destinationBottomLeft = getBottomLeft(targetExtent);\r\n  var sourceTopLeft = this.transformInv_(destinationTopLeft);\r\n  var sourceTopRight = this.transformInv_(destinationTopRight);\r\n  var sourceBottomRight = this.transformInv_(destinationBottomRight);\r\n  var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\r\n\r\n  this.addQuad_(\r\n    destinationTopLeft, destinationTopRight,\r\n    destinationBottomRight, destinationBottomLeft,\r\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\r\n    MAX_SUBDIVISION);\r\n\r\n  if (this.wrapsXInSource_) {\r\n    var leftBound = Infinity;\r\n    this.triangles_.forEach(function(triangle, i, arr) {\r\n      leftBound = Math.min(leftBound,\r\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\r\n    });\r\n\r\n    // Shift triangles to be as close to `leftBound` as possible\r\n    // (if the distance is more than `worldWidth / 2` it can be closer.\r\n    this.triangles_.forEach(function(triangle) {\r\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\r\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\r\n        var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\r\n          [triangle.source[1][0], triangle.source[1][1]],\r\n          [triangle.source[2][0], triangle.source[2][1]]];\r\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\r\n          newTriangle[0][0] -= this.sourceWorldWidth_;\r\n        }\r\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\r\n          newTriangle[1][0] -= this.sourceWorldWidth_;\r\n        }\r\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\r\n          newTriangle[2][0] -= this.sourceWorldWidth_;\r\n        }\r\n\r\n        // Rarely (if the extent contains both the dateline and prime meridian)\r\n        // the shift can in turn break some triangles.\r\n        // Detect this here and don't shift in such cases.\r\n        var minX = Math.min(\r\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\r\n        var maxX = Math.max(\r\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\r\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\r\n          triangle.source = newTriangle;\r\n        }\r\n      }\r\n    }.bind(this));\r\n  }\r\n\r\n  transformInvCache = {};\r\n};\r\n\r\n/**\r\n * Adds triangle to the triangulation.\r\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\r\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\r\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\r\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\r\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\r\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\r\n * @private\r\n */\r\nTriangulation.prototype.addTriangle_ = function addTriangle_ (a, b, c, aSrc, bSrc, cSrc) {\r\n  this.triangles_.push({\r\n    source: [aSrc, bSrc, cSrc],\r\n    target: [a, b, c]\r\n  });\r\n};\r\n\r\n/**\r\n * Adds quad (points in clock-wise order) to the triangulation\r\n * (and reprojects the vertices) if valid.\r\n * Performs quad subdivision if needed to increase precision.\r\n *\r\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\r\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\r\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\r\n * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\r\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\r\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\r\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\r\n * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\r\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\r\n * @private\r\n */\r\nTriangulation.prototype.addQuad_ = function addQuad_ (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\r\n\r\n  var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\r\n  var sourceCoverageX = this.sourceWorldWidth_ ?\r\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\r\n  var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\r\n\r\n  // when the quad is wrapped in the source projection\r\n  // it covers most of the projection extent, but not fully\r\n  var wrapsX = this.sourceProj_.canWrapX() &&\r\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\r\n\r\n  var needsSubdivision = false;\r\n\r\n  if (maxSubdivision > 0) {\r\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\r\n      var targetQuadExtent = boundingExtent([a, b, c, d]);\r\n      var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\r\n      needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\r\n        needsSubdivision;\r\n    }\r\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\r\n      needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\r\n          needsSubdivision;\r\n    }\r\n  }\r\n\r\n  if (!needsSubdivision && this.maxSourceExtent_) {\r\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\r\n      // whole quad outside source projection extent -> ignore\r\n      return;\r\n    }\r\n  }\r\n\r\n  if (!needsSubdivision) {\r\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\r\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\r\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\r\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\r\n      if (maxSubdivision > 0) {\r\n        needsSubdivision = true;\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (maxSubdivision > 0) {\r\n    if (!needsSubdivision) {\r\n      var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\r\n      var centerSrc = this.transformInv_(center);\r\n\r\n      var dx;\r\n      if (wrapsX) {\r\n        var centerSrcEstimX =\r\n            (modulo(aSrc[0], sourceWorldWidth) +\r\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\r\n        dx = centerSrcEstimX -\r\n            modulo(centerSrc[0], sourceWorldWidth);\r\n      } else {\r\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\r\n      }\r\n      var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\r\n      var centerSrcErrorSquared = dx * dx + dy * dy;\r\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\r\n    }\r\n    if (needsSubdivision) {\r\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\r\n        // split horizontally (top & bottom)\r\n        var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\r\n        var bcSrc = this.transformInv_(bc);\r\n        var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\r\n        var daSrc = this.transformInv_(da);\r\n\r\n        this.addQuad_(\r\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\r\n        this.addQuad_(\r\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\r\n      } else {\r\n        // split vertically (left & right)\r\n        var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\r\n        var abSrc = this.transformInv_(ab);\r\n        var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\r\n        var cdSrc = this.transformInv_(cd);\r\n\r\n        this.addQuad_(\r\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\r\n        this.addQuad_(\r\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\r\n      }\r\n      return;\r\n    }\r\n  }\r\n\r\n  if (wrapsX) {\r\n    if (!this.canWrapXInSource_) {\r\n      return;\r\n    }\r\n    this.wrapsXInSource_ = true;\r\n  }\r\n\r\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\r\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\r\n};\r\n\r\n/**\r\n * Calculates extent of the 'source' coordinates from all the triangles.\r\n *\r\n * @return {import(\"../extent.js\").Extent} Calculated extent.\r\n */\r\nTriangulation.prototype.calculateSourceExtent = function calculateSourceExtent () {\r\n  var extent = createEmpty();\r\n\r\n  this.triangles_.forEach(function(triangle, i, arr) {\r\n    var src = triangle.source;\r\n    extendCoordinate(extent, src[0]);\r\n    extendCoordinate(extent, src[1]);\r\n    extendCoordinate(extent, src[2]);\r\n  });\r\n\r\n  return extent;\r\n};\r\n\r\n/**\r\n * @return {Array<Triangle>} Array of the calculated triangles.\r\n */\r\nTriangulation.prototype.getTriangles = function getTriangles () {\r\n  return this.triangles_;\r\n};\r\n\r\nexport default Triangulation;\r\n\r\n//# sourceMappingURL=Triangulation.js.map","/**\r\n * @module ol/reproj/Tile\r\n */\r\nimport {ERROR_THRESHOLD} from './common.js';\r\n\r\nimport Tile from '../Tile.js';\r\nimport TileState from '../TileState.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {getArea, getCenter, getIntersection} from '../extent.js';\r\nimport {clamp} from '../math.js';\r\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\r\nimport Triangulation from './Triangulation.js';\r\n\r\n\r\n/**\r\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Class encapsulating single reprojected tile.\r\n * See {@link module:ol/source/TileImage~TileImage}.\r\n *\r\n */\r\nvar ReprojTile = /*@__PURE__*/(function (Tile) {\n  function ReprojTile(\r\n    sourceProj,\r\n    sourceTileGrid,\r\n    targetProj,\r\n    targetTileGrid,\r\n    tileCoord,\r\n    wrappedTileCoord,\r\n    pixelRatio,\r\n    gutter,\r\n    getTileFunction,\r\n    opt_errorThreshold,\r\n    opt_renderEdges\r\n  ) {\r\n    Tile.call(this, tileCoord, TileState.IDLE);\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.pixelRatio_ = pixelRatio;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.gutter_ = gutter;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement}\r\n     */\r\n    this.canvas_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\r\n     */\r\n    this.sourceTileGrid_ = sourceTileGrid;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\r\n     */\r\n    this.targetTileGrid_ = targetTileGrid;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../tilecoord.js\").TileCoord}\r\n     */\r\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Array<import(\"../Tile.js\").default>}\r\n     */\r\n    this.sourceTiles_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<import(\"../events.js\").EventsKey>}\r\n     */\r\n    this.sourcesListenerKeys_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.sourceZ_ = 0;\r\n\r\n    var targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\r\n    var maxTargetExtent = this.targetTileGrid_.getExtent();\r\n    var maxSourceExtent = this.sourceTileGrid_.getExtent();\r\n\r\n    var limitedTargetExtent = maxTargetExtent ?\r\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\r\n\r\n    if (getArea(limitedTargetExtent) === 0) {\r\n      // Tile is completely outside range -> EMPTY\r\n      // TODO: is it actually correct that the source even creates the tile ?\r\n      this.state = TileState.EMPTY;\r\n      return;\r\n    }\r\n\r\n    var sourceProjExtent = sourceProj.getExtent();\r\n    if (sourceProjExtent) {\r\n      if (!maxSourceExtent) {\r\n        maxSourceExtent = sourceProjExtent;\r\n      } else {\r\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\r\n      }\r\n    }\r\n\r\n    var targetResolution = targetTileGrid.getResolution(\r\n      this.wrappedTileCoord_[0]);\r\n\r\n    var targetCenter = getCenter(limitedTargetExtent);\r\n    var sourceResolution = calculateSourceResolution(\r\n      sourceProj, targetProj, targetCenter, targetResolution);\r\n\r\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\r\n      // invalid sourceResolution -> EMPTY\r\n      // probably edges of the projections when no extent is defined\r\n      this.state = TileState.EMPTY;\r\n      return;\r\n    }\r\n\r\n    var errorThresholdInPixels = opt_errorThreshold !== undefined ?\r\n      opt_errorThreshold : ERROR_THRESHOLD;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!import(\"./Triangulation.js\").default}\r\n     */\r\n    this.triangulation_ = new Triangulation(\r\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\r\n      sourceResolution * errorThresholdInPixels);\r\n\r\n    if (this.triangulation_.getTriangles().length === 0) {\r\n      // no valid triangles -> EMPTY\r\n      this.state = TileState.EMPTY;\r\n      return;\r\n    }\r\n\r\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\r\n    var sourceExtent = this.triangulation_.calculateSourceExtent();\r\n\r\n    if (maxSourceExtent) {\r\n      if (sourceProj.canWrapX()) {\r\n        sourceExtent[1] = clamp(\r\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\r\n        sourceExtent[3] = clamp(\r\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\r\n      } else {\r\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\r\n      }\r\n    }\r\n\r\n    if (!getArea(sourceExtent)) {\r\n      this.state = TileState.EMPTY;\r\n    } else {\r\n      var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\r\n        sourceExtent, this.sourceZ_);\r\n\r\n      for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\r\n        for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\r\n          var tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\r\n          if (tile) {\r\n            this.sourceTiles_.push(tile);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (this.sourceTiles_.length === 0) {\r\n        this.state = TileState.EMPTY;\r\n      }\r\n    }\r\n  }\n\n  if ( Tile ) ReprojTile.__proto__ = Tile;\n  ReprojTile.prototype = Object.create( Tile && Tile.prototype );\n  ReprojTile.prototype.constructor = ReprojTile;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  ReprojTile.prototype.disposeInternal = function disposeInternal () {\r\n    if (this.state == TileState.LOADING) {\r\n      this.unlistenSources_();\r\n    }\r\n    Tile.prototype.disposeInternal.call(this);\r\n  };\r\n\r\n  /**\r\n   * Get the HTML Canvas element for this tile.\r\n   * @return {HTMLCanvasElement} Canvas.\r\n   */\r\n  ReprojTile.prototype.getImage = function getImage () {\r\n    return this.canvas_;\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  ReprojTile.prototype.reproject_ = function reproject_ () {\r\n    var sources = [];\r\n    this.sourceTiles_.forEach(function(tile, i, arr) {\r\n      if (tile && tile.getState() == TileState.LOADED) {\r\n        sources.push({\r\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\r\n          image: tile.getImage()\r\n        });\r\n      }\r\n    }.bind(this));\r\n    this.sourceTiles_.length = 0;\r\n\r\n    if (sources.length === 0) {\r\n      this.state = TileState.ERROR;\r\n    } else {\r\n      var z = this.wrappedTileCoord_[0];\r\n      var size = this.targetTileGrid_.getTileSize(z);\r\n      var width = typeof size === 'number' ? size : size[0];\r\n      var height = typeof size === 'number' ? size : size[1];\r\n      var targetResolution = this.targetTileGrid_.getResolution(z);\r\n      var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\r\n\r\n      var targetExtent = this.targetTileGrid_.getTileCoordExtent(\r\n        this.wrappedTileCoord_);\r\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\r\n        sourceResolution, this.sourceTileGrid_.getExtent(),\r\n        targetResolution, targetExtent, this.triangulation_, sources,\r\n        this.gutter_, this.renderEdges_);\r\n\r\n      this.state = TileState.LOADED;\r\n    }\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  ReprojTile.prototype.load = function load () {\r\n    if (this.state == TileState.IDLE) {\r\n      this.state = TileState.LOADING;\r\n      this.changed();\r\n\r\n      var leftToLoad = 0;\r\n\r\n      this.sourcesListenerKeys_ = [];\r\n      this.sourceTiles_.forEach(function(tile, i, arr) {\r\n        var state = tile.getState();\r\n        if (state == TileState.IDLE || state == TileState.LOADING) {\r\n          leftToLoad++;\r\n\r\n          var sourceListenKey = listen(tile, EventType.CHANGE,\r\n            function(e) {\r\n              var state = tile.getState();\r\n              if (state == TileState.LOADED ||\r\n                    state == TileState.ERROR ||\r\n                    state == TileState.EMPTY) {\r\n                unlistenByKey(sourceListenKey);\r\n                leftToLoad--;\r\n                if (leftToLoad === 0) {\r\n                  this.unlistenSources_();\r\n                  this.reproject_();\r\n                }\r\n              }\r\n            }, this);\r\n          this.sourcesListenerKeys_.push(sourceListenKey);\r\n        }\r\n      }.bind(this));\r\n\r\n      this.sourceTiles_.forEach(function(tile, i, arr) {\r\n        var state = tile.getState();\r\n        if (state == TileState.IDLE) {\r\n          tile.load();\r\n        }\r\n      });\r\n\r\n      if (leftToLoad === 0) {\r\n        setTimeout(this.reproject_.bind(this), 0);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  ReprojTile.prototype.unlistenSources_ = function unlistenSources_ () {\r\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\r\n    this.sourcesListenerKeys_ = null;\r\n  };\n\n  return ReprojTile;\n}(Tile));\r\n\r\n\r\nexport default ReprojTile;\r\n\r\n//# sourceMappingURL=Tile.js.map","/**\r\n * @module ol/source/TileEventType\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n\r\n  /**\r\n   * Triggered when a tile starts loading.\r\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\r\n   * @api\r\n   */\r\n  TILELOADSTART: 'tileloadstart',\r\n\r\n  /**\r\n   * Triggered when a tile finishes loading, either when its data is loaded,\r\n   * or when loading was aborted because the tile is no longer needed.\r\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\r\n   * @api\r\n   */\r\n  TILELOADEND: 'tileloadend',\r\n\r\n  /**\r\n   * Triggered if tile loading results in an error.\r\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\r\n   * @api\r\n   */\r\n  TILELOADERROR: 'tileloaderror'\r\n\r\n};\r\n\r\n//# sourceMappingURL=TileEventType.js.map","/**\r\n * @module ol/source/UrlTile\r\n */\r\nimport {getUid} from '../util.js';\r\nimport TileState from '../TileState.js';\r\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\r\nimport TileSource, {TileSourceEvent} from './Tile.js';\r\nimport TileEventType from './TileEventType.js';\r\nimport {getKeyZXY} from '../tilecoord.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\r\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\r\n * @property {number} [cacheSize]\r\n * @property {boolean} [opaque]\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\r\n * @property {import(\"./State.js\").default} [state]\r\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\r\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\r\n * @property {number} [tilePixelRatio]\r\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\r\n * @property {string} [url]\r\n * @property {Array<string>} [urls]\r\n * @property {boolean} [wrapX=true]\r\n * @property {number} [transition]\r\n * @property {string} [key]\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Base class for sources providing tiles divided into a tile grid over http.\r\n *\r\n * @fires import(\"./Tile.js\").TileSourceEvent\r\n */\r\nvar UrlTile = /*@__PURE__*/(function (TileSource) {\n  function UrlTile(options) {\r\n\r\n    TileSource.call(this, {\r\n      attributions: options.attributions,\r\n      cacheSize: options.cacheSize,\r\n      opaque: options.opaque,\r\n      projection: options.projection,\r\n      state: options.state,\r\n      tileGrid: options.tileGrid,\r\n      tilePixelRatio: options.tilePixelRatio,\r\n      wrapX: options.wrapX,\r\n      transition: options.transition,\r\n      key: options.key,\r\n      attributionsCollapsible: options.attributionsCollapsible\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.generateTileUrlFunction_ = !options.tileUrlFunction;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../Tile.js\").LoadFunction}\r\n     */\r\n    this.tileLoadFunction = options.tileLoadFunction;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../Tile.js\").UrlFunction}\r\n     */\r\n    this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(this) : nullTileUrlFunction;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {!Array<string>|null}\r\n     */\r\n    this.urls = null;\r\n\r\n    if (options.urls) {\r\n      this.setUrls(options.urls);\r\n    } else if (options.url) {\r\n      this.setUrl(options.url);\r\n    }\r\n\r\n    if (options.tileUrlFunction) {\r\n      this.setTileUrlFunction(options.tileUrlFunction, this.key_);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, boolean>}\r\n     */\r\n    this.tileLoadingKeys_ = {};\r\n\r\n  }\n\n  if ( TileSource ) UrlTile.__proto__ = TileSource;\n  UrlTile.prototype = Object.create( TileSource && TileSource.prototype );\n  UrlTile.prototype.constructor = UrlTile;\r\n\r\n  /**\r\n   * Return the tile load function of the source.\r\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\r\n   * @api\r\n   */\r\n  UrlTile.prototype.getTileLoadFunction = function getTileLoadFunction () {\r\n    return this.tileLoadFunction;\r\n  };\r\n\r\n  /**\r\n   * Return the tile URL function of the source.\r\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\r\n   * @api\r\n   */\r\n  UrlTile.prototype.getTileUrlFunction = function getTileUrlFunction () {\r\n    return this.tileUrlFunction;\r\n  };\r\n\r\n  /**\r\n   * Return the URLs used for this source.\r\n   * When a tileUrlFunction is used instead of url or urls,\r\n   * null will be returned.\r\n   * @return {!Array<string>|null} URLs.\r\n   * @api\r\n   */\r\n  UrlTile.prototype.getUrls = function getUrls () {\r\n    return this.urls;\r\n  };\r\n\r\n  /**\r\n   * Handle tile change events.\r\n   * @param {import(\"../events/Event.js\").default} event Event.\r\n   * @protected\r\n   */\r\n  UrlTile.prototype.handleTileChange = function handleTileChange (event) {\r\n    var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\r\n    var uid = getUid(tile);\r\n    var tileState = tile.getState();\r\n    var type;\r\n    if (tileState == TileState.LOADING) {\r\n      this.tileLoadingKeys_[uid] = true;\r\n      type = TileEventType.TILELOADSTART;\r\n    } else if (uid in this.tileLoadingKeys_) {\r\n      delete this.tileLoadingKeys_[uid];\r\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\r\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\r\n          TileEventType.TILELOADEND : undefined;\r\n    }\r\n    if (type != undefined) {\r\n      this.dispatchEvent(new TileSourceEvent(type, tile));\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Set the tile load function of the source.\r\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\r\n   * @api\r\n   */\r\n  UrlTile.prototype.setTileLoadFunction = function setTileLoadFunction (tileLoadFunction) {\r\n    this.tileCache.clear();\r\n    this.tileLoadFunction = tileLoadFunction;\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * Set the tile URL function of the source.\r\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\r\n   * @param {string=} key Optional new tile key for the source.\r\n   * @api\r\n   */\r\n  UrlTile.prototype.setTileUrlFunction = function setTileUrlFunction (tileUrlFunction, key) {\r\n    this.tileUrlFunction = tileUrlFunction;\r\n    this.tileCache.pruneExceptNewestZ();\r\n    if (typeof key !== 'undefined') {\r\n      this.setKey(key);\r\n    } else {\r\n      this.changed();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Set the URL to use for requests.\r\n   * @param {string} url URL.\r\n   * @api\r\n   */\r\n  UrlTile.prototype.setUrl = function setUrl (url) {\r\n    var urls = this.urls = expandUrl(url);\r\n    this.setUrls(urls);\r\n  };\r\n\r\n  /**\r\n   * Set the URLs to use for requests.\r\n   * @param {Array<string>} urls URLs.\r\n   * @api\r\n   */\r\n  UrlTile.prototype.setUrls = function setUrls (urls) {\r\n    this.urls = urls;\r\n    var key = urls.join('\\n');\r\n    if (this.generateTileUrlFunction_) {\r\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\r\n    } else {\r\n      this.setKey(key);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  UrlTile.prototype.useTile = function useTile (z, x, y) {\r\n    var tileCoordKey = getKeyZXY(z, x, y);\r\n    if (this.tileCache.containsKey(tileCoordKey)) {\r\n      this.tileCache.get(tileCoordKey);\r\n    }\r\n  };\n\n  return UrlTile;\n}(TileSource));\r\n\r\n\r\nexport default UrlTile;\r\n\r\n//# sourceMappingURL=UrlTile.js.map","/**\r\n * @module ol/source/TileImage\r\n */\r\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\r\nimport {getUid} from '../util.js';\r\nimport ImageTile from '../ImageTile.js';\r\nimport TileCache from '../TileCache.js';\r\nimport TileState from '../TileState.js';\r\nimport {listen} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {equivalent, get as getProjection} from '../proj.js';\r\nimport ReprojTile from '../reproj/Tile.js';\r\nimport UrlTile from './UrlTile.js';\r\nimport {getKey, getKeyZXY} from '../tilecoord.js';\r\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\r\n * @property {number} [cacheSize=2048] Cache size.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\r\n * access pixel data with the Canvas renderer.  See\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {boolean} [opaque=true] Whether the layer is opaque.\r\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\r\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\r\n * Higher values can increase reprojection performance, but decrease precision.\r\n * @property {import(\"./State.js\").default} [state] Source state.\r\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\r\n * Default is {@link module:ol/ImageTile~ImageTile}.\r\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\r\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\r\n * ```js\r\n * function(imageTile, src) {\r\n *   imageTile.getImage().src = src;\r\n * };\r\n * ```\r\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\r\n * service advertizes 256px by 256px tiles but actually sends 512px\r\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\r\n * should be set to `2`.\r\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\r\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\r\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\r\n * used instead of defining each one separately in the `urls` option.\r\n * @property {Array<string>} [urls] An array of URL templates.\r\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\r\n * request out-of-bounds tiles from the server. When set to `false`, only one\r\n * world will be rendered. When set to `true`, tiles will be requested for one\r\n * world only, but they will be wrapped horizontally to render multiple worlds.\r\n * @property {number} [transition] Duration of the opacity transition for rendering.\r\n * To disable the opacity transition, pass `transition: 0`.\r\n * @property {string} [key] Optional tile key for proper cache fetching\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Base class for sources providing images divided into a tile grid.\r\n *\r\n * @fires import(\"./Tile.js\").TileSourceEvent\r\n * @api\r\n */\r\nvar TileImage = /*@__PURE__*/(function (UrlTile) {\n  function TileImage(options) {\r\n\r\n    UrlTile.call(this, {\r\n      attributions: options.attributions,\r\n      cacheSize: options.cacheSize,\r\n      opaque: options.opaque,\r\n      projection: options.projection,\r\n      state: options.state,\r\n      tileGrid: options.tileGrid,\r\n      tileLoadFunction: options.tileLoadFunction ?\r\n        options.tileLoadFunction : defaultTileLoadFunction,\r\n      tilePixelRatio: options.tilePixelRatio,\r\n      tileUrlFunction: options.tileUrlFunction,\r\n      url: options.url,\r\n      urls: options.urls,\r\n      wrapX: options.wrapX,\r\n      transition: options.transition,\r\n      key: options.key,\r\n      attributionsCollapsible: options.attributionsCollapsible\r\n    });\r\n\r\n    /**\r\n     * @protected\r\n     * @type {?string}\r\n     */\r\n    this.crossOrigin =\r\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {typeof ImageTile}\r\n     */\r\n    this.tileClass = options.tileClass !== undefined ?\r\n      options.tileClass : ImageTile;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {!Object<string, TileCache>}\r\n     */\r\n    this.tileCacheForProjection = {};\r\n\r\n    /**\r\n     * @protected\r\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\r\n     */\r\n    this.tileGridForProjection = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.renderReprojectionEdges_ = false;\r\n  }\n\n  if ( UrlTile ) TileImage.__proto__ = UrlTile;\n  TileImage.prototype = Object.create( UrlTile && UrlTile.prototype );\n  TileImage.prototype.constructor = TileImage;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  TileImage.prototype.canExpireCache = function canExpireCache () {\r\n    if (!ENABLE_RASTER_REPROJECTION) {\r\n      return UrlTile.prototype.canExpireCache.call(this);\r\n    }\r\n    if (this.tileCache.canExpireCache()) {\r\n      return true;\r\n    } else {\r\n      for (var key in this.tileCacheForProjection) {\r\n        if (this.tileCacheForProjection[key].canExpireCache()) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  TileImage.prototype.expireCache = function expireCache (projection, usedTiles) {\r\n    if (!ENABLE_RASTER_REPROJECTION) {\r\n      UrlTile.prototype.expireCache.call(this, projection, usedTiles);\r\n      return;\r\n    }\r\n    var usedTileCache = this.getTileCacheForProjection(projection);\r\n\r\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\r\n    for (var id in this.tileCacheForProjection) {\r\n      var tileCache = this.tileCacheForProjection[id];\r\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  TileImage.prototype.getGutterForProjection = function getGutterForProjection (projection) {\r\n    if (ENABLE_RASTER_REPROJECTION &&\r\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\r\n      return 0;\r\n    } else {\r\n      return this.getGutter();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @return {number} Gutter.\r\n   */\r\n  TileImage.prototype.getGutter = function getGutter () {\r\n    return 0;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  TileImage.prototype.getOpaque = function getOpaque (projection) {\r\n    if (ENABLE_RASTER_REPROJECTION &&\r\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\r\n      return false;\r\n    } else {\r\n      return UrlTile.prototype.getOpaque.call(this, projection);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  TileImage.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\r\n    if (!ENABLE_RASTER_REPROJECTION) {\r\n      return UrlTile.prototype.getTileGridForProjection.call(this, projection);\r\n    }\r\n    var thisProj = this.getProjection();\r\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\r\n      return this.tileGrid;\r\n    } else {\r\n      var projKey = getUid(projection);\r\n      if (!(projKey in this.tileGridForProjection)) {\r\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\r\n      }\r\n      return (\r\n        /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey])\r\n      );\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  TileImage.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\r\n    if (!ENABLE_RASTER_REPROJECTION) {\r\n      return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\r\n    }\r\n    var thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\r\n      return this.tileCache;\r\n    } else {\r\n      var projKey = getUid(projection);\r\n      if (!(projKey in this.tileCacheForProjection)) {\r\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\r\n      }\r\n      return this.tileCacheForProjection[projKey];\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {number} z Tile coordinate z.\r\n   * @param {number} x Tile coordinate x.\r\n   * @param {number} y Tile coordinate y.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @param {string} key The key set on the tile.\r\n   * @return {!import(\"../Tile.js\").default} Tile.\r\n   * @private\r\n   */\r\n  TileImage.prototype.createTile_ = function createTile_ (z, x, y, pixelRatio, projection, key) {\r\n    var tileCoord = [z, x, y];\r\n    var urlTileCoord = this.getTileCoordForTileUrlFunction(\r\n      tileCoord, projection);\r\n    var tileUrl = urlTileCoord ?\r\n      this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\r\n    var tile = new this.tileClass(\r\n      tileCoord,\r\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\r\n      tileUrl !== undefined ? tileUrl : '',\r\n      this.crossOrigin,\r\n      this.tileLoadFunction,\r\n      this.tileOptions);\r\n    tile.key = key;\r\n    listen(tile, EventType.CHANGE,\r\n      this.handleTileChange, this);\r\n    return tile;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  TileImage.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\r\n    var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\r\n    if (!ENABLE_RASTER_REPROJECTION ||\r\n        !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\r\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\r\n    } else {\r\n      var cache = this.getTileCacheForProjection(projection);\r\n      var tileCoord = [z, x, y];\r\n      var tile;\r\n      var tileCoordKey = getKey(tileCoord);\r\n      if (cache.containsKey(tileCoordKey)) {\r\n        tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\r\n      }\r\n      var key = this.getKey();\r\n      if (tile && tile.key == key) {\r\n        return tile;\r\n      } else {\r\n        var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\r\n        var targetTileGrid = this.getTileGridForProjection(projection);\r\n        var wrappedTileCoord =\r\n            this.getTileCoordForTileUrlFunction(tileCoord, projection);\r\n        var newTile = new ReprojTile(\r\n          sourceProjection, sourceTileGrid,\r\n          projection, targetTileGrid,\r\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\r\n          this.getGutter(),\r\n          function(z, x, y, pixelRatio) {\r\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\r\n          }.bind(this), this.reprojectionErrorThreshold_,\r\n          this.renderReprojectionEdges_);\r\n        newTile.key = key;\r\n\r\n        if (tile) {\r\n          newTile.interimTile = tile;\r\n          newTile.refreshInterimChain();\r\n          cache.replace(tileCoordKey, newTile);\r\n        } else {\r\n          cache.set(tileCoordKey, newTile);\r\n        }\r\n        return newTile;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {number} z Tile coordinate z.\r\n   * @param {number} x Tile coordinate x.\r\n   * @param {number} y Tile coordinate y.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @return {!import(\"../Tile.js\").default} Tile.\r\n   * @protected\r\n   */\r\n  TileImage.prototype.getTileInternal = function getTileInternal (z, x, y, pixelRatio, projection) {\r\n    var tile = null;\r\n    var tileCoordKey = getKeyZXY(z, x, y);\r\n    var key = this.getKey();\r\n    if (!this.tileCache.containsKey(tileCoordKey)) {\r\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\r\n      this.tileCache.set(tileCoordKey, tile);\r\n    } else {\r\n      tile = this.tileCache.get(tileCoordKey);\r\n      if (tile.key != key) {\r\n        // The source's params changed. If the tile has an interim tile and if we\r\n        // can use it then we use it. Otherwise we create a new tile.  In both\r\n        // cases we attempt to assign an interim tile to the new tile.\r\n        var interimTile = tile;\r\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\r\n\r\n        //make the new tile the head of the list,\r\n        if (interimTile.getState() == TileState.IDLE) {\r\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\r\n          tile.interimTile = interimTile.interimTile;\r\n        } else {\r\n          tile.interimTile = interimTile;\r\n        }\r\n        tile.refreshInterimChain();\r\n        this.tileCache.replace(tileCoordKey, tile);\r\n      }\r\n    }\r\n    return tile;\r\n  };\r\n\r\n  /**\r\n   * Sets whether to render reprojection edges or not (usually for debugging).\r\n   * @param {boolean} render Render the edges.\r\n   * @api\r\n   */\r\n  TileImage.prototype.setRenderReprojectionEdges = function setRenderReprojectionEdges (render) {\r\n    if (!ENABLE_RASTER_REPROJECTION ||\r\n        this.renderReprojectionEdges_ == render) {\r\n      return;\r\n    }\r\n    this.renderReprojectionEdges_ = render;\r\n    for (var id in this.tileCacheForProjection) {\r\n      this.tileCacheForProjection[id].clear();\r\n    }\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * Sets the tile grid to use when reprojecting the tiles to the given\r\n   * projection instead of the default tile grid for the projection.\r\n   *\r\n   * This can be useful when the default tile grid cannot be created\r\n   * (e.g. projection has no extent defined) or\r\n   * for optimization reasons (custom tile size, resolutions, ...).\r\n   *\r\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\r\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\r\n   * @api\r\n   */\r\n  TileImage.prototype.setTileGridForProjection = function setTileGridForProjection (projection, tilegrid) {\r\n    if (ENABLE_RASTER_REPROJECTION) {\r\n      var proj = getProjection(projection);\r\n      if (proj) {\r\n        var projKey = getUid(proj);\r\n        if (!(projKey in this.tileGridForProjection)) {\r\n          this.tileGridForProjection[projKey] = tilegrid;\r\n        }\r\n      }\r\n    }\r\n  };\n\n  return TileImage;\n}(UrlTile));\r\n\r\n\r\n/**\r\n * @param {ImageTile} imageTile Image tile.\r\n * @param {string} src Source.\r\n */\r\nfunction defaultTileLoadFunction(imageTile, src) {\r\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\r\n}\r\n\r\nexport default TileImage;\r\n\r\n//# sourceMappingURL=TileImage.js.map","/**\r\n * @module ol/source/BingMaps\r\n */\r\n\r\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\r\nimport {applyTransform, intersects} from '../extent.js';\r\nimport {jsonp as requestJSONP} from '../net.js';\r\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\r\nimport SourceState from './State.js';\r\nimport TileImage from './TileImage.js';\r\nimport {createOrUpdate, quadKey} from '../tilecoord.js';\r\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\r\n\r\n\r\n/**\r\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\r\n * Terms Of Use.\r\n * @const\r\n * @type {string}\r\n */\r\nvar TOS_ATTRIBUTION = '<a class=\"ol-attribution-bing-tos\" ' +\r\n      'href=\"https://www.microsoft.com/maps/product/terms.html\">' +\r\n      'Terms of Use</a>';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [cacheSize=2048] Cache size.\r\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\r\n * @property {string} [culture='en-us'] Culture code.\r\n * @property {string} key Bing Maps API key. Get yours at http://www.bingmapsportal.com/.\r\n * @property {string} imagerySet Type of imagery.\r\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\r\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\r\n * Higher values can increase reprojection performance, but decrease precision.\r\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\r\n * ```js\r\n * function(imageTile, src) {\r\n *   imageTile.getImage().src = src;\r\n * };\r\n * ```\r\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\r\n * @property {number} [transition] Duration of the opacity transition for rendering.\r\n * To disable the opacity transition, pass `transition: 0`.\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} BingMapsImageryMetadataResponse\r\n * @property {number} statusCode The response status code\r\n * @property {string} statusDescription The response status description\r\n * @property {string} authenticationResultCode The authentication result code\r\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} ResourceSet\r\n * @property {Array<Resource>} resources\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} Resource\r\n * @property {number} imageHeight The image height\r\n * @property {number} imageWidth The image width\r\n * @property {number} zoomMin The minimum zoom level\r\n * @property {number} zoomMax The maximum zoom level\r\n * @property {string} imageUrl The image URL\r\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\r\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} ImageryProvider\r\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\r\n * @property {string} [attribution] The attribution\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} CoverageArea\r\n * @property {number} zoomMin The minimum zoom\r\n * @property {number} zoomMax The maximum zoom\r\n * @property {Array<number>} bbox The coverage bounding box\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Layer source for Bing Maps tile data.\r\n * @api\r\n */\r\nvar BingMaps = /*@__PURE__*/(function (TileImage) {\n  function BingMaps(options) {\r\n\r\n    var hidpi = options.hidpi !== undefined ? options.hidpi : false;\r\n\r\n    TileImage.call(this, {\r\n      cacheSize: options.cacheSize,\r\n      crossOrigin: 'anonymous',\r\n      opaque: true,\r\n      projection: getProjection('EPSG:3857'),\r\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\r\n      state: SourceState.LOADING,\r\n      tileLoadFunction: options.tileLoadFunction,\r\n      tilePixelRatio: hidpi ? 2 : 1,\r\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\r\n      transition: options.transition\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.hidpi_ = hidpi;\r\n\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.apiKey_ = options.key;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.imagerySet_ = options.imagerySet;\r\n\r\n    var url = 'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\r\n        this.imagerySet_ +\r\n        '?uriScheme=https&include=ImageryProviders&key=' + this.apiKey_ +\r\n        '&c=' + this.culture_;\r\n\r\n    requestJSONP(url, this.handleImageryMetadataResponse.bind(this), undefined,\r\n      'jsonp');\r\n\r\n  }\n\n  if ( TileImage ) BingMaps.__proto__ = TileImage;\n  BingMaps.prototype = Object.create( TileImage && TileImage.prototype );\n  BingMaps.prototype.constructor = BingMaps;\r\n\r\n  /**\r\n   * Get the api key used for this source.\r\n   *\r\n   * @return {string} The api key.\r\n   * @api\r\n   */\r\n  BingMaps.prototype.getApiKey = function getApiKey () {\r\n    return this.apiKey_;\r\n  };\r\n\r\n  /**\r\n   * Get the imagery set associated with this source.\r\n   *\r\n   * @return {string} The imagery set.\r\n   * @api\r\n   */\r\n  BingMaps.prototype.getImagerySet = function getImagerySet () {\r\n    return this.imagerySet_;\r\n  };\r\n\r\n  /**\r\n   * @param {BingMapsImageryMetadataResponse} response Response.\r\n   */\r\n  BingMaps.prototype.handleImageryMetadataResponse = function handleImageryMetadataResponse (response) {\r\n    if (response.statusCode != 200 ||\r\n        response.statusDescription != 'OK' ||\r\n        response.authenticationResultCode != 'ValidCredentials' ||\r\n        response.resourceSets.length != 1 ||\r\n        response.resourceSets[0].resources.length != 1) {\r\n      this.setState(SourceState.ERROR);\r\n      return;\r\n    }\r\n\r\n    var resource = response.resourceSets[0].resources[0];\r\n    var maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\r\n\r\n    var sourceProjection = this.getProjection();\r\n    var extent = extentFromProjection(sourceProjection);\r\n    var scale = this.hidpi_ ? 2 : 1;\r\n    var tileSize = resource.imageWidth == resource.imageHeight ?\r\n      resource.imageWidth / scale :\r\n      [resource.imageWidth / scale, resource.imageHeight / scale];\r\n\r\n    var tileGrid = createXYZ({\r\n      extent: extent,\r\n      minZoom: resource.zoomMin,\r\n      maxZoom: maxZoom,\r\n      tileSize: tileSize\r\n    });\r\n    this.tileGrid = tileGrid;\r\n\r\n    var culture = this.culture_;\r\n    var hidpi = this.hidpi_;\r\n    this.tileUrlFunction = createFromTileUrlFunctions(\r\n      resource.imageUrlSubdomains.map(function(subdomain) {\r\n        var quadKeyTileCoord = [0, 0, 0];\r\n        var imageUrl = resource.imageUrl\r\n          .replace('{subdomain}', subdomain)\r\n          .replace('{culture}', culture);\r\n        return (\r\n          /**\r\n           * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n           * @param {number} pixelRatio Pixel ratio.\r\n           * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n           * @return {string|undefined} Tile URL.\r\n           */\r\n          function(tileCoord, pixelRatio, projection) {\r\n            if (!tileCoord) {\r\n              return undefined;\r\n            } else {\r\n              createOrUpdate(tileCoord[0], tileCoord[1], -tileCoord[2] - 1, quadKeyTileCoord);\r\n              var url = imageUrl;\r\n              if (hidpi) {\r\n                url += '&dpi=d1&device=mobile';\r\n              }\r\n              return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\r\n            }\r\n          }\r\n        );\r\n      }));\r\n\r\n    if (resource.imageryProviders) {\r\n      var transform = getTransformFromProjections(\r\n        getProjection('EPSG:4326'), this.getProjection());\r\n\r\n      this.setAttributions(function(frameState) {\r\n        var attributions = [];\r\n        var viewState = frameState.viewState;\r\n        var tileGrid = this.getTileGrid();\r\n        var tileCoord = tileGrid.getTileCoordForCoordAndResolution(viewState.center, viewState.resolution);\r\n        var zoom = tileCoord[0];\r\n        resource.imageryProviders.map(function(imageryProvider) {\r\n          var intersecting = false;\r\n          var coverageAreas = imageryProvider.coverageAreas;\r\n          for (var i = 0, ii = coverageAreas.length; i < ii; ++i) {\r\n            var coverageArea = coverageAreas[i];\r\n            if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\r\n              var bbox = coverageArea.bbox;\r\n              var epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\r\n              var extent = applyTransform(epsg4326Extent, transform);\r\n              if (intersects(extent, frameState.extent)) {\r\n                intersecting = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          if (intersecting) {\r\n            attributions.push(imageryProvider.attribution);\r\n          }\r\n        });\r\n\r\n        attributions.push(TOS_ATTRIBUTION);\r\n        return attributions;\r\n      }.bind(this));\r\n    }\r\n\r\n    this.setState(SourceState.READY);\r\n  };\n\n  return BingMaps;\n}(TileImage));\r\n\r\nexport default BingMaps;\r\n\r\n//# sourceMappingURL=BingMaps.js.map","/**\r\n * @module ol/source/XYZ\r\n */\r\n\r\nimport TileImage from './TileImage.js';\r\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\r\n * @property {number} [cacheSize=2048] Cache size.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\r\n * access pixel data with the Canvas renderer.  See\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {boolean} [opaque=true] Whether the layer is opaque.\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\r\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\r\n * Higher values can increase reprojection performance, but decrease precision.\r\n * @property {number} [maxZoom=18] Optional max zoom level.\r\n * @property {number} [minZoom=0] Optional min zoom level.\r\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\r\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\r\n * ```js\r\n * function(imageTile, src) {\r\n *   imageTile.getImage().src = src;\r\n * };\r\n * ```\r\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\r\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\r\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\r\n * should be set to `2`.\r\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\r\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\r\n * tile URL given a tile coordinate and the projection.\r\n * Required if url or urls are not provided.\r\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\r\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\r\n * may be used instead of defining each one separately in the `urls` option.\r\n * @property {Array<string>} [urls] An array of URL templates.\r\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\r\n * @property {number} [transition] Duration of the opacity transition for rendering.\r\n * To disable the opacity transition, pass `transition: 0`.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Layer source for tile data with URLs in a set XYZ format that are\r\n * defined in a URL template. By default, this follows the widely-used\r\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\r\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\r\n * using the `{-y}` placeholder in the URL template, so long as the\r\n * source does not have a custom tile grid. In this case,\r\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\r\n * such as:\r\n *\r\n *  tileUrlFunction: function(coordinate) {\r\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\r\n *        coordinate[1] + '/' + coordinate[2] + '.png';\r\n *    }\r\n *\r\n * @api\r\n */\r\nvar XYZ = /*@__PURE__*/(function (TileImage) {\n  function XYZ(opt_options) {\r\n    var options = opt_options || {};\r\n    var projection = options.projection !== undefined ?\r\n      options.projection : 'EPSG:3857';\r\n\r\n    var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\r\n      createXYZ({\r\n        extent: extentFromProjection(projection),\r\n        maxZoom: options.maxZoom,\r\n        minZoom: options.minZoom,\r\n        tileSize: options.tileSize\r\n      });\r\n\r\n    TileImage.call(this, {\r\n      attributions: options.attributions,\r\n      cacheSize: options.cacheSize,\r\n      crossOrigin: options.crossOrigin,\r\n      opaque: options.opaque,\r\n      projection: projection,\r\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\r\n      tileGrid: tileGrid,\r\n      tileLoadFunction: options.tileLoadFunction,\r\n      tilePixelRatio: options.tilePixelRatio,\r\n      tileUrlFunction: options.tileUrlFunction,\r\n      url: options.url,\r\n      urls: options.urls,\r\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\r\n      transition: options.transition,\r\n      attributionsCollapsible: options.attributionsCollapsible\r\n    });\r\n\r\n  }\n\n  if ( TileImage ) XYZ.__proto__ = TileImage;\n  XYZ.prototype = Object.create( TileImage && TileImage.prototype );\n  XYZ.prototype.constructor = XYZ;\n\n  return XYZ;\n}(TileImage));\r\n\r\nexport default XYZ;\r\n\r\n//# sourceMappingURL=XYZ.js.map","/**\r\n * @module ol/source/CartoDB\r\n */\r\n\r\nimport {assign} from '../obj.js';\r\nimport SourceState from './State.js';\r\nimport XYZ from './XYZ.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {number} [cacheSize=2048] Cache size.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\r\n * access pixel data with the Canvas renderer.  See\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\r\n * @property {number} [maxZoom=18] Max zoom.\r\n * @property {number} [minZoom] Minimum zoom.\r\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\r\n * @property {Object} [config] If using anonymous maps, the CartoDB config to use. See\r\n * http://docs.cartodb.com/cartodb-platform/maps-api/anonymous-maps/\r\n * for more detail.\r\n * If using named maps, a key-value lookup with the template parameters.\r\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\r\n * for more detail.\r\n * @property {string} [map] If using named maps, this will be the name of the template to load.\r\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\r\n * for more detail.\r\n * @property {string} account If using named maps, this will be the name of the template to load.\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} CartoDBLayerInfo\r\n * @property {string} layergroupid The layer group ID\r\n * @property {{https: string}} cdn_url The CDN URL\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Layer source for the CartoDB Maps API.\r\n * @api\r\n */\r\nvar CartoDB = /*@__PURE__*/(function (XYZ) {\n  function CartoDB(options) {\r\n    XYZ.call(this, {\r\n      attributions: options.attributions,\r\n      cacheSize: options.cacheSize,\r\n      crossOrigin: options.crossOrigin,\r\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 18,\r\n      minZoom: options.minZoom,\r\n      projection: options.projection,\r\n      wrapX: options.wrapX\r\n    });\r\n\r\n    /**\r\n     * @type {string}\r\n     * @private\r\n     */\r\n    this.account_ = options.account;\r\n\r\n    /**\r\n     * @type {string}\r\n     * @private\r\n     */\r\n    this.mapId_ = options.map || '';\r\n\r\n    /**\r\n     * @type {!Object}\r\n     * @private\r\n     */\r\n    this.config_ = options.config || {};\r\n\r\n    /**\r\n     * @type {!Object<string, CartoDBLayerInfo>}\r\n     * @private\r\n     */\r\n    this.templateCache_ = {};\r\n\r\n    this.initializeMap_();\r\n  }\n\n  if ( XYZ ) CartoDB.__proto__ = XYZ;\n  CartoDB.prototype = Object.create( XYZ && XYZ.prototype );\n  CartoDB.prototype.constructor = CartoDB;\r\n\r\n  /**\r\n   * Returns the current config.\r\n   * @return {!Object} The current configuration.\r\n   * @api\r\n   */\r\n  CartoDB.prototype.getConfig = function getConfig () {\r\n    return this.config_;\r\n  };\r\n\r\n  /**\r\n   * Updates the carto db config.\r\n   * @param {Object} config a key-value lookup. Values will replace current values\r\n   *     in the config.\r\n   * @api\r\n   */\r\n  CartoDB.prototype.updateConfig = function updateConfig (config) {\r\n    assign(this.config_, config);\r\n    this.initializeMap_();\r\n  };\r\n\r\n  /**\r\n   * Sets the CartoDB config\r\n   * @param {Object} config In the case of anonymous maps, a CartoDB configuration\r\n   *     object.\r\n   * If using named maps, a key-value lookup with the template parameters.\r\n   * @api\r\n   */\r\n  CartoDB.prototype.setConfig = function setConfig (config) {\r\n    this.config_ = config || {};\r\n    this.initializeMap_();\r\n  };\r\n\r\n  /**\r\n   * Issue a request to initialize the CartoDB map.\r\n   * @private\r\n   */\r\n  CartoDB.prototype.initializeMap_ = function initializeMap_ () {\r\n    var paramHash = JSON.stringify(this.config_);\r\n    if (this.templateCache_[paramHash]) {\r\n      this.applyTemplate_(this.templateCache_[paramHash]);\r\n      return;\r\n    }\r\n    var mapUrl = 'https://' + this.account_ + '.carto.com/api/v1/map';\r\n\r\n    if (this.mapId_) {\r\n      mapUrl += '/named/' + this.mapId_;\r\n    }\r\n\r\n    var client = new XMLHttpRequest();\r\n    client.addEventListener('load', this.handleInitResponse_.bind(this, paramHash));\r\n    client.addEventListener('error', this.handleInitError_.bind(this));\r\n    client.open('POST', mapUrl);\r\n    client.setRequestHeader('Content-type', 'application/json');\r\n    client.send(JSON.stringify(this.config_));\r\n  };\r\n\r\n  /**\r\n   * Handle map initialization response.\r\n   * @param {string} paramHash a hash representing the parameter set that was used\r\n   *     for the request\r\n   * @param {Event} event Event.\r\n   * @private\r\n   */\r\n  CartoDB.prototype.handleInitResponse_ = function handleInitResponse_ (paramHash, event) {\r\n    var client = /** @type {XMLHttpRequest} */ (event.target);\r\n    // status will be 0 for file:// urls\r\n    if (!client.status || client.status >= 200 && client.status < 300) {\r\n      var response;\r\n      try {\r\n        response = /** @type {CartoDBLayerInfo} */(JSON.parse(client.responseText));\r\n      } catch (err) {\r\n        this.setState(SourceState.ERROR);\r\n        return;\r\n      }\r\n      this.applyTemplate_(response);\r\n      this.templateCache_[paramHash] = response;\r\n      this.setState(SourceState.READY);\r\n    } else {\r\n      this.setState(SourceState.ERROR);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {Event} event Event.\r\n   */\r\n  CartoDB.prototype.handleInitError_ = function handleInitError_ (event) {\r\n    this.setState(SourceState.ERROR);\r\n  };\r\n\r\n  /**\r\n   * Apply the new tile urls returned by carto db\r\n   * @param {CartoDBLayerInfo} data Result of carto db call.\r\n   * @private\r\n   */\r\n  CartoDB.prototype.applyTemplate_ = function applyTemplate_ (data) {\r\n    var tilesUrl = 'https://' + data.cdn_url.https + '/' + this.account_ +\r\n        '/api/v1/map/' + data.layergroupid + '/{z}/{x}/{y}.png';\r\n    this.setUrl(tilesUrl);\r\n  };\n\n  return CartoDB;\n}(XYZ));\r\n\r\n\r\nexport default CartoDB;\r\n\r\n//# sourceMappingURL=CartoDB.js.map","/**\r\n * @module ol/source/Cluster\r\n */\r\n\r\nimport {getUid} from '../util.js';\r\nimport {assert} from '../asserts.js';\r\nimport Feature from '../Feature.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport {scale as scaleCoordinate, add as addCoordinate} from '../coordinate.js';\r\nimport {listen} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {buffer, createEmpty, createOrUpdateFromCoordinate} from '../extent.js';\r\nimport Point from '../geom/Point.js';\r\nimport VectorSource from './Vector.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {number} [distance=20] Minimum distance in pixels between clusters.\r\n * @property {function(Feature):Point} [geometryFunction]\r\n * Function that takes an {@link module:ol/Feature} as argument and returns an\r\n * {@link module:ol/geom/Point} as cluster calculation point for the feature. When a\r\n * feature should not be considered for clustering, the function should return\r\n * `null`. The default, which works when the underyling source contains point\r\n * features only, is\r\n * ```js\r\n * function(feature) {\r\n *   return feature.getGeometry();\r\n * }\r\n * ```\r\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\r\n * calculation point for polygons.\r\n * @property {VectorSource} source Source.\r\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Layer source to cluster vector data. Works out of the box with point\r\n * geometries. For other geometry types, or if not all geometries should be\r\n * considered for clustering, a custom `geometryFunction` can be defined.\r\n * @api\r\n */\r\nvar Cluster = /*@__PURE__*/(function (VectorSource) {\n  function Cluster(options) {\r\n    VectorSource.call(this, {\r\n      attributions: options.attributions,\r\n      wrapX: options.wrapX\r\n    });\r\n\r\n    /**\r\n     * @type {number|undefined}\r\n     * @protected\r\n     */\r\n    this.resolution = undefined;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @protected\r\n     */\r\n    this.distance = options.distance !== undefined ? options.distance : 20;\r\n\r\n    /**\r\n     * @type {Array<Feature>}\r\n     * @protected\r\n     */\r\n    this.features = [];\r\n\r\n    /**\r\n     * @param {Feature} feature Feature.\r\n     * @return {Point} Cluster calculation point.\r\n     * @protected\r\n     */\r\n    this.geometryFunction = options.geometryFunction || function(feature) {\r\n      var geometry = /** @type {Point} */ (feature.getGeometry());\r\n      assert(geometry.getType() == GeometryType.POINT,\r\n        10); // The default `geometryFunction` can only handle `Point` geometries\r\n      return geometry;\r\n    };\r\n\r\n    /**\r\n     * @type {VectorSource}\r\n     * @protected\r\n     */\r\n    this.source = options.source;\r\n\r\n    listen(this.source, EventType.CHANGE, this.refresh, this);\r\n  }\n\n  if ( VectorSource ) Cluster.__proto__ = VectorSource;\n  Cluster.prototype = Object.create( VectorSource && VectorSource.prototype );\n  Cluster.prototype.constructor = Cluster;\r\n\r\n  /**\r\n   * Get the distance in pixels between clusters.\r\n   * @return {number} Distance.\r\n   * @api\r\n   */\r\n  Cluster.prototype.getDistance = function getDistance () {\r\n    return this.distance;\r\n  };\r\n\r\n  /**\r\n   * Get a reference to the wrapped source.\r\n   * @return {VectorSource} Source.\r\n   * @api\r\n   */\r\n  Cluster.prototype.getSource = function getSource () {\r\n    return this.source;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Cluster.prototype.loadFeatures = function loadFeatures (extent, resolution, projection) {\r\n    this.source.loadFeatures(extent, resolution, projection);\r\n    if (resolution !== this.resolution) {\r\n      this.clear();\r\n      this.resolution = resolution;\r\n      this.cluster();\r\n      this.addFeatures(this.features);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Set the distance in pixels between clusters.\r\n   * @param {number} distance The distance in pixels.\r\n   * @api\r\n   */\r\n  Cluster.prototype.setDistance = function setDistance (distance) {\r\n    this.distance = distance;\r\n    this.refresh();\r\n  };\r\n\r\n  /**\r\n   * handle the source changing\r\n   * @override\r\n   */\r\n  Cluster.prototype.refresh = function refresh () {\r\n    this.clear();\r\n    this.cluster();\r\n    this.addFeatures(this.features);\r\n    VectorSource.prototype.refresh.call(this);\r\n  };\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  Cluster.prototype.cluster = function cluster () {\r\n    if (this.resolution === undefined) {\r\n      return;\r\n    }\r\n    this.features.length = 0;\r\n    var extent = createEmpty();\r\n    var mapDistance = this.distance * this.resolution;\r\n    var features = this.source.getFeatures();\r\n\r\n    /**\r\n     * @type {!Object<string, boolean>}\r\n     */\r\n    var clustered = {};\r\n\r\n    for (var i = 0, ii = features.length; i < ii; i++) {\r\n      var feature = features[i];\r\n      if (!(getUid(feature) in clustered)) {\r\n        var geometry = this.geometryFunction(feature);\r\n        if (geometry) {\r\n          var coordinates = geometry.getCoordinates();\r\n          createOrUpdateFromCoordinate(coordinates, extent);\r\n          buffer(extent, mapDistance, extent);\r\n\r\n          var neighbors = this.source.getFeaturesInExtent(extent);\r\n          neighbors = neighbors.filter(function(neighbor) {\r\n            var uid = getUid(neighbor);\r\n            if (!(uid in clustered)) {\r\n              clustered[uid] = true;\r\n              return true;\r\n            } else {\r\n              return false;\r\n            }\r\n          });\r\n          this.features.push(this.createCluster(neighbors));\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Array<Feature>} features Features\r\n   * @return {Feature} The cluster feature.\r\n   * @protected\r\n   */\r\n  Cluster.prototype.createCluster = function createCluster (features) {\r\n    var centroid = [0, 0];\r\n    for (var i = features.length - 1; i >= 0; --i) {\r\n      var geometry = this.geometryFunction(features[i]);\r\n      if (geometry) {\r\n        addCoordinate(centroid, geometry.getCoordinates());\r\n      } else {\r\n        features.splice(i, 1);\r\n      }\r\n    }\r\n    scaleCoordinate(centroid, 1 / features.length);\r\n\r\n    var cluster = new Feature(new Point(centroid));\r\n    cluster.set('features', features);\r\n    return cluster;\r\n  };\n\n  return Cluster;\n}(VectorSource));\r\n\r\n\r\nexport default Cluster;\r\n\r\n//# sourceMappingURL=Cluster.js.map","/**\r\n * @module ol/reproj/Image\r\n */\r\nimport {ERROR_THRESHOLD} from './common.js';\r\n\r\nimport ImageBase from '../ImageBase.js';\r\nimport ImageState from '../ImageState.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {getCenter, getIntersection, getHeight, getWidth} from '../extent.js';\r\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\r\nimport Triangulation from './Triangulation.js';\r\n\r\n\r\n/**\r\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Class encapsulating single reprojected image.\r\n * See {@link module:ol/source/Image~ImageSource}.\r\n */\r\nvar ReprojImage = /*@__PURE__*/(function (ImageBase) {\n  function ReprojImage(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction) {\r\n    var maxSourceExtent = sourceProj.getExtent();\r\n    var maxTargetExtent = targetProj.getExtent();\r\n\r\n    var limitedTargetExtent = maxTargetExtent ?\r\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\r\n\r\n    var targetCenter = getCenter(limitedTargetExtent);\r\n    var sourceResolution = calculateSourceResolution(\r\n      sourceProj, targetProj, targetCenter, targetResolution);\r\n\r\n    var errorThresholdInPixels = ERROR_THRESHOLD;\r\n\r\n    var triangulation = new Triangulation(\r\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\r\n      sourceResolution * errorThresholdInPixels);\r\n\r\n    var sourceExtent = triangulation.calculateSourceExtent();\r\n    var sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\r\n    var state = ImageState.LOADED;\r\n    if (sourceImage) {\r\n      state = ImageState.IDLE;\r\n    }\r\n    var sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\r\n\r\n    ImageBase.call(this, targetExtent, targetResolution, sourcePixelRatio, state);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../proj/Projection.js\").default}\r\n     */\r\n    this.targetProj_ = targetProj;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../extent.js\").Extent}\r\n     */\r\n    this.maxSourceExtent_ = maxSourceExtent;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!import(\"./Triangulation.js\").default}\r\n     */\r\n    this.triangulation_ = triangulation;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.targetResolution_ = targetResolution;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../extent.js\").Extent}\r\n     */\r\n    this.targetExtent_ = targetExtent;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../ImageBase.js\").default}\r\n     */\r\n    this.sourceImage_ = sourceImage;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.sourcePixelRatio_ = sourcePixelRatio;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement}\r\n     */\r\n    this.canvas_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../events.js\").EventsKey}\r\n     */\r\n    this.sourceListenerKey_ = null;\r\n  }\n\n  if ( ImageBase ) ReprojImage.__proto__ = ImageBase;\n  ReprojImage.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ReprojImage.prototype.constructor = ReprojImage;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  ReprojImage.prototype.disposeInternal = function disposeInternal () {\r\n    if (this.state == ImageState.LOADING) {\r\n      this.unlistenSource_();\r\n    }\r\n    ImageBase.prototype.disposeInternal.call(this);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  ReprojImage.prototype.getImage = function getImage () {\r\n    return this.canvas_;\r\n  };\r\n\r\n  /**\r\n   * @return {import(\"../proj/Projection.js\").default} Projection.\r\n   */\r\n  ReprojImage.prototype.getProjection = function getProjection () {\r\n    return this.targetProj_;\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  ReprojImage.prototype.reproject_ = function reproject_ () {\r\n    var sourceState = this.sourceImage_.getState();\r\n    if (sourceState == ImageState.LOADED) {\r\n      var width = getWidth(this.targetExtent_) / this.targetResolution_;\r\n      var height = getHeight(this.targetExtent_) / this.targetResolution_;\r\n\r\n      this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_,\r\n        this.sourceImage_.getResolution(), this.maxSourceExtent_,\r\n        this.targetResolution_, this.targetExtent_, this.triangulation_, [{\r\n          extent: this.sourceImage_.getExtent(),\r\n          image: this.sourceImage_.getImage()\r\n        }], 0);\r\n    }\r\n    this.state = sourceState;\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  ReprojImage.prototype.load = function load () {\r\n    if (this.state == ImageState.IDLE) {\r\n      this.state = ImageState.LOADING;\r\n      this.changed();\r\n\r\n      var sourceState = this.sourceImage_.getState();\r\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\r\n        this.reproject_();\r\n      } else {\r\n        this.sourceListenerKey_ = listen(this.sourceImage_,\r\n          EventType.CHANGE, function(e) {\r\n            var sourceState = this.sourceImage_.getState();\r\n            if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\r\n              this.unlistenSource_();\r\n              this.reproject_();\r\n            }\r\n          }, this);\r\n        this.sourceImage_.load();\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  ReprojImage.prototype.unlistenSource_ = function unlistenSource_ () {\r\n    unlistenByKey(/** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_));\r\n    this.sourceListenerKey_ = null;\r\n  };\n\n  return ReprojImage;\n}(ImageBase));\r\n\r\n\r\nexport default ReprojImage;\r\n\r\n//# sourceMappingURL=Image.js.map","/**\r\n * @module ol/source/Image\r\n */\r\nimport {abstract} from '../util.js';\r\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\r\nimport ImageState from '../ImageState.js';\r\nimport {linearFindNearest} from '../array.js';\r\nimport Event from '../events/Event.js';\r\nimport {equals} from '../extent.js';\r\nimport {equivalent} from '../proj.js';\r\nimport ReprojImage from '../reproj/Image.js';\r\nimport Source from './Source.js';\r\n\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nvar ImageSourceEventType = {\r\n\r\n  /**\r\n   * Triggered when an image starts loading.\r\n   * @event ol/source/Image~ImageSourceEvent#imageloadstart\r\n   * @api\r\n   */\r\n  IMAGELOADSTART: 'imageloadstart',\r\n\r\n  /**\r\n   * Triggered when an image finishes loading.\r\n   * @event ol/source/Image~ImageSourceEvent#imageloadend\r\n   * @api\r\n   */\r\n  IMAGELOADEND: 'imageloadend',\r\n\r\n  /**\r\n   * Triggered if image loading results in an error.\r\n   * @event ol/source/Image~ImageSourceEvent#imageloaderror\r\n   * @api\r\n   */\r\n  IMAGELOADERROR: 'imageloaderror'\r\n\r\n};\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\r\n * type.\r\n */\r\nvar ImageSourceEvent = /*@__PURE__*/(function (Event) {\n  function ImageSourceEvent(type, image) {\r\n\r\n    Event.call(this, type);\r\n\r\n    /**\r\n     * The image related to the event.\r\n     * @type {import(\"../Image.js\").default}\r\n     * @api\r\n     */\r\n    this.image = image;\r\n\r\n  }\n\n  if ( Event ) ImageSourceEvent.__proto__ = Event;\n  ImageSourceEvent.prototype = Object.create( Event && Event.prototype );\n  ImageSourceEvent.prototype.constructor = ImageSourceEvent;\n\n  return ImageSourceEvent;\n}(Event));\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\r\n * @property {import(\"../proj.js\").ProjectionLike} projection\r\n * @property {Array<number>} [resolutions]\r\n * @property {import(\"./State.js\").default} [state]\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Abstract base class; normally only used for creating subclasses and not\r\n * instantiated in apps.\r\n * Base class for sources providing a single image.\r\n * @abstract\r\n * @api\r\n */\r\nvar ImageSource = /*@__PURE__*/(function (Source) {\n  function ImageSource(options) {\r\n    Source.call(this, {\r\n      attributions: options.attributions,\r\n      projection: options.projection,\r\n      state: options.state\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.resolutions_ = options.resolutions !== undefined ?\r\n      options.resolutions : null;\r\n\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../reproj/Image.js\").default}\r\n     */\r\n    this.reprojectedImage_ = null;\r\n\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.reprojectedRevision_ = 0;\r\n  }\n\n  if ( Source ) ImageSource.__proto__ = Source;\n  ImageSource.prototype = Object.create( Source && Source.prototype );\n  ImageSource.prototype.constructor = ImageSource;\r\n\r\n  /**\r\n   * @return {Array<number>} Resolutions.\r\n   * @override\r\n   */\r\n  ImageSource.prototype.getResolutions = function getResolutions () {\r\n    return this.resolutions_;\r\n  };\r\n\r\n  /**\r\n   * @protected\r\n   * @param {number} resolution Resolution.\r\n   * @return {number} Resolution.\r\n   */\r\n  ImageSource.prototype.findNearestResolution = function findNearestResolution (resolution) {\r\n    if (this.resolutions_) {\r\n      var idx = linearFindNearest(this.resolutions_, resolution, 0);\r\n      resolution = this.resolutions_[idx];\r\n    }\r\n    return resolution;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @return {import(\"../ImageBase.js\").default} Single image.\r\n   */\r\n  ImageSource.prototype.getImage = function getImage (extent, resolution, pixelRatio, projection) {\r\n    var sourceProjection = this.getProjection();\r\n    if (!ENABLE_RASTER_REPROJECTION ||\r\n        !sourceProjection ||\r\n        !projection ||\r\n        equivalent(sourceProjection, projection)) {\r\n      if (sourceProjection) {\r\n        projection = sourceProjection;\r\n      }\r\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\r\n    } else {\r\n      if (this.reprojectedImage_) {\r\n        if (this.reprojectedRevision_ == this.getRevision() &&\r\n            equivalent(\r\n              this.reprojectedImage_.getProjection(), projection) &&\r\n            this.reprojectedImage_.getResolution() == resolution &&\r\n            equals(this.reprojectedImage_.getExtent(), extent)) {\r\n          return this.reprojectedImage_;\r\n        }\r\n        this.reprojectedImage_.dispose();\r\n        this.reprojectedImage_ = null;\r\n      }\r\n\r\n      this.reprojectedImage_ = new ReprojImage(\r\n        sourceProjection, projection, extent, resolution, pixelRatio,\r\n        function(extent, resolution, pixelRatio) {\r\n          return this.getImageInternal(extent, resolution,\r\n            pixelRatio, sourceProjection);\r\n        }.bind(this));\r\n      this.reprojectedRevision_ = this.getRevision();\r\n\r\n      return this.reprojectedImage_;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @return {import(\"../ImageBase.js\").default} Single image.\r\n   * @protected\r\n   */\r\n  ImageSource.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\r\n    return abstract();\r\n  };\r\n\r\n  /**\r\n   * Handle image change events.\r\n   * @param {import(\"../events/Event.js\").default} event Event.\r\n   * @protected\r\n   */\r\n  ImageSource.prototype.handleImageChange = function handleImageChange (event) {\r\n    var image = /** @type {import(\"../Image.js\").default} */ (event.target);\r\n    switch (image.getState()) {\r\n      case ImageState.LOADING:\r\n        this.loading = true;\r\n        this.dispatchEvent(\r\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART,\r\n            image));\r\n        break;\r\n      case ImageState.LOADED:\r\n        this.loading = false;\r\n        this.dispatchEvent(\r\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND,\r\n            image));\r\n        break;\r\n      case ImageState.ERROR:\r\n        this.loading = false;\r\n        this.dispatchEvent(\r\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR,\r\n            image));\r\n        break;\r\n      default:\r\n        // pass\r\n    }\r\n  };\n\n  return ImageSource;\n}(Source));\r\n\r\n\r\n/**\r\n * Default image load function for image sources that use import(\"../Image.js\").Image image\r\n * instances.\r\n * @param {import(\"../Image.js\").default} image Image.\r\n * @param {string} src Source.\r\n */\r\nexport function defaultImageLoadFunction(image, src) {\r\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\r\n}\r\n\r\n\r\nexport default ImageSource;\r\n\r\n//# sourceMappingURL=Image.js.map","/**\r\n * @module ol/Image\r\n */\r\nimport ImageBase from './ImageBase.js';\r\nimport ImageState from './ImageState.js';\r\nimport {listenOnce, unlistenByKey} from './events.js';\r\nimport EventType from './events/EventType.js';\r\nimport {getHeight} from './extent.js';\r\n\r\n\r\n/**\r\n * A function that takes an {@link module:ol/Image~Image} for the image and a\r\n * `{string}` for the src as arguments. It is supposed to make it so the\r\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\r\n * content specified by the src. If not specified, the default is\r\n *\r\n *     function(image, src) {\r\n *       image.getImage().src = src;\r\n *     }\r\n *\r\n * Providing a custom `imageLoadFunction` can be useful to load images with\r\n * post requests or - in general - through XHR requests, where the src of the\r\n * image element would be set to a data URI when the content is loaded.\r\n *\r\n * @typedef {function(ImageWrapper, string)} LoadFunction\r\n * @api\r\n */\r\n\r\n\r\nvar ImageWrapper = /*@__PURE__*/(function (ImageBase) {\n  function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\r\n\r\n    ImageBase.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.src_ = src;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\r\n     */\r\n    this.image_ = new Image();\r\n    if (crossOrigin !== null) {\r\n      this.image_.crossOrigin = crossOrigin;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<import(\"./events.js\").EventsKey>}\r\n     */\r\n    this.imageListenerKeys_ = null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {ImageState}\r\n     */\r\n    this.state = ImageState.IDLE;\r\n\r\n    /**\r\n     * @private\r\n     * @type {LoadFunction}\r\n     */\r\n    this.imageLoadFunction_ = imageLoadFunction;\r\n\r\n  }\n\n  if ( ImageBase ) ImageWrapper.__proto__ = ImageBase;\n  ImageWrapper.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageWrapper.prototype.constructor = ImageWrapper;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @api\r\n   */\r\n  ImageWrapper.prototype.getImage = function getImage () {\r\n    return this.image_;\r\n  };\r\n  \r\n  /**\r\n   * \r\n   * @api\r\n   */\r\n  ImageWrapper.prototype.getSrc = function getSrc () {\r\n    return this.src_;\r\n  };\r\n\r\n  /**\r\n   * Tracks loading or read errors.\r\n   *\r\n   * @private\r\n   */\r\n  ImageWrapper.prototype.handleImageError_ = function handleImageError_ () {\r\n    this.state = ImageState.ERROR;\r\n    this.unlistenImage_();\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * Tracks successful image load.\r\n   *\r\n   * @private\r\n   */\r\n  ImageWrapper.prototype.handleImageLoad_ = function handleImageLoad_ () {\r\n    if (this.resolution === undefined) {\r\n      this.resolution = getHeight(this.extent) / this.image_.height;\r\n    }\r\n    this.state = ImageState.LOADED;\r\n    this.unlistenImage_();\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * Load the image or retry if loading previously failed.\r\n   * Loading is taken care of by the tile queue, and calling this method is\r\n   * only needed for preloading or for reloading in case of an error.\r\n   * @override\r\n   * @api\r\n   */\r\n  ImageWrapper.prototype.load = function load () {\r\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\r\n      this.state = ImageState.LOADING;\r\n      this.changed();\r\n      this.imageListenerKeys_ = [\r\n        listenOnce(this.image_, EventType.ERROR,\r\n          this.handleImageError_, this),\r\n        listenOnce(this.image_, EventType.LOAD,\r\n          this.handleImageLoad_, this)\r\n      ];\r\n      this.imageLoadFunction_(this, this.src_);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\r\n   */\r\n  ImageWrapper.prototype.setImage = function setImage (image) {\r\n    this.image_ = image;\r\n  };\r\n\r\n  /**\r\n   * Discards event handlers which listen for load completion or errors.\r\n   *\r\n   * @private\r\n   */\r\n  ImageWrapper.prototype.unlistenImage_ = function unlistenImage_ () {\r\n    this.imageListenerKeys_.forEach(unlistenByKey);\r\n    this.imageListenerKeys_ = null;\r\n  };\n\n  return ImageWrapper;\n}(ImageBase));\r\n\r\n\r\nexport default ImageWrapper;\r\n\r\n//# sourceMappingURL=Image.js.map","/**\r\n * @module ol/uri\r\n */\r\n\r\n\r\n/**\r\n * Appends query parameters to a URI.\r\n *\r\n * @param {string} uri The original URI, which may already have query data.\r\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\r\n *     and the values are arbitrary types or arrays.\r\n * @return {string} The new URI.\r\n */\r\nexport function appendParams(uri, params) {\r\n  var keyParams = [];\r\n  // Skip any null or undefined parameter values\r\n  Object.keys(params).forEach(function(k) {\r\n    if (params[k] !== null && params[k] !== undefined) {\r\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\r\n    }\r\n  });\r\n  var qs = keyParams.join('&');\r\n  // remove any trailing ? or &\r\n  uri = uri.replace(/[?&]$/, '');\r\n  // append ? or & depending on whether uri has existing parameters\r\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\r\n  return uri + qs;\r\n}\r\n\r\n//# sourceMappingURL=uri.js.map","/**\r\n * @module ol/source/ImageArcGISRest\r\n */\r\n\r\nimport ImageWrapper from '../Image.js';\r\nimport {assert} from '../asserts.js';\r\nimport {listen} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {containsExtent, getHeight, getWidth} from '../extent.js';\r\nimport {assign} from '../obj.js';\r\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\r\nimport {appendParams} from '../uri.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\r\n * access pixel data with the Canvas renderer.  See\r\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\r\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\r\n * the remote server.\r\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given\r\n * a URL.\r\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\r\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\r\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\r\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\r\n * {@link http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/}\r\n * for further reference.\r\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\r\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\r\n * `2` means twice the size of the map viewport, and so on.\r\n * @property {Array<number>} [resolutions] Resolutions. If specified, requests will be made for\r\n * these resolutions only.\r\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\r\n * should include /MapServer or /ImageServer.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Source for data from ArcGIS Rest services providing single, untiled images.\r\n * Useful when underlying map service has labels.\r\n *\r\n * If underlying map service is not using labels,\r\n * take advantage of ol image caching and use\r\n * {@link module:ol/source/TileArcGISRest} data source.\r\n *\r\n * @fires ol/source/Image~ImageSourceEvent\r\n * @api\r\n */\r\nvar ImageArcGISRest = /*@__PURE__*/(function (ImageSource) {\n  function ImageArcGISRest(opt_options) {\r\n\r\n    var options = opt_options || /** @type {Options} */ ({});\r\n\r\n    ImageSource.call(this, {\r\n      attributions: options.attributions,\r\n      projection: options.projection,\r\n      resolutions: options.resolutions\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {?string}\r\n     */\r\n    this.crossOrigin_ =\r\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|undefined}\r\n     */\r\n    this.url_ = options.url;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../Image.js\").LoadFunction}\r\n     */\r\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\r\n      options.imageLoadFunction : defaultImageLoadFunction;\r\n\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object}\r\n     */\r\n    this.params_ = options.params || {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../Image.js\").default}\r\n     */\r\n    this.image_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../size.js\").Size}\r\n     */\r\n    this.imageSize_ = [0, 0];\r\n\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.renderedRevision_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\r\n\r\n  }\n\n  if ( ImageSource ) ImageArcGISRest.__proto__ = ImageSource;\n  ImageArcGISRest.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageArcGISRest.prototype.constructor = ImageArcGISRest;\r\n\r\n  /**\r\n   * Get the user-provided params, i.e. those passed to the constructor through\r\n   * the \"params\" option, and possibly updated using the updateParams method.\r\n   * @return {Object} Params.\r\n   * @api\r\n   */\r\n  ImageArcGISRest.prototype.getParams = function getParams () {\r\n    return this.params_;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  ImageArcGISRest.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\r\n\r\n    if (this.url_ === undefined) {\r\n      return null;\r\n    }\r\n\r\n    resolution = this.findNearestResolution(resolution);\r\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\r\n\r\n    var image = this.image_;\r\n    if (image &&\r\n        this.renderedRevision_ == this.getRevision() &&\r\n        image.getResolution() == resolution &&\r\n        image.getPixelRatio() == pixelRatio &&\r\n        containsExtent(image.getExtent(), extent)) {\r\n      return image;\r\n    }\r\n\r\n    var params = {\r\n      'F': 'image',\r\n      'FORMAT': 'PNG32',\r\n      'TRANSPARENT': true\r\n    };\r\n    assign(params, this.params_);\r\n\r\n    extent = extent.slice();\r\n    var centerX = (extent[0] + extent[2]) / 2;\r\n    var centerY = (extent[1] + extent[3]) / 2;\r\n    if (this.ratio_ != 1) {\r\n      var halfWidth = this.ratio_ * getWidth(extent) / 2;\r\n      var halfHeight = this.ratio_ * getHeight(extent) / 2;\r\n      extent[0] = centerX - halfWidth;\r\n      extent[1] = centerY - halfHeight;\r\n      extent[2] = centerX + halfWidth;\r\n      extent[3] = centerY + halfHeight;\r\n    }\r\n\r\n    var imageResolution = resolution / pixelRatio;\r\n\r\n    // Compute an integer width and height.\r\n    var width = Math.ceil(getWidth(extent) / imageResolution);\r\n    var height = Math.ceil(getHeight(extent) / imageResolution);\r\n\r\n    // Modify the extent to match the integer width and height.\r\n    extent[0] = centerX - imageResolution * width / 2;\r\n    extent[2] = centerX + imageResolution * width / 2;\r\n    extent[1] = centerY - imageResolution * height / 2;\r\n    extent[3] = centerY + imageResolution * height / 2;\r\n\r\n    this.imageSize_[0] = width;\r\n    this.imageSize_[1] = height;\r\n\r\n    var url = this.getRequestUrl_(extent, this.imageSize_, pixelRatio,\r\n      projection, params);\r\n\r\n    this.image_ = new ImageWrapper(extent, resolution, pixelRatio,\r\n      url, this.crossOrigin_, this.imageLoadFunction_);\r\n\r\n    this.renderedRevision_ = this.getRevision();\r\n\r\n    listen(this.image_, EventType.CHANGE,\r\n      this.handleImageChange, this);\r\n\r\n    return this.image_;\r\n\r\n  };\r\n\r\n  /**\r\n   * Return the image load function of the source.\r\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\r\n   * @api\r\n   */\r\n  ImageArcGISRest.prototype.getImageLoadFunction = function getImageLoadFunction () {\r\n    return this.imageLoadFunction_;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {import(\"../size.js\").Size} size Size.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @param {Object} params Params.\r\n   * @return {string} Request URL.\r\n   * @private\r\n   */\r\n  ImageArcGISRest.prototype.getRequestUrl_ = function getRequestUrl_ (extent, size, pixelRatio, projection, params) {\r\n    // ArcGIS Server only wants the numeric portion of the projection ID.\r\n    var srid = projection.getCode().split(':').pop();\r\n\r\n    params['SIZE'] = size[0] + ',' + size[1];\r\n    params['BBOX'] = extent.join(',');\r\n    params['BBOXSR'] = srid;\r\n    params['IMAGESR'] = srid;\r\n    params['DPI'] = Math.round(90 * pixelRatio);\r\n\r\n    var url = this.url_;\r\n\r\n    var modifiedUrl = url\r\n      .replace(/MapServer\\/?$/, 'MapServer/export')\r\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\r\n    if (modifiedUrl == url) {\r\n      assert(false, 50); // `options.featureTypes` should be an Array\r\n    }\r\n    return appendParams(modifiedUrl, params);\r\n  };\r\n\r\n  /**\r\n   * Return the URL used for this ArcGIS source.\r\n   * @return {string|undefined} URL.\r\n   * @api\r\n   */\r\n  ImageArcGISRest.prototype.getUrl = function getUrl () {\r\n    return this.url_;\r\n  };\r\n\r\n  /**\r\n   * Set the image load function of the source.\r\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\r\n   * @api\r\n   */\r\n  ImageArcGISRest.prototype.setImageLoadFunction = function setImageLoadFunction (imageLoadFunction) {\r\n    this.image_ = null;\r\n    this.imageLoadFunction_ = imageLoadFunction;\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * Set the URL to use for requests.\r\n   * @param {string|undefined} url URL.\r\n   * @api\r\n   */\r\n  ImageArcGISRest.prototype.setUrl = function setUrl (url) {\r\n    if (url != this.url_) {\r\n      this.url_ = url;\r\n      this.image_ = null;\r\n      this.changed();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Update the user-provided params.\r\n   * @param {Object} params Params.\r\n   * @api\r\n   */\r\n  ImageArcGISRest.prototype.updateParams = function updateParams (params) {\r\n    assign(this.params_, params);\r\n    this.image_ = null;\r\n    this.changed();\r\n  };\n\n  return ImageArcGISRest;\n}(ImageSource));\r\n\r\n\r\nexport default ImageArcGISRest;\r\n\r\n//# sourceMappingURL=ImageArcGISRest.js.map","/**\r\n * @module ol/source/ImageCanvas\r\n */\r\n\r\nimport ImageCanvas from '../ImageCanvas.js';\r\nimport {containsExtent, getHeight, getWidth, scaleFromCenter} from '../extent.js';\r\nimport ImageSource from './Image.js';\r\n\r\n\r\n/**\r\n * A function returning the canvas element (`{HTMLCanvasElement}`)\r\n * used by the source as an image. The arguments passed to the function are:\r\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\r\n * `{number}` the device pixel ratio, {@link module:ol/size~Size} the image size, and\r\n * {@link module:ol/proj/Projection} the image projection. The canvas returned by\r\n * this function is cached by the source. The this keyword inside the function\r\n * references the {@link module:ol/source/ImageCanvas}.\r\n *\r\n * @typedef {function(this:import(\"../ImageCanvas.js\").default, import(\"../extent.js\").Extent, number,\r\n *     number, import(\"../size.js\").Size, import(\"../proj/Projection.js\").default): HTMLCanvasElement} FunctionType\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {FunctionType} [canvasFunction] Canvas function.\r\n * The function returning the canvas element used by the source\r\n * as an image. The arguments passed to the function are: `{import(\"../extent.js\").Extent}` the\r\n * image extent, `{number}` the image resolution, `{number}` the device pixel\r\n * ratio, `{import(\"../size.js\").Size}` the image size, and `{import(\"../proj/Projection.js\").Projection}` the image\r\n * projection. The canvas returned by this function is cached by the source. If\r\n * the value returned by the function is later changed then\r\n * `changed` should be called on the source for the source to\r\n * invalidate the current cached image. See: {@link module:ol/Observable~Observable#changed}\r\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\r\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\r\n * width and height of the map viewport, and so on. Must be `1` or higher.\r\n * @property {Array<number>} [resolutions] Resolutions.\r\n * If specified, new canvases will be created for these resolutions\r\n * @property {import(\"./State.js\").default} [state] Source state.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Base class for image sources where a canvas element is the image.\r\n * @api\r\n */\r\nvar ImageCanvasSource = /*@__PURE__*/(function (ImageSource) {\n  function ImageCanvasSource(opt_options) {\r\n\r\n    var options = opt_options || /** @type {Options} */ ({});\r\n\r\n    ImageSource.call(this, {\r\n      attributions: options.attributions,\r\n      projection: options.projection,\r\n      resolutions: options.resolutions,\r\n      state: options.state\r\n    });\r\n\r\n    /**\r\n    * @private\r\n    * @type {FunctionType}\r\n    */\r\n    this.canvasFunction_ = options.canvasFunction;\r\n\r\n    /**\r\n    * @private\r\n    * @type {import(\"../ImageCanvas.js\").default}\r\n    */\r\n    this.canvas_ = null;\r\n\r\n    /**\r\n    * @private\r\n    * @type {number}\r\n    */\r\n    this.renderedRevision_ = 0;\r\n\r\n    /**\r\n    * @private\r\n    * @type {number}\r\n    */\r\n    this.ratio_ = options.ratio !== undefined ?\r\n      options.ratio : 1.5;\r\n\r\n  }\n\n  if ( ImageSource ) ImageCanvasSource.__proto__ = ImageSource;\n  ImageCanvasSource.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageCanvasSource.prototype.constructor = ImageCanvasSource;\r\n\r\n  /**\r\n  * @inheritDoc\r\n  */\r\n  ImageCanvasSource.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\r\n    resolution = this.findNearestResolution(resolution);\r\n\r\n    var canvas = this.canvas_;\r\n    if (canvas &&\r\n       this.renderedRevision_ == this.getRevision() &&\r\n       canvas.getResolution() == resolution &&\r\n       canvas.getPixelRatio() == pixelRatio &&\r\n       containsExtent(canvas.getExtent(), extent)) {\r\n      return canvas;\r\n    }\r\n\r\n    extent = extent.slice();\r\n    scaleFromCenter(extent, this.ratio_);\r\n    var width = getWidth(extent) / resolution;\r\n    var height = getHeight(extent) / resolution;\r\n    var size = [width * pixelRatio, height * pixelRatio];\r\n\r\n    var canvasElement = this.canvasFunction_.call(\r\n      this, extent, resolution, pixelRatio, size, projection);\r\n    if (canvasElement) {\r\n      canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\r\n    }\r\n    this.canvas_ = canvas;\r\n    this.renderedRevision_ = this.getRevision();\r\n\r\n    return canvas;\r\n  };\n\n  return ImageCanvasSource;\n}(ImageSource));\r\n\r\n\r\nexport default ImageCanvasSource;\r\n\r\n//# sourceMappingURL=ImageCanvas.js.map","/**\r\n * @module ol/source/ImageMapGuide\r\n */\r\n\r\nimport ImageWrapper from '../Image.js';\r\nimport {listen} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {containsExtent, getCenter, getHeight, getWidth, scaleFromCenter} from '../extent.js';\r\nimport {assign} from '../obj.js';\r\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\r\nimport {appendParams} from '../uri.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [url] The mapagent url.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\r\n * access pixel data with the Canvas renderer.  See\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {number} [displayDpi=96] The display resolution.\r\n * @property {number} [metersPerUnit=1] The meters-per-unit value.\r\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\r\n * the image from the remote server.\r\n * @property {boolean} [useOverlay] If `true`, will use `GETDYNAMICMAPOVERLAYIMAGE`.\r\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\r\n * @property {number} [ratio=1] Ratio. `1` means image requests are the size of the map viewport, `2` means\r\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\r\n * @property {Array<number>} [resolutions] Resolutions.\r\n * If specified, requests will be made for these resolutions only.\r\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\r\n * @property {Object} [params] Additional parameters.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Source for images from Mapguide servers\r\n *\r\n * @fires ol/source/Image~ImageSourceEvent\r\n * @api\r\n */\r\nvar ImageMapGuide = /*@__PURE__*/(function (ImageSource) {\n  function ImageMapGuide(options) {\r\n\r\n    ImageSource.call(this, {\r\n      projection: options.projection,\r\n      resolutions: options.resolutions\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {?string}\r\n     */\r\n    this.crossOrigin_ =\r\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.displayDpi_ = options.displayDpi !== undefined ?\r\n      options.displayDpi : 96;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object}\r\n     */\r\n    this.params_ = options.params || {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|undefined}\r\n     */\r\n    this.url_ = options.url;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../Image.js\").LoadFunction}\r\n     */\r\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\r\n      options.imageLoadFunction : defaultImageLoadFunction;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.metersPerUnit_ = options.metersPerUnit !== undefined ?\r\n      options.metersPerUnit : 1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.useOverlay_ = options.useOverlay !== undefined ?\r\n      options.useOverlay : false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../Image.js\").default}\r\n     */\r\n    this.image_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.renderedRevision_ = 0;\r\n\r\n  }\n\n  if ( ImageSource ) ImageMapGuide.__proto__ = ImageSource;\n  ImageMapGuide.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageMapGuide.prototype.constructor = ImageMapGuide;\r\n\r\n  /**\r\n   * Get the user-provided params, i.e. those passed to the constructor through\r\n   * the \"params\" option, and possibly updated using the updateParams method.\r\n   * @return {Object} Params.\r\n   * @api\r\n   */\r\n  ImageMapGuide.prototype.getParams = function getParams () {\r\n    return this.params_;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  ImageMapGuide.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\r\n    resolution = this.findNearestResolution(resolution);\r\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\r\n\r\n    var image = this.image_;\r\n    if (image &&\r\n        this.renderedRevision_ == this.getRevision() &&\r\n        image.getResolution() == resolution &&\r\n        image.getPixelRatio() == pixelRatio &&\r\n        containsExtent(image.getExtent(), extent)) {\r\n      return image;\r\n    }\r\n\r\n    if (this.ratio_ != 1) {\r\n      extent = extent.slice();\r\n      scaleFromCenter(extent, this.ratio_);\r\n    }\r\n    var width = getWidth(extent) / resolution;\r\n    var height = getHeight(extent) / resolution;\r\n    var size = [width * pixelRatio, height * pixelRatio];\r\n\r\n    if (this.url_ !== undefined) {\r\n      var imageUrl = this.getUrl(this.url_, this.params_, extent, size,\r\n        projection);\r\n      image = new ImageWrapper(extent, resolution, pixelRatio,\r\n        imageUrl, this.crossOrigin_,\r\n        this.imageLoadFunction_);\r\n      listen(image, EventType.CHANGE,\r\n        this.handleImageChange, this);\r\n    } else {\r\n      image = null;\r\n    }\r\n    this.image_ = image;\r\n    this.renderedRevision_ = this.getRevision();\r\n\r\n    return image;\r\n  };\r\n\r\n  /**\r\n   * Return the image load function of the source.\r\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\r\n   * @api\r\n   */\r\n  ImageMapGuide.prototype.getImageLoadFunction = function getImageLoadFunction () {\r\n    return this.imageLoadFunction_;\r\n  };\r\n\r\n  /**\r\n   * Update the user-provided params.\r\n   * @param {Object} params Params.\r\n   * @api\r\n   */\r\n  ImageMapGuide.prototype.updateParams = function updateParams (params) {\r\n    assign(this.params_, params);\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * @param {string} baseUrl The mapagent url.\r\n   * @param {Object<string, string|number>} params Request parameters.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {import(\"../size.js\").Size} size Size.\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @return {string} The mapagent map image request URL.\r\n   */\r\n  ImageMapGuide.prototype.getUrl = function getUrl (baseUrl, params, extent, size, projection) {\r\n    var scale = getScale(extent, size,\r\n      this.metersPerUnit_, this.displayDpi_);\r\n    var center = getCenter(extent);\r\n    var baseParams = {\r\n      'OPERATION': this.useOverlay_ ? 'GETDYNAMICMAPOVERLAYIMAGE' : 'GETMAPIMAGE',\r\n      'VERSION': '2.0.0',\r\n      'LOCALE': 'en',\r\n      'CLIENTAGENT': 'ol/source/ImageMapGuide source',\r\n      'CLIP': '1',\r\n      'SETDISPLAYDPI': this.displayDpi_,\r\n      'SETDISPLAYWIDTH': Math.round(size[0]),\r\n      'SETDISPLAYHEIGHT': Math.round(size[1]),\r\n      'SETVIEWSCALE': scale,\r\n      'SETVIEWCENTERX': center[0],\r\n      'SETVIEWCENTERY': center[1]\r\n    };\r\n    assign(baseParams, params);\r\n    return appendParams(baseUrl, baseParams);\r\n  };\r\n\r\n  /**\r\n   * Set the image load function of the MapGuide source.\r\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\r\n   * @api\r\n   */\r\n  ImageMapGuide.prototype.setImageLoadFunction = function setImageLoadFunction (imageLoadFunction) {\r\n    this.image_ = null;\r\n    this.imageLoadFunction_ = imageLoadFunction;\r\n    this.changed();\r\n  };\n\n  return ImageMapGuide;\n}(ImageSource));\r\n\r\n\r\n/**\r\n * @param {import(\"../extent.js\").Extent} extent The map extents.\r\n * @param {import(\"../size.js\").Size} size The viewport size.\r\n * @param {number} metersPerUnit The meters-per-unit value.\r\n * @param {number} dpi The display resolution.\r\n * @return {number} The computed map scale.\r\n */\r\nfunction getScale(extent, size, metersPerUnit, dpi) {\r\n  var mcsW = getWidth(extent);\r\n  var mcsH = getHeight(extent);\r\n  var devW = size[0];\r\n  var devH = size[1];\r\n  var mpp = 0.0254 / dpi;\r\n  if (devH * mcsW > devW * mcsH) {\r\n    return mcsW * metersPerUnit / (devW * mpp); // width limited\r\n  } else {\r\n    return mcsH * metersPerUnit / (devH * mpp); // height limited\r\n  }\r\n}\r\n\r\n\r\nexport default ImageMapGuide;\r\n\r\n//# sourceMappingURL=ImageMapGuide.js.map","/**\r\n * @module ol/source/ImageStatic\r\n */\r\n\r\nimport ImageWrapper from '../Image.js';\r\nimport ImageState from '../ImageState.js';\r\nimport {createCanvasContext2D} from '../dom.js';\r\nimport {listen} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {intersects, getHeight, getWidth} from '../extent.js';\r\nimport {get as getProjection} from '../proj.js';\r\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\r\n * access pixel data with the Canvas renderer.  See\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\r\n * This is the [left, bottom, right, top] map coordinates of your image.\r\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\r\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\r\n * @property {import(\"../size.js\").Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\r\n * only needs to be set if auto-detection fails for some reason.\r\n * @property {string} url Image URL.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * A layer source for displaying a single, static image.\r\n * @api\r\n */\r\nvar Static = /*@__PURE__*/(function (ImageSource) {\n  function Static(options) {\r\n    var crossOrigin = options.crossOrigin !== undefined ?\r\n      options.crossOrigin : null;\r\n\r\n    var /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction =\r\n        options.imageLoadFunction !== undefined ?\r\n          options.imageLoadFunction : defaultImageLoadFunction;\r\n\r\n    ImageSource.call(this, {\r\n      attributions: options.attributions,\r\n      projection: getProjection(options.projection)\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.url_ = options.url;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../extent.js\").Extent}\r\n     */\r\n    this.imageExtent_ = options.imageExtent;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../Image.js\").default}\r\n     */\r\n    this.image_ = new ImageWrapper(this.imageExtent_, undefined, 1, this.url_, crossOrigin, imageLoadFunction);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../size.js\").Size}\r\n     */\r\n    this.imageSize_ = options.imageSize ? options.imageSize : null;\r\n\r\n    listen(this.image_, EventType.CHANGE,\r\n      this.handleImageChange, this);\r\n\r\n  }\n\n  if ( ImageSource ) Static.__proto__ = ImageSource;\n  Static.prototype = Object.create( ImageSource && ImageSource.prototype );\n  Static.prototype.constructor = Static;\r\n\r\n  /**\r\n   * Returns the image extent\r\n   * @return {import(\"../extent.js\").Extent} image extent.\r\n   * @api\r\n   */\r\n  Static.prototype.getImageExtent = function getImageExtent () {\r\n    return this.imageExtent_;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Static.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\r\n    if (intersects(extent, this.image_.getExtent())) {\r\n      return this.image_;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  /**\r\n   * Return the URL used for this image source.\r\n   * @return {string} URL.\r\n   * @api\r\n   */\r\n  Static.prototype.getUrl = function getUrl () {\r\n    return this.url_;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  Static.prototype.handleImageChange = function handleImageChange (evt) {\r\n    if (this.image_.getState() == ImageState.LOADED) {\r\n      var imageExtent = this.image_.getExtent();\r\n      var image = this.image_.getImage();\r\n      var imageWidth, imageHeight;\r\n      if (this.imageSize_) {\r\n        imageWidth = this.imageSize_[0];\r\n        imageHeight = this.imageSize_[1];\r\n      } else {\r\n        imageWidth = image.width;\r\n        imageHeight = image.height;\r\n      }\r\n      var resolution = getHeight(imageExtent) / imageHeight;\r\n      var targetWidth = Math.ceil(getWidth(imageExtent) / resolution);\r\n      if (targetWidth != imageWidth) {\r\n        var context = createCanvasContext2D(targetWidth, imageHeight);\r\n        var canvas = context.canvas;\r\n        context.drawImage(image, 0, 0, imageWidth, imageHeight,\r\n          0, 0, canvas.width, canvas.height);\r\n        this.image_.setImage(canvas);\r\n      }\r\n    }\r\n    ImageSource.prototype.handleImageChange.call(this, evt);\r\n  };\n\n  return Static;\n}(ImageSource));\r\n\r\n\r\nexport default Static;\r\n\r\n//# sourceMappingURL=ImageStatic.js.map","/**\r\n * @module ol/source/common\r\n */\r\n\r\n/**\r\n * Default WMS version.\r\n * @type {string}\r\n */\r\nexport var DEFAULT_WMS_VERSION = '1.3.0';\r\n\r\n//# sourceMappingURL=common.js.map","/**\r\n * @module ol/source/WMSServerType\r\n */\r\n\r\n/**\r\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\r\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\r\n *     specification that OpenLayers can make use of.\r\n * @enum {string}\r\n */\r\nexport default {\r\n  CARMENTA_SERVER: 'carmentaserver',\r\n  GEOSERVER: 'geoserver',\r\n  MAPSERVER: 'mapserver',\r\n  QGIS: 'qgis'\r\n};\r\n\r\n//# sourceMappingURL=WMSServerType.js.map","/**\r\n * @module ol/source/ImageWMS\r\n */\r\n\r\nimport {DEFAULT_WMS_VERSION} from './common.js';\r\n\r\nimport ImageWrapper from '../Image.js';\r\nimport {assert} from '../asserts.js';\r\nimport {listen} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\r\nimport {assign} from '../obj.js';\r\nimport {get as getProjection, transform} from '../proj.js';\r\nimport {calculateSourceResolution} from '../reproj.js';\r\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\r\nimport WMSServerType from './WMSServerType.js';\r\nimport {compareVersions} from '../string.js';\r\nimport {appendParams} from '../uri.js';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {import(\"../size.js\").Size}\r\n */\r\nvar GETFEATUREINFO_IMAGE_SIZE = [101, 101];\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\r\n * access pixel data with the Canvas renderer.  See\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\r\n * the image from the remote server.\r\n * @property {import(\"./WMSServerType.js\").default|string} [serverType] The type of\r\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\r\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\r\n * @property {Object<string,*>} params WMS request parameters.\r\n * At least a `LAYERS` param is required. `STYLES` is\r\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\r\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\r\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\r\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\r\n * twice the width and height of the map viewport, and so on. Must be `1` or\r\n * higher.\r\n * @property {Array<number>} [resolutions] Resolutions.\r\n * If specified, requests will be made for these resolutions only.\r\n * @property {string} url WMS service URL.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Source for WMS servers providing single, untiled images.\r\n *\r\n * @fires ol/source/Image~ImageSourceEvent\r\n * @api\r\n */\r\nvar ImageWMS = /*@__PURE__*/(function (ImageSource) {\n  function ImageWMS(opt_options) {\r\n\r\n    var options = opt_options || /** @type {Options} */ ({});\r\n\r\n    ImageSource.call(this, {\r\n      attributions: options.attributions,\r\n      projection: options.projection,\r\n      resolutions: options.resolutions\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {?string}\r\n     */\r\n    this.crossOrigin_ =\r\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|undefined}\r\n     */\r\n    this.url_ = options.url;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../Image.js\").LoadFunction}\r\n     */\r\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\r\n      options.imageLoadFunction : defaultImageLoadFunction;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object}\r\n     */\r\n    this.params_ = options.params || {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.v13_ = true;\r\n    this.updateV13_();\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./WMSServerType.js\").default|undefined}\r\n     */\r\n    this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../Image.js\").default}\r\n     */\r\n    this.image_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../size.js\").Size}\r\n     */\r\n    this.imageSize_ = [0, 0];\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.renderedRevision_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\r\n\r\n  }\n\n  if ( ImageSource ) ImageWMS.__proto__ = ImageSource;\n  ImageWMS.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageWMS.prototype.constructor = ImageWMS;\r\n\r\n  /**\r\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\r\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\r\n   * constructed.\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {number} resolution Resolution.\r\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\r\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\r\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\r\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\r\n   *     specified here.\r\n   * @return {string|undefined} GetFeatureInfo URL.\r\n   * @api\r\n   */\r\n  ImageWMS.prototype.getGetFeatureInfoUrl = function getGetFeatureInfoUrl (coordinate, resolution, projection, params) {\r\n    if (this.url_ === undefined) {\r\n      return undefined;\r\n    }\r\n    var projectionObj = getProjection(projection);\r\n    var sourceProjectionObj = this.getProjection();\r\n\r\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\r\n      resolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\r\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\r\n    }\r\n\r\n    var extent = getForViewAndSize(coordinate, resolution, 0,\r\n      GETFEATUREINFO_IMAGE_SIZE);\r\n\r\n    var baseParams = {\r\n      'SERVICE': 'WMS',\r\n      'VERSION': DEFAULT_WMS_VERSION,\r\n      'REQUEST': 'GetFeatureInfo',\r\n      'FORMAT': 'image/png',\r\n      'TRANSPARENT': true,\r\n      'QUERY_LAYERS': this.params_['LAYERS']\r\n    };\r\n    assign(baseParams, this.params_, params);\r\n\r\n    var x = Math.floor((coordinate[0] - extent[0]) / resolution);\r\n    var y = Math.floor((extent[3] - coordinate[1]) / resolution);\r\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\r\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\r\n\r\n    return this.getRequestUrl_(\r\n      extent, GETFEATUREINFO_IMAGE_SIZE,\r\n      1, sourceProjectionObj || projectionObj, baseParams);\r\n  };\r\n\r\n  /**\r\n   * Get the user-provided params, i.e. those passed to the constructor through\r\n   * the \"params\" option, and possibly updated using the updateParams method.\r\n   * @return {Object} Params.\r\n   * @api\r\n   */\r\n  ImageWMS.prototype.getParams = function getParams () {\r\n    return this.params_;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  ImageWMS.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\r\n\r\n    if (this.url_ === undefined) {\r\n      return null;\r\n    }\r\n\r\n    resolution = this.findNearestResolution(resolution);\r\n\r\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\r\n      pixelRatio = 1;\r\n    }\r\n\r\n    var imageResolution = resolution / pixelRatio;\r\n\r\n    var center = getCenter(extent);\r\n    var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\r\n    var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\r\n    var viewExtent = getForViewAndSize(center, imageResolution, 0,\r\n      [viewWidth, viewHeight]);\r\n    var requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\r\n    var requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\r\n    var requestExtent = getForViewAndSize(center, imageResolution, 0,\r\n      [requestWidth, requestHeight]);\r\n\r\n    var image = this.image_;\r\n    if (image &&\r\n        this.renderedRevision_ == this.getRevision() &&\r\n        image.getResolution() == resolution &&\r\n        image.getPixelRatio() == pixelRatio &&\r\n        containsExtent(image.getExtent(), viewExtent)) {\r\n      return image;\r\n    }\r\n\r\n    var params = {\r\n      'SERVICE': 'WMS',\r\n      'VERSION': DEFAULT_WMS_VERSION,\r\n      'REQUEST': 'GetMap',\r\n      'FORMAT': 'image/png',\r\n      'TRANSPARENT': true\r\n    };\r\n    assign(params, this.params_);\r\n\r\n    this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\r\n    this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\r\n\r\n    var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\r\n      projection, params);\r\n\r\n    this.image_ = new ImageWrapper(requestExtent, resolution, pixelRatio,\r\n      url, this.crossOrigin_, this.imageLoadFunction_);\r\n\r\n    this.renderedRevision_ = this.getRevision();\r\n\r\n    listen(this.image_, EventType.CHANGE,\r\n      this.handleImageChange, this);\r\n\r\n    return this.image_;\r\n\r\n  };\r\n\r\n  /**\r\n   * Return the image load function of the source.\r\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\r\n   * @api\r\n   */\r\n  ImageWMS.prototype.getImageLoadFunction = function getImageLoadFunction () {\r\n    return this.imageLoadFunction_;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {import(\"../size.js\").Size} size Size.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @param {Object} params Params.\r\n   * @return {string} Request URL.\r\n   * @private\r\n   */\r\n  ImageWMS.prototype.getRequestUrl_ = function getRequestUrl_ (extent, size, pixelRatio, projection, params) {\r\n\r\n    assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\r\n\r\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\r\n\r\n    if (!('STYLES' in this.params_)) {\r\n      params['STYLES'] = '';\r\n    }\r\n\r\n    if (pixelRatio != 1) {\r\n      switch (this.serverType_) {\r\n        case WMSServerType.GEOSERVER:\r\n          var dpi = (90 * pixelRatio + 0.5) | 0;\r\n          if ('FORMAT_OPTIONS' in params) {\r\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\r\n          } else {\r\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\r\n          }\r\n          break;\r\n        case WMSServerType.MAPSERVER:\r\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\r\n          break;\r\n        case WMSServerType.CARMENTA_SERVER:\r\n        case WMSServerType.QGIS:\r\n          params['DPI'] = 90 * pixelRatio;\r\n          break;\r\n        default:\r\n          assert(false, 8); // Unknown `serverType` configured\r\n          break;\r\n      }\r\n    }\r\n\r\n    params['WIDTH'] = size[0];\r\n    params['HEIGHT'] = size[1];\r\n\r\n    var axisOrientation = projection.getAxisOrientation();\r\n    var bbox;\r\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\r\n      bbox = [extent[1], extent[0], extent[3], extent[2]];\r\n    } else {\r\n      bbox = extent;\r\n    }\r\n    params['BBOX'] = bbox.join(',');\r\n\r\n    return appendParams(/** @type {string} */ (this.url_), params);\r\n  };\r\n\r\n  /**\r\n   * Return the URL used for this WMS source.\r\n   * @return {string|undefined} URL.\r\n   * @api\r\n   */\r\n  ImageWMS.prototype.getUrl = function getUrl () {\r\n    return this.url_;\r\n  };\r\n\r\n  /**\r\n   * Set the image load function of the source.\r\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\r\n   * @api\r\n   */\r\n  ImageWMS.prototype.setImageLoadFunction = function setImageLoadFunction (imageLoadFunction) {\r\n    this.image_ = null;\r\n    this.imageLoadFunction_ = imageLoadFunction;\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * Set the URL to use for requests.\r\n   * @param {string|undefined} url URL.\r\n   * @api\r\n   */\r\n  ImageWMS.prototype.setUrl = function setUrl (url) {\r\n    if (url != this.url_) {\r\n      this.url_ = url;\r\n      this.image_ = null;\r\n      this.changed();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Update the user-provided params.\r\n   * @param {Object} params Params.\r\n   * @api\r\n   */\r\n  ImageWMS.prototype.updateParams = function updateParams (params) {\r\n    assign(this.params_, params);\r\n    this.updateV13_();\r\n    this.image_ = null;\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  ImageWMS.prototype.updateV13_ = function updateV13_ () {\r\n    var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\r\n    this.v13_ = compareVersions(version, '1.3') >= 0;\r\n  };\n\n  return ImageWMS;\n}(ImageSource));\r\n\r\n\r\nexport default ImageWMS;\r\n\r\n//# sourceMappingURL=ImageWMS.js.map","/**\r\n * @module ol/source/OSM\r\n */\r\n\r\nimport XYZ from './XYZ.js';\r\n\r\n\r\n/**\r\n * The attribution containing a link to the OpenStreetMap Copyright and License\r\n * page.\r\n * @const\r\n * @type {string}\r\n * @api\r\n */\r\nexport var ATTRIBUTION = '&#169; ' +\r\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\r\n      'contributors.';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {number} [cacheSize=2048] Cache size.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\r\n * access pixel data with the Canvas renderer.  See\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {number} [maxZoom=19] Max zoom.\r\n * @property {boolean} [opaque=true] Whether the layer is opaque.\r\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\r\n * Higher values can increase reprojection performance, but decrease precision.\r\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\r\n * ```js\r\n * function(imageTile, src) {\r\n *   imageTile.getImage().src = src;\r\n * };\r\n * ```\r\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\r\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\r\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Layer source for the OpenStreetMap tile server.\r\n * @api\r\n */\r\nvar OSM = /*@__PURE__*/(function (XYZ) {\n  function OSM(opt_options) {\r\n\r\n    var options = opt_options || {};\r\n\r\n    var attributions;\r\n    if (options.attributions !== undefined) {\r\n      attributions = options.attributions;\r\n    } else {\r\n      attributions = [ATTRIBUTION];\r\n    }\r\n\r\n    var crossOrigin = options.crossOrigin !== undefined ?\r\n      options.crossOrigin : 'anonymous';\r\n\r\n    var url = options.url !== undefined ?\r\n      options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\r\n\r\n    XYZ.call(this, {\r\n      attributions: attributions,\r\n      cacheSize: options.cacheSize,\r\n      crossOrigin: crossOrigin,\r\n      opaque: options.opaque !== undefined ? options.opaque : true,\r\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\r\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\r\n      tileLoadFunction: options.tileLoadFunction,\r\n      url: url,\r\n      wrapX: options.wrapX,\r\n      attributionsCollapsible: false\r\n    });\r\n\r\n  }\n\n  if ( XYZ ) OSM.__proto__ = XYZ;\n  OSM.prototype = Object.create( XYZ && XYZ.prototype );\n  OSM.prototype.constructor = OSM;\n\n  return OSM;\n}(XYZ));\r\n\r\nexport default OSM;\r\n\r\n//# sourceMappingURL=OSM.js.map","/**\r\n * @module ol/source/Raster\r\n */\r\nimport {getUid} from '../util.js';\r\nimport ImageCanvas from '../ImageCanvas.js';\r\nimport TileQueue from '../TileQueue.js';\r\nimport {createCanvasContext2D} from '../dom.js';\r\nimport {listen} from '../events.js';\r\nimport Event from '../events/Event.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {Processor} from 'pixelworks/lib/index';\r\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\r\nimport LayerType from '../LayerType.js';\r\nimport ImageLayer from '../layer/Image.js';\r\nimport TileLayer from '../layer/Tile.js';\r\nimport {assign} from '../obj.js';\r\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\r\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\r\nimport ImageSource from './Image.js';\r\nimport SourceState from './State.js';\r\nimport {create as createTransform} from '../transform.js';\r\n\r\n\r\n/**\r\n * A function that takes an array of input data, performs some operation, and\r\n * returns an array of output data.\r\n * For `pixel` type operations, the function will be called with an array of\r\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\r\n * range of 0 - 255. It should return a single pixel array.\r\n * For `'image'` type operations, functions will be called with an array of\r\n * {@link ImageData https://developer.mozilla.org/en-US/docs/Web/API/ImageData}\r\n * and should return a single {@link ImageData\r\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageData}.  The operations\r\n * are called with a second \"data\" argument, which can be used for storage.  The\r\n * data object is accessible from raster events, where it can be initialized in\r\n * \"beforeoperations\" and accessed again in \"afteroperations\".\r\n *\r\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\r\n *     (Array<number>|ImageData)} Operation\r\n */\r\n\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nvar RasterEventType = {\r\n  /**\r\n   * Triggered before operations are run.\r\n   * @event ol/source/Raster~RasterSourceEvent#beforeoperations\r\n   * @api\r\n   */\r\n  BEFOREOPERATIONS: 'beforeoperations',\r\n\r\n  /**\r\n   * Triggered after operations are run.\r\n   * @event ol/source/Raster~RasterSourceEvent#afteroperations\r\n   * @api\r\n   */\r\n  AFTEROPERATIONS: 'afteroperations'\r\n};\r\n\r\n\r\n/**\r\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\r\n * @enum {string}\r\n */\r\nvar RasterOperationType = {\r\n  PIXEL: 'pixel',\r\n  IMAGE: 'image'\r\n};\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/source/Raster} instances are instances of this\r\n * type.\r\n */\r\nvar RasterSourceEvent = /*@__PURE__*/(function (Event) {\n  function RasterSourceEvent(type, frameState, data) {\r\n    Event.call(this, type);\r\n\r\n    /**\r\n     * The raster extent.\r\n     * @type {import(\"../extent.js\").Extent}\r\n     * @api\r\n     */\r\n    this.extent = frameState.extent;\r\n\r\n    /**\r\n     * The pixel resolution (map units per pixel).\r\n     * @type {number}\r\n     * @api\r\n     */\r\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\r\n\r\n    /**\r\n     * An object made available to all operations.  This can be used by operations\r\n     * as a storage object (e.g. for calculating statistics).\r\n     * @type {Object}\r\n     * @api\r\n     */\r\n    this.data = data;\r\n\r\n  }\n\n  if ( Event ) RasterSourceEvent.__proto__ = Event;\n  RasterSourceEvent.prototype = Object.create( Event && Event.prototype );\n  RasterSourceEvent.prototype.constructor = RasterSourceEvent;\n\n  return RasterSourceEvent;\n}(Event));\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\r\n * sources or layers. Vector layers must be configured with `renderMode: 'image'`.\r\n * @property {Operation} [operation] Raster operation.\r\n * The operation will be called with data from input sources\r\n * and the output will be assigned to the raster source.\r\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\r\n * @property {number} [threads] By default, operations will be run in a single worker thread.\r\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\r\n * be run in multiple worker threads.  Note that there is additional overhead in\r\n * transferring data to multiple workers, and that depending on the user's\r\n * system, it may not be possible to parallelize the work.\r\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\r\n * Supported values are `'pixel'` and `'image'`.  By default,\r\n * `'pixel'` operations are assumed, and operations will be called with an\r\n * array of pixels from input sources.  If set to `'image'`, operations will\r\n * be called with an array of ImageData objects from input sources.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * A source that transforms data from any number of input sources using an\r\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\r\n * output pixel values.\r\n *\r\n * @fires ol/source/Raster~RasterSourceEvent\r\n * @api\r\n */\r\nvar RasterSource = /*@__PURE__*/(function (ImageSource) {\n  function RasterSource(options) {\r\n    ImageSource.call(this, {\r\n      projection: null\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {*}\r\n     */\r\n    this.worker_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {RasterOperationType}\r\n     */\r\n    this.operationType_ = options.operationType !== undefined ?\r\n      options.operationType : RasterOperationType.PIXEL;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<import(\"../renderer/canvas/Layer.js\").default>}\r\n     */\r\n    this.renderers_ = createRenderers(options.sources);\r\n\r\n    for (var r = 0, rr = this.renderers_.length; r < rr; ++r) {\r\n      listen(this.renderers_[r], EventType.CHANGE,\r\n        this.changed, this);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../TileQueue.js\").default}\r\n     */\r\n    this.tileQueue_ = new TileQueue(\r\n      function() {\r\n        return 1;\r\n      },\r\n      this.changed.bind(this));\r\n\r\n    var layerStatesArray = getLayerStatesArray(this.renderers_);\r\n\r\n    /**\r\n     * @type {Object<string, import(\"../layer/Layer.js\").State>}\r\n     */\r\n    var layerStates = {};\r\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\r\n      layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\r\n    }\r\n\r\n    /**\r\n     * The most recently requested frame state.\r\n     * @type {import(\"../PluggableMap.js\").FrameState}\r\n     * @private\r\n     */\r\n    this.requestedFrameState_;\r\n\r\n    /**\r\n     * The most recently rendered image canvas.\r\n     * @type {import(\"../ImageCanvas.js\").default}\r\n     * @private\r\n     */\r\n    this.renderedImageCanvas_ = null;\r\n\r\n    /**\r\n     * The most recently rendered revision.\r\n     * @type {number}\r\n     */\r\n    this.renderedRevision_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../PluggableMap.js\").FrameState}\r\n     */\r\n    this.frameState_ = {\r\n      animate: false,\r\n      coordinateToPixelTransform: createTransform(),\r\n      extent: null,\r\n      focus: null,\r\n      index: 0,\r\n      layerStates: layerStates,\r\n      layerStatesArray: layerStatesArray,\r\n      pixelRatio: 1,\r\n      pixelToCoordinateTransform: createTransform(),\r\n      postRenderFunctions: [],\r\n      size: [0, 0],\r\n      skippedFeatureUids: {},\r\n      tileQueue: this.tileQueue_,\r\n      time: Date.now(),\r\n      usedTiles: {},\r\n      viewState: /** @type {import(\"../View.js\").State} */ ({\r\n        rotation: 0\r\n      }),\r\n      viewHints: [],\r\n      wantedTiles: {}\r\n    };\r\n\r\n    if (options.operation !== undefined) {\r\n      this.setOperation(options.operation, options.lib);\r\n    }\r\n\r\n  }\n\n  if ( ImageSource ) RasterSource.__proto__ = ImageSource;\n  RasterSource.prototype = Object.create( ImageSource && ImageSource.prototype );\n  RasterSource.prototype.constructor = RasterSource;\r\n\r\n  /**\r\n   * Set the operation.\r\n   * @param {Operation} operation New operation.\r\n   * @param {Object=} opt_lib Functions that will be available to operations run\r\n   *     in a worker.\r\n   * @api\r\n   */\r\n  RasterSource.prototype.setOperation = function setOperation (operation, opt_lib) {\r\n    this.worker_ = new Processor({\r\n      operation: operation,\r\n      imageOps: this.operationType_ === RasterOperationType.IMAGE,\r\n      queue: 1,\r\n      lib: opt_lib,\r\n      threads: this.threads_\r\n    });\r\n    this.changed();\r\n  };\r\n\r\n  /**\r\n   * Update the stored frame state.\r\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\r\n   * @param {number} resolution The view resolution.\r\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\r\n   * @return {import(\"../PluggableMap.js\").FrameState} The updated frame state.\r\n   * @private\r\n   */\r\n  RasterSource.prototype.updateFrameState_ = function updateFrameState_ (extent, resolution, projection) {\r\n\r\n    var frameState = /** @type {import(\"../PluggableMap.js\").FrameState} */ (assign({}, this.frameState_));\r\n\r\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (assign({}, frameState.viewState));\r\n\r\n    var center = getCenter(extent);\r\n\r\n    frameState.extent = extent.slice();\r\n    frameState.focus = center;\r\n    frameState.size[0] = Math.round(getWidth(extent) / resolution);\r\n    frameState.size[1] = Math.round(getHeight(extent) / resolution);\r\n    frameState.time = Date.now();\r\n    frameState.animate = false;\r\n\r\n    var viewState = frameState.viewState;\r\n    viewState.center = center;\r\n    viewState.projection = projection;\r\n    viewState.resolution = resolution;\r\n    return frameState;\r\n  };\r\n\r\n  /**\r\n   * Determine if all sources are ready.\r\n   * @return {boolean} All sources are ready.\r\n   * @private\r\n   */\r\n  RasterSource.prototype.allSourcesReady_ = function allSourcesReady_ () {\r\n    var ready = true;\r\n    var source;\r\n    for (var i = 0, ii = this.renderers_.length; i < ii; ++i) {\r\n      source = this.renderers_[i].getLayer().getSource();\r\n      if (source.getState() !== SourceState.READY) {\r\n        ready = false;\r\n        break;\r\n      }\r\n    }\r\n    return ready;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  RasterSource.prototype.getImage = function getImage (extent, resolution, pixelRatio, projection) {\r\n    if (!this.allSourcesReady_()) {\r\n      return null;\r\n    }\r\n\r\n    var frameState = this.updateFrameState_(extent, resolution, projection);\r\n    this.requestedFrameState_ = frameState;\r\n\r\n    // check if we can't reuse the existing ol/ImageCanvas\r\n    if (this.renderedImageCanvas_) {\r\n      var renderedResolution = this.renderedImageCanvas_.getResolution();\r\n      var renderedExtent = this.renderedImageCanvas_.getExtent();\r\n      if (resolution !== renderedResolution || !equals(extent, renderedExtent)) {\r\n        this.renderedImageCanvas_ = null;\r\n      }\r\n    }\r\n\r\n    if (!this.renderedImageCanvas_ || this.getRevision() !== this.renderedRevision_) {\r\n      this.processSources_();\r\n    }\r\n\r\n    frameState.tileQueue.loadMoreTiles(16, 16);\r\n\r\n    if (frameState.animate) {\r\n      requestAnimationFrame(this.changed.bind(this));\r\n    }\r\n\r\n    return this.renderedImageCanvas_;\r\n  };\r\n\r\n  /**\r\n   * Start processing source data.\r\n   * @private\r\n   */\r\n  RasterSource.prototype.processSources_ = function processSources_ () {\r\n    var frameState = this.requestedFrameState_;\r\n    var len = this.renderers_.length;\r\n    var imageDatas = new Array(len);\r\n    for (var i = 0; i < len; ++i) {\r\n      var imageData = getImageData(\r\n        this.renderers_[i], frameState, frameState.layerStatesArray[i]);\r\n      if (imageData) {\r\n        imageDatas[i] = imageData;\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n\r\n    var data = {};\r\n    this.dispatchEvent(new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data));\r\n    this.worker_.process(imageDatas, data, this.onWorkerComplete_.bind(this, frameState));\r\n  };\r\n\r\n  /**\r\n   * Called when pixel processing is complete.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\r\n   * @param {Error} err Any error during processing.\r\n   * @param {ImageData} output The output image data.\r\n   * @param {Object} data The user data.\r\n   * @private\r\n   */\r\n  RasterSource.prototype.onWorkerComplete_ = function onWorkerComplete_ (frameState, err, output, data) {\r\n    if (err || !output) {\r\n      return;\r\n    }\r\n\r\n    // do nothing if extent or resolution changed\r\n    var extent = frameState.extent;\r\n    var resolution = frameState.viewState.resolution;\r\n    if (resolution !== this.requestedFrameState_.viewState.resolution ||\r\n        !equals(extent, this.requestedFrameState_.extent)) {\r\n      return;\r\n    }\r\n\r\n    var context;\r\n    if (this.renderedImageCanvas_) {\r\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\r\n    } else {\r\n      var width = Math.round(getWidth(extent) / resolution);\r\n      var height = Math.round(getHeight(extent) / resolution);\r\n      context = createCanvasContext2D(width, height);\r\n      this.renderedImageCanvas_ = new ImageCanvas(extent, resolution, 1, context.canvas);\r\n    }\r\n    context.putImageData(output, 0, 0);\r\n\r\n    this.changed();\r\n    this.renderedRevision_ = this.getRevision();\r\n\r\n    this.dispatchEvent(new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data));\r\n  };\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  RasterSource.prototype.getImageInternal = function getImageInternal () {\r\n    return null; // not implemented\r\n  };\n\n  return RasterSource;\n}(ImageSource));\r\n\r\n\r\n/**\r\n * A reusable canvas context.\r\n * @type {CanvasRenderingContext2D}\r\n * @private\r\n */\r\nvar sharedContext = null;\r\n\r\n\r\n/**\r\n * Get image data from a renderer.\r\n * @param {import(\"../renderer/canvas/Layer.js\").default} renderer Layer renderer.\r\n * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\r\n * @param {import(\"../layer/Layer.js\").State} layerState The layer state.\r\n * @return {ImageData} The image data.\r\n */\r\nfunction getImageData(renderer, frameState, layerState) {\r\n  if (!renderer.prepareFrame(frameState, layerState)) {\r\n    return null;\r\n  }\r\n  var width = frameState.size[0];\r\n  var height = frameState.size[1];\r\n  if (!sharedContext) {\r\n    sharedContext = createCanvasContext2D(width, height);\r\n  } else {\r\n    var canvas = sharedContext.canvas;\r\n    if (canvas.width !== width || canvas.height !== height) {\r\n      sharedContext = createCanvasContext2D(width, height);\r\n    } else {\r\n      sharedContext.clearRect(0, 0, width, height);\r\n    }\r\n  }\r\n  renderer.composeFrame(frameState, layerState, sharedContext);\r\n  return sharedContext.getImageData(0, 0, width, height);\r\n}\r\n\r\n\r\n/**\r\n * Get a list of layer states from a list of renderers.\r\n * @param {Array<import(\"../renderer/canvas/Layer.js\").default>} renderers Layer renderers.\r\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\r\n */\r\nfunction getLayerStatesArray(renderers) {\r\n  return renderers.map(function(renderer) {\r\n    return renderer.getLayer().getLayerState();\r\n  });\r\n}\r\n\r\n\r\n/**\r\n * Create renderers for all sources.\r\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\r\n * @return {Array<import(\"../renderer/canvas/Layer.js\").default>} Array of layer renderers.\r\n */\r\nfunction createRenderers(sources) {\r\n  var len = sources.length;\r\n  var renderers = new Array(len);\r\n  for (var i = 0; i < len; ++i) {\r\n    renderers[i] = createRenderer(sources[i]);\r\n  }\r\n  return renderers;\r\n}\r\n\r\n\r\n/**\r\n * Create a renderer for the provided source.\r\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\r\n * @return {import(\"../renderer/canvas/Layer.js\").default} The renderer.\r\n */\r\nfunction createRenderer(layerOrSource) {\r\n  var tileSource = /** @type {import(\"./Tile.js\").default} */ (layerOrSource);\r\n  var imageSource = /** @type {import(\"./Image.js\").default} */ (layerOrSource);\r\n  var layer = /** @type {import(\"../layer/Layer.js\").default} */ (layerOrSource);\r\n  var renderer = null;\r\n  if (typeof tileSource.getTile === 'function') {\r\n    renderer = createTileRenderer(tileSource);\r\n  } else if (typeof imageSource.getImage === 'function') {\r\n    renderer = createImageRenderer(imageSource);\r\n  } else if (layer.getType() === LayerType.TILE) {\r\n    renderer = new CanvasTileLayerRenderer(/** @type {import(\"../layer/Tile.js\").default} */ (layer));\r\n  } else if (layer.getType() == LayerType.IMAGE || layer.getType() == LayerType.VECTOR) {\r\n    renderer = new CanvasImageLayerRenderer(/** @type {import(\"../layer/Image.js\").default} */ (layer));\r\n  }\r\n  return renderer;\r\n}\r\n\r\n\r\n/**\r\n * Create an image renderer for the provided source.\r\n * @param {import(\"./Image.js\").default} source The source.\r\n * @return {import(\"../renderer/canvas/Layer.js\").default} The renderer.\r\n */\r\nfunction createImageRenderer(source) {\r\n  var layer = new ImageLayer({source: source});\r\n  return new CanvasImageLayerRenderer(layer);\r\n}\r\n\r\n\r\n/**\r\n * Create a tile renderer for the provided source.\r\n * @param {import(\"./Tile.js\").default} source The source.\r\n * @return {import(\"../renderer/canvas/Layer.js\").default} The renderer.\r\n */\r\nfunction createTileRenderer(source) {\r\n  var layer = new TileLayer({source: source});\r\n  return new CanvasTileLayerRenderer(layer);\r\n}\r\n\r\n\r\nexport default RasterSource;\r\n\r\n//# sourceMappingURL=Raster.js.map","/**\r\n * @module ol/source/Stamen\r\n */\r\n\r\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from './OSM.js';\r\nimport XYZ from './XYZ.js';\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Array<string>}\r\n */\r\nvar ATTRIBUTIONS = [\r\n  'Map tiles by <a href=\"https://stamen.com/\">Stamen Design</a>, ' +\r\n        'under <a href=\"https://creativecommons.org/licenses/by/3.0/\">CC BY' +\r\n        ' 3.0</a>.',\r\n  OSM_ATTRIBUTION\r\n];\r\n\r\n\r\n/**\r\n * @type {Object<string, {extension: string, opaque: boolean}>}\r\n */\r\nvar LayerConfig = {\r\n  'terrain': {\r\n    extension: 'jpg',\r\n    opaque: true\r\n  },\r\n  'terrain-background': {\r\n    extension: 'jpg',\r\n    opaque: true\r\n  },\r\n  'terrain-labels': {\r\n    extension: 'png',\r\n    opaque: false\r\n  },\r\n  'terrain-lines': {\r\n    extension: 'png',\r\n    opaque: false\r\n  },\r\n  'toner-background': {\r\n    extension: 'png',\r\n    opaque: true\r\n  },\r\n  'toner': {\r\n    extension: 'png',\r\n    opaque: true\r\n  },\r\n  'toner-hybrid': {\r\n    extension: 'png',\r\n    opaque: false\r\n  },\r\n  'toner-labels': {\r\n    extension: 'png',\r\n    opaque: false\r\n  },\r\n  'toner-lines': {\r\n    extension: 'png',\r\n    opaque: false\r\n  },\r\n  'toner-lite': {\r\n    extension: 'png',\r\n    opaque: true\r\n  },\r\n  'watercolor': {\r\n    extension: 'jpg',\r\n    opaque: true\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\r\n */\r\nvar ProviderConfig = {\r\n  'terrain': {\r\n    minZoom: 4,\r\n    maxZoom: 18\r\n  },\r\n  'toner': {\r\n    minZoom: 0,\r\n    maxZoom: 20\r\n  },\r\n  'watercolor': {\r\n    minZoom: 1,\r\n    maxZoom: 16\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [cacheSize=2048] Cache size.\r\n * @property {string} layer Layer name.\r\n * @property {number} [minZoom] Minimum zoom.\r\n * @property {number} [maxZoom] Maximum zoom.\r\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\r\n * Higher values can increase reprojection performance, but decrease precision.\r\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\r\n * Optional function to load a tile given a URL. The default is\r\n * ```js\r\n * function(imageTile, src) {\r\n *   imageTile.getImage().src = src;\r\n * };\r\n * ```\r\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\r\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Layer source for the Stamen tile server.\r\n * @api\r\n */\r\nvar Stamen = /*@__PURE__*/(function (XYZ) {\n  function Stamen(options) {\r\n    var i = options.layer.indexOf('-');\r\n    var provider = i == -1 ? options.layer : options.layer.slice(0, i);\r\n    var providerConfig = ProviderConfig[provider];\r\n\r\n    var layerConfig = LayerConfig[options.layer];\r\n\r\n    var url = options.url !== undefined ? options.url :\r\n      'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' + options.layer +\r\n        '/{z}/{x}/{y}.' + layerConfig.extension;\r\n\r\n    XYZ.call(this, {\r\n      attributions: ATTRIBUTIONS,\r\n      cacheSize: options.cacheSize,\r\n      crossOrigin: 'anonymous',\r\n      maxZoom: options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\r\n      minZoom: options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\r\n      opaque: layerConfig.opaque,\r\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\r\n      tileLoadFunction: options.tileLoadFunction,\r\n      url: url,\r\n      wrapX: options.wrapX\r\n    });\r\n\r\n  }\n\n  if ( XYZ ) Stamen.__proto__ = XYZ;\n  Stamen.prototype = Object.create( XYZ && XYZ.prototype );\n  Stamen.prototype.constructor = Stamen;\n\n  return Stamen;\n}(XYZ));\r\n\r\nexport default Stamen;\r\n\r\n//# sourceMappingURL=Stamen.js.map","/**\r\n * @module ol/source/TileArcGISRest\r\n */\r\n\r\nimport {createEmpty} from '../extent.js';\r\nimport {modulo} from '../math.js';\r\nimport {assign} from '../obj.js';\r\nimport {toSize, scale as scaleSize} from '../size.js';\r\nimport TileImage from './TileImage.js';\r\nimport {hash as tileCoordHash} from '../tilecoord.js';\r\nimport {appendParams} from '../uri.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {number} [cacheSize=2048] Cache size.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.\r\n * Note that you must provide a `crossOrigin` value if you are using the WebGL renderer\r\n * or if you want to access pixel data with the Canvas renderer.  See\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image\r\n * for more detail.\r\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\r\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\r\n * default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`,\r\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\r\n * override the default service layer visibility. See\r\n * http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/\r\n * for further reference.\r\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\r\n * tilesize and extent supported by the server.\r\n * If this is not defined, a default grid will be used: if there is a projection\r\n * extent, the grid will be based on that; if not, a grid based on a global\r\n * extent with origin at 0,0 will be used.\r\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\r\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\r\n * Higher values can increase reprojection performance, but decrease precision.\r\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\r\n * The default is\r\n * ```js\r\n * function(imageTile, src) {\r\n *   imageTile.getImage().src = src;\r\n * };\r\n * ```\r\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\r\n * url should include /MapServer or /ImageServer.\r\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\r\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\r\n * transition, pass `transition: 0`.\r\n * @property {Array<string>} urls ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\r\n * Service supports multiple urls for export requests.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Layer source for tile data from ArcGIS Rest services. Map and Image\r\n * Services are supported.\r\n *\r\n * For cached ArcGIS services, better performance is available using the\r\n * {@link module:ol/source/XYZ~XYZ} data source.\r\n * @api\r\n */\r\nvar TileArcGISRest = /*@__PURE__*/(function (TileImage) {\n  function TileArcGISRest(opt_options) {\r\n\r\n    var options = opt_options || /** @type {Options} */ ({});\r\n\r\n    TileImage.call(this, {\r\n      attributions: options.attributions,\r\n      cacheSize: options.cacheSize,\r\n      crossOrigin: options.crossOrigin,\r\n      projection: options.projection,\r\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\r\n      tileGrid: options.tileGrid,\r\n      tileLoadFunction: options.tileLoadFunction,\r\n      tileUrlFunction: tileUrlFunction,\r\n      url: options.url,\r\n      urls: options.urls,\r\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\r\n      transition: options.transition\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object}\r\n     */\r\n    this.params_ = options.params || {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../extent.js\").Extent}\r\n     */\r\n    this.tmpExtent_ = createEmpty();\r\n\r\n    this.setKey(this.getKeyForParams_());\r\n  }\n\n  if ( TileImage ) TileArcGISRest.__proto__ = TileImage;\n  TileArcGISRest.prototype = Object.create( TileImage && TileImage.prototype );\n  TileArcGISRest.prototype.constructor = TileArcGISRest;\r\n\r\n  /**\r\n   * @private\r\n   * @return {string} The key for the current params.\r\n   */\r\n  TileArcGISRest.prototype.getKeyForParams_ = function getKeyForParams_ () {\r\n    var i = 0;\r\n    var res = [];\r\n    for (var key in this.params_) {\r\n      res[i++] = key + '-' + this.params_[key];\r\n    }\r\n    return res.join('/');\r\n  };\r\n\r\n  /**\r\n   * Get the user-provided params, i.e. those passed to the constructor through\r\n   * the \"params\" option, and possibly updated using the updateParams method.\r\n   * @return {Object} Params.\r\n   * @api\r\n   */\r\n  TileArcGISRest.prototype.getParams = function getParams () {\r\n    return this.params_;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\r\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @param {Object} params Params.\r\n   * @return {string|undefined} Request URL.\r\n   * @private\r\n   */\r\n  TileArcGISRest.prototype.getRequestUrl_ = function getRequestUrl_ (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\r\n\r\n    var urls = this.urls;\r\n    if (!urls) {\r\n      return undefined;\r\n    }\r\n\r\n    // ArcGIS Server only wants the numeric portion of the projection ID.\r\n    var srid = projection.getCode().split(':').pop();\r\n\r\n    params['SIZE'] = tileSize[0] + ',' + tileSize[1];\r\n    params['BBOX'] = tileExtent.join(',');\r\n    params['BBOXSR'] = srid;\r\n    params['IMAGESR'] = srid;\r\n    params['DPI'] = Math.round(\r\n      params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio\r\n    );\r\n\r\n    var url;\r\n    if (urls.length == 1) {\r\n      url = urls[0];\r\n    } else {\r\n      var index = modulo(tileCoordHash(tileCoord), urls.length);\r\n      url = urls[index];\r\n    }\r\n\r\n    var modifiedUrl = url\r\n      .replace(/MapServer\\/?$/, 'MapServer/export')\r\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\r\n    return appendParams(modifiedUrl, params);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  TileArcGISRest.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\r\n    return /** @type {number} */ (pixelRatio);\r\n  };\r\n\r\n  /**\r\n   * Update the user-provided params.\r\n   * @param {Object} params Params.\r\n   * @api\r\n   */\r\n  TileArcGISRest.prototype.updateParams = function updateParams (params) {\r\n    assign(this.params_, params);\r\n    this.setKey(this.getKeyForParams_());\r\n  };\n\n  return TileArcGISRest;\n}(TileImage));\r\n\r\n/**\r\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\r\n * @param {number} pixelRatio The pixel ratio\r\n * @param {import(\"../proj/Projection.js\").default} projection The projection\r\n * @return {string|undefined} The tile URL\r\n * @this {TileArcGISRest}\r\n */\r\nfunction tileUrlFunction(tileCoord, pixelRatio, projection) {\r\n\r\n  var tileGrid = this.getTileGrid();\r\n  if (!tileGrid) {\r\n    tileGrid = this.getTileGridForProjection(projection);\r\n  }\r\n\r\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\r\n    return undefined;\r\n  }\r\n\r\n  var tileExtent = tileGrid.getTileCoordExtent(\r\n    tileCoord, this.tmpExtent_);\r\n  var tileSize = toSize(\r\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\r\n\r\n  if (pixelRatio != 1) {\r\n    tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\r\n  }\r\n\r\n  // Apply default params and override with user specified values.\r\n  var baseParams = {\r\n    'F': 'image',\r\n    'FORMAT': 'PNG32',\r\n    'TRANSPARENT': true\r\n  };\r\n  assign(baseParams, this.params_);\r\n\r\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\r\n    pixelRatio, projection, baseParams);\r\n}\r\n\r\n\r\nexport default TileArcGISRest;\r\n\r\n//# sourceMappingURL=TileArcGISRest.js.map","/**\r\n * @module ol/source/TileDebug\r\n */\r\n\r\nimport Tile from '../Tile.js';\r\nimport TileState from '../TileState.js';\r\nimport {createCanvasContext2D} from '../dom.js';\r\nimport {toSize} from '../size.js';\r\nimport TileSource from './Tile.js';\r\nimport {getKeyZXY} from '../tilecoord.js';\r\n\r\n\r\nvar LabeledTile = /*@__PURE__*/(function (Tile) {\n  function LabeledTile(tileCoord, tileSize, text) {\r\n\r\n    Tile.call(this, tileCoord, TileState.LOADED);\r\n\r\n    /**\r\n    * @private\r\n    * @type {import(\"../size.js\").Size}\r\n    */\r\n    this.tileSize_ = tileSize;\r\n\r\n    /**\r\n    * @private\r\n    * @type {string}\r\n    */\r\n    this.text_ = text;\r\n\r\n    /**\r\n    * @private\r\n    * @type {HTMLCanvasElement}\r\n    */\r\n    this.canvas_ = null;\r\n\r\n  }\n\n  if ( Tile ) LabeledTile.__proto__ = Tile;\n  LabeledTile.prototype = Object.create( Tile && Tile.prototype );\n  LabeledTile.prototype.constructor = LabeledTile;\r\n\r\n  /**\r\n  * Get the image element for this tile.\r\n  * @return {HTMLCanvasElement} Image.\r\n  */\r\n  LabeledTile.prototype.getImage = function getImage () {\r\n    if (this.canvas_) {\r\n      return this.canvas_;\r\n    } else {\r\n      var tileSize = this.tileSize_;\r\n      var context = createCanvasContext2D(tileSize[0], tileSize[1]);\r\n\r\n      context.strokeStyle = 'black';\r\n      context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\r\n\r\n      context.fillStyle = 'black';\r\n      context.textAlign = 'center';\r\n      context.textBaseline = 'middle';\r\n      context.font = '24px sans-serif';\r\n      context.fillText(this.text_, tileSize[0] / 2, tileSize[1] / 2);\r\n\r\n      this.canvas_ = context.canvas;\r\n      return context.canvas;\r\n    }\r\n  };\r\n\r\n  /**\r\n  * @override\r\n  */\r\n  LabeledTile.prototype.load = function load () {};\n\n  return LabeledTile;\n}(Tile));\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\r\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\r\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * A pseudo tile source, which does not fetch tiles from a server, but renders\r\n * a grid outline for the tile grid/projection along with the coordinates for\r\n * each tile. See examples/canvas-tiles for an example.\r\n *\r\n * Uses Canvas context2d, so requires Canvas support.\r\n * @api\r\n */\r\nvar TileDebug = /*@__PURE__*/(function (TileSource) {\n  function TileDebug(options) {\r\n\r\n    TileSource.call(this, {\r\n      opaque: false,\r\n      projection: options.projection,\r\n      tileGrid: options.tileGrid,\r\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\r\n    });\r\n\r\n  }\n\n  if ( TileSource ) TileDebug.__proto__ = TileSource;\n  TileDebug.prototype = Object.create( TileSource && TileSource.prototype );\n  TileDebug.prototype.constructor = TileDebug;\r\n\r\n  /**\r\n  * @inheritDoc\r\n  */\r\n  TileDebug.prototype.getTile = function getTile (z, x, y) {\r\n    var tileCoordKey = getKeyZXY(z, x, y);\r\n    if (this.tileCache.containsKey(tileCoordKey)) {\r\n      return /** @type {!LabeledTile} */ (this.tileCache.get(tileCoordKey));\r\n    } else {\r\n      var tileSize = toSize(this.tileGrid.getTileSize(z));\r\n      var tileCoord = [z, x, y];\r\n      var textTileCoord = this.getTileCoordForTileUrlFunction(tileCoord);\r\n      var text = !textTileCoord ? '' :\r\n        this.getTileCoordForTileUrlFunction(textTileCoord).toString();\r\n      var tile = new LabeledTile(tileCoord, tileSize, text);\r\n      this.tileCache.set(tileCoordKey, tile);\r\n      return tile;\r\n    }\r\n  };\n\n  return TileDebug;\n}(TileSource));\r\n\r\n\r\nexport default TileDebug;\r\n\r\n//# sourceMappingURL=TileDebug.js.map","/**\r\n * @module ol/source/TileJSON\r\n */\r\n// FIXME check order of async callbacks\r\n\r\n/**\r\n * See http://mapbox.com/developers/api/.\r\n */\r\n\r\n\r\nimport {createFromTemplates} from '../tileurlfunction.js';\r\nimport {assert} from '../asserts.js';\r\nimport {applyTransform, intersects} from '../extent.js';\r\nimport {jsonp as requestJSONP} from '../net.js';\r\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\r\nimport SourceState from './State.js';\r\nimport TileImage from './TileImage.js';\r\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Config\r\n * @property {string} [name] The name.\r\n * @property {string} [description] The description.\r\n * @property {string} [version] The version.\r\n * @property {string} [attribution] The attribution.\r\n * @property {string} [template] The template.\r\n * @property {string} [legend] The legend.\r\n * @property {string} [scheme] The scheme.\r\n * @property {Array<string>} tiles The tile URL templates.\r\n * @property {Array<string>} [grids] Optional grids.\r\n * @property {number} [minzoom] Minimum zoom level.\r\n * @property {number} [maxzoom] Maximum zoom level.\r\n * @property {Array<number>} [bounds] Optional bounds.\r\n * @property {Array<number>} [center] Optional center.\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {number} [cacheSize=2048] Cache size.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\r\n * access pixel data with the Canvas renderer.  See\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\r\n * Useful when the server does not support CORS..\r\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\r\n * Higher values can increase reprojection performance, but decrease precision.\r\n * @property {Config} [tileJSON] TileJSON configuration for this source.\r\n * If not provided, `url` must be configured.\r\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\r\n * ```js\r\n * function(imageTile, src) {\r\n *   imageTile.getImage().src = src;\r\n * };\r\n * ```\r\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\r\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\r\n * @property {number} [transition] Duration of the opacity transition for rendering.\r\n * To disable the opacity transition, pass `transition: 0`.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Layer source for tile data in TileJSON format.\r\n * @api\r\n */\r\nvar TileJSON = /*@__PURE__*/(function (TileImage) {\n  function TileJSON(options) {\r\n    TileImage.call(this, {\r\n      attributions: options.attributions,\r\n      cacheSize: options.cacheSize,\r\n      crossOrigin: options.crossOrigin,\r\n      projection: getProjection('EPSG:3857'),\r\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\r\n      state: SourceState.LOADING,\r\n      tileLoadFunction: options.tileLoadFunction,\r\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\r\n      transition: options.transition\r\n    });\r\n\r\n    /**\r\n     * @type {Config}\r\n     * @private\r\n     */\r\n    this.tileJSON_ = null;\r\n\r\n\r\n    if (options.url) {\r\n      if (options.jsonp) {\r\n        requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\r\n          this.handleTileJSONError.bind(this));\r\n      } else {\r\n        var client = new XMLHttpRequest();\r\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\r\n        client.addEventListener('error', this.onXHRError_.bind(this));\r\n        client.open('GET', options.url);\r\n        client.send();\r\n      }\r\n    } else if (options.tileJSON) {\r\n      this.handleTileJSONResponse(options.tileJSON);\r\n    } else {\r\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\r\n    }\r\n\r\n  }\n\n  if ( TileImage ) TileJSON.__proto__ = TileImage;\n  TileJSON.prototype = Object.create( TileImage && TileImage.prototype );\n  TileJSON.prototype.constructor = TileJSON;\r\n\r\n  /**\r\n   * @private\r\n   * @param {Event} event The load event.\r\n   */\r\n  TileJSON.prototype.onXHRLoad_ = function onXHRLoad_ (event) {\r\n    var client = /** @type {XMLHttpRequest} */ (event.target);\r\n    // status will be 0 for file:// urls\r\n    if (!client.status || client.status >= 200 && client.status < 300) {\r\n      var response;\r\n      try {\r\n        response = /** @type {TileJSON} */(JSON.parse(client.responseText));\r\n      } catch (err) {\r\n        this.handleTileJSONError();\r\n        return;\r\n      }\r\n      this.handleTileJSONResponse(response);\r\n    } else {\r\n      this.handleTileJSONError();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @param {Event} event The error event.\r\n   */\r\n  TileJSON.prototype.onXHRError_ = function onXHRError_ (event) {\r\n    this.handleTileJSONError();\r\n  };\r\n\r\n  /**\r\n   * @return {Config} The tilejson object.\r\n   * @api\r\n   */\r\n  TileJSON.prototype.getTileJSON = function getTileJSON () {\r\n    return this.tileJSON_;\r\n  };\r\n\r\n  /**\r\n   * @protected\r\n   * @param {Config} tileJSON Tile JSON.\r\n   */\r\n  TileJSON.prototype.handleTileJSONResponse = function handleTileJSONResponse (tileJSON) {\r\n\r\n    var epsg4326Projection = getProjection('EPSG:4326');\r\n\r\n    var sourceProjection = this.getProjection();\r\n    var extent;\r\n    if (tileJSON['bounds'] !== undefined) {\r\n      var transform = getTransformFromProjections(\r\n        epsg4326Projection, sourceProjection);\r\n      extent = applyTransform(tileJSON['bounds'], transform);\r\n    }\r\n\r\n    var minZoom = tileJSON['minzoom'] || 0;\r\n    var maxZoom = tileJSON['maxzoom'] || 22;\r\n    var tileGrid = createXYZ({\r\n      extent: extentFromProjection(sourceProjection),\r\n      maxZoom: maxZoom,\r\n      minZoom: minZoom\r\n    });\r\n    this.tileGrid = tileGrid;\r\n\r\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\r\n\r\n    if (tileJSON['attribution'] !== undefined && !this.getAttributions()) {\r\n      var attributionExtent = extent !== undefined ?\r\n        extent : epsg4326Projection.getExtent();\r\n\r\n      this.setAttributions(function(frameState) {\r\n        if (intersects(attributionExtent, frameState.extent)) {\r\n          return [tileJSON['attribution']];\r\n        }\r\n        return null;\r\n      });\r\n\r\n    }\r\n    this.tileJSON_ = tileJSON;\r\n    this.setState(SourceState.READY);\r\n\r\n  };\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  TileJSON.prototype.handleTileJSONError = function handleTileJSONError () {\r\n    this.setState(SourceState.ERROR);\r\n  };\n\n  return TileJSON;\n}(TileImage));\r\n\r\n\r\nexport default TileJSON;\r\n\r\n//# sourceMappingURL=TileJSON.js.map","/**\r\n * @module ol/source/TileWMS\r\n */\r\n\r\nimport {DEFAULT_WMS_VERSION} from './common.js';\r\n\r\nimport {assert} from '../asserts.js';\r\nimport {buffer, createEmpty} from '../extent.js';\r\nimport {assign} from '../obj.js';\r\nimport {modulo} from '../math.js';\r\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\r\nimport {calculateSourceResolution} from '../reproj.js';\r\nimport {toSize, buffer as bufferSize, scale as scaleSize} from '../size.js';\r\nimport TileImage from './TileImage.js';\r\nimport WMSServerType from './WMSServerType.js';\r\nimport {hash as tileCoordHash} from '../tilecoord.js';\r\nimport {compareVersions} from '../string.js';\r\nimport {appendParams} from '../uri.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {number} [cacheSize=2048] Cache size.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\r\n * access pixel data with the Canvas renderer.  See\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {Object<string,*>} params WMS request parameters.\r\n * At least a `LAYERS` param is required. `STYLES` is\r\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\r\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\r\n * @property {number} [gutter=0]\r\n * The size in pixels of the gutter around image tiles to ignore. By setting\r\n * this property to a non-zero value, images will be requested that are wider\r\n * and taller than the tile size by a value of `2 x gutter`.\r\n * Using a non-zero value allows artifacts of rendering at tile edges to be\r\n * ignored. If you control the WMS service it is recommended to address\r\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\r\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\r\n * this. See http://mapserver.org/output/tile_mode.html.\r\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\r\n * the image from the remote server.\r\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\r\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\r\n * Higher values can increase reprojection performance, but decrease precision.\r\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\r\n * Default is {@link module:ol/ImageTile~ImageTile}.\r\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\r\n * tilesize and extent supported by the server.\r\n * If this is not defined, a default grid will be used: if there is a projection\r\n * extent, the grid will be based on that; if not, a grid based on a global\r\n * extent with origin at 0,0 will be used..\r\n * @property {import(\"./WMSServerType.js\").default|string} [serverType]\r\n * The type of the remote WMS server. Currently only used when `hidpi` is\r\n * `true`.\r\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\r\n * ```js\r\n * function(imageTile, src) {\r\n *   imageTile.getImage().src = src;\r\n * };\r\n * ```\r\n * @property {string} [url] WMS service URL.\r\n * @property {Array<string>} [urls] WMS service urls.\r\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\r\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\r\n * When set to `false`, only one world\r\n * will be rendered. When `true`, tiles will be requested for one world only,\r\n * but they will be wrapped horizontally to render multiple worlds.\r\n * @property {number} [transition] Duration of the opacity transition for rendering.\r\n * To disable the opacity transition, pass `transition: 0`.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Layer source for tile data from WMS servers.\r\n * @api\r\n */\r\nvar TileWMS = /*@__PURE__*/(function (TileImage) {\n  function TileWMS(opt_options) {\r\n\r\n    var options = opt_options || /** @type {Options} */ ({});\r\n\r\n    var params = options.params || {};\r\n\r\n    var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\r\n\r\n    TileImage.call(this, {\r\n      attributions: options.attributions,\r\n      cacheSize: options.cacheSize,\r\n      crossOrigin: options.crossOrigin,\r\n      opaque: !transparent,\r\n      projection: options.projection,\r\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\r\n      tileClass: options.tileClass,\r\n      tileGrid: options.tileGrid,\r\n      tileLoadFunction: options.tileLoadFunction,\r\n      tileUrlFunction: tileUrlFunction,\r\n      url: options.url,\r\n      urls: options.urls,\r\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\r\n      transition: options.transition\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object}\r\n     */\r\n    this.params_ = params;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.v13_ = true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./WMSServerType.js\").default|undefined}\r\n     */\r\n    this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../extent.js\").Extent}\r\n     */\r\n    this.tmpExtent_ = createEmpty();\r\n\r\n    this.updateV13_();\r\n    this.setKey(this.getKeyForParams_());\r\n\r\n  }\n\n  if ( TileImage ) TileWMS.__proto__ = TileImage;\n  TileWMS.prototype = Object.create( TileImage && TileImage.prototype );\n  TileWMS.prototype.constructor = TileWMS;\r\n\r\n  /**\r\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\r\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\r\n   * constructed.\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {number} resolution Resolution.\r\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\r\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\r\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\r\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\r\n   *     specified here.\r\n   * @return {string|undefined} GetFeatureInfo URL.\r\n   * @api\r\n   */\r\n  TileWMS.prototype.getGetFeatureInfoUrl = function getGetFeatureInfoUrl (coordinate, resolution, projection, params) {\r\n    var projectionObj = getProjection(projection);\r\n    var sourceProjectionObj = this.getProjection();\r\n\r\n    var tileGrid = this.getTileGrid();\r\n    if (!tileGrid) {\r\n      tileGrid = this.getTileGridForProjection(projectionObj);\r\n    }\r\n\r\n    var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\r\n\r\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\r\n      return undefined;\r\n    }\r\n\r\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\r\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\r\n    var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\r\n\r\n\r\n    var gutter = this.gutter_;\r\n    if (gutter !== 0) {\r\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\r\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\r\n    }\r\n\r\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\r\n      tileResolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\r\n      tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\r\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\r\n    }\r\n\r\n    var baseParams = {\r\n      'SERVICE': 'WMS',\r\n      'VERSION': DEFAULT_WMS_VERSION,\r\n      'REQUEST': 'GetFeatureInfo',\r\n      'FORMAT': 'image/png',\r\n      'TRANSPARENT': true,\r\n      'QUERY_LAYERS': this.params_['LAYERS']\r\n    };\r\n    assign(baseParams, this.params_, params);\r\n\r\n    var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\r\n    var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\r\n\r\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\r\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\r\n\r\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\r\n      1, sourceProjectionObj || projectionObj, baseParams);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  TileWMS.prototype.getGutter = function getGutter () {\r\n    return this.gutter_;\r\n  };\r\n\r\n  /**\r\n   * Get the user-provided params, i.e. those passed to the constructor through\r\n   * the \"params\" option, and possibly updated using the updateParams method.\r\n   * @return {Object} Params.\r\n   * @api\r\n   */\r\n  TileWMS.prototype.getParams = function getParams () {\r\n    return this.params_;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\r\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @param {Object} params Params.\r\n   * @return {string|undefined} Request URL.\r\n   * @private\r\n   */\r\n  TileWMS.prototype.getRequestUrl_ = function getRequestUrl_ (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\r\n\r\n    var urls = this.urls;\r\n    if (!urls) {\r\n      return undefined;\r\n    }\r\n\r\n    params['WIDTH'] = tileSize[0];\r\n    params['HEIGHT'] = tileSize[1];\r\n\r\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\r\n\r\n    if (!('STYLES' in this.params_)) {\r\n      params['STYLES'] = '';\r\n    }\r\n\r\n    if (pixelRatio != 1) {\r\n      switch (this.serverType_) {\r\n        case WMSServerType.GEOSERVER:\r\n          var dpi = (90 * pixelRatio + 0.5) | 0;\r\n          if ('FORMAT_OPTIONS' in params) {\r\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\r\n          } else {\r\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\r\n          }\r\n          break;\r\n        case WMSServerType.MAPSERVER:\r\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\r\n          break;\r\n        case WMSServerType.CARMENTA_SERVER:\r\n        case WMSServerType.QGIS:\r\n          params['DPI'] = 90 * pixelRatio;\r\n          break;\r\n        default:\r\n          assert(false, 52); // Unknown `serverType` configured\r\n          break;\r\n      }\r\n    }\r\n\r\n    var axisOrientation = projection.getAxisOrientation();\r\n    var bbox = tileExtent;\r\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\r\n      var tmp;\r\n      tmp = tileExtent[0];\r\n      bbox[0] = tileExtent[1];\r\n      bbox[1] = tmp;\r\n      tmp = tileExtent[2];\r\n      bbox[2] = tileExtent[3];\r\n      bbox[3] = tmp;\r\n    }\r\n    params['BBOX'] = bbox.join(',');\r\n\r\n    var url;\r\n    if (urls.length == 1) {\r\n      url = urls[0];\r\n    } else {\r\n      var index = modulo(tileCoordHash(tileCoord), urls.length);\r\n      url = urls[index];\r\n    }\r\n    return appendParams(url, params);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  TileWMS.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\r\n    return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\r\n    /** @type {number} */ (pixelRatio);\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   * @return {string} The key for the current params.\r\n   */\r\n  TileWMS.prototype.getKeyForParams_ = function getKeyForParams_ () {\r\n    var i = 0;\r\n    var res = [];\r\n    for (var key in this.params_) {\r\n      res[i++] = key + '-' + this.params_[key];\r\n    }\r\n    return res.join('/');\r\n  };\r\n\r\n  /**\r\n   * Update the user-provided params.\r\n   * @param {Object} params Params.\r\n   * @api\r\n   */\r\n  TileWMS.prototype.updateParams = function updateParams (params) {\r\n    assign(this.params_, params);\r\n    this.updateV13_();\r\n    this.setKey(this.getKeyForParams_());\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  TileWMS.prototype.updateV13_ = function updateV13_ () {\r\n    var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\r\n    this.v13_ = compareVersions(version, '1.3') >= 0;\r\n  };\n\n  return TileWMS;\n}(TileImage));\r\n\r\n/**\r\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\r\n * @param {number} pixelRatio The pixel ratio\r\n * @param {import(\"../proj/Projection.js\").default} projection The projection\r\n * @return {string|undefined} The tile URL\r\n * @this {TileWMS}\r\n */\r\nfunction tileUrlFunction(tileCoord, pixelRatio, projection) {\r\n\r\n  var tileGrid = this.getTileGrid();\r\n  if (!tileGrid) {\r\n    tileGrid = this.getTileGridForProjection(projection);\r\n  }\r\n\r\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\r\n    return undefined;\r\n  }\r\n\r\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\r\n    pixelRatio = 1;\r\n  }\r\n\r\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\r\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\r\n  var tileSize = toSize(\r\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\r\n\r\n  var gutter = this.gutter_;\r\n  if (gutter !== 0) {\r\n    tileSize = bufferSize(tileSize, gutter, this.tmpSize);\r\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\r\n  }\r\n\r\n  if (pixelRatio != 1) {\r\n    tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\r\n  }\r\n\r\n  var baseParams = {\r\n    'SERVICE': 'WMS',\r\n    'VERSION': DEFAULT_WMS_VERSION,\r\n    'REQUEST': 'GetMap',\r\n    'FORMAT': 'image/png',\r\n    'TRANSPARENT': true\r\n  };\r\n  assign(baseParams, this.params_);\r\n\r\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\r\n    pixelRatio, projection, baseParams);\r\n}\r\n\r\n\r\nexport default TileWMS;\r\n\r\n//# sourceMappingURL=TileWMS.js.map","/**\r\n * @module ol/source/UTFGrid\r\n */\r\n\r\nimport Tile from '../Tile.js';\r\nimport TileState from '../TileState.js';\r\nimport {createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\r\nimport {assert} from '../asserts.js';\r\nimport {listenOnce} from '../events.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {applyTransform, intersects} from '../extent.js';\r\nimport {jsonp as requestJSONP} from '../net.js';\r\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\r\nimport SourceState from './State.js';\r\nimport TileSource from './Tile.js';\r\nimport {getKeyZXY} from '../tilecoord.js';\r\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\r\n\r\n/**\r\n * @typedef {Object} UTFGridJSON\r\n * @property {Array<string>} grid The grid.\r\n * @property {Array<string>} keys The keys.\r\n * @property {Object<string, Object>} [data] Optional data.\r\n */\r\n\r\n\r\nexport var CustomTile = /*@__PURE__*/(function (Tile) {\n  function CustomTile(tileCoord, state, src, extent, preemptive, jsonp) {\r\n\r\n    Tile.call(this, tileCoord, state);\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.src_ = src;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../extent.js\").Extent}\r\n     */\r\n    this.extent_ = extent;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.preemptive_ = preemptive;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<string>}\r\n     */\r\n    this.grid_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<string>}\r\n     */\r\n    this.keys_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<string, Object>|undefined}\r\n     */\r\n    this.data_ = null;\r\n\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.jsonp_ = jsonp;\r\n\r\n  }\n\n  if ( Tile ) CustomTile.__proto__ = Tile;\n  CustomTile.prototype = Object.create( Tile && Tile.prototype );\n  CustomTile.prototype.constructor = CustomTile;\r\n\r\n  /**\r\n   * Get the image element for this tile.\r\n   * @return {HTMLImageElement} Image.\r\n   */\r\n  CustomTile.prototype.getImage = function getImage () {\r\n    return null;\r\n  };\r\n\r\n\r\n  /**\r\n   * Synchronously returns data at given coordinate (if available).\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @return {*} The data.\r\n   */\r\n  CustomTile.prototype.getData = function getData (coordinate) {\r\n    if (!this.grid_ || !this.keys_) {\r\n      return null;\r\n    }\r\n    var xRelative = (coordinate[0] - this.extent_[0]) /\r\n        (this.extent_[2] - this.extent_[0]);\r\n    var yRelative = (coordinate[1] - this.extent_[1]) /\r\n        (this.extent_[3] - this.extent_[1]);\r\n\r\n    var row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\r\n\r\n    if (typeof row !== 'string') {\r\n      return null;\r\n    }\r\n\r\n    var code = row.charCodeAt(Math.floor(xRelative * row.length));\r\n    if (code >= 93) {\r\n      code--;\r\n    }\r\n    if (code >= 35) {\r\n      code--;\r\n    }\r\n    code -= 32;\r\n\r\n    var data = null;\r\n    if (code in this.keys_) {\r\n      var id = this.keys_[code];\r\n      if (this.data_ && id in this.data_) {\r\n        data = this.data_[id];\r\n      } else {\r\n        data = id;\r\n      }\r\n    }\r\n    return data;\r\n  };\r\n\r\n\r\n  /**\r\n   * Calls the callback (synchronously by default) with the available data\r\n   * for given coordinate (or `null` if not yet loaded).\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {function(this: T, *)} callback Callback.\r\n   * @param {T=} opt_this The object to use as `this` in the callback.\r\n   * @param {boolean=} opt_request If `true` the callback is always async.\r\n   *                               The tile data is requested if not yet loaded.\r\n   * @template T\r\n   */\r\n  CustomTile.prototype.forDataAtCoordinate = function forDataAtCoordinate (coordinate, callback, opt_this, opt_request) {\r\n    if (this.state == TileState.IDLE && opt_request === true) {\r\n      listenOnce(this, EventType.CHANGE, function(e) {\r\n        callback.call(opt_this, this.getData(coordinate));\r\n      }, this);\r\n      this.loadInternal_();\r\n    } else {\r\n      if (opt_request === true) {\r\n        setTimeout(function() {\r\n          callback.call(opt_this, this.getData(coordinate));\r\n        }.bind(this), 0);\r\n      } else {\r\n        callback.call(opt_this, this.getData(coordinate));\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CustomTile.prototype.getKey = function getKey () {\r\n    return this.src_;\r\n  };\r\n\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  CustomTile.prototype.handleError_ = function handleError_ () {\r\n    this.state = TileState.ERROR;\r\n    this.changed();\r\n  };\r\n\r\n\r\n  /**\r\n   * @param {!UTFGridJSON} json UTFGrid data.\r\n   * @private\r\n   */\r\n  CustomTile.prototype.handleLoad_ = function handleLoad_ (json) {\r\n    this.grid_ = json['grid'];\r\n    this.keys_ = json['keys'];\r\n    this.data_ = json['data'];\r\n\r\n    this.state = TileState.EMPTY;\r\n    this.changed();\r\n  };\r\n\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  CustomTile.prototype.loadInternal_ = function loadInternal_ () {\r\n    if (this.state == TileState.IDLE) {\r\n      this.state = TileState.LOADING;\r\n      if (this.jsonp_) {\r\n        requestJSONP(this.src_, this.handleLoad_.bind(this),\r\n          this.handleError_.bind(this));\r\n      } else {\r\n        var client = new XMLHttpRequest();\r\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\r\n        client.addEventListener('error', this.onXHRError_.bind(this));\r\n        client.open('GET', this.src_);\r\n        client.send();\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  /**\r\n   * @private\r\n   * @param {Event} event The load event.\r\n   */\r\n  CustomTile.prototype.onXHRLoad_ = function onXHRLoad_ (event) {\r\n    var client = /** @type {XMLHttpRequest} */ (event.target);\r\n    // status will be 0 for file:// urls\r\n    if (!client.status || client.status >= 200 && client.status < 300) {\r\n      var response;\r\n      try {\r\n        response = /** @type {!UTFGridJSON} */(JSON.parse(client.responseText));\r\n      } catch (err) {\r\n        this.handleError_();\r\n        return;\r\n      }\r\n      this.handleLoad_(response);\r\n    } else {\r\n      this.handleError_();\r\n    }\r\n  };\r\n\r\n\r\n  /**\r\n   * @private\r\n   * @param {Event} event The error event.\r\n   */\r\n  CustomTile.prototype.onXHRError_ = function onXHRError_ (event) {\r\n    this.handleError_();\r\n  };\r\n\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  CustomTile.prototype.load = function load () {\r\n    if (this.preemptive_) {\r\n      this.loadInternal_();\r\n    }\r\n  };\n\n  return CustomTile;\n}(Tile));\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {boolean} [preemptive=true]\r\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\r\n * This improves the speed of response, but increases traffic.\r\n * Note that if set to `false`, you need to pass `true` as `opt_request`\r\n * to the `forDataAtCoordinateAndResolution` method otherwise no data\r\n * will ever be loaded.\r\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\r\n * Useful when the server does not support CORS..\r\n * @property {import(\"./TileJSON.js\").Config} [tileJSON] TileJSON configuration for this source.\r\n * If not provided, `url` must be configured.\r\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\r\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\r\n * @api\r\n */\r\nvar UTFGrid = /*@__PURE__*/(function (TileSource) {\n  function UTFGrid(options) {\r\n    TileSource.call(this, {\r\n      projection: getProjection('EPSG:3857'),\r\n      state: SourceState.LOADING\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.preemptive_ = options.preemptive !== undefined ?\r\n      options.preemptive : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!import(\"../Tile.js\").UrlFunction}\r\n     */\r\n    this.tileUrlFunction_ = nullTileUrlFunction;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|undefined}\r\n     */\r\n    this.template_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.jsonp_ = options.jsonp || false;\r\n\r\n    if (options.url) {\r\n      if (this.jsonp_) {\r\n        requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\r\n          this.handleTileJSONError.bind(this));\r\n      } else {\r\n        var client = new XMLHttpRequest();\r\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\r\n        client.addEventListener('error', this.onXHRError_.bind(this));\r\n        client.open('GET', options.url);\r\n        client.send();\r\n      }\r\n    } else if (options.tileJSON) {\r\n      this.handleTileJSONResponse(options.tileJSON);\r\n    } else {\r\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\r\n    }\r\n\r\n  }\n\n  if ( TileSource ) UTFGrid.__proto__ = TileSource;\n  UTFGrid.prototype = Object.create( TileSource && TileSource.prototype );\n  UTFGrid.prototype.constructor = UTFGrid;\r\n\r\n\r\n  /**\r\n   * @private\r\n   * @param {Event} event The load event.\r\n   */\r\n  UTFGrid.prototype.onXHRLoad_ = function onXHRLoad_ (event) {\r\n    var client = /** @type {XMLHttpRequest} */ (event.target);\r\n    // status will be 0 for file:// urls\r\n    if (!client.status || client.status >= 200 && client.status < 300) {\r\n      var response;\r\n      try {\r\n        response = /** @type {import(\"./TileJSON.js\").Config} */(JSON.parse(client.responseText));\r\n      } catch (err) {\r\n        this.handleTileJSONError();\r\n        return;\r\n      }\r\n      this.handleTileJSONResponse(response);\r\n    } else {\r\n      this.handleTileJSONError();\r\n    }\r\n  };\r\n\r\n\r\n  /**\r\n   * @private\r\n   * @param {Event} event The error event.\r\n   */\r\n  UTFGrid.prototype.onXHRError_ = function onXHRError_ (event) {\r\n    this.handleTileJSONError();\r\n  };\r\n\r\n\r\n  /**\r\n   * Return the template from TileJSON.\r\n   * @return {string|undefined} The template from TileJSON.\r\n   * @api\r\n   */\r\n  UTFGrid.prototype.getTemplate = function getTemplate () {\r\n    return this.template_;\r\n  };\r\n\r\n\r\n  /**\r\n   * Calls the callback (synchronously by default) with the available data\r\n   * for given coordinate and resolution (or `null` if not yet loaded or\r\n   * in case of an error).\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {number} resolution Resolution.\r\n   * @param {function(*)} callback Callback.\r\n   * @param {boolean=} opt_request If `true` the callback is always async.\r\n   *                               The tile data is requested if not yet loaded.\r\n   * @api\r\n   */\r\n  UTFGrid.prototype.forDataAtCoordinateAndResolution = function forDataAtCoordinateAndResolution (\r\n    coordinate, resolution, callback, opt_request) {\r\n    if (this.tileGrid) {\r\n      var tileCoord = this.tileGrid.getTileCoordForCoordAndResolution(\r\n        coordinate, resolution);\r\n      var tile = /** @type {!CustomTile} */(this.getTile(\r\n        tileCoord[0], tileCoord[1], tileCoord[2], 1, this.getProjection()));\r\n      tile.forDataAtCoordinate(coordinate, callback, null, opt_request);\r\n    } else {\r\n      if (opt_request === true) {\r\n        setTimeout(function() {\r\n          callback(null);\r\n        }, 0);\r\n      } else {\r\n        callback(null);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  UTFGrid.prototype.handleTileJSONError = function handleTileJSONError () {\r\n    this.setState(SourceState.ERROR);\r\n  };\r\n\r\n\r\n  /**\r\n   * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\r\n   * @protected\r\n   * @param {import(\"./TileJSON.js\").Config} tileJSON Tile JSON.\r\n   */\r\n  UTFGrid.prototype.handleTileJSONResponse = function handleTileJSONResponse (tileJSON) {\r\n\r\n    var epsg4326Projection = getProjection('EPSG:4326');\r\n\r\n    var sourceProjection = this.getProjection();\r\n    var extent;\r\n    if (tileJSON['bounds'] !== undefined) {\r\n      var transform = getTransformFromProjections(\r\n        epsg4326Projection, sourceProjection);\r\n      extent = applyTransform(tileJSON['bounds'], transform);\r\n    }\r\n\r\n    var minZoom = tileJSON['minzoom'] || 0;\r\n    var maxZoom = tileJSON['maxzoom'] || 22;\r\n    var tileGrid = createXYZ({\r\n      extent: extentFromProjection(sourceProjection),\r\n      maxZoom: maxZoom,\r\n      minZoom: minZoom\r\n    });\r\n    this.tileGrid = tileGrid;\r\n\r\n    this.template_ = tileJSON['template'];\r\n\r\n    var grids = tileJSON['grids'];\r\n    if (!grids) {\r\n      this.setState(SourceState.ERROR);\r\n      return;\r\n    }\r\n\r\n    this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\r\n\r\n    if (tileJSON['attribution'] !== undefined) {\r\n      var attributionExtent = extent !== undefined ?\r\n        extent : epsg4326Projection.getExtent();\r\n\r\n      this.setAttributions(function(frameState) {\r\n        if (intersects(attributionExtent, frameState.extent)) {\r\n          return [tileJSON['attribution']];\r\n        }\r\n        return null;\r\n      });\r\n    }\r\n\r\n    this.setState(SourceState.READY);\r\n\r\n  };\r\n\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  UTFGrid.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\r\n    var tileCoordKey = getKeyZXY(z, x, y);\r\n    if (this.tileCache.containsKey(tileCoordKey)) {\r\n      return (\r\n        /** @type {!import(\"../Tile.js\").default} */ (this.tileCache.get(tileCoordKey))\r\n      );\r\n    } else {\r\n      var tileCoord = [z, x, y];\r\n      var urlTileCoord =\r\n          this.getTileCoordForTileUrlFunction(tileCoord, projection);\r\n      var tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\r\n      var tile = new CustomTile(\r\n        tileCoord,\r\n        tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\r\n        tileUrl !== undefined ? tileUrl : '',\r\n        this.tileGrid.getTileCoordExtent(tileCoord),\r\n        this.preemptive_,\r\n        this.jsonp_);\r\n      this.tileCache.set(tileCoordKey, tile);\r\n      return tile;\r\n    }\r\n  };\r\n\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  UTFGrid.prototype.useTile = function useTile (z, x, y) {\r\n    var tileCoordKey = getKeyZXY(z, x, y);\r\n    if (this.tileCache.containsKey(tileCoordKey)) {\r\n      this.tileCache.get(tileCoordKey);\r\n    }\r\n  };\n\n  return UTFGrid;\n}(TileSource));\r\n\r\n\r\nexport default UTFGrid;\r\n\r\n//# sourceMappingURL=UTFGrid.js.map","/**\r\n * @module ol/VectorImageTile\r\n */\r\nimport {getUid} from './util.js';\r\nimport Tile from './Tile.js';\r\nimport TileState from './TileState.js';\r\nimport {createCanvasContext2D} from './dom.js';\r\nimport {listen, unlistenByKey} from './events.js';\r\nimport {getHeight, getIntersection, getWidth} from './extent.js';\r\nimport EventType from './events/EventType.js';\r\nimport {loadFeaturesXhr} from './featureloader.js';\r\nimport {VOID} from './functions.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} ReplayState\r\n * @property {boolean} dirty\r\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder\r\n * @property {number} renderedTileRevision\r\n * @property {number} renderedRevision\r\n */\r\n\r\n\r\nvar VectorImageTile = /*@__PURE__*/(function (Tile) {\n  function VectorImageTile(tileCoord, state, sourceRevision, format, tileLoadFunction,\r\n    urlTileCoord, tileUrlFunction, sourceTileGrid, tileGrid, sourceTiles,\r\n    pixelRatio, projection, tileClass, handleTileChange, zoom) {\r\n\r\n    Tile.call(this, tileCoord, state, {transition: 0});\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, CanvasRenderingContext2D>}\r\n     */\r\n    this.context_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./featureloader.js\").FeatureLoader}\r\n     */\r\n    this.loader_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, ReplayState>}\r\n     */\r\n    this.replayState_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<string, import(\"./VectorTile.js\").default>}\r\n     */\r\n    this.sourceTiles_ = sourceTiles;\r\n\r\n    /**\r\n     * Keys of source tiles used by this tile. Use with {@link #getTile}.\r\n     * @type {Array<string>}\r\n     */\r\n    this.tileKeys = [];\r\n\r\n    /**\r\n     * @type {import(\"./extent.js\").Extent}\r\n     */\r\n    this.extent = null;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.sourceRevision_ = sourceRevision;\r\n\r\n    /**\r\n     * @type {import(\"./tilecoord.js\").TileCoord}\r\n     */\r\n    this.wrappedTileCoord = urlTileCoord;\r\n\r\n    /**\r\n     * @type {Array<import(\"./events.js\").EventsKey>}\r\n     */\r\n    this.loadListenerKeys_ = [];\r\n\r\n    /**\r\n     * @type {Array<import(\"./events.js\").EventsKey>}\r\n     */\r\n    this.sourceTileListenerKeys_ = [];\r\n\r\n    if (urlTileCoord) {\r\n      var extent = this.extent = tileGrid.getTileCoordExtent(urlTileCoord);\r\n      var resolution = tileGrid.getResolution(zoom);\r\n      var sourceZ = sourceTileGrid.getZForResolution(resolution);\r\n      var useLoadedOnly = zoom != tileCoord[0];\r\n      var loadCount = 0;\r\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, function(sourceTileCoord) {\r\n        var sharedExtent = getIntersection(extent,\r\n          sourceTileGrid.getTileCoordExtent(sourceTileCoord));\r\n        var sourceExtent = sourceTileGrid.getExtent();\r\n        if (sourceExtent) {\r\n          sharedExtent = getIntersection(sharedExtent, sourceExtent, sharedExtent);\r\n        }\r\n        if (getWidth(sharedExtent) / resolution >= 0.5 &&\r\n            getHeight(sharedExtent) / resolution >= 0.5) {\r\n          // only include source tile if overlap is at least 1 pixel\r\n          ++loadCount;\r\n          var sourceTileKey = sourceTileCoord.toString();\r\n          var sourceTile = sourceTiles[sourceTileKey];\r\n          if (!sourceTile && !useLoadedOnly) {\r\n            var tileUrl = tileUrlFunction(sourceTileCoord, pixelRatio, projection);\r\n            sourceTile = sourceTiles[sourceTileKey] = new tileClass(sourceTileCoord,\r\n              tileUrl == undefined ? TileState.EMPTY : TileState.IDLE,\r\n              tileUrl == undefined ? '' : tileUrl,\r\n              format, tileLoadFunction);\r\n            this.sourceTileListenerKeys_.push(\r\n              listen(sourceTile, EventType.CHANGE, handleTileChange));\r\n          }\r\n          if (sourceTile && (!useLoadedOnly || sourceTile.getState() == TileState.LOADED)) {\r\n            sourceTile.consumers++;\r\n            this.tileKeys.push(sourceTileKey);\r\n          }\r\n        }\r\n      }.bind(this));\r\n\r\n      if (useLoadedOnly && loadCount == this.tileKeys.length) {\r\n        this.finishLoading_();\r\n      }\r\n\r\n      if (zoom <= tileCoord[0] && this.state != TileState.LOADED) {\r\n        while (zoom > tileGrid.getMinZoom()) {\r\n          var tile = new VectorImageTile(tileCoord, state, sourceRevision,\r\n            format, tileLoadFunction, urlTileCoord, tileUrlFunction,\r\n            sourceTileGrid, tileGrid, sourceTiles, pixelRatio, projection,\r\n            tileClass, VOID, --zoom);\r\n          if (tile.state == TileState.LOADED) {\r\n            this.interimTile = tile;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n  }\n\n  if ( Tile ) VectorImageTile.__proto__ = Tile;\n  VectorImageTile.prototype = Object.create( Tile && Tile.prototype );\n  VectorImageTile.prototype.constructor = VectorImageTile;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  VectorImageTile.prototype.disposeInternal = function disposeInternal () {\r\n    this.state = TileState.ABORT;\r\n    this.changed();\r\n    if (this.interimTile) {\r\n      this.interimTile.dispose();\r\n    }\r\n\r\n    for (var i = 0, ii = this.tileKeys.length; i < ii; ++i) {\r\n      var sourceTileKey = this.tileKeys[i];\r\n      var sourceTile = this.getTile(sourceTileKey);\r\n      sourceTile.consumers--;\r\n      if (sourceTile.consumers == 0) {\r\n        delete this.sourceTiles_[sourceTileKey];\r\n        sourceTile.dispose();\r\n      }\r\n    }\r\n    this.tileKeys.length = 0;\r\n    this.sourceTiles_ = null;\r\n    this.loadListenerKeys_.forEach(unlistenByKey);\r\n    this.loadListenerKeys_.length = 0;\r\n    this.sourceTileListenerKeys_.forEach(unlistenByKey);\r\n    this.sourceTileListenerKeys_.length = 0;\r\n    Tile.prototype.disposeInternal.call(this);\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\r\n   * @return {CanvasRenderingContext2D} The rendering context.\r\n   */\r\n  VectorImageTile.prototype.getContext = function getContext (layer) {\r\n    var key = getUid(layer);\r\n    if (!(key in this.context_)) {\r\n      this.context_[key] = createCanvasContext2D();\r\n    }\r\n    return this.context_[key];\r\n  };\r\n\r\n  /**\r\n   * Get the Canvas for this tile.\r\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\r\n   * @return {HTMLCanvasElement} Canvas.\r\n   */\r\n  VectorImageTile.prototype.getImage = function getImage (layer) {\r\n    return this.getReplayState(layer).renderedTileRevision == -1 ?\r\n      null : this.getContext(layer).canvas;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\r\n   * @return {ReplayState} The replay state.\r\n   */\r\n  VectorImageTile.prototype.getReplayState = function getReplayState (layer) {\r\n    var key = getUid(layer);\r\n    if (!(key in this.replayState_)) {\r\n      this.replayState_[key] = {\r\n        dirty: false,\r\n        renderedRenderOrder: null,\r\n        renderedRevision: -1,\r\n        renderedTileRevision: -1\r\n      };\r\n    }\r\n    return this.replayState_[key];\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  VectorImageTile.prototype.getKey = function getKey () {\r\n    return this.tileKeys.join('/') + '-' + this.sourceRevision_;\r\n  };\r\n\r\n  /**\r\n   * @param {string} tileKey Key (tileCoord) of the source tile.\r\n   * @return {import(\"./VectorTile.js\").default} Source tile.\r\n   */\r\n  VectorImageTile.prototype.getTile = function getTile (tileKey) {\r\n    return this.sourceTiles_[tileKey];\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  VectorImageTile.prototype.load = function load () {\r\n    // Source tiles with LOADED state - we just count them because once they are\r\n    // loaded, we're no longer listening to state changes.\r\n    var leftToLoad = 0;\r\n    // Source tiles with ERROR state - we track them because they can still have\r\n    // an ERROR state after another load attempt.\r\n    var errorSourceTiles = {};\r\n\r\n    if (this.state == TileState.IDLE) {\r\n      this.setState(TileState.LOADING);\r\n    }\r\n    if (this.state == TileState.LOADING) {\r\n      this.tileKeys.forEach(function(sourceTileKey) {\r\n        var sourceTile = this.getTile(sourceTileKey);\r\n        if (sourceTile.state == TileState.IDLE) {\r\n          sourceTile.setLoader(this.loader_);\r\n          sourceTile.load();\r\n        }\r\n        if (sourceTile.state == TileState.LOADING) {\r\n          var key = listen(sourceTile, EventType.CHANGE, function(e) {\r\n            var state = sourceTile.getState();\r\n            if (state == TileState.LOADED ||\r\n                state == TileState.ERROR) {\r\n              var uid = getUid(sourceTile);\r\n              if (state == TileState.ERROR) {\r\n                errorSourceTiles[uid] = true;\r\n              } else {\r\n                --leftToLoad;\r\n                delete errorSourceTiles[uid];\r\n              }\r\n              if (leftToLoad - Object.keys(errorSourceTiles).length == 0) {\r\n                this.finishLoading_();\r\n              }\r\n            }\r\n          }.bind(this));\r\n          this.loadListenerKeys_.push(key);\r\n          ++leftToLoad;\r\n        }\r\n      }.bind(this));\r\n    }\r\n    if (leftToLoad - Object.keys(errorSourceTiles).length == 0) {\r\n      setTimeout(this.finishLoading_.bind(this), 0);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  VectorImageTile.prototype.finishLoading_ = function finishLoading_ () {\r\n    var loaded = this.tileKeys.length;\r\n    var empty = 0;\r\n    for (var i = loaded - 1; i >= 0; --i) {\r\n      var state = this.getTile(this.tileKeys[i]).getState();\r\n      if (state != TileState.LOADED) {\r\n        --loaded;\r\n      }\r\n      if (state == TileState.EMPTY) {\r\n        ++empty;\r\n      }\r\n    }\r\n    if (loaded == this.tileKeys.length) {\r\n      this.loadListenerKeys_.forEach(unlistenByKey);\r\n      this.loadListenerKeys_.length = 0;\r\n      this.setState(TileState.LOADED);\r\n    } else {\r\n      this.setState(empty == this.tileKeys.length ? TileState.EMPTY : TileState.ERROR);\r\n    }\r\n  };\n\n  return VectorImageTile;\n}(Tile));\r\n\r\n\r\nexport default VectorImageTile;\r\n\r\n/**\r\n * Sets the loader for a tile.\r\n * @param {import(\"./VectorTile.js\").default} tile Vector tile.\r\n * @param {string} url URL.\r\n */\r\nexport function defaultLoadFunction(tile, url) {\r\n  var loader = loadFeaturesXhr(url, tile.getFormat(), tile.onLoad.bind(tile), tile.onError.bind(tile));\r\n  tile.setLoader(loader);\r\n}\r\n\r\n//# sourceMappingURL=VectorImageTile.js.map","/**\r\n * @module ol/VectorTile\r\n */\r\nimport {getUid} from './util.js';\r\nimport Tile from './Tile.js';\r\nimport TileState from './TileState.js';\r\n\r\n/**\r\n * @const\r\n * @type {import(\"./extent.js\").Extent}\r\n */\r\nvar DEFAULT_EXTENT = [0, 0, 4096, 4096];\r\n\r\n\r\nvar VectorTile = /*@__PURE__*/(function (Tile) {\n  function VectorTile(tileCoord, state, src, format, tileLoadFunction, opt_options) {\r\n\r\n    Tile.call(this, tileCoord, state, opt_options);\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.consumers = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./extent.js\").Extent}\r\n     */\r\n    this.extent_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./format/Feature.js\").default}\r\n     */\r\n    this.format_ = format;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<import(\"./Feature.js\").default>}\r\n     */\r\n    this.features_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./featureloader.js\").FeatureLoader}\r\n     */\r\n    this.loader_;\r\n\r\n    /**\r\n     * Data projection\r\n     * @private\r\n     * @type {import(\"./proj/Projection.js\").default}\r\n     */\r\n    this.projection_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<string, import(\"./render/ReplayGroup.js\").default>}\r\n     */\r\n    this.replayGroups_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./Tile.js\").LoadFunction}\r\n     */\r\n    this.tileLoadFunction_ = tileLoadFunction;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.url_ = src;\r\n\r\n  }\n\n  if ( Tile ) VectorTile.__proto__ = Tile;\n  VectorTile.prototype = Object.create( Tile && Tile.prototype );\n  VectorTile.prototype.constructor = VectorTile;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  VectorTile.prototype.disposeInternal = function disposeInternal () {\r\n    this.features_ = null;\r\n    this.replayGroups_ = {};\r\n    this.state = TileState.ABORT;\r\n    this.changed();\r\n    Tile.prototype.disposeInternal.call(this);\r\n  };\r\n\r\n  /**\r\n   * Gets the extent of the vector tile.\r\n   * @return {import(\"./extent.js\").Extent} The extent.\r\n   * @api\r\n   */\r\n  VectorTile.prototype.getExtent = function getExtent () {\r\n    return this.extent_ || DEFAULT_EXTENT;\r\n  };\r\n\r\n  /**\r\n   * Get the feature format assigned for reading this tile's features.\r\n   * @return {import(\"./format/Feature.js\").default} Feature format.\r\n   * @api\r\n   */\r\n  VectorTile.prototype.getFormat = function getFormat () {\r\n    return this.format_;\r\n  };\r\n\r\n  /**\r\n   * Get the features for this tile. Geometries will be in the projection returned\r\n   * by {@link module:ol/VectorTile~VectorTile#getProjection}.\r\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\r\n   * @api\r\n   */\r\n  VectorTile.prototype.getFeatures = function getFeatures () {\r\n    return this.features_;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  VectorTile.prototype.getKey = function getKey () {\r\n    return this.url_;\r\n  };\r\n\r\n  /**\r\n   * Get the feature projection of features returned by\r\n   * {@link module:ol/VectorTile~VectorTile#getFeatures}.\r\n   * @return {import(\"./proj/Projection.js\").default} Feature projection.\r\n   * @api\r\n   */\r\n  VectorTile.prototype.getProjection = function getProjection () {\r\n    return this.projection_;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\r\n   * @param {string} key Key.\r\n   * @return {import(\"./render/ReplayGroup.js\").default} Replay group.\r\n   */\r\n  VectorTile.prototype.getReplayGroup = function getReplayGroup (layer, key) {\r\n    return this.replayGroups_[getUid(layer) + ',' + key];\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  VectorTile.prototype.load = function load () {\r\n    if (this.state == TileState.IDLE) {\r\n      this.setState(TileState.LOADING);\r\n      this.tileLoadFunction_(this, this.url_);\r\n      this.loader_(null, NaN, null);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handler for successful tile load.\r\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\r\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\r\n   * @param {import(\"./extent.js\").Extent} extent Extent.\r\n   */\r\n  VectorTile.prototype.onLoad = function onLoad (features, dataProjection, extent) {\r\n    this.setProjection(dataProjection);\r\n    this.setFeatures(features);\r\n    this.setExtent(extent);\r\n  };\r\n\r\n  /**\r\n   * Handler for tile load errors.\r\n   */\r\n  VectorTile.prototype.onError = function onError () {\r\n    this.setState(TileState.ERROR);\r\n  };\r\n\r\n  /**\r\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s\r\n   * `tileLoadFunction`. Sets the extent of the vector tile. This is only required\r\n   * for tiles in projections with `tile-pixels` as units. The extent should be\r\n   * set to `[0, 0, tilePixelSize, tilePixelSize]`, where `tilePixelSize` is\r\n   * calculated by multiplying the tile size with the tile pixel ratio. For\r\n   * sources using {@link module:ol/format/MVT~MVT} as feature format, the\r\n   * {@link module:ol/format/MVT~MVT#getLastExtent} method will return the correct\r\n   * extent. The default is `[0, 0, 4096, 4096]`.\r\n   * @param {import(\"./extent.js\").Extent} extent The extent.\r\n   * @api\r\n   */\r\n  VectorTile.prototype.setExtent = function setExtent (extent) {\r\n    this.extent_ = extent;\r\n  };\r\n\r\n  /**\r\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\r\n   * Sets the features for the tile.\r\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\r\n   * @api\r\n   */\r\n  VectorTile.prototype.setFeatures = function setFeatures (features) {\r\n    this.features_ = features;\r\n    this.setState(TileState.LOADED);\r\n  };\r\n\r\n  /**\r\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\r\n   * Sets the projection of the features that were added with\r\n   * {@link module:ol/VectorTile~VectorTile#setFeatures}.\r\n   * @param {import(\"./proj/Projection.js\").default} projection Feature projection.\r\n   * @api\r\n   */\r\n  VectorTile.prototype.setProjection = function setProjection (projection) {\r\n    this.projection_ = projection;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\r\n   * @param {string} key Key.\r\n   * @param {import(\"./render/ReplayGroup.js\").default} replayGroup Replay group.\r\n   */\r\n  VectorTile.prototype.setReplayGroup = function setReplayGroup (layer, key, replayGroup) {\r\n    this.replayGroups_[getUid(layer) + ',' + key] = replayGroup;\r\n  };\r\n\r\n  /**\r\n   * Set the feature loader for reading this tile's features.\r\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\r\n   * @api\r\n   */\r\n  VectorTile.prototype.setLoader = function setLoader (loader) {\r\n    this.loader_ = loader;\r\n  };\n\n  return VectorTile;\n}(Tile));\r\n\r\nexport default VectorTile;\r\n\r\n//# sourceMappingURL=VectorTile.js.map","/**\r\n * @module ol/source/VectorTile\r\n */\r\n\r\nimport TileState from '../TileState.js';\r\nimport VectorImageTile, {defaultLoadFunction} from '../VectorImageTile.js';\r\nimport Tile from '../VectorTile.js';\r\nimport {toSize} from '../size.js';\r\nimport UrlTile from './UrlTile.js';\r\nimport {getKeyZXY} from '../tilecoord.js';\r\nimport {createXYZ, extentFromProjection, createForProjection} from '../tilegrid.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {number} [cacheSize=128] Cache size.\r\n * @property {import(\"../extent.js\").Extent} [extent]\r\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\r\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\r\n * to `false` (e.g. for sources with polygons that represent administrative\r\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\r\n * stroke operations.\r\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\r\n * @property {import(\"./State.js\").default} [state] Source state.\r\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\r\n * Default is {@link module:ol/VectorTile}.\r\n * @property {number} [maxZoom=22] Optional max zoom level.\r\n * @property {number} [minZoom] Optional min zoom level.\r\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size.\r\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\r\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\r\n * Optional function to load a tile given a URL. Could look like this:\r\n * ```js\r\n * function(tile, url) {\r\n *   tile.setLoader(function() {\r\n *     var data = // ... fetch data\r\n *     var format = tile.getFormat();\r\n *     tile.setProjection(format.readProjection(data));\r\n *     tile.setFeatures(format.readFeatures(data, {\r\n *       // featureProjection is not required for ol/format/MVT\r\n *       featureProjection: map.getView().getProjection()\r\n *     }));\r\n *     // the line below is only required for ol/format/MVT\r\n *     tile.setExtent(format.getLastExtent());\r\n *   }\r\n * });\r\n * ```\r\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\r\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\r\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\r\n * used instead of defining each one separately in the `urls` option.\r\n * @property {number} [transition] A duration for tile opacity\r\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\r\n * @property {Array<string>} [urls] An array of URL templates.\r\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\r\n * When set to `false`, only one world\r\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\r\n * render multiple worlds.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Class for layer sources providing vector data divided into a tile grid, to be\r\n * used with {@link module:ol/layer/VectorTile~VectorTile}. Although this source receives tiles\r\n * with vector features from the server, it is not meant for feature editing.\r\n * Features are optimized for rendering, their geometries are clipped at or near\r\n * tile boundaries and simplified for a view resolution. See\r\n * {@link module:ol/source/Vector} for vector sources that are suitable for feature\r\n * editing.\r\n *\r\n * @fires import(\"./Tile.js\").TileSourceEvent\r\n * @api\r\n */\r\nvar VectorTile = /*@__PURE__*/(function (UrlTile) {\n  function VectorTile(options) {\r\n    var projection = options.projection || 'EPSG:3857';\r\n\r\n    var extent = options.extent || extentFromProjection(projection);\r\n\r\n    var tileGrid = options.tileGrid || createXYZ({\r\n      extent: extent,\r\n      maxZoom: options.maxZoom || 22,\r\n      minZoom: options.minZoom,\r\n      tileSize: options.tileSize || 512\r\n    });\r\n\r\n    UrlTile.call(this, {\r\n      attributions: options.attributions,\r\n      cacheSize: options.cacheSize !== undefined ? options.cacheSize : 128,\r\n      opaque: false,\r\n      projection: projection,\r\n      state: options.state,\r\n      tileGrid: tileGrid,\r\n      tileLoadFunction: options.tileLoadFunction ? options.tileLoadFunction : defaultLoadFunction,\r\n      tileUrlFunction: options.tileUrlFunction,\r\n      url: options.url,\r\n      urls: options.urls,\r\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\r\n      transition: options.transition\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../format/Feature.js\").default}\r\n     */\r\n    this.format_ = options.format ? options.format : null;\r\n\r\n    /**\r\n       * @private\r\n       * @type {Object<string, Tile>}\r\n       */\r\n    this.sourceTiles_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {typeof import(\"../VectorTile.js\").default}\r\n     */\r\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\r\n     */\r\n    this.tileGrids_ = {};\r\n\r\n  }\n\n  if ( UrlTile ) VectorTile.__proto__ = UrlTile;\n  VectorTile.prototype = Object.create( UrlTile && UrlTile.prototype );\n  VectorTile.prototype.constructor = VectorTile;\r\n\r\n  /**\r\n   * @return {boolean} The source can have overlapping geometries.\r\n   */\r\n  VectorTile.prototype.getOverlaps = function getOverlaps () {\r\n    return this.overlaps_;\r\n  };\r\n\r\n  /**\r\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\r\n   * @api\r\n   */\r\n  VectorTile.prototype.clear = function clear () {\r\n    this.tileCache.clear();\r\n    this.sourceTiles_ = {};\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  VectorTile.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\r\n    var tileCoordKey = getKeyZXY(z, x, y);\r\n    if (this.tileCache.containsKey(tileCoordKey)) {\r\n      return (\r\n        /** @type {!import(\"../Tile.js\").default} */ (this.tileCache.get(tileCoordKey))\r\n      );\r\n    } else {\r\n      var tileCoord = [z, x, y];\r\n      var urlTileCoord = this.getTileCoordForTileUrlFunction(\r\n        tileCoord, projection);\r\n      var tile = new VectorImageTile(\r\n        tileCoord,\r\n        urlTileCoord !== null ? TileState.IDLE : TileState.EMPTY,\r\n        this.getRevision(),\r\n        this.format_, this.tileLoadFunction, urlTileCoord, this.tileUrlFunction,\r\n        this.tileGrid, this.getTileGridForProjection(projection),\r\n        this.sourceTiles_, pixelRatio, projection, this.tileClass,\r\n        this.handleTileChange.bind(this), tileCoord[0]);\r\n\r\n      this.tileCache.set(tileCoordKey, tile);\r\n      return tile;\r\n    }\r\n  };\r\n\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  VectorTile.prototype.getTileGridForProjection = function getTileGridForProjection (projection) {\r\n    var code = projection.getCode();\r\n    var tileGrid = this.tileGrids_[code];\r\n    if (!tileGrid) {\r\n      // A tile grid that matches the tile size of the source tile grid is more\r\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\r\n      var sourceTileGrid = this.tileGrid;\r\n      tileGrid = this.tileGrids_[code] = createForProjection(projection, undefined,\r\n        sourceTileGrid ? sourceTileGrid.getTileSize(sourceTileGrid.getMinZoom()) : undefined);\r\n    }\r\n    return tileGrid;\r\n  };\r\n\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  VectorTile.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\r\n    return pixelRatio;\r\n  };\r\n\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  VectorTile.prototype.getTilePixelSize = function getTilePixelSize (z, pixelRatio, projection) {\r\n    var tileGrid = this.getTileGridForProjection(projection);\r\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\r\n    return [Math.round(tileSize[0] * pixelRatio), Math.round(tileSize[1] * pixelRatio)];\r\n  };\n\n  return VectorTile;\n}(UrlTile));\r\n\r\n\r\nexport default VectorTile;\r\n\r\n//# sourceMappingURL=VectorTile.js.map","/**\r\n * @module ol/source/WMTSRequestEncoding\r\n */\r\n\r\n/**\r\n * Request encoding. One of 'KVP', 'REST'.\r\n * @enum {string}\r\n */\r\nexport default {\r\n  KVP: 'KVP', // see spec §8\r\n  REST: 'REST' // see spec §10\r\n};\r\n\r\n//# sourceMappingURL=WMTSRequestEncoding.js.map","/**\r\n * @module ol/tilegrid/WMTS\r\n */\r\n\r\nimport {find} from '../array.js';\r\nimport {get as getProjection} from '../proj.js';\r\nimport TileGrid from './TileGrid.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\r\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\r\n * When no `origin` or `origins` are configured, the `origin` will be set to the\r\n * top-left corner of the extent.\r\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\r\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\r\n * to right and upwards. If not specified, `extent` or `origins` must be provided.\r\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\r\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\r\n * given, the array length should match the length of the `resolutions` array, i.e.\r\n * each resolution can have a different origin. Tile coordinates increase left to\r\n * right and upwards. If not specified, `extent` or `origin` must be provided.\r\n * @property {!Array<number>} resolutions Resolutions. The array index of each\r\n * resolution needs to match the zoom level. This means that even if a `minZoom`\r\n * is configured, the resolutions array will have a length of `maxZoom + 1`\r\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\r\n * to match the length of the `resolutions` array.\r\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\r\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\r\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\r\n * define the grid's extent together with the `origin`.\r\n * An `extent` can be configured in addition, and will further limit the extent for\r\n * which tile requests are made by sources. Note that when the top-left corner of\r\n * the `extent` is used as `origin` or `origins`, then the `y` value must be\r\n * negative because OpenLayers tile coordinates increase upwards.\r\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\r\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\r\n * this array needs to match the length of the `resolutions` array.\r\n * @property {Array<number>} [widths] Number of tile columns that cover the grid's\r\n * extent for each zoom level. Only required when used with a source that has `wrapX`\r\n * set to `true`, and only when the grid's origin differs from the one of the\r\n * projection's extent. The array length has to match the length of the `resolutions`\r\n * array, i.e. each resolution will have a matching entry here.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\r\n * @api\r\n */\r\nvar WMTSTileGrid = /*@__PURE__*/(function (TileGrid) {\n  function WMTSTileGrid(options) {\r\n    TileGrid.call(this, {\r\n      extent: options.extent,\r\n      origin: options.origin,\r\n      origins: options.origins,\r\n      resolutions: options.resolutions,\r\n      tileSize: options.tileSize,\r\n      tileSizes: options.tileSizes,\r\n      sizes: options.sizes\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Array<string>}\r\n     */\r\n    this.matrixIds_ = options.matrixIds;\r\n  }\n\n  if ( TileGrid ) WMTSTileGrid.__proto__ = TileGrid;\n  WMTSTileGrid.prototype = Object.create( TileGrid && TileGrid.prototype );\n  WMTSTileGrid.prototype.constructor = WMTSTileGrid;\r\n\r\n  /**\r\n   * @param {number} z Z.\r\n   * @return {string} MatrixId..\r\n   */\r\n  WMTSTileGrid.prototype.getMatrixId = function getMatrixId (z) {\r\n    return this.matrixIds_[z];\r\n  };\r\n\r\n  /**\r\n   * Get the list of matrix identifiers.\r\n   * @return {Array<string>} MatrixIds.\r\n   * @api\r\n   */\r\n  WMTSTileGrid.prototype.getMatrixIds = function getMatrixIds () {\r\n    return this.matrixIds_;\r\n  };\n\n  return WMTSTileGrid;\n}(TileGrid));\r\n\r\n\r\nexport default WMTSTileGrid;\r\n\r\n/**\r\n * Create a tile grid from a WMTS capabilities matrix set and an\r\n * optional TileMatrixSetLimits.\r\n * @param {Object} matrixSet An object representing a matrixSet in the\r\n *     capabilities document.\r\n * @param {import(\"../extent.js\").Extent=} opt_extent An optional extent to restrict the tile\r\n *     ranges the server provides.\r\n * @param {Array<Object>=} opt_matrixLimits An optional object representing\r\n *     the available matrices for tileGrid.\r\n * @return {WMTSTileGrid} WMTS tileGrid instance.\r\n * @api\r\n */\r\nexport function createFromCapabilitiesMatrixSet(matrixSet, opt_extent, opt_matrixLimits) {\r\n\r\n  /** @type {!Array<number>} */\r\n  var resolutions = [];\r\n  /** @type {!Array<string>} */\r\n  var matrixIds = [];\r\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\r\n  var origins = [];\r\n  /** @type {!Array<import(\"../size.js\").Size>} */\r\n  var tileSizes = [];\r\n  /** @type {!Array<import(\"../size.js\").Size>} */\r\n  var sizes = [];\r\n\r\n  var matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\r\n\r\n  var supportedCRSPropName = 'SupportedCRS';\r\n  var matrixIdsPropName = 'TileMatrix';\r\n  var identifierPropName = 'Identifier';\r\n  var scaleDenominatorPropName = 'ScaleDenominator';\r\n  var topLeftCornerPropName = 'TopLeftCorner';\r\n  var tileWidthPropName = 'TileWidth';\r\n  var tileHeightPropName = 'TileHeight';\r\n\r\n  var code = matrixSet[supportedCRSPropName];\r\n  var projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\r\n      getProjection(code);\r\n  var metersPerUnit = projection.getMetersPerUnit();\r\n  // swap origin x and y coordinates if axis orientation is lat/long\r\n  var switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\r\n\r\n  matrixSet[matrixIdsPropName].sort(function(a, b) {\r\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\r\n  });\r\n\r\n  matrixSet[matrixIdsPropName].forEach(function(elt) {\r\n\r\n    var matrixAvailable;\r\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\r\n    // TileMatrixSet from unavailable matrix levels.\r\n    if (matrixLimits.length > 0) {\r\n      matrixAvailable = find(matrixLimits, function(elt_ml) {\r\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\r\n          return true;\r\n        }\r\n        // Fallback for tileMatrix identifiers that don't get prefixed\r\n        // by their tileMatrixSet identifiers.\r\n        if (elt[identifierPropName].indexOf(':') === -1) {\r\n          return matrixSet[identifierPropName] + ':' + elt[identifierPropName] === elt_ml[matrixIdsPropName];\r\n        }\r\n        return false;\r\n      });\r\n    } else {\r\n      matrixAvailable = true;\r\n    }\r\n\r\n    if (matrixAvailable) {\r\n      matrixIds.push(elt[identifierPropName]);\r\n      var resolution = elt[scaleDenominatorPropName] * 0.28E-3 / metersPerUnit;\r\n      var tileWidth = elt[tileWidthPropName];\r\n      var tileHeight = elt[tileHeightPropName];\r\n      if (switchOriginXY) {\r\n        origins.push([elt[topLeftCornerPropName][1],\r\n          elt[topLeftCornerPropName][0]]);\r\n      } else {\r\n        origins.push(elt[topLeftCornerPropName]);\r\n      }\r\n      resolutions.push(resolution);\r\n      tileSizes.push(tileWidth == tileHeight ?\r\n        tileWidth : [tileWidth, tileHeight]);\r\n      // top-left origin, so height is negative\r\n      sizes.push([elt['MatrixWidth'], -elt['MatrixHeight']]);\r\n    }\r\n  });\r\n\r\n  return new WMTSTileGrid({\r\n    extent: opt_extent,\r\n    origins: origins,\r\n    resolutions: resolutions,\r\n    matrixIds: matrixIds,\r\n    tileSizes: tileSizes,\r\n    sizes: sizes\r\n  });\r\n}\r\n\r\n//# sourceMappingURL=WMTS.js.map","/**\r\n * @module ol/source/WMTS\r\n */\r\n\r\nimport {expandUrl, createFromTileUrlFunctions, nullTileUrlFunction} from '../tileurlfunction.js';\r\nimport {find, findIndex, includes} from '../array.js';\r\nimport {containsExtent} from '../extent.js';\r\nimport {assign} from '../obj.js';\r\nimport {get as getProjection, equivalent, transformExtent} from '../proj.js';\r\nimport TileImage from './TileImage.js';\r\nimport WMTSRequestEncoding from './WMTSRequestEncoding.js';\r\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\r\nimport {appendParams} from '../uri.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {number} [cacheSize=2048] Cache size.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\r\n * access pixel data with the Canvas renderer.  See\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\r\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\r\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\r\n * Higher values can increase reprojection performance, but decrease precision.\r\n * @property {import(\"./WMTSRequestEncoding.js\").default|string} [requestEncoding='KVP'] Request encoding.\r\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\r\n * @property {string} style Style name as advertised in the WMTS capabilities.\r\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\r\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\r\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\r\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\r\n * should be set to `2`.\r\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\r\n * @property {string} [version='1.0.0'] WMTS version.\r\n * @property {string} matrixSet Matrix set.\r\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\r\n * This is an object with properties named like the advertised WMTS dimensions.\r\n * @property {string} [url]  A URL for the service.\r\n * For the RESTful request encoding, this is a URL\r\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\r\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\r\n * each one separately in the `urls` option.\r\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\r\n * ```js\r\n * function(imageTile, src) {\r\n *   imageTile.getImage().src = src;\r\n * };\r\n * ```\r\n * @property {Array<string>} [urls] An array of URLs.\r\n * Requests will be distributed among the URLs in this array.\r\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\r\n * @property {number} [transition] Duration of the opacity transition for rendering.\r\n * To disable the opacity transition, pass `transition: 0`.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Layer source for tile data from WMTS servers.\r\n * @api\r\n */\r\nvar WMTS = /*@__PURE__*/(function (TileImage) {\n  function WMTS(options) {\r\n\r\n    // TODO: add support for TileMatrixLimits\r\n\r\n    var requestEncoding = options.requestEncoding !== undefined ?\r\n      /** @type {import(\"./WMTSRequestEncoding.js\").default} */ (options.requestEncoding) :\r\n      WMTSRequestEncoding.KVP;\r\n\r\n    // FIXME: should we create a default tileGrid?\r\n    // we could issue a getCapabilities xhr to retrieve missing configuration\r\n    var tileGrid = options.tileGrid;\r\n\r\n    var urls = options.urls;\r\n    if (urls === undefined && options.url !== undefined) {\r\n      urls = expandUrl(options.url);\r\n    }\r\n\r\n    TileImage.call(this, {\r\n      attributions: options.attributions,\r\n      cacheSize: options.cacheSize,\r\n      crossOrigin: options.crossOrigin,\r\n      projection: options.projection,\r\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\r\n      tileClass: options.tileClass,\r\n      tileGrid: tileGrid,\r\n      tileLoadFunction: options.tileLoadFunction,\r\n      tilePixelRatio: options.tilePixelRatio,\r\n      tileUrlFunction: nullTileUrlFunction,\r\n      urls: urls,\r\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\r\n      transition: options.transition\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object}\r\n     */\r\n    this.dimensions_ = options.dimensions !== undefined ? options.dimensions : {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.layer_ = options.layer;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.matrixSet_ = options.matrixSet;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.style_ = options.style;\r\n\r\n    // FIXME: should we guess this requestEncoding from options.url(s)\r\n    //        structure? that would mean KVP only if a template is not provided.\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./WMTSRequestEncoding.js\").default}\r\n     */\r\n    this.requestEncoding_ = requestEncoding;\r\n\r\n    this.setKey(this.getKeyForDimensions_());\r\n\r\n    if (urls && urls.length > 0) {\r\n      this.tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this)));\r\n    }\r\n\r\n  }\n\n  if ( TileImage ) WMTS.__proto__ = TileImage;\n  WMTS.prototype = Object.create( TileImage && TileImage.prototype );\n  WMTS.prototype.constructor = WMTS;\r\n\r\n  /**\r\n   * Set the URLs to use for requests.\r\n   * URLs may contain OCG conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\r\n   * @override\r\n   */\r\n  WMTS.prototype.setUrls = function setUrls (urls) {\r\n    this.urls = urls;\r\n    var key = urls.join('\\n');\r\n    this.setTileUrlFunction(createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this))), key);\r\n  };\r\n\r\n  /**\r\n   * Get the dimensions, i.e. those passed to the constructor through the\r\n   * \"dimensions\" option, and possibly updated using the updateDimensions\r\n   * method.\r\n   * @return {!Object} Dimensions.\r\n   * @api\r\n   */\r\n  WMTS.prototype.getDimensions = function getDimensions () {\r\n    return this.dimensions_;\r\n  };\r\n\r\n\r\n  /**\r\n   * Return the image format of the WMTS source.\r\n   * @return {string} Format.\r\n   * @api\r\n   */\r\n  WMTS.prototype.getFormat = function getFormat () {\r\n    return this.format_;\r\n  };\r\n\r\n\r\n  /**\r\n   * Return the layer of the WMTS source.\r\n   * @return {string} Layer.\r\n   * @api\r\n   */\r\n  WMTS.prototype.getLayer = function getLayer () {\r\n    return this.layer_;\r\n  };\r\n\r\n\r\n  /**\r\n   * Return the matrix set of the WMTS source.\r\n   * @return {string} MatrixSet.\r\n   * @api\r\n   */\r\n  WMTS.prototype.getMatrixSet = function getMatrixSet () {\r\n    return this.matrixSet_;\r\n  };\r\n\r\n\r\n  /**\r\n   * Return the request encoding, either \"KVP\" or \"REST\".\r\n   * @return {import(\"./WMTSRequestEncoding.js\").default} Request encoding.\r\n   * @api\r\n   */\r\n  WMTS.prototype.getRequestEncoding = function getRequestEncoding () {\r\n    return this.requestEncoding_;\r\n  };\r\n\r\n\r\n  /**\r\n   * Return the style of the WMTS source.\r\n   * @return {string} Style.\r\n   * @api\r\n   */\r\n  WMTS.prototype.getStyle = function getStyle () {\r\n    return this.style_;\r\n  };\r\n\r\n\r\n  /**\r\n   * Return the version of the WMTS source.\r\n   * @return {string} Version.\r\n   * @api\r\n   */\r\n  WMTS.prototype.getVersion = function getVersion () {\r\n    return this.version_;\r\n  };\r\n\r\n\r\n  /**\r\n   * @private\r\n   * @return {string} The key for the current dimensions.\r\n   */\r\n  WMTS.prototype.getKeyForDimensions_ = function getKeyForDimensions_ () {\r\n    var i = 0;\r\n    var res = [];\r\n    for (var key in this.dimensions_) {\r\n      res[i++] = key + '-' + this.dimensions_[key];\r\n    }\r\n    return res.join('/');\r\n  };\r\n\r\n\r\n  /**\r\n   * Update the dimensions.\r\n   * @param {Object} dimensions Dimensions.\r\n   * @api\r\n   */\r\n  WMTS.prototype.updateDimensions = function updateDimensions (dimensions) {\r\n    assign(this.dimensions_, dimensions);\r\n    this.setKey(this.getKeyForDimensions_());\r\n  };\n\n  return WMTS;\n}(TileImage));\r\n\r\nexport default WMTS;\r\n\r\n/**\r\n * Generate source options from a capabilities object.\r\n * @param {Object} wmtsCap An object representing the capabilities document.\r\n * @param {!Object} config Configuration properties for the layer.  Defaults for\r\n *                  the layer will apply if not provided.\r\n *\r\n * Required config properties:\r\n *  - layer - {string} The layer identifier.\r\n *\r\n * Optional config properties:\r\n *  - matrixSet - {string} The matrix set identifier, required if there is\r\n *       more than one matrix set in the layer capabilities.\r\n *  - projection - {string} The desired CRS when no matrixSet is specified.\r\n *       eg: \"EPSG:3857\". If the desired projection is not available,\r\n *       an error is thrown.\r\n *  - requestEncoding - {string} url encoding format for the layer. Default is\r\n *       the first tile url format found in the GetCapabilities response.\r\n *  - style - {string} The name of the style\r\n *  - format - {string} Image format for the layer. Default is the first\r\n *       format returned in the GetCapabilities response.\r\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\r\n * @return {?Options} WMTS source options object or `null` if the layer was not found.\r\n * @api\r\n */\r\nexport function optionsFromCapabilities(wmtsCap, config) {\r\n  var layers = wmtsCap['Contents']['Layer'];\r\n  var l = find(layers, function(elt, index, array) {\r\n    return elt['Identifier'] == config['layer'];\r\n  });\r\n  if (l === null) {\r\n    return null;\r\n  }\r\n  var tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\r\n  var idx;\r\n  if (l['TileMatrixSetLink'].length > 1) {\r\n    if ('projection' in config) {\r\n      idx = findIndex(l['TileMatrixSetLink'],\r\n        function(elt, index, array) {\r\n          var tileMatrixSet = find(tileMatrixSets, function(el) {\r\n            return el['Identifier'] == elt['TileMatrixSet'];\r\n          });\r\n          var supportedCRS = tileMatrixSet['SupportedCRS'];\r\n          var proj1 = getProjection(supportedCRS.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\r\n                getProjection(supportedCRS);\r\n          var proj2 = getProjection(config['projection']);\r\n          if (proj1 && proj2) {\r\n            return equivalent(proj1, proj2);\r\n          } else {\r\n            return supportedCRS == config['projection'];\r\n          }\r\n        });\r\n    } else {\r\n      idx = findIndex(l['TileMatrixSetLink'],\r\n        function(elt, index, array) {\r\n          return elt['TileMatrixSet'] == config['matrixSet'];\r\n        });\r\n    }\r\n  } else {\r\n    idx = 0;\r\n  }\r\n  if (idx < 0) {\r\n    idx = 0;\r\n  }\r\n  var matrixSet = /** @type {string} */\r\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\r\n  var matrixLimits = /** @type {Array<Object>} */\r\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\r\n\r\n  var format = /** @type {string} */ (l['Format'][0]);\r\n  if ('format' in config) {\r\n    format = config['format'];\r\n  }\r\n  idx = findIndex(l['Style'], function(elt, index, array) {\r\n    if ('style' in config) {\r\n      return elt['Title'] == config['style'];\r\n    } else {\r\n      return elt['isDefault'];\r\n    }\r\n  });\r\n  if (idx < 0) {\r\n    idx = 0;\r\n  }\r\n  var style = /** @type {string} */ (l['Style'][idx]['Identifier']);\r\n\r\n  var dimensions = {};\r\n  if ('Dimension' in l) {\r\n    l['Dimension'].forEach(function(elt, index, array) {\r\n      var key = elt['Identifier'];\r\n      var value = elt['Default'];\r\n      if (value === undefined) {\r\n        value = elt['Value'][0];\r\n      }\r\n      dimensions[key] = value;\r\n    });\r\n  }\r\n\r\n  var matrixSets = wmtsCap['Contents']['TileMatrixSet'];\r\n  var matrixSetObj = find(matrixSets, function(elt, index, array) {\r\n    return elt['Identifier'] == matrixSet;\r\n  });\r\n\r\n  var projection;\r\n  var code = matrixSetObj['SupportedCRS'];\r\n  if (code) {\r\n    projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\r\n        getProjection(code);\r\n  }\r\n  if ('projection' in config) {\r\n    var projConfig = getProjection(config['projection']);\r\n    if (projConfig) {\r\n      if (!projection || equivalent(projConfig, projection)) {\r\n        projection = projConfig;\r\n      }\r\n    }\r\n  }\r\n\r\n  var wgs84BoundingBox = l['WGS84BoundingBox'];\r\n  var extent, wrapX;\r\n  if (wgs84BoundingBox !== undefined) {\r\n    var wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\r\n    wrapX = (wgs84BoundingBox[0] == wgs84ProjectionExtent[0] &&\r\n        wgs84BoundingBox[2] == wgs84ProjectionExtent[2]);\r\n    extent = transformExtent(\r\n      wgs84BoundingBox, 'EPSG:4326', projection);\r\n    var projectionExtent = projection.getExtent();\r\n    if (projectionExtent) {\r\n      // If possible, do a sanity check on the extent - it should never be\r\n      // bigger than the validity extent of the projection of a matrix set.\r\n      if (!containsExtent(projectionExtent, extent)) {\r\n        extent = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  var tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\r\n\r\n  /** @type {!Array<string>} */\r\n  var urls = [];\r\n  var requestEncoding = config['requestEncoding'];\r\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\r\n\r\n  if ('OperationsMetadata' in wmtsCap && 'GetTile' in wmtsCap['OperationsMetadata']) {\r\n    var gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\r\n\r\n    for (var i = 0, ii = gets.length; i < ii; ++i) {\r\n      if (gets[i]['Constraint']) {\r\n        var constraint = find(gets[i]['Constraint'], function(element) {\r\n          return element['name'] == 'GetEncoding';\r\n        });\r\n        var encodings = constraint['AllowedValues']['Value'];\r\n\r\n        if (requestEncoding === '') {\r\n          // requestEncoding not provided, use the first encoding from the list\r\n          requestEncoding = encodings[0];\r\n        }\r\n        if (requestEncoding === WMTSRequestEncoding.KVP) {\r\n          if (includes(encodings, WMTSRequestEncoding.KVP)) {\r\n            urls.push(/** @type {string} */ (gets[i]['href']));\r\n          }\r\n        } else {\r\n          break;\r\n        }\r\n      } else if (gets[i]['href']) {\r\n        requestEncoding = WMTSRequestEncoding.KVP;\r\n        urls.push(/** @type {string} */ (gets[i]['href']));\r\n      }\r\n    }\r\n  }\r\n  if (urls.length === 0) {\r\n    requestEncoding = WMTSRequestEncoding.REST;\r\n    l['ResourceURL'].forEach(function(element) {\r\n      if (element['resourceType'] === 'tile') {\r\n        format = element['format'];\r\n        urls.push(/** @type {string} */ (element['template']));\r\n      }\r\n    });\r\n  }\r\n\r\n  return {\r\n    urls: urls,\r\n    layer: config['layer'],\r\n    matrixSet: matrixSet,\r\n    format: format,\r\n    projection: projection,\r\n    requestEncoding: requestEncoding,\r\n    tileGrid: tileGrid,\r\n    style: style,\r\n    dimensions: dimensions,\r\n    wrapX: wrapX,\r\n    crossOrigin: config['crossOrigin']\r\n  };\r\n}\r\n\r\n/**\r\n * @param {string} template Template.\r\n * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\r\n * @this {WMTS}\r\n */\r\nfunction createFromWMTSTemplate(template) {\r\n  var requestEncoding = this.requestEncoding_;\r\n\r\n  // context property names are lower case to allow for a case insensitive\r\n  // replacement as some services use different naming conventions\r\n  var context = {\r\n    'layer': this.layer_,\r\n    'style': this.style_,\r\n    'tilematrixset': this.matrixSet_\r\n  };\r\n\r\n  if (requestEncoding == WMTSRequestEncoding.KVP) {\r\n    assign(context, {\r\n      'Service': 'WMTS',\r\n      'Request': 'GetTile',\r\n      'Version': this.version_,\r\n      'Format': this.format_\r\n    });\r\n  }\r\n\r\n  // TODO: we may want to create our own appendParams function so that params\r\n  // order conforms to wmts spec guidance, and so that we can avoid to escape\r\n  // special template params\r\n\r\n  template = (requestEncoding == WMTSRequestEncoding.KVP) ?\r\n    appendParams(template, context) :\r\n    template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\r\n      return (p.toLowerCase() in context) ? context[p.toLowerCase()] : m;\r\n    });\r\n\r\n  var tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\r\n    this.tileGrid);\r\n  var dimensions = this.dimensions_;\r\n\r\n  return (\r\n    /**\r\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\r\n     * @param {number} pixelRatio Pixel ratio.\r\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n     * @return {string|undefined} Tile URL.\r\n     */\r\n    function(tileCoord, pixelRatio, projection) {\r\n      if (!tileCoord) {\r\n        return undefined;\r\n      } else {\r\n        var localContext = {\r\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\r\n          'TileCol': tileCoord[1],\r\n          'TileRow': -tileCoord[2] - 1\r\n        };\r\n        assign(localContext, dimensions);\r\n        var url = template;\r\n        if (requestEncoding == WMTSRequestEncoding.KVP) {\r\n          url = appendParams(url, localContext);\r\n        } else {\r\n          url = url.replace(/\\{(\\w+?)\\}/g, function(m, p) {\r\n            return localContext[p];\r\n          });\r\n        }\r\n        return url;\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\n//# sourceMappingURL=WMTS.js.map","/**\r\n * @module ol/source/Zoomify\r\n */\r\nimport {DEFAULT_TILE_SIZE} from '../tilegrid/common.js';\r\n\r\nimport ImageTile from '../ImageTile.js';\r\nimport TileState from '../TileState.js';\r\nimport {expandUrl, createFromTileUrlFunctions} from '../tileurlfunction.js';\r\nimport {assert} from '../asserts.js';\r\nimport {createCanvasContext2D} from '../dom.js';\r\nimport {getTopLeft} from '../extent.js';\r\nimport {toSize} from '../size.js';\r\nimport TileImage from './TileImage.js';\r\nimport TileGrid from '../tilegrid/TileGrid.js';\r\n\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nvar TierSizeCalculation = {\r\n  DEFAULT: 'default',\r\n  TRUNCATED: 'truncated'\r\n};\r\n\r\n\r\nexport var CustomTile = /*@__PURE__*/(function (ImageTile) {\n  function CustomTile(tileGrid, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\r\n\r\n    ImageTile.call(this, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options);\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\r\n     */\r\n    this.zoomifyImage_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../size.js\").Size}\r\n     */\r\n    this.tileSize_ = toSize(tileGrid.getTileSize(tileCoord[0]));\r\n\r\n  }\n\n  if ( ImageTile ) CustomTile.__proto__ = ImageTile;\n  CustomTile.prototype = Object.create( ImageTile && ImageTile.prototype );\n  CustomTile.prototype.constructor = CustomTile;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CustomTile.prototype.getImage = function getImage () {\r\n    if (this.zoomifyImage_) {\r\n      return this.zoomifyImage_;\r\n    }\r\n    var image = ImageTile.prototype.getImage.call(this);\r\n    if (this.state == TileState.LOADED) {\r\n      var tileSize = this.tileSize_;\r\n      if (image.width == tileSize[0] && image.height == tileSize[1]) {\r\n        this.zoomifyImage_ = image;\r\n        return image;\r\n      } else {\r\n        var context = createCanvasContext2D(tileSize[0], tileSize[1]);\r\n        context.drawImage(image, 0, 0);\r\n        this.zoomifyImage_ = context.canvas;\r\n        return context.canvas;\r\n      }\r\n    } else {\r\n      return image;\r\n    }\r\n  };\n\n  return CustomTile;\n}(ImageTile));\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\r\n * @property {number} [cacheSize=2048] Cache size.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\r\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\r\n * access pixel data with the Canvas renderer.  See\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\r\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\r\n * Higher values can increase reprojection performance, but decrease precision.\r\n * @property {string} [url] URL template or base URL of the Zoomify service.\r\n * A base URL is the fixed part\r\n * of the URL, excluding the tile group, z, x, and y folder structure, e.g.\r\n * `http://my.zoomify.info/IMAGE.TIF/`. A URL template must include\r\n * `{TileGroup}`, `{x}`, `{y}`, and `{z}` placeholders, e.g.\r\n * `http://my.zoomify.info/IMAGE.TIF/{TileGroup}/{z}-{x}-{y}.jpg`.\r\n * Internet Imaging Protocol (IIP) with JTL extension can be also used with\r\n * `{tileIndex}` and `{z}` placeholders, e.g.\r\n * `http://my.zoomify.info?FIF=IMAGE.TIF&JTL={z},{tileIndex}`.\r\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\r\n * used instead of defining each one separately in the `urls` option.\r\n * @property {string} [tierSizeCalculation] Tier size calculation method: `default` or `truncated`.\r\n * @property {import(\"../size.js\").Size} [size] Size of the image.\r\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the TileGrid that is created.\r\n * Default sets the TileGrid in the\r\n * fourth quadrant, meaning extent is `[0, -height, width, 0]`. To change the\r\n * extent to the first quadrant (the default for OpenLayers 2) set the extent\r\n * as `[0, 0, width, height]`.\r\n * @property {number} [transition] Duration of the opacity transition for rendering.\r\n * To disable the opacity transition, pass `transition: 0`.\r\n * @property {number} [tileSize=256] Tile size. Same tile size is used for all zoom levels.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Layer source for tile data in Zoomify format (both Zoomify and Internet\r\n * Imaging Protocol are supported).\r\n * @api\r\n */\r\nvar Zoomify = /*@__PURE__*/(function (TileImage) {\n  function Zoomify(opt_options) {\r\n\r\n    var options = opt_options || {};\r\n\r\n    var size = options.size;\r\n    var tierSizeCalculation = options.tierSizeCalculation !== undefined ?\r\n      options.tierSizeCalculation :\r\n      TierSizeCalculation.DEFAULT;\r\n\r\n    var imageWidth = size[0];\r\n    var imageHeight = size[1];\r\n    var extent = options.extent || [0, -size[1], size[0], 0];\r\n    var tierSizeInTiles = [];\r\n    var tileSize = options.tileSize || DEFAULT_TILE_SIZE;\r\n    var tileSizeForTierSizeCalculation = tileSize;\r\n\r\n    switch (tierSizeCalculation) {\r\n      case TierSizeCalculation.DEFAULT:\r\n        while (imageWidth > tileSizeForTierSizeCalculation || imageHeight > tileSizeForTierSizeCalculation) {\r\n          tierSizeInTiles.push([\r\n            Math.ceil(imageWidth / tileSizeForTierSizeCalculation),\r\n            Math.ceil(imageHeight / tileSizeForTierSizeCalculation)\r\n          ]);\r\n          tileSizeForTierSizeCalculation += tileSizeForTierSizeCalculation;\r\n        }\r\n        break;\r\n      case TierSizeCalculation.TRUNCATED:\r\n        var width = imageWidth;\r\n        var height = imageHeight;\r\n        while (width > tileSizeForTierSizeCalculation || height > tileSizeForTierSizeCalculation) {\r\n          tierSizeInTiles.push([\r\n            Math.ceil(width / tileSizeForTierSizeCalculation),\r\n            Math.ceil(height / tileSizeForTierSizeCalculation)\r\n          ]);\r\n          width >>= 1;\r\n          height >>= 1;\r\n        }\r\n        break;\r\n      default:\r\n        assert(false, 53); // Unknown `tierSizeCalculation` configured\r\n        break;\r\n    }\r\n\r\n    tierSizeInTiles.push([1, 1]);\r\n    tierSizeInTiles.reverse();\r\n\r\n    var resolutions = [1];\r\n    var tileCountUpToTier = [0];\r\n    for (var i = 1, ii = tierSizeInTiles.length; i < ii; i++) {\r\n      resolutions.push(1 << i);\r\n      tileCountUpToTier.push(\r\n        tierSizeInTiles[i - 1][0] * tierSizeInTiles[i - 1][1] +\r\n          tileCountUpToTier[i - 1]\r\n      );\r\n    }\r\n    resolutions.reverse();\r\n\r\n    var tileGrid = new TileGrid({\r\n      tileSize: tileSize,\r\n      extent: extent,\r\n      origin: getTopLeft(extent),\r\n      resolutions: resolutions\r\n    });\r\n\r\n    var url = options.url;\r\n    if (url && url.indexOf('{TileGroup}') == -1 && url.indexOf('{tileIndex}') == -1) {\r\n      url += '{TileGroup}/{z}-{x}-{y}.jpg';\r\n    }\r\n    var urls = expandUrl(url);\r\n\r\n    /**\r\n     * @param {string} template Template.\r\n     * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\r\n     */\r\n    function createFromTemplate(template) {\r\n\r\n      return (\r\n        /**\r\n         * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\r\n         * @param {number} pixelRatio Pixel ratio.\r\n         * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n         * @return {string|undefined} Tile URL.\r\n         */\r\n        function(tileCoord, pixelRatio, projection) {\r\n          if (!tileCoord) {\r\n            return undefined;\r\n          } else {\r\n            var tileCoordZ = tileCoord[0];\r\n            var tileCoordX = tileCoord[1];\r\n            var tileCoordY = -tileCoord[2] - 1;\r\n            var tileIndex =\r\n                tileCoordX +\r\n                tileCoordY * tierSizeInTiles[tileCoordZ][0];\r\n            var tileSize = tileGrid.getTileSize(tileCoordZ);\r\n            var tileWidth = Array.isArray(tileSize) ? tileSize[0] : tileSize;\r\n            var tileGroup = ((tileIndex + tileCountUpToTier[tileCoordZ]) / tileWidth) | 0;\r\n            var localContext = {\r\n              'z': tileCoordZ,\r\n              'x': tileCoordX,\r\n              'y': tileCoordY,\r\n              'tileIndex': tileIndex,\r\n              'TileGroup': 'TileGroup' + tileGroup\r\n            };\r\n            return template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\r\n              return localContext[p];\r\n            });\r\n          }\r\n        }\r\n      );\r\n    }\r\n\r\n    var tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromTemplate));\r\n\r\n    var ZoomifyTileClass = CustomTile.bind(null, tileGrid);\r\n\r\n    TileImage.call(this, {\r\n      attributions: options.attributions,\r\n      cacheSize: options.cacheSize,\r\n      crossOrigin: options.crossOrigin,\r\n      projection: options.projection,\r\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\r\n      tileClass: ZoomifyTileClass,\r\n      tileGrid: tileGrid,\r\n      tileUrlFunction: tileUrlFunction,\r\n      transition: options.transition\r\n    });\r\n\r\n  }\n\n  if ( TileImage ) Zoomify.__proto__ = TileImage;\n  Zoomify.prototype = Object.create( TileImage && TileImage.prototype );\n  Zoomify.prototype.constructor = Zoomify;\n\n  return Zoomify;\n}(TileImage));\r\n\r\nexport default Zoomify;\r\n\r\n//# sourceMappingURL=Zoomify.js.map","/**\r\n * @module ol/WebGLMap\r\n */\r\nimport PluggableMap from './PluggableMap.js';\r\nimport {defaults as defaultControls} from './control.js';\r\nimport {defaults as defaultInteractions} from './interaction.js';\r\nimport {assign} from './obj.js';\r\nimport WebGLImageLayerRenderer from './renderer/webgl/ImageLayer.js';\r\nimport WebGLMapRenderer from './renderer/webgl/Map.js';\r\nimport WebGLTileLayerRenderer from './renderer/webgl/TileLayer.js';\r\nimport WebGLVectorLayerRenderer from './renderer/webgl/VectorLayer.js';\r\n\r\n\r\n/**\r\n * @classdesc\r\n * The WebGLMap uses WebGL for rendering map layers.  This renderer has limited\r\n * support for vector data and no support for vector tiles.\r\n *\r\n *     import WebGLMap from 'ol/WebGLMap';\r\n *     import TileLayer from 'ol/layer/Tile';\r\n *     import OSM from 'ol/source/OSM';\r\n *     import View from 'ol/View';\r\n *\r\n *     var map = new WebGLMap({\r\n *       view: new View({\r\n *         center: [0, 0],\r\n *         zoom: 1\r\n *       }),\r\n *       layers: [\r\n *         new TileLayer({\r\n *           source: new OSM()\r\n *         })\r\n *       ],\r\n *       target: 'map'\r\n *     });\r\n *\r\n * The above snippet creates a map using a {@link module:ol/layer/Tile~Tile} to\r\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\r\n * element with the id `map`.\r\n *\r\n * The constructor places a viewport container (with CSS class name\r\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\r\n * further elements within the viewport: one with CSS class name\r\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\r\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\r\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\r\n * itself is placed in a further element within the viewport.\r\n *\r\n * Layers are stored as a {@link module:ol/Collection~Collection} in\r\n * layerGroups. A top-level group is provided by the library. This is what is\r\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\r\n * options are added to this group, and `addLayer` and `removeLayer` change the\r\n * layer collection in the group. `getLayers` is a convenience function for\r\n * `getLayerGroup().getLayers()`.\r\n * Note that {@link module:ol/layer/Group~Group} is a subclass of\r\n * {@link module:ol/layer/Base}, so layers entered in the options or added\r\n * with `addLayer` can be groups, which can contain further groups, and so on.\r\n *\r\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\r\n * @fires import(\"./MapEvent.js\").MapEvent\r\n * @fires module:ol/render/Event~RenderEvent#postcompose\r\n * @fires module:ol/render/Event~RenderEvent#precompose\r\n * @api\r\n */\r\nvar WebGLMap = /*@__PURE__*/(function (PluggableMap) {\n  function WebGLMap(options) {\r\n    options = assign({}, options);\r\n    if (!options.controls) {\r\n      options.controls = defaultControls();\r\n    }\r\n    if (!options.interactions) {\r\n      options.interactions = defaultInteractions();\r\n    }\r\n\r\n    PluggableMap.call(this, options);\r\n  }\n\n  if ( PluggableMap ) WebGLMap.__proto__ = PluggableMap;\n  WebGLMap.prototype = Object.create( PluggableMap && PluggableMap.prototype );\n  WebGLMap.prototype.constructor = WebGLMap;\r\n\r\n  WebGLMap.prototype.createRenderer = function createRenderer () {\r\n    var renderer = new WebGLMapRenderer(this);\r\n    renderer.registerLayerRenderers([\r\n      WebGLImageLayerRenderer,\r\n      WebGLTileLayerRenderer,\r\n      WebGLVectorLayerRenderer\r\n    ]);\r\n    return renderer;\r\n  };\n\n  return WebGLMap;\n}(PluggableMap));\r\n\r\n\r\nexport default WebGLMap;\r\n\r\n//# sourceMappingURL=WebGLMap.js.map","import {stableSort as _ol_array$stableSort} from './ol/array';\nimport $ol$Collection from './ol/Collection';\nimport {asString as _ol_color$asString} from './ol/color';\nimport {asArray as _ol_color$asArray} from './ol/color';\nimport {asColorLike as _ol_colorlike$asColorLike} from './ol/colorlike';\nimport $ol$control$Attribution from './ol/control/Attribution';\nimport {render as _ol_control_Attribution$render} from './ol/control/Attribution';\nimport $ol$control$Control from './ol/control/Control';\nimport $ol$control$FullScreen from './ol/control/FullScreen';\nimport $ol$control$MousePosition from './ol/control/MousePosition';\nimport {render as _ol_control_MousePosition$render} from './ol/control/MousePosition';\nimport $ol$control$OverviewMap from './ol/control/OverviewMap';\nimport {render as _ol_control_OverviewMap$render} from './ol/control/OverviewMap';\nimport $ol$control$Rotate from './ol/control/Rotate';\nimport {render as _ol_control_Rotate$render} from './ol/control/Rotate';\nimport $ol$control$ScaleLine from './ol/control/ScaleLine';\nimport {render as _ol_control_ScaleLine$render} from './ol/control/ScaleLine';\nimport {defaults as _ol_control$defaults} from './ol/control';\nimport $ol$control$Zoom from './ol/control/Zoom';\nimport $ol$control$ZoomSlider from './ol/control/ZoomSlider';\nimport {render as _ol_control_ZoomSlider$render} from './ol/control/ZoomSlider';\nimport $ol$control$ZoomToExtent from './ol/control/ZoomToExtent';\nimport {add as _ol_coordinate$add} from './ol/coordinate';\nimport {createStringXY as _ol_coordinate$createStringXY} from './ol/coordinate';\nimport {format as _ol_coordinate$format} from './ol/coordinate';\nimport {rotate as _ol_coordinate$rotate} from './ol/coordinate';\nimport {toStringHDMS as _ol_coordinate$toStringHDMS} from './ol/coordinate';\nimport {toStringXY as _ol_coordinate$toStringXY} from './ol/coordinate';\nimport {easeIn as _ol_easing$easeIn} from './ol/easing';\nimport {easeOut as _ol_easing$easeOut} from './ol/easing';\nimport {inAndOut as _ol_easing$inAndOut} from './ol/easing';\nimport {linear as _ol_easing$linear} from './ol/easing';\nimport {upAndDown as _ol_easing$upAndDown} from './ol/easing';\nimport {altKeyOnly as _ol_events_condition$altKeyOnly} from './ol/events/condition';\nimport {altShiftKeysOnly as _ol_events_condition$altShiftKeysOnly} from './ol/events/condition';\nimport {focus as _ol_events_condition$focus} from './ol/events/condition';\nimport {always as _ol_events_condition$always} from './ol/events/condition';\nimport {click as _ol_events_condition$click} from './ol/events/condition';\nimport {never as _ol_events_condition$never} from './ol/events/condition';\nimport {pointerMove as _ol_events_condition$pointerMove} from './ol/events/condition';\nimport {singleClick as _ol_events_condition$singleClick} from './ol/events/condition';\nimport {doubleClick as _ol_events_condition$doubleClick} from './ol/events/condition';\nimport {noModifierKeys as _ol_events_condition$noModifierKeys} from './ol/events/condition';\nimport {platformModifierKeyOnly as _ol_events_condition$platformModifierKeyOnly} from './ol/events/condition';\nimport {shiftKeyOnly as _ol_events_condition$shiftKeyOnly} from './ol/events/condition';\nimport {targetNotEditable as _ol_events_condition$targetNotEditable} from './ol/events/condition';\nimport {mouseOnly as _ol_events_condition$mouseOnly} from './ol/events/condition';\nimport {primaryAction as _ol_events_condition$primaryAction} from './ol/events/condition';\nimport {boundingExtent as _ol_extent$boundingExtent} from './ol/extent';\nimport {buffer as _ol_extent$buffer} from './ol/extent';\nimport {containsCoordinate as _ol_extent$containsCoordinate} from './ol/extent';\nimport {containsExtent as _ol_extent$containsExtent} from './ol/extent';\nimport {containsXY as _ol_extent$containsXY} from './ol/extent';\nimport {createEmpty as _ol_extent$createEmpty} from './ol/extent';\nimport {equals as _ol_extent$equals} from './ol/extent';\nimport {extend as _ol_extent$extend} from './ol/extent';\nimport {forEachCorner as _ol_extent$forEachCorner} from './ol/extent';\nimport {getArea as _ol_extent$getArea} from './ol/extent';\nimport {getBottomLeft as _ol_extent$getBottomLeft} from './ol/extent';\nimport {getBottomRight as _ol_extent$getBottomRight} from './ol/extent';\nimport {getCenter as _ol_extent$getCenter} from './ol/extent';\nimport {getEnlargedArea as _ol_extent$getEnlargedArea} from './ol/extent';\nimport {getHeight as _ol_extent$getHeight} from './ol/extent';\nimport {getIntersection as _ol_extent$getIntersection} from './ol/extent';\nimport {getSize as _ol_extent$getSize} from './ol/extent';\nimport {getTopLeft as _ol_extent$getTopLeft} from './ol/extent';\nimport {getTopRight as _ol_extent$getTopRight} from './ol/extent';\nimport {getWidth as _ol_extent$getWidth} from './ol/extent';\nimport {intersects as _ol_extent$intersects} from './ol/extent';\nimport {isEmpty as _ol_extent$isEmpty} from './ol/extent';\nimport {applyTransform as _ol_extent$applyTransform} from './ol/extent';\nimport $ol$Feature from './ol/Feature';\nimport {loadFeaturesXhr as _ol_featureloader$loadFeaturesXhr} from './ol/featureloader';\nimport {xhr as _ol_featureloader$xhr} from './ol/featureloader';\nimport $ol$format$EsriJSON from './ol/format/EsriJSON';\nimport $ol$format$Feature from './ol/format/Feature';\nimport $ol$format$filter$Bbox from './ol/format/filter/Bbox';\nimport $ol$format$filter$Contains from './ol/format/filter/Contains';\nimport $ol$format$filter$During from './ol/format/filter/During';\nimport $ol$format$filter$EqualTo from './ol/format/filter/EqualTo';\nimport $ol$format$filter$GreaterThan from './ol/format/filter/GreaterThan';\nimport $ol$format$filter$GreaterThanOrEqualTo from './ol/format/filter/GreaterThanOrEqualTo';\nimport $ol$format$filter$Intersects from './ol/format/filter/Intersects';\nimport $ol$format$filter$IsBetween from './ol/format/filter/IsBetween';\nimport $ol$format$filter$IsLike from './ol/format/filter/IsLike';\nimport $ol$format$filter$IsNull from './ol/format/filter/IsNull';\nimport $ol$format$filter$LessThan from './ol/format/filter/LessThan';\nimport $ol$format$filter$LessThanOrEqualTo from './ol/format/filter/LessThanOrEqualTo';\nimport $ol$format$filter$Not from './ol/format/filter/Not';\nimport $ol$format$filter$NotEqualTo from './ol/format/filter/NotEqualTo';\nimport $ol$format$filter$Or from './ol/format/filter/Or';\nimport $ol$format$filter$Within from './ol/format/filter/Within';\nimport {and as _ol_format_filter$and} from './ol/format/filter';\nimport {or as _ol_format_filter$or} from './ol/format/filter';\nimport {not as _ol_format_filter$not} from './ol/format/filter';\nimport {bbox as _ol_format_filter$bbox} from './ol/format/filter';\nimport {contains as _ol_format_filter$contains} from './ol/format/filter';\nimport {intersects as _ol_format_filter$intersects} from './ol/format/filter';\nimport {within as _ol_format_filter$within} from './ol/format/filter';\nimport {equalTo as _ol_format_filter$equalTo} from './ol/format/filter';\nimport {notEqualTo as _ol_format_filter$notEqualTo} from './ol/format/filter';\nimport {lessThan as _ol_format_filter$lessThan} from './ol/format/filter';\nimport {lessThanOrEqualTo as _ol_format_filter$lessThanOrEqualTo} from './ol/format/filter';\nimport {greaterThan as _ol_format_filter$greaterThan} from './ol/format/filter';\nimport {greaterThanOrEqualTo as _ol_format_filter$greaterThanOrEqualTo} from './ol/format/filter';\nimport {isNull as _ol_format_filter$isNull} from './ol/format/filter';\nimport {between as _ol_format_filter$between} from './ol/format/filter';\nimport {like as _ol_format_filter$like} from './ol/format/filter';\nimport {during as _ol_format_filter$during} from './ol/format/filter';\nimport $ol$format$GeoJSON from './ol/format/GeoJSON';\nimport $ol$format$GML from './ol/format/GML';\nimport $ol$format$GML2 from './ol/format/GML2';\nimport $ol$format$GML3 from './ol/format/GML3';\nimport $ol$format$GML32 from './ol/format/GML32';\nimport $ol$format$GPX from './ol/format/GPX';\nimport $ol$format$IGC from './ol/format/IGC';\nimport $ol$format$KML from './ol/format/KML';\nimport $ol$format$MVT from './ol/format/MVT';\nimport $ol$format$OSMXML from './ol/format/OSMXML';\nimport $ol$format$Polyline from './ol/format/Polyline';\nimport {encodeDeltas as _ol_format_Polyline$encodeDeltas} from './ol/format/Polyline';\nimport {decodeDeltas as _ol_format_Polyline$decodeDeltas} from './ol/format/Polyline';\nimport {encodeFloats as _ol_format_Polyline$encodeFloats} from './ol/format/Polyline';\nimport {decodeFloats as _ol_format_Polyline$decodeFloats} from './ol/format/Polyline';\nimport $ol$format$TopoJSON from './ol/format/TopoJSON';\nimport $ol$format$WFS from './ol/format/WFS';\nimport {writeFilter as _ol_format_WFS$writeFilter} from './ol/format/WFS';\nimport $ol$format$WKT from './ol/format/WKT';\nimport $ol$format$WMSCapabilities from './ol/format/WMSCapabilities';\nimport $ol$format$WMSGetFeatureInfo from './ol/format/WMSGetFeatureInfo';\nimport $ol$format$WMTSCapabilities from './ol/format/WMTSCapabilities';\nimport $ol$Geolocation from './ol/Geolocation';\nimport $ol$geom$Circle from './ol/geom/Circle';\nimport $ol$geom$Geometry from './ol/geom/Geometry';\nimport $ol$geom$GeometryCollection from './ol/geom/GeometryCollection';\nimport $ol$geom$LinearRing from './ol/geom/LinearRing';\nimport $ol$geom$LineString from './ol/geom/LineString';\nimport $ol$geom$MultiLineString from './ol/geom/MultiLineString';\nimport $ol$geom$MultiPoint from './ol/geom/MultiPoint';\nimport $ol$geom$MultiPolygon from './ol/geom/MultiPolygon';\nimport $ol$geom$Point from './ol/geom/Point';\nimport $ol$geom$Polygon from './ol/geom/Polygon';\nimport {circular as _ol_geom_Polygon$circular} from './ol/geom/Polygon';\nimport {fromExtent as _ol_geom_Polygon$fromExtent} from './ol/geom/Polygon';\nimport {fromCircle as _ol_geom_Polygon$fromCircle} from './ol/geom/Polygon';\nimport $ol$geom$SimpleGeometry from './ol/geom/SimpleGeometry';\nimport $ol$Graticule from './ol/Graticule';\nimport {DEVICE_PIXEL_RATIO as _ol_has$DEVICE_PIXEL_RATIO} from './ol/has';\nimport {GEOLOCATION as _ol_has$GEOLOCATION} from './ol/has';\nimport {TOUCH as _ol_has$TOUCH} from './ol/has';\nimport $ol$interaction$DoubleClickZoom from './ol/interaction/DoubleClickZoom';\nimport $ol$interaction$DragAndDrop from './ol/interaction/DragAndDrop';\nimport $ol$interaction$DragBox from './ol/interaction/DragBox';\nimport $ol$interaction$DragPan from './ol/interaction/DragPan';\nimport $ol$interaction$DragRotate from './ol/interaction/DragRotate';\nimport $ol$interaction$DragRotateAndZoom from './ol/interaction/DragRotateAndZoom';\nimport $ol$interaction$DragZoom from './ol/interaction/DragZoom';\nimport $ol$interaction$Draw from './ol/interaction/Draw';\nimport {createRegularPolygon as _ol_interaction_Draw$createRegularPolygon} from './ol/interaction/Draw';\nimport {createBox as _ol_interaction_Draw$createBox} from './ol/interaction/Draw';\nimport $ol$interaction$Extent from './ol/interaction/Extent';\nimport $ol$interaction$Interaction from './ol/interaction/Interaction';\nimport $ol$interaction$KeyboardPan from './ol/interaction/KeyboardPan';\nimport $ol$interaction$KeyboardZoom from './ol/interaction/KeyboardZoom';\nimport $ol$interaction$Modify from './ol/interaction/Modify';\nimport $ol$interaction$MouseWheelZoom from './ol/interaction/MouseWheelZoom';\nimport $ol$interaction$PinchRotate from './ol/interaction/PinchRotate';\nimport $ol$interaction$PinchZoom from './ol/interaction/PinchZoom';\nimport $ol$interaction$Pointer from './ol/interaction/Pointer';\nimport $ol$interaction$Select from './ol/interaction/Select';\nimport $ol$interaction$Snap from './ol/interaction/Snap';\nimport $ol$interaction$Translate from './ol/interaction/Translate';\nimport {defaults as _ol_interaction$defaults} from './ol/interaction';\nimport $ol$Kinetic from './ol/Kinetic';\nimport $ol$layer$Base from './ol/layer/Base';\nimport $ol$layer$Group from './ol/layer/Group';\nimport $ol$layer$Heatmap from './ol/layer/Heatmap';\nimport $ol$layer$Image from './ol/layer/Image';\nimport $ol$layer$Tile from './ol/layer/Tile';\nimport $ol$layer$Vector from './ol/layer/Vector';\nimport $ol$layer$VectorTile from './ol/layer/VectorTile';\nimport {all as _ol_loadingstrategy$all} from './ol/loadingstrategy';\nimport {bbox as _ol_loadingstrategy$bbox} from './ol/loadingstrategy';\nimport {tile as _ol_loadingstrategy$tile} from './ol/loadingstrategy';\nimport $ol$Map from './ol/Map';\nimport $ol$Object from './ol/Object';\nimport $ol$Observable from './ol/Observable';\nimport {unByKey as _ol_Observable$unByKey} from './ol/Observable';\nimport $ol$Overlay from './ol/Overlay';\nimport $ol$PluggableMap from './ol/PluggableMap';\nimport {register as _ol_proj_proj4$register} from './ol/proj/proj4';\nimport $ol$proj$Projection from './ol/proj/Projection';\nimport {METERS_PER_UNIT as _ol_proj_Units$METERS_PER_UNIT} from './ol/proj/Units';\nimport {addProjection as _ol_proj$addProjection} from './ol/proj';\nimport {get as _ol_proj$get} from './ol/proj';\nimport {getPointResolution as _ol_proj$getPointResolution} from './ol/proj';\nimport {addEquivalentProjections as _ol_proj$addEquivalentProjections} from './ol/proj';\nimport {addCoordinateTransforms as _ol_proj$addCoordinateTransforms} from './ol/proj';\nimport {fromLonLat as _ol_proj$fromLonLat} from './ol/proj';\nimport {toLonLat as _ol_proj$toLonLat} from './ol/proj';\nimport {equivalent as _ol_proj$equivalent} from './ol/proj';\nimport {getTransform as _ol_proj$getTransform} from './ol/proj';\nimport {transform as _ol_proj$transform} from './ol/proj';\nimport {transformExtent as _ol_proj$transformExtent} from './ol/proj';\nimport {labelCache as _ol_render_canvas$labelCache} from './ol/render/canvas';\nimport $ol$render$VectorContext from './ol/render/VectorContext';\nimport {toContext as _ol_render$toContext} from './ol/render';\nimport $ol$renderer$canvas$ImageLayer from './ol/renderer/canvas/ImageLayer';\nimport $ol$renderer$canvas$Map from './ol/renderer/canvas/Map';\nimport $ol$renderer$canvas$TileLayer from './ol/renderer/canvas/TileLayer';\nimport $ol$renderer$canvas$VectorLayer from './ol/renderer/canvas/VectorLayer';\nimport $ol$renderer$canvas$VectorTileLayer from './ol/renderer/canvas/VectorTileLayer';\nimport $ol$renderer$webgl$ImageLayer from './ol/renderer/webgl/ImageLayer';\nimport $ol$renderer$webgl$Map from './ol/renderer/webgl/Map';\nimport $ol$renderer$webgl$TileLayer from './ol/renderer/webgl/TileLayer';\nimport $ol$renderer$webgl$VectorLayer from './ol/renderer/webgl/VectorLayer';\nimport {toSize as _ol_size$toSize} from './ol/size';\nimport $ol$source$BingMaps from './ol/source/BingMaps';\nimport $ol$source$CartoDB from './ol/source/CartoDB';\nimport $ol$source$Cluster from './ol/source/Cluster';\nimport $ol$source$Image from './ol/source/Image';\nimport $ol$source$ImageArcGISRest from './ol/source/ImageArcGISRest';\nimport $ol$source$ImageCanvas from './ol/source/ImageCanvas';\nimport $ol$source$ImageMapGuide from './ol/source/ImageMapGuide';\nimport $ol$source$ImageStatic from './ol/source/ImageStatic';\nimport $ol$source$ImageWMS from './ol/source/ImageWMS';\nimport {ATTRIBUTION as _ol_source_OSM$ATTRIBUTION} from './ol/source/OSM';\nimport $ol$source$OSM from './ol/source/OSM';\nimport $ol$source$Raster from './ol/source/Raster';\nimport $ol$source$Source from './ol/source/Source';\nimport $ol$source$Stamen from './ol/source/Stamen';\nimport $ol$source$Tile from './ol/source/Tile';\nimport $ol$source$TileArcGISRest from './ol/source/TileArcGISRest';\nimport $ol$source$TileDebug from './ol/source/TileDebug';\nimport $ol$source$TileImage from './ol/source/TileImage';\nimport $ol$source$TileJSON from './ol/source/TileJSON';\nimport $ol$source$TileWMS from './ol/source/TileWMS';\nimport $ol$source$UTFGrid from './ol/source/UTFGrid';\nimport $ol$source$Vector from './ol/source/Vector';\nimport $ol$source$VectorTile from './ol/source/VectorTile';\nimport $ol$source$WMTS from './ol/source/WMTS';\nimport {optionsFromCapabilities as _ol_source_WMTS$optionsFromCapabilities} from './ol/source/WMTS';\nimport $ol$source$XYZ from './ol/source/XYZ';\nimport $ol$source$Zoomify from './ol/source/Zoomify';\nimport {getDistance as _ol_sphere$getDistance} from './ol/sphere';\nimport {getLength as _ol_sphere$getLength} from './ol/sphere';\nimport {getArea as _ol_sphere$getArea} from './ol/sphere';\nimport $ol$style$AtlasManager from './ol/style/AtlasManager';\nimport $ol$style$Circle from './ol/style/Circle';\nimport $ol$style$Fill from './ol/style/Fill';\nimport $ol$style$Icon from './ol/style/Icon';\nimport {shared as _ol_style_IconImageCache$shared} from './ol/style/IconImageCache';\nimport $ol$style$Image from './ol/style/Image';\nimport $ol$style$RegularShape from './ol/style/RegularShape';\nimport $ol$style$Stroke from './ol/style/Stroke';\nimport $ol$style$Style from './ol/style/Style';\nimport $ol$style$Text from './ol/style/Text';\nimport $ol$tilegrid$TileGrid from './ol/tilegrid/TileGrid';\nimport $ol$tilegrid$WMTS from './ol/tilegrid/WMTS';\nimport {createFromCapabilitiesMatrixSet as _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet} from './ol/tilegrid/WMTS';\nimport {createXYZ as _ol_tilegrid$createXYZ} from './ol/tilegrid';\nimport {inherits as _ol$inherits} from './ol';\nimport {getUid as _ol$getUid} from './ol';\nimport $ol$View from './ol/View';\nimport $ol$WebGLMap from './ol/WebGLMap';\nimport {getAllTextContent as _ol_xml$getAllTextContent} from './ol/xml';\nimport {parse as _ol_xml$parse} from './ol/xml';\n\nvar ol = {};\n\nol.array = {};\nol.color = {};\nol.colorlike = {};\nol.control = {};\nol.coordinate = {};\nol.easing = {};\nol.events = {};\nol.events.condition = {};\nol.extent = {};\nol.featureloader = {};\nol.format = {};\nol.format.filter = {};\nol.geom = {};\nol.has = {};\nol.interaction = {};\nol.layer = {};\nol.loadingstrategy = {};\nol.proj = {};\nol.proj.Units = {};\nol.proj.proj4 = {};\nol.render = {};\nol.render.canvas = {};\nol.renderer = {};\nol.renderer.canvas = {};\nol.renderer.webgl = {};\nol.size = {};\nol.source = {};\nol.sphere = {};\nol.style = {};\nol.style.IconImageCache = {};\nol.tilegrid = {};\nol.xml = {};\nol.Collection = $ol$Collection;\nol.Feature = $ol$Feature;\nol.Geolocation = $ol$Geolocation;\nol.Graticule = $ol$Graticule;\nol.Kinetic = $ol$Kinetic;\nol.Map = $ol$Map;\nol.Object = $ol$Object;\nol.Observable = $ol$Observable;\nol.Observable.unByKey = _ol_Observable$unByKey;\nol.Overlay = $ol$Overlay;\nol.PluggableMap = $ol$PluggableMap;\nol.View = $ol$View;\nol.WebGLMap = $ol$WebGLMap;\nol.array.stableSort = _ol_array$stableSort;\nol.color.asArray = _ol_color$asArray;\nol.color.asString = _ol_color$asString;\nol.colorlike.asColorLike = _ol_colorlike$asColorLike;\nol.control.Attribution = $ol$control$Attribution;\nol.control.Attribution.render = _ol_control_Attribution$render;\nol.control.Control = $ol$control$Control;\nol.control.FullScreen = $ol$control$FullScreen;\nol.control.MousePosition = $ol$control$MousePosition;\nol.control.MousePosition.render = _ol_control_MousePosition$render;\nol.control.OverviewMap = $ol$control$OverviewMap;\nol.control.OverviewMap.render = _ol_control_OverviewMap$render;\nol.control.Rotate = $ol$control$Rotate;\nol.control.Rotate.render = _ol_control_Rotate$render;\nol.control.ScaleLine = $ol$control$ScaleLine;\nol.control.ScaleLine.render = _ol_control_ScaleLine$render;\nol.control.Zoom = $ol$control$Zoom;\nol.control.ZoomSlider = $ol$control$ZoomSlider;\nol.control.ZoomSlider.render = _ol_control_ZoomSlider$render;\nol.control.ZoomToExtent = $ol$control$ZoomToExtent;\nol.control.defaults = _ol_control$defaults;\nol.coordinate.add = _ol_coordinate$add;\nol.coordinate.createStringXY = _ol_coordinate$createStringXY;\nol.coordinate.format = _ol_coordinate$format;\nol.coordinate.rotate = _ol_coordinate$rotate;\nol.coordinate.toStringHDMS = _ol_coordinate$toStringHDMS;\nol.coordinate.toStringXY = _ol_coordinate$toStringXY;\nol.easing.easeIn = _ol_easing$easeIn;\nol.easing.easeOut = _ol_easing$easeOut;\nol.easing.inAndOut = _ol_easing$inAndOut;\nol.easing.linear = _ol_easing$linear;\nol.easing.upAndDown = _ol_easing$upAndDown;\nol.events.condition.altKeyOnly = _ol_events_condition$altKeyOnly;\nol.events.condition.altShiftKeysOnly = _ol_events_condition$altShiftKeysOnly;\nol.events.condition.always = _ol_events_condition$always;\nol.events.condition.click = _ol_events_condition$click;\nol.events.condition.doubleClick = _ol_events_condition$doubleClick;\nol.events.condition.focus = _ol_events_condition$focus;\nol.events.condition.mouseOnly = _ol_events_condition$mouseOnly;\nol.events.condition.never = _ol_events_condition$never;\nol.events.condition.noModifierKeys = _ol_events_condition$noModifierKeys;\nol.events.condition.platformModifierKeyOnly = _ol_events_condition$platformModifierKeyOnly;\nol.events.condition.pointerMove = _ol_events_condition$pointerMove;\nol.events.condition.primaryAction = _ol_events_condition$primaryAction;\nol.events.condition.shiftKeyOnly = _ol_events_condition$shiftKeyOnly;\nol.events.condition.singleClick = _ol_events_condition$singleClick;\nol.events.condition.targetNotEditable = _ol_events_condition$targetNotEditable;\nol.extent.applyTransform = _ol_extent$applyTransform;\nol.extent.boundingExtent = _ol_extent$boundingExtent;\nol.extent.buffer = _ol_extent$buffer;\nol.extent.containsCoordinate = _ol_extent$containsCoordinate;\nol.extent.containsExtent = _ol_extent$containsExtent;\nol.extent.containsXY = _ol_extent$containsXY;\nol.extent.createEmpty = _ol_extent$createEmpty;\nol.extent.equals = _ol_extent$equals;\nol.extent.extend = _ol_extent$extend;\nol.extent.forEachCorner = _ol_extent$forEachCorner;\nol.extent.getArea = _ol_extent$getArea;\nol.extent.getBottomLeft = _ol_extent$getBottomLeft;\nol.extent.getBottomRight = _ol_extent$getBottomRight;\nol.extent.getCenter = _ol_extent$getCenter;\nol.extent.getEnlargedArea = _ol_extent$getEnlargedArea;\nol.extent.getHeight = _ol_extent$getHeight;\nol.extent.getIntersection = _ol_extent$getIntersection;\nol.extent.getSize = _ol_extent$getSize;\nol.extent.getTopLeft = _ol_extent$getTopLeft;\nol.extent.getTopRight = _ol_extent$getTopRight;\nol.extent.getWidth = _ol_extent$getWidth;\nol.extent.intersects = _ol_extent$intersects;\nol.extent.isEmpty = _ol_extent$isEmpty;\nol.featureloader.loadFeaturesXhr = _ol_featureloader$loadFeaturesXhr;\nol.featureloader.xhr = _ol_featureloader$xhr;\nol.format.EsriJSON = $ol$format$EsriJSON;\nol.format.Feature = $ol$format$Feature;\nol.format.GML = $ol$format$GML;\nol.format.GML2 = $ol$format$GML2;\nol.format.GML3 = $ol$format$GML3;\nol.format.GML32 = $ol$format$GML32;\nol.format.GPX = $ol$format$GPX;\nol.format.GeoJSON = $ol$format$GeoJSON;\nol.format.IGC = $ol$format$IGC;\nol.format.KML = $ol$format$KML;\nol.format.MVT = $ol$format$MVT;\nol.format.OSMXML = $ol$format$OSMXML;\nol.format.Polyline = $ol$format$Polyline;\nol.format.Polyline.decodeDeltas = _ol_format_Polyline$decodeDeltas;\nol.format.Polyline.decodeFloats = _ol_format_Polyline$decodeFloats;\nol.format.Polyline.encodeDeltas = _ol_format_Polyline$encodeDeltas;\nol.format.Polyline.encodeFloats = _ol_format_Polyline$encodeFloats;\nol.format.TopoJSON = $ol$format$TopoJSON;\nol.format.WFS = $ol$format$WFS;\nol.format.WFS.writeFilter = _ol_format_WFS$writeFilter;\nol.format.WKT = $ol$format$WKT;\nol.format.WMSCapabilities = $ol$format$WMSCapabilities;\nol.format.WMSGetFeatureInfo = $ol$format$WMSGetFeatureInfo;\nol.format.WMTSCapabilities = $ol$format$WMTSCapabilities;\nol.format.filter.Bbox = $ol$format$filter$Bbox;\nol.format.filter.Contains = $ol$format$filter$Contains;\nol.format.filter.During = $ol$format$filter$During;\nol.format.filter.EqualTo = $ol$format$filter$EqualTo;\nol.format.filter.GreaterThan = $ol$format$filter$GreaterThan;\nol.format.filter.GreaterThanOrEqualTo = $ol$format$filter$GreaterThanOrEqualTo;\nol.format.filter.Intersects = $ol$format$filter$Intersects;\nol.format.filter.IsBetween = $ol$format$filter$IsBetween;\nol.format.filter.IsLike = $ol$format$filter$IsLike;\nol.format.filter.IsNull = $ol$format$filter$IsNull;\nol.format.filter.LessThan = $ol$format$filter$LessThan;\nol.format.filter.LessThanOrEqualTo = $ol$format$filter$LessThanOrEqualTo;\nol.format.filter.Not = $ol$format$filter$Not;\nol.format.filter.NotEqualTo = $ol$format$filter$NotEqualTo;\nol.format.filter.Or = $ol$format$filter$Or;\nol.format.filter.Within = $ol$format$filter$Within;\nol.format.filter.and = _ol_format_filter$and;\nol.format.filter.bbox = _ol_format_filter$bbox;\nol.format.filter.between = _ol_format_filter$between;\nol.format.filter.contains = _ol_format_filter$contains;\nol.format.filter.during = _ol_format_filter$during;\nol.format.filter.equalTo = _ol_format_filter$equalTo;\nol.format.filter.greaterThan = _ol_format_filter$greaterThan;\nol.format.filter.greaterThanOrEqualTo = _ol_format_filter$greaterThanOrEqualTo;\nol.format.filter.intersects = _ol_format_filter$intersects;\nol.format.filter.isNull = _ol_format_filter$isNull;\nol.format.filter.lessThan = _ol_format_filter$lessThan;\nol.format.filter.lessThanOrEqualTo = _ol_format_filter$lessThanOrEqualTo;\nol.format.filter.like = _ol_format_filter$like;\nol.format.filter.not = _ol_format_filter$not;\nol.format.filter.notEqualTo = _ol_format_filter$notEqualTo;\nol.format.filter.or = _ol_format_filter$or;\nol.format.filter.within = _ol_format_filter$within;\nol.geom.Circle = $ol$geom$Circle;\nol.geom.Geometry = $ol$geom$Geometry;\nol.geom.GeometryCollection = $ol$geom$GeometryCollection;\nol.geom.LineString = $ol$geom$LineString;\nol.geom.LinearRing = $ol$geom$LinearRing;\nol.geom.MultiLineString = $ol$geom$MultiLineString;\nol.geom.MultiPoint = $ol$geom$MultiPoint;\nol.geom.MultiPolygon = $ol$geom$MultiPolygon;\nol.geom.Point = $ol$geom$Point;\nol.geom.Polygon = $ol$geom$Polygon;\nol.geom.Polygon.circular = _ol_geom_Polygon$circular;\nol.geom.Polygon.fromCircle = _ol_geom_Polygon$fromCircle;\nol.geom.Polygon.fromExtent = _ol_geom_Polygon$fromExtent;\nol.geom.SimpleGeometry = $ol$geom$SimpleGeometry;\nol.getUid = _ol$getUid;\nol.has.DEVICE_PIXEL_RATIO = _ol_has$DEVICE_PIXEL_RATIO;\nol.has.GEOLOCATION = _ol_has$GEOLOCATION;\nol.has.TOUCH = _ol_has$TOUCH;\nol.inherits = _ol$inherits;\nol.interaction.DoubleClickZoom = $ol$interaction$DoubleClickZoom;\nol.interaction.DragAndDrop = $ol$interaction$DragAndDrop;\nol.interaction.DragBox = $ol$interaction$DragBox;\nol.interaction.DragPan = $ol$interaction$DragPan;\nol.interaction.DragRotate = $ol$interaction$DragRotate;\nol.interaction.DragRotateAndZoom = $ol$interaction$DragRotateAndZoom;\nol.interaction.DragZoom = $ol$interaction$DragZoom;\nol.interaction.Draw = $ol$interaction$Draw;\nol.interaction.Draw.createBox = _ol_interaction_Draw$createBox;\nol.interaction.Draw.createRegularPolygon = _ol_interaction_Draw$createRegularPolygon;\nol.interaction.Extent = $ol$interaction$Extent;\nol.interaction.Interaction = $ol$interaction$Interaction;\nol.interaction.KeyboardPan = $ol$interaction$KeyboardPan;\nol.interaction.KeyboardZoom = $ol$interaction$KeyboardZoom;\nol.interaction.Modify = $ol$interaction$Modify;\nol.interaction.MouseWheelZoom = $ol$interaction$MouseWheelZoom;\nol.interaction.PinchRotate = $ol$interaction$PinchRotate;\nol.interaction.PinchZoom = $ol$interaction$PinchZoom;\nol.interaction.Pointer = $ol$interaction$Pointer;\nol.interaction.Select = $ol$interaction$Select;\nol.interaction.Snap = $ol$interaction$Snap;\nol.interaction.Translate = $ol$interaction$Translate;\nol.interaction.defaults = _ol_interaction$defaults;\nol.layer.Base = $ol$layer$Base;\nol.layer.Group = $ol$layer$Group;\nol.layer.Heatmap = $ol$layer$Heatmap;\nol.layer.Image = $ol$layer$Image;\nol.layer.Tile = $ol$layer$Tile;\nol.layer.Vector = $ol$layer$Vector;\nol.layer.VectorTile = $ol$layer$VectorTile;\nol.loadingstrategy.all = _ol_loadingstrategy$all;\nol.loadingstrategy.bbox = _ol_loadingstrategy$bbox;\nol.loadingstrategy.tile = _ol_loadingstrategy$tile;\nol.proj.Projection = $ol$proj$Projection;\nol.proj.Units.METERS_PER_UNIT = _ol_proj_Units$METERS_PER_UNIT;\nol.proj.addCoordinateTransforms = _ol_proj$addCoordinateTransforms;\nol.proj.addEquivalentProjections = _ol_proj$addEquivalentProjections;\nol.proj.addProjection = _ol_proj$addProjection;\nol.proj.equivalent = _ol_proj$equivalent;\nol.proj.fromLonLat = _ol_proj$fromLonLat;\nol.proj.get = _ol_proj$get;\nol.proj.getPointResolution = _ol_proj$getPointResolution;\nol.proj.getTransform = _ol_proj$getTransform;\nol.proj.proj4.register = _ol_proj_proj4$register;\nol.proj.toLonLat = _ol_proj$toLonLat;\nol.proj.transform = _ol_proj$transform;\nol.proj.transformExtent = _ol_proj$transformExtent;\nol.render.VectorContext = $ol$render$VectorContext;\nol.render.canvas.labelCache = _ol_render_canvas$labelCache;\nol.render.toContext = _ol_render$toContext;\nol.renderer.canvas.ImageLayer = $ol$renderer$canvas$ImageLayer;\nol.renderer.canvas.Map = $ol$renderer$canvas$Map;\nol.renderer.canvas.TileLayer = $ol$renderer$canvas$TileLayer;\nol.renderer.canvas.VectorLayer = $ol$renderer$canvas$VectorLayer;\nol.renderer.canvas.VectorTileLayer = $ol$renderer$canvas$VectorTileLayer;\nol.renderer.webgl.ImageLayer = $ol$renderer$webgl$ImageLayer;\nol.renderer.webgl.Map = $ol$renderer$webgl$Map;\nol.renderer.webgl.TileLayer = $ol$renderer$webgl$TileLayer;\nol.renderer.webgl.VectorLayer = $ol$renderer$webgl$VectorLayer;\nol.size.toSize = _ol_size$toSize;\nol.source.BingMaps = $ol$source$BingMaps;\nol.source.CartoDB = $ol$source$CartoDB;\nol.source.Cluster = $ol$source$Cluster;\nol.source.Image = $ol$source$Image;\nol.source.ImageArcGISRest = $ol$source$ImageArcGISRest;\nol.source.ImageCanvas = $ol$source$ImageCanvas;\nol.source.ImageMapGuide = $ol$source$ImageMapGuide;\nol.source.ImageStatic = $ol$source$ImageStatic;\nol.source.ImageWMS = $ol$source$ImageWMS;\nol.source.OSM = $ol$source$OSM;\nol.source.OSM.ATTRIBUTION = _ol_source_OSM$ATTRIBUTION;\nol.source.Raster = $ol$source$Raster;\nol.source.Source = $ol$source$Source;\nol.source.Stamen = $ol$source$Stamen;\nol.source.Tile = $ol$source$Tile;\nol.source.TileArcGISRest = $ol$source$TileArcGISRest;\nol.source.TileDebug = $ol$source$TileDebug;\nol.source.TileImage = $ol$source$TileImage;\nol.source.TileJSON = $ol$source$TileJSON;\nol.source.TileWMS = $ol$source$TileWMS;\nol.source.UTFGrid = $ol$source$UTFGrid;\nol.source.Vector = $ol$source$Vector;\nol.source.VectorTile = $ol$source$VectorTile;\nol.source.WMTS = $ol$source$WMTS;\nol.source.WMTS.optionsFromCapabilities = _ol_source_WMTS$optionsFromCapabilities;\nol.source.XYZ = $ol$source$XYZ;\nol.source.Zoomify = $ol$source$Zoomify;\nol.sphere.getArea = _ol_sphere$getArea;\nol.sphere.getDistance = _ol_sphere$getDistance;\nol.sphere.getLength = _ol_sphere$getLength;\nol.style.AtlasManager = $ol$style$AtlasManager;\nol.style.Circle = $ol$style$Circle;\nol.style.Fill = $ol$style$Fill;\nol.style.Icon = $ol$style$Icon;\nol.style.IconImageCache.shared = _ol_style_IconImageCache$shared;\nol.style.Image = $ol$style$Image;\nol.style.RegularShape = $ol$style$RegularShape;\nol.style.Stroke = $ol$style$Stroke;\nol.style.Style = $ol$style$Style;\nol.style.Text = $ol$style$Text;\nol.tilegrid.TileGrid = $ol$tilegrid$TileGrid;\nol.tilegrid.WMTS = $ol$tilegrid$WMTS;\nol.tilegrid.WMTS.createFromCapabilitiesMatrixSet = _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet;\nol.tilegrid.createXYZ = _ol_tilegrid$createXYZ;\nol.xml.getAllTextContent = _ol_xml$getAllTextContent;\nol.xml.parse = _ol_xml$parse;\n\nexport default ol;","/**\r\n * @module ol/proj/proj4\r\n */\r\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\r\nimport {get as getTransform} from './transforms.js';\r\nimport Projection from './Projection.js';\r\n\r\n/**\r\n * Make projections defined in proj4 (with `proj4.defs()`) available in\r\n * OpenLayers.\r\n *\r\n * This function should be called whenever changes are made to the proj4\r\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\r\n * modified by this function.\r\n *\r\n * @param {?} proj4 Proj4.\r\n * @api\r\n */\r\nexport function register(proj4) {\r\n  var projCodes = Object.keys(proj4.defs);\r\n  var len = projCodes.length;\r\n  var i, j;\r\n  for (i = 0; i < len; ++i) {\r\n    var code = projCodes[i];\r\n    if (!get(code)) {\r\n      var def = proj4.defs(code);\r\n      addProjection(new Projection({\r\n        code: code,\r\n        axisOrientation: def.axis,\r\n        metersPerUnit: def.to_meter,\r\n        units: def.units\r\n      }));\r\n    }\r\n  }\r\n  for (i = 0; i < len; ++i) {\r\n    var code1 = projCodes[i];\r\n    var proj1 = get(code1);\r\n    for (j = 0; j < len; ++j) {\r\n      var code2 = projCodes[j];\r\n      var proj2 = get(code2);\r\n      if (!getTransform(code1, code2)) {\r\n        if (proj4.defs[code1] === proj4.defs[code2]) {\r\n          addEquivalentProjections([proj1, proj2]);\r\n        } else {\r\n          var transform = proj4(code1, code2);\r\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n//# sourceMappingURL=proj4.js.map","/**\r\n * @module ol/render\r\n */\r\nimport {DEVICE_PIXEL_RATIO} from './has.js';\r\nimport {create as createTransform, scale as scaleTransform} from './transform.js';\r\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} State\r\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\r\n * @property {import(\"./Feature.js\").FeatureLike} feature\r\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry\r\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\r\n * @property {number} resolution Resolution that the render batch was created and optimized for.\r\n * This is not the view's resolution that is being rendered.\r\n * @property {number} rotation Rotation of the rendered layer in radians.\r\n */\r\n\r\n\r\n/**\r\n * A function to be used when sorting features before rendering.\r\n * It takes two instances of {@link module:ol/Feature} or\r\n * {@link module:ol/render/Feature} and returns a `{number}`.\r\n *\r\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} ToContextOptions\r\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\r\n * pixels. When provided, both canvas and css size will be set according to the\r\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\r\n * altered.\r\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\r\n * pixel to css pixel ratio) for the canvas.\r\n */\r\n\r\n\r\n/**\r\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\r\n * to the context's canvas.\r\n *\r\n * The units for geometry coordinates are css pixels relative to the top left\r\n * corner of the canvas element.\r\n * ```js\r\n * import {toContext} from 'ol/render';\r\n * import Fill from 'ol/style/Fill';\r\n * import Polygon from 'ol/geom/Polygon';\r\n *\r\n * var canvas = document.createElement('canvas');\r\n * var render = toContext(canvas.getContext('2d'),\r\n *     { size: [100, 100] });\r\n * render.setFillStrokeStyle(new Fill({ color: blue }));\r\n * render.drawPolygon(\r\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\r\n * ```\r\n *\r\n * @param {CanvasRenderingContext2D} context Canvas context.\r\n * @param {ToContextOptions=} opt_options Options.\r\n * @return {CanvasImmediateRenderer} Canvas Immediate.\r\n * @api\r\n */\r\nexport function toContext(context, opt_options) {\r\n  var canvas = context.canvas;\r\n  var options = opt_options ? opt_options : {};\r\n  var pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\r\n  var size = options.size;\r\n  if (size) {\r\n    canvas.width = size[0] * pixelRatio;\r\n    canvas.height = size[1] * pixelRatio;\r\n    canvas.style.width = size[0] + 'px';\r\n    canvas.style.height = size[1] + 'px';\r\n  }\r\n  var extent = [0, 0, canvas.width, canvas.height];\r\n  var transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\r\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\r\n}\r\n\r\n//# sourceMappingURL=render.js.map"],"sourceRoot":""}